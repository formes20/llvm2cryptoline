; ModuleID = 'mytest.c'
source_filename = "mytest.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.secp256k1_context_struct = type { %struct.secp256k1_ecmult_gen_context, %struct.secp256k1_callback, %struct.secp256k1_callback, i32 }
%struct.secp256k1_ecmult_gen_context = type { i32, %struct.secp256k1_scalar, %struct.secp256k1_gej }
%struct.secp256k1_scalar = type { [4 x i64] }
%struct.secp256k1_gej = type { %struct.secp256k1_fe, %struct.secp256k1_fe, %struct.secp256k1_fe, i32 }
%struct.secp256k1_fe = type { [5 x i64] }
%struct.secp256k1_callback = type { void (i8*, i8*)*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.secp256k1_modinv64_modinfo = type { %struct.secp256k1_modinv64_signed62, i64 }
%struct.secp256k1_modinv64_signed62 = type { [5 x i64] }
%struct.secp256k1_ge_storage = type { %struct.secp256k1_fe_storage, %struct.secp256k1_fe_storage }
%struct.secp256k1_fe_storage = type { [4 x i64] }
%struct.secp256k1_ge = type { %struct.secp256k1_fe, %struct.secp256k1_fe, i32 }
%struct.secp256k1_sha256 = type { [8 x i32], [64 x i8], i64 }
%struct.secp256k1_scratch_space_struct = type { [8 x i8], i8*, i64, i64 }
%struct.secp256k1_pubkey = type { [64 x i8] }
%struct.secp256k1_ecdsa_signature = type { [64 x i8] }
%struct.secp256k1_modinv64_trans2x2 = type { i64, i64, i64, i64 }
%struct.secp256k1_rfc6979_hmac_sha256 = type { [32 x i8], [32 x i8], i32 }
%struct.secp256k1_strauss_point_state = type { [129 x i32], [129 x i32], i32, i32 }
%struct.secp256k1_hmac_sha256 = type { %struct.secp256k1_sha256, %struct.secp256k1_sha256 }

@secp256k1_context_static_ = internal constant %struct.secp256k1_context_struct { %struct.secp256k1_ecmult_gen_context zeroinitializer, %struct.secp256k1_callback { void (i8*, i8*)* @secp256k1_default_illegal_callback_fn, i8* null }, %struct.secp256k1_callback { void (i8*, i8*)* @secp256k1_default_error_callback_fn, i8* null }, i32 0 }, align 8
@secp256k1_context_static = dso_local local_unnamed_addr global %struct.secp256k1_context_struct* @secp256k1_context_static_, align 8
@secp256k1_context_no_precomp = dso_local local_unnamed_addr global %struct.secp256k1_context_struct* @secp256k1_context_static_, align 8
@default_error_callback = internal unnamed_addr constant %struct.secp256k1_callback { void (i8*, i8*)* @secp256k1_default_error_callback_fn, i8* null }, align 8
@.str = private unnamed_addr constant [17 x i8] c"self test failed\00", align 1
@default_illegal_callback = internal unnamed_addr constant %struct.secp256k1_callback { void (i8*, i8*)* @secp256k1_default_illegal_callback_fn, i8* null }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"Invalid flags\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"prealloc != NULL\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"ctx != secp256k1_context_static\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"pubkey != NULL\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"input != NULL\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"outputlen != NULL\00", align 1
@.str.7 = private unnamed_addr constant [70 x i8] c"*outputlen >= ((flags & SECP256K1_FLAGS_BIT_COMPRESSION) ? 33u : 65u)\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"output != NULL\00", align 1
@.str.9 = private unnamed_addr constant [72 x i8] c"(flags & SECP256K1_FLAGS_TYPE_MASK) == SECP256K1_FLAGS_TYPE_COMPRESSION\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"sig != NULL\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"input64 != NULL\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"output64 != NULL\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"sigin != NULL\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"msghash32 != NULL\00", align 1
@secp256k1_nonce_function_rfc6979 = dso_local local_unnamed_addr constant i32 (i8*, i8*, i8*, i8*, i8*, i32)* @nonce_function_rfc6979, align 8
@secp256k1_nonce_function_default = dso_local local_unnamed_addr constant i32 (i8*, i8*, i8*, i8*, i8*, i32)* @nonce_function_rfc6979, align 8
@.str.15 = private unnamed_addr constant [60 x i8] c"secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx)\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"signature != NULL\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"seckey != NULL\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"tweak32 != NULL\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"pubnonce != NULL\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"n >= 1\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"pubnonces != NULL\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"pubnonces[i] != NULL\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"hash32 != NULL\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"tag != NULL\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"msg != NULL\00", align 1
@.str.26 = private unnamed_addr constant [64 x i8] c"For this sample, this 63-byte string will be used as input data\00", align 1
@secp256k1_selftest_sha256.output32 = internal unnamed_addr constant [32 x i8] c"\F0\8Ax\CB\BA\EE\08+\05*\E0p\8F2\FA\1EP\C5\C4!\AAw+\A5\DB\B4\06\A2\EAk\E3B", align 16
@.str.27 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.28 = private unnamed_addr constant [37 x i8] c"[libsecp256k1] illegal argument: %s\0A\00", align 1
@.str.29 = private unnamed_addr constant [54 x i8] c"[libsecp256k1] internal consistency check failed: %s\0A\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"invalid scratch space\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"!secp256k1_fe_is_zero(&ge->x)\00", align 1
@secp256k1_const_modinfo_scalar = internal constant %struct.secp256k1_modinv64_modinfo { %struct.secp256k1_modinv64_signed62 { [5 x i64] [i64 4598842128380346689, i64 3079181878673178862, i64 -21, i64 0, i64 256] }, i64 3815112494326173377 }, align 8
@secp256k1_pre_g = external dso_local constant [8192 x %struct.secp256k1_ge_storage], align 16
@secp256k1_pre_g_128 = external dso_local constant [8192 x %struct.secp256k1_ge_storage], align 16
@secp256k1_scalar_split_lambda.minus_b1 = internal constant %struct.secp256k1_scalar { [4 x i64] [i64 8022177200260244675, i64 -1998614352016537560, i64 0, i64 0] }, align 8
@secp256k1_scalar_split_lambda.minus_b2 = internal constant %struct.secp256k1_scalar { [4 x i64] [i64 -2925706260434037204, i64 -8491525256057179027, i64 -2, i64 -1] }, align 8
@secp256k1_scalar_split_lambda.g1 = internal constant %struct.secp256k1_scalar { [4 x i64] [i64 -1687969588364726223, i64 4443515802769476223, i64 -1698823648040391915, i64 3496713202691238861] }, align 8
@secp256k1_scalar_split_lambda.g2 = internal constant %struct.secp256k1_scalar { [4 x i64] [i64 1545214808910233457, i64 2455034284347819718, i64 8022177200260244676, i64 -1998614352016537560] }, align 8
@secp256k1_const_lambda = internal constant %struct.secp256k1_scalar { [4 x i64] [i64 -2377172193522762382, i64 1310022930574435960, i64 -6546514211138018214, i64 6008836872998760672] }, align 8
@secp256k1_rfc6979_hmac_sha256_initialize.zero = internal constant [1 x i8] zeroinitializer, align 1
@secp256k1_rfc6979_hmac_sha256_initialize.one = internal constant [1 x i8] c"\01", align 1
@secp256k1_rfc6979_hmac_sha256_generate.zero = internal constant [1 x i8] zeroinitializer, align 1
@secp256k1_ecmult_gen_prec_table = external dso_local local_unnamed_addr constant [64 x [16 x %struct.secp256k1_ge_storage]], align 16
@secp256k1_ge_const_g = internal unnamed_addr constant %struct.secp256k1_ge { %struct.secp256k1_fe { [5 x i64] [i64 705178180786072, i64 3855836460717471, i64 4089131105950716, i64 3301581525494108, i64 133858670344668] }, %struct.secp256k1_fe { [5 x i64] [i64 2199641648059576, i64 1278080618437060, i64 3959378566518708, i64 3455034269351872, i64 79417610544803] }, i32 0 }, align 8
@secp256k1_const_modinfo_fe = internal constant %struct.secp256k1_modinv64_modinfo { %struct.secp256k1_modinv64_signed62 { [5 x i64] [i64 -4294968273, i64 0, i64 0, i64 0, i64 256] }, i64 2866531139136965327 }, align 8
@secp256k1_sha256_finalize.pad = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define dso_local void @secp256k1_selftest() local_unnamed_addr #0 {
entry:
  %sizedesc.i.i.i = alloca [8 x i8], align 1
  %out.i.i = alloca [32 x i8], align 16
  %hasher.i.i = alloca %struct.secp256k1_sha256, align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_sha256* %hasher.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %1) #19
  %arrayidx.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 0
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 1
  %arrayidx4.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 2
  %arrayidx6.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 3
  %2 = bitcast %struct.secp256k1_sha256* %hasher.i.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %2, align 16, !tbaa !3
  %arrayidx8.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 4
  %arrayidx10.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 5
  %arrayidx12.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 6
  %arrayidx14.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 0, i64 7
  %3 = bitcast i32* %arrayidx8.i.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %3, align 16, !tbaa !3
  %bytes.i.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hasher.i.i, i64 0, i32 2
  store i64 0, i64* %bytes.i.i.i, align 16, !tbaa !7
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %hasher.i.i, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.26, i64 0, i64 0), i64 noundef 63) #19
  %4 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  %5 = load i64, i64* %bytes.i.i.i, align 16, !tbaa !7
  %shr.i.i.i = lshr i64 %5, 29
  %conv.i.i.i.i = trunc i64 %shr.i.i.i to i8
  %arrayidx.i.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 3
  store i8 %conv.i.i.i.i, i8* %arrayidx.i.i.i.i, align 1, !tbaa !10
  %shr.i48.i.i.i = lshr i64 %5, 37
  %conv1.i.i.i.i = trunc i64 %shr.i48.i.i.i to i8
  %arrayidx2.i.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 2
  store i8 %conv1.i.i.i.i, i8* %arrayidx2.i.i.i.i, align 1, !tbaa !10
  %shr3.i49.i.i.i = lshr i64 %5, 45
  %conv4.i.i.i.i = trunc i64 %shr3.i49.i.i.i to i8
  %arrayidx5.i.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 1
  store i8 %conv4.i.i.i.i, i8* %arrayidx5.i.i.i.i, align 1, !tbaa !10
  %shr6.i50.i.i.i = lshr i64 %5, 53
  %conv7.i.i.i.i = trunc i64 %shr6.i50.i.i.i to i8
  store i8 %conv7.i.i.i.i, i8* %4, align 1, !tbaa !10
  %arrayidx3.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 4
  %.tr.i.i.i = trunc i64 %5 to i32
  %conv5.i.i.i = shl i32 %.tr.i.i.i, 3
  %conv.i28.i.i.i = trunc i32 %conv5.i.i.i to i8
  %arrayidx.i29.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 7
  store i8 %conv.i28.i.i.i, i8* %arrayidx.i29.i.i.i, align 1, !tbaa !10
  %shr.i30.i.i.i = lshr i32 %conv5.i.i.i, 8
  %conv1.i31.i.i.i = trunc i32 %shr.i30.i.i.i to i8
  %arrayidx2.i32.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 6
  store i8 %conv1.i31.i.i.i, i8* %arrayidx2.i32.i.i.i, align 1, !tbaa !10
  %shr3.i33.i.i.i = lshr i32 %conv5.i.i.i, 16
  %conv4.i34.i.i.i = trunc i32 %shr3.i33.i.i.i to i8
  %arrayidx5.i35.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i.i, i64 0, i64 5
  store i8 %conv4.i34.i.i.i, i8* %arrayidx5.i35.i.i.i, align 1, !tbaa !10
  %shr6.i36.i.i.i = lshr i32 %conv5.i.i.i, 24
  %conv7.i37.i.i.i = trunc i32 %shr6.i36.i.i.i to i8
  store i8 %conv7.i37.i.i.i, i8* %arrayidx3.i.i.i, align 1, !tbaa !10
  %sub.i.i.i = sub i64 55, %5
  %rem7.i.i.i = and i64 %sub.i.i.i, 63
  %add.i.i.i = add nuw nsw i64 %rem7.i.i.i, 1
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %hasher.i.i, i8* noundef getelementptr inbounds (<{ i8, [63 x i8] }>, <{ i8, [63 x i8] }>* @secp256k1_sha256_finalize.pad, i64 0, i32 0), i64 noundef %add.i.i.i) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %hasher.i.i, i8* noundef nonnull %4, i64 noundef 8) #19
  %6 = load i32, i32* %arrayidx.i.i.i, align 16, !tbaa !3
  %conv.i38.i.i.i = trunc i32 %6 to i8
  %arrayidx.i39.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 3
  store i8 %conv.i38.i.i.i, i8* %arrayidx.i39.i.i.i, align 1, !tbaa !10
  %shr.i40.i.i.i = lshr i32 %6, 8
  %conv1.i41.i.i.i = trunc i32 %shr.i40.i.i.i to i8
  %arrayidx2.i42.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 2
  store i8 %conv1.i41.i.i.i, i8* %arrayidx2.i42.i.i.i, align 2, !tbaa !10
  %shr3.i43.i.i.i = lshr i32 %6, 16
  %conv4.i44.i.i.i = trunc i32 %shr3.i43.i.i.i to i8
  %arrayidx5.i45.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 1
  store i8 %conv4.i44.i.i.i, i8* %arrayidx5.i45.i.i.i, align 1, !tbaa !10
  %shr6.i46.i.i.i = lshr i32 %6, 24
  %conv7.i47.i.i.i = trunc i32 %shr6.i46.i.i.i to i8
  store i8 %conv7.i47.i.i.i, i8* %0, align 16, !tbaa !10
  %arrayidx10.1.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 4
  %7 = load i32, i32* %arrayidx2.i.i.i, align 4, !tbaa !3
  %conv.i38.1.i.i.i = trunc i32 %7 to i8
  %arrayidx.i39.1.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 7
  store i8 %conv.i38.1.i.i.i, i8* %arrayidx.i39.1.i.i.i, align 1, !tbaa !10
  %shr.i40.1.i.i.i = lshr i32 %7, 8
  %conv1.i41.1.i.i.i = trunc i32 %shr.i40.1.i.i.i to i8
  %arrayidx2.i42.1.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 6
  store i8 %conv1.i41.1.i.i.i, i8* %arrayidx2.i42.1.i.i.i, align 2, !tbaa !10
  %shr3.i43.1.i.i.i = lshr i32 %7, 16
  %conv4.i44.1.i.i.i = trunc i32 %shr3.i43.1.i.i.i to i8
  %arrayidx5.i45.1.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 5
  store i8 %conv4.i44.1.i.i.i, i8* %arrayidx5.i45.1.i.i.i, align 1, !tbaa !10
  %shr6.i46.1.i.i.i = lshr i32 %7, 24
  %conv7.i47.1.i.i.i = trunc i32 %shr6.i46.1.i.i.i to i8
  store i8 %conv7.i47.1.i.i.i, i8* %arrayidx10.1.i.i.i, align 4, !tbaa !10
  %arrayidx10.2.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 8
  %8 = load i32, i32* %arrayidx4.i.i.i, align 8, !tbaa !3
  %conv.i38.2.i.i.i = trunc i32 %8 to i8
  %arrayidx.i39.2.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 11
  store i8 %conv.i38.2.i.i.i, i8* %arrayidx.i39.2.i.i.i, align 1, !tbaa !10
  %shr.i40.2.i.i.i = lshr i32 %8, 8
  %conv1.i41.2.i.i.i = trunc i32 %shr.i40.2.i.i.i to i8
  %arrayidx2.i42.2.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 10
  store i8 %conv1.i41.2.i.i.i, i8* %arrayidx2.i42.2.i.i.i, align 2, !tbaa !10
  %shr3.i43.2.i.i.i = lshr i32 %8, 16
  %conv4.i44.2.i.i.i = trunc i32 %shr3.i43.2.i.i.i to i8
  %arrayidx5.i45.2.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 9
  store i8 %conv4.i44.2.i.i.i, i8* %arrayidx5.i45.2.i.i.i, align 1, !tbaa !10
  %shr6.i46.2.i.i.i = lshr i32 %8, 24
  %conv7.i47.2.i.i.i = trunc i32 %shr6.i46.2.i.i.i to i8
  store i8 %conv7.i47.2.i.i.i, i8* %arrayidx10.2.i.i.i, align 8, !tbaa !10
  %arrayidx10.3.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 12
  %9 = load i32, i32* %arrayidx6.i.i.i, align 4, !tbaa !3
  %conv.i38.3.i.i.i = trunc i32 %9 to i8
  %arrayidx.i39.3.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 15
  store i8 %conv.i38.3.i.i.i, i8* %arrayidx.i39.3.i.i.i, align 1, !tbaa !10
  %shr.i40.3.i.i.i = lshr i32 %9, 8
  %conv1.i41.3.i.i.i = trunc i32 %shr.i40.3.i.i.i to i8
  %arrayidx2.i42.3.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 14
  store i8 %conv1.i41.3.i.i.i, i8* %arrayidx2.i42.3.i.i.i, align 2, !tbaa !10
  %shr3.i43.3.i.i.i = lshr i32 %9, 16
  %conv4.i44.3.i.i.i = trunc i32 %shr3.i43.3.i.i.i to i8
  %arrayidx5.i45.3.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 13
  store i8 %conv4.i44.3.i.i.i, i8* %arrayidx5.i45.3.i.i.i, align 1, !tbaa !10
  %shr6.i46.3.i.i.i = lshr i32 %9, 24
  %conv7.i47.3.i.i.i = trunc i32 %shr6.i46.3.i.i.i to i8
  store i8 %conv7.i47.3.i.i.i, i8* %arrayidx10.3.i.i.i, align 4, !tbaa !10
  %arrayidx10.4.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 16
  %10 = load i32, i32* %arrayidx8.i.i.i, align 16, !tbaa !3
  %conv.i38.4.i.i.i = trunc i32 %10 to i8
  %arrayidx.i39.4.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 19
  store i8 %conv.i38.4.i.i.i, i8* %arrayidx.i39.4.i.i.i, align 1, !tbaa !10
  %shr.i40.4.i.i.i = lshr i32 %10, 8
  %conv1.i41.4.i.i.i = trunc i32 %shr.i40.4.i.i.i to i8
  %arrayidx2.i42.4.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 18
  store i8 %conv1.i41.4.i.i.i, i8* %arrayidx2.i42.4.i.i.i, align 2, !tbaa !10
  %shr3.i43.4.i.i.i = lshr i32 %10, 16
  %conv4.i44.4.i.i.i = trunc i32 %shr3.i43.4.i.i.i to i8
  %arrayidx5.i45.4.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 17
  store i8 %conv4.i44.4.i.i.i, i8* %arrayidx5.i45.4.i.i.i, align 1, !tbaa !10
  %shr6.i46.4.i.i.i = lshr i32 %10, 24
  %conv7.i47.4.i.i.i = trunc i32 %shr6.i46.4.i.i.i to i8
  store i8 %conv7.i47.4.i.i.i, i8* %arrayidx10.4.i.i.i, align 16, !tbaa !10
  %arrayidx10.5.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 20
  %11 = load i32, i32* %arrayidx10.i.i.i, align 4, !tbaa !3
  %conv.i38.5.i.i.i = trunc i32 %11 to i8
  %arrayidx.i39.5.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 23
  store i8 %conv.i38.5.i.i.i, i8* %arrayidx.i39.5.i.i.i, align 1, !tbaa !10
  %shr.i40.5.i.i.i = lshr i32 %11, 8
  %conv1.i41.5.i.i.i = trunc i32 %shr.i40.5.i.i.i to i8
  %arrayidx2.i42.5.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 22
  store i8 %conv1.i41.5.i.i.i, i8* %arrayidx2.i42.5.i.i.i, align 2, !tbaa !10
  %shr3.i43.5.i.i.i = lshr i32 %11, 16
  %conv4.i44.5.i.i.i = trunc i32 %shr3.i43.5.i.i.i to i8
  %arrayidx5.i45.5.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 21
  store i8 %conv4.i44.5.i.i.i, i8* %arrayidx5.i45.5.i.i.i, align 1, !tbaa !10
  %shr6.i46.5.i.i.i = lshr i32 %11, 24
  %conv7.i47.5.i.i.i = trunc i32 %shr6.i46.5.i.i.i to i8
  store i8 %conv7.i47.5.i.i.i, i8* %arrayidx10.5.i.i.i, align 4, !tbaa !10
  %arrayidx10.6.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 24
  %12 = load i32, i32* %arrayidx12.i.i.i, align 8, !tbaa !3
  %conv.i38.6.i.i.i = trunc i32 %12 to i8
  %arrayidx.i39.6.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 27
  store i8 %conv.i38.6.i.i.i, i8* %arrayidx.i39.6.i.i.i, align 1, !tbaa !10
  %shr.i40.6.i.i.i = lshr i32 %12, 8
  %conv1.i41.6.i.i.i = trunc i32 %shr.i40.6.i.i.i to i8
  %arrayidx2.i42.6.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 26
  store i8 %conv1.i41.6.i.i.i, i8* %arrayidx2.i42.6.i.i.i, align 2, !tbaa !10
  %shr3.i43.6.i.i.i = lshr i32 %12, 16
  %conv4.i44.6.i.i.i = trunc i32 %shr3.i43.6.i.i.i to i8
  %arrayidx5.i45.6.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 25
  store i8 %conv4.i44.6.i.i.i, i8* %arrayidx5.i45.6.i.i.i, align 1, !tbaa !10
  %shr6.i46.6.i.i.i = lshr i32 %12, 24
  %conv7.i47.6.i.i.i = trunc i32 %shr6.i46.6.i.i.i to i8
  store i8 %conv7.i47.6.i.i.i, i8* %arrayidx10.6.i.i.i, align 8, !tbaa !10
  %arrayidx10.7.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 28
  %13 = load i32, i32* %arrayidx14.i.i.i, align 4, !tbaa !3
  %conv.i38.7.i.i.i = trunc i32 %13 to i8
  %arrayidx.i39.7.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 31
  store i8 %conv.i38.7.i.i.i, i8* %arrayidx.i39.7.i.i.i, align 1, !tbaa !10
  %shr.i40.7.i.i.i = lshr i32 %13, 8
  %conv1.i41.7.i.i.i = trunc i32 %shr.i40.7.i.i.i to i8
  %arrayidx2.i42.7.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 30
  store i8 %conv1.i41.7.i.i.i, i8* %arrayidx2.i42.7.i.i.i, align 2, !tbaa !10
  %shr3.i43.7.i.i.i = lshr i32 %13, 16
  %conv4.i44.7.i.i.i = trunc i32 %shr3.i43.7.i.i.i to i8
  %arrayidx5.i45.7.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 29
  store i8 %conv4.i44.7.i.i.i, i8* %arrayidx5.i45.7.i.i.i, align 1, !tbaa !10
  %shr6.i46.7.i.i.i = lshr i32 %13, 24
  %conv7.i47.7.i.i.i = trunc i32 %shr6.i46.7.i.i.i to i8
  store i8 %conv7.i47.7.i.i.i, i8* %arrayidx10.7.i.i.i, align 4, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %entry
  %i.017.i.i.i = phi i64 [ 0, %entry ], [ %inc.i.i.i, %for.body.i.i.i ]
  %arrayidx.i4.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %out.i.i, i64 0, i64 %i.017.i.i.i
  %14 = load i8, i8* %arrayidx.i4.i.i, align 1, !tbaa !10
  %conv.i.i.i = zext i8 %14 to i32
  %arrayidx1.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* @secp256k1_selftest_sha256.output32, i64 0, i64 %i.017.i.i.i
  %15 = load i8, i8* %arrayidx1.i.i.i, align 1, !tbaa !10
  %conv2.i.i.i = zext i8 %15 to i32
  %sub.i5.i.i = sub nsw i32 %conv.i.i.i, %conv2.i.i.i
  %cmp3.not.i.i.i = icmp ne i32 %sub.i5.i.i, 0
  %inc.i.i.i = add nuw nsw i64 %i.017.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %inc.i.i.i, 32
  %or.cond.i.i = select i1 %cmp3.not.i.i.i, i1 true, i1 %exitcond.not.i.i.i
  br i1 %or.cond.i.i, label %secp256k1_selftest_passes.exit, label %for.body.i.i.i, !llvm.loop !11

secp256k1_selftest_passes.exit:                   ; preds = %for.body.i.i.i
  %cmp.i.i.not = icmp eq i32 %sub.i5.i.i, 0
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  br i1 %cmp.i.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %secp256k1_selftest_passes.exit
  call void @secp256k1_default_error_callback_fn(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* noundef null) #19
  unreachable

if.end:                                           ; preds = %secp256k1_selftest_passes.exit
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define dso_local i32 @scalar_reduce(%struct.secp256k1_scalar* nocapture noundef %r, i32 noundef returned %overflow) local_unnamed_addr #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 0
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !13
  %conv.i = zext i64 %0 to i128
  %conv1 = zext i32 %overflow to i64
  %mul = mul i64 %conv1, 4624529908474429119
  %conv.i37 = zext i64 %mul to i128
  %add.i = add nuw nsw i128 %conv.i, %conv.i37
  %conv.i38 = trunc i128 %add.i to i64
  store i64 %conv.i38, i64* %arrayidx, align 8, !tbaa !13
  %shr.i = lshr i128 %add.i, 64
  %arrayidx5 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 1
  %1 = load i64, i64* %arrayidx5, align 8, !tbaa !13
  %conv.i39 = zext i64 %1 to i128
  %mul7 = mul i64 %conv1, 4994812053365940164
  %conv.i41 = zext i64 %mul7 to i128
  %add.i40 = add nuw nsw i128 %conv.i39, %conv.i41
  %add.i42 = add nuw nsw i128 %add.i40, %shr.i
  %conv.i43 = trunc i128 %add.i42 to i64
  store i64 %conv.i43, i64* %arrayidx5, align 8, !tbaa !13
  %shr.i44 = lshr i128 %add.i42, 64
  %arrayidx12 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 2
  %2 = load i64, i64* %arrayidx12, align 8, !tbaa !13
  %conv.i45 = zext i64 %2 to i128
  %conv.i47 = zext i32 %overflow to i128
  %add.i46 = add nuw nsw i128 %conv.i45, %conv.i47
  %add.i48 = add nuw nsw i128 %add.i46, %shr.i44
  %conv.i49 = trunc i128 %add.i48 to i64
  store i64 %conv.i49, i64* %arrayidx12, align 8, !tbaa !13
  %shr.i50 = lshr i128 %add.i48, 64
  %arrayidx19 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx19, align 8, !tbaa !13
  %4 = trunc i128 %shr.i50 to i64
  %conv.i53 = add i64 %3, %4
  store i64 %conv.i53, i64* %arrayidx19, align 8, !tbaa !13
  ret i32 %overflow
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define dso_local i64 @secp256k1_context_preallocated_size(i32 noundef %flags) local_unnamed_addr #0 {
entry:
  %and = and i32 %flags, 255
  %cmp1.not = icmp eq i32 %and, 1
  br i1 %cmp1.not, label %cleanup, label %if.then, !prof !14

if.then:                                          ; preds = %entry
  tail call void @secp256k1_default_illegal_callback_fn(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* noundef null) #19
  unreachable

cleanup:                                          ; preds = %entry
  ret i64 208
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @secp256k1_context_preallocated_clone_size(%struct.secp256k1_context_struct* nocapture noundef readnone %ctx) local_unnamed_addr #3 {
entry:
  ret i64 208
}

; Function Attrs: nounwind uwtable
define dso_local %struct.secp256k1_context_struct* @secp256k1_context_preallocated_create(i8* noundef writeonly %prealloc, i32 noundef %flags) local_unnamed_addr #0 {
entry:
  tail call void @secp256k1_selftest()
  %and.i = and i32 %flags, 255
  %cmp1.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp1.not.i, label %cleanup, label %if.then.i, !prof !14

if.then.i:                                        ; preds = %entry
  tail call void @secp256k1_default_illegal_callback_fn(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* noundef null) #19
  unreachable

cleanup:                                          ; preds = %entry
  %0 = bitcast i8* %prealloc to %struct.secp256k1_context_struct*
  %illegal_callback = getelementptr inbounds i8, i8* %prealloc, i64 168
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %illegal_callback, i8* noundef nonnull align 8 dereferenceable(16) bitcast (%struct.secp256k1_callback* @default_illegal_callback to i8*), i64 16, i1 false), !tbaa.struct !15
  %error_callback = getelementptr inbounds i8, i8* %prealloc, i64 184
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %error_callback, i8* noundef nonnull align 8 dereferenceable(16) bitcast (%struct.secp256k1_callback* @default_error_callback to i8*), i64 16, i1 false), !tbaa.struct !15
  %initial.i.i = getelementptr inbounds i8, i8* %prealloc, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %initial.i.i, i8* noundef nonnull align 8 dereferenceable(40) bitcast (%struct.secp256k1_ge* @secp256k1_ge_const_g to i8*), i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx9.i.i.i.i = getelementptr inbounds i8, i8* %prealloc, i64 128
  %arrayidx.i.i38.i.i = getelementptr inbounds i8, i8* %prealloc, i64 80
  %arrayidx4.i.i.i.i = getelementptr inbounds i8, i8* %prealloc, i64 96
  %arrayidx8.i.i.i.i = getelementptr inbounds i8, i8* %prealloc, i64 112
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(36) %arrayidx9.i.i.i.i, i8 0, i64 36, i1 false) #19
  %1 = bitcast i8* %arrayidx.i.i38.i.i to <2 x i64>*
  store <2 x i64> <i64 15814739681549316, i64 16736317891044920>, <2 x i64>* %1, align 8, !tbaa !13
  %2 = bitcast i8* %arrayidx4.i.i.i.i to <2 x i64>*
  store <2 x i64> <i64 14055019942963272, i64 14559364240130108>, <2 x i64>* %2, align 8, !tbaa !13
  %3 = bitcast i8* %arrayidx8.i.i.i.i to <2 x i64>*
  store <2 x i64> <i64 1046482296297817, i64 1>, <2 x i64>* %3, align 8, !tbaa !13
  %arrayidx.i.i.i = getelementptr inbounds i8, i8* %prealloc, i64 8
  %4 = bitcast i8* %arrayidx.i.i.i to i64*
  store i64 1, i64* %4, align 8, !tbaa !13
  %arrayidx2.i.i.i = getelementptr inbounds i8, i8* %prealloc, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %arrayidx2.i.i.i, i8 0, i64 24, i1 false) #19
  %built.i = bitcast i8* %prealloc to i32*
  store i32 1, i32* %built.i, align 8, !tbaa !19
  %and7 = lshr i32 %flags, 10
  %and7.lobit = and i32 %and7, 1
  %declassify = getelementptr inbounds i8, i8* %prealloc, i64 200
  %5 = bitcast i8* %declassify to i32*
  store i32 %and7.lobit, i32* %5, align 8, !tbaa !23
  ret %struct.secp256k1_context_struct* %0
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define dso_local noalias %struct.secp256k1_context_struct* @secp256k1_context_create(i32 noundef %flags) local_unnamed_addr #0 {
entry:
  %and.i = and i32 %flags, 255
  %cmp1.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp1.not.i, label %secp256k1_context_preallocated_size.exit, label %if.then.i, !prof !14

if.then.i:                                        ; preds = %entry
  tail call void @secp256k1_default_illegal_callback_fn(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* noundef null) #19
  unreachable

secp256k1_context_preallocated_size.exit:         ; preds = %entry
  %call.i = tail call noalias dereferenceable_or_null(208) i8* @malloc(i64 noundef 208) #19
  %cmp.i = icmp eq i8* %call.i, null
  br i1 %cmp.i, label %if.then.i10, label %cleanup

if.then.i10:                                      ; preds = %secp256k1_context_preallocated_size.exit
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !16
  %call.i11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.29, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #20
  tail call void @abort() #21
  unreachable

cleanup:                                          ; preds = %secp256k1_context_preallocated_size.exit
  tail call void @secp256k1_selftest() #19
  %1 = bitcast i8* %call.i to %struct.secp256k1_context_struct*
  %illegal_callback.i = getelementptr inbounds i8, i8* %call.i, i64 168
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %illegal_callback.i, i8* noundef nonnull align 8 dereferenceable(16) bitcast (%struct.secp256k1_callback* @default_illegal_callback to i8*), i64 16, i1 false) #19, !tbaa.struct !15
  %error_callback.i = getelementptr inbounds i8, i8* %call.i, i64 184
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %error_callback.i, i8* noundef nonnull align 8 dereferenceable(16) bitcast (%struct.secp256k1_callback* @default_error_callback to i8*), i64 16, i1 false) #19, !tbaa.struct !15
  %initial.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %initial.i.i.i, i8* noundef nonnull align 8 dereferenceable(40) bitcast (%struct.secp256k1_ge* @secp256k1_ge_const_g to i8*), i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx9.i.i.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 128
  %arrayidx.i.i38.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 80
  %arrayidx4.i.i.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 96
  %arrayidx8.i.i.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 112
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(36) %arrayidx9.i.i.i.i.i, i8 0, i64 36, i1 false) #19
  %2 = bitcast i8* %arrayidx.i.i38.i.i.i to <2 x i64>*
  store <2 x i64> <i64 15814739681549316, i64 16736317891044920>, <2 x i64>* %2, align 8, !tbaa !13
  %3 = bitcast i8* %arrayidx4.i.i.i.i.i to <2 x i64>*
  store <2 x i64> <i64 14055019942963272, i64 14559364240130108>, <2 x i64>* %3, align 8, !tbaa !13
  %4 = bitcast i8* %arrayidx8.i.i.i.i.i to <2 x i64>*
  store <2 x i64> <i64 1046482296297817, i64 1>, <2 x i64>* %4, align 8, !tbaa !13
  %arrayidx.i.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 8
  %5 = bitcast i8* %arrayidx.i.i.i.i to i64*
  store i64 1, i64* %5, align 8, !tbaa !13
  %arrayidx2.i.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %arrayidx2.i.i.i.i, i8 0, i64 24, i1 false) #19
  %built.i.i = bitcast i8* %call.i to i32*
  store i32 1, i32* %built.i.i, align 8, !tbaa !19
  %and7.i = lshr i32 %flags, 10
  %and7.lobit.i = and i32 %and7.i, 1
  %declassify.i = getelementptr inbounds i8, i8* %call.i, i64 200
  %6 = bitcast i8* %declassify.i to i32*
  store i32 %and7.lobit.i, i32* %6, align 8, !tbaa !23
  ret %struct.secp256k1_context_struct* %1
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn
declare dso_local void @free(i8* nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local %struct.secp256k1_context_struct* @secp256k1_context_preallocated_clone(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef writeonly %prealloc) local_unnamed_addr #0 {
entry:
  %cmp2.not = icmp eq i8* %prealloc, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx12 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx12.val = load i8*, i8** %illegal_callback.idx12, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* noundef %illegal_callback.idx12.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %0 = bitcast i8* %prealloc to %struct.secp256k1_context_struct*
  %1 = bitcast %struct.secp256k1_context_struct* %ctx to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(208) %prealloc, i8* noundef nonnull align 8 dereferenceable(208) %1, i64 208, i1 false), !tbaa.struct !29
  br label %cleanup

cleanup:                                          ; preds = %do.end6, %if.then
  %retval.0 = phi %struct.secp256k1_context_struct* [ null, %if.then ], [ %0, %do.end6 ]
  ret %struct.secp256k1_context_struct* %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local %struct.secp256k1_context_struct* @secp256k1_context_clone(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx) local_unnamed_addr #0 {
entry:
  %call.i = tail call noalias dereferenceable_or_null(208) i8* @malloc(i64 noundef 208) #19
  %cmp.i = icmp eq i8* %call.i, null
  br i1 %cmp.i, label %if.then.i9, label %do.end6.i

if.then.i9:                                       ; preds = %entry
  %cb.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 0
  %cb.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %cb.idx.i, align 8, !tbaa !27
  %cb.idx3.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 1
  %cb.idx3.val.i = load i8*, i8** %cb.idx3.i, align 8, !tbaa !28
  tail call void %cb.idx.val.i(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0), i8* noundef %cb.idx3.val.i) #19
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx12.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx12.val.i = load i8*, i8** %illegal_callback.idx12.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* noundef %illegal_callback.idx12.val.i) #19
  br label %secp256k1_context_preallocated_clone.exit

do.end6.i:                                        ; preds = %entry
  %0 = bitcast i8* %call.i to %struct.secp256k1_context_struct*
  %1 = bitcast %struct.secp256k1_context_struct* %ctx to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(208) %call.i, i8* noundef nonnull align 8 dereferenceable(208) %1, i64 208, i1 false) #19, !tbaa.struct !29
  br label %secp256k1_context_preallocated_clone.exit

secp256k1_context_preallocated_clone.exit:        ; preds = %if.then.i9, %do.end6.i
  %retval.0.i = phi %struct.secp256k1_context_struct* [ null, %if.then.i9 ], [ %0, %do.end6.i ]
  ret %struct.secp256k1_context_struct* %retval.0.i
}

; Function Attrs: nounwind uwtable
define dso_local void @secp256k1_context_preallocated_destroy(%struct.secp256k1_context_struct* noundef %ctx) local_unnamed_addr #0 {
entry:
  %0 = load %struct.secp256k1_context_struct*, %struct.secp256k1_context_struct** @secp256k1_context_static, align 8, !tbaa !16
  %cmp.not = icmp eq %struct.secp256k1_context_struct* %0, %ctx
  br i1 %cmp.not, label %do.end.thread, label %do.end, !prof !26

do.end.thread:                                    ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx8 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx8.val = load i8*, i8** %illegal_callback.idx8, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i8* noundef %illegal_callback.idx8.val) #19
  br label %if.then3

do.end:                                           ; preds = %entry
  %cmp1.not = icmp eq %struct.secp256k1_context_struct* %ctx, null
  br i1 %cmp1.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %do.end.thread, %do.end
  %built.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 0
  store i32 0, i32* %built.i, align 8, !tbaa !19
  %blind.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1
  %1 = bitcast %struct.secp256k1_scalar* %blind.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(156) %1, i8 0, i64 156, i1 false) #19
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %do.end
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @secp256k1_context_destroy(%struct.secp256k1_context_struct* noundef %ctx) local_unnamed_addr #0 {
entry:
  %cmp.not = icmp eq %struct.secp256k1_context_struct* %ctx, null
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %struct.secp256k1_context_struct*, %struct.secp256k1_context_struct** @secp256k1_context_static, align 8, !tbaa !16
  %cmp.not.i = icmp eq %struct.secp256k1_context_struct* %0, %ctx
  br i1 %cmp.not.i, label %do.end.thread.i, label %secp256k1_context_preallocated_destroy.exit, !prof !26

do.end.thread.i:                                  ; preds = %if.then
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx8.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx8.val.i = load i8*, i8** %illegal_callback.idx8.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i8* noundef %illegal_callback.idx8.val.i) #19
  br label %secp256k1_context_preallocated_destroy.exit

secp256k1_context_preallocated_destroy.exit:      ; preds = %do.end.thread.i, %if.then
  %1 = bitcast %struct.secp256k1_context_struct* %ctx to i8*
  tail call void @free(i8* noundef %1) #19
  br label %if.end

if.end:                                           ; preds = %secp256k1_context_preallocated_destroy.exit, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @secp256k1_context_set_illegal_callback(%struct.secp256k1_context_struct* nocapture noundef %ctx, void (i8*, i8*)* noundef %fun, i8* noundef %data) local_unnamed_addr #0 {
entry:
  %0 = load %struct.secp256k1_context_struct*, %struct.secp256k1_context_struct** @secp256k1_context_static, align 8, !tbaa !16
  %cmp.not = icmp eq %struct.secp256k1_context_struct* %0, %ctx
  br i1 %cmp.not, label %if.then, label %do.end, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx12 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx12.val = load i8*, i8** %illegal_callback.idx12, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i8* noundef %illegal_callback.idx12.val) #19
  br label %do.end

do.end:                                           ; preds = %entry, %if.then
  %cmp1 = icmp eq void (i8*, i8*)* %fun, null
  %spec.store.select = select i1 %cmp1, void (i8*, i8*)* @secp256k1_default_illegal_callback_fn, void (i8*, i8*)* %fun
  %fn = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  store void (i8*, i8*)* %spec.store.select, void (i8*, i8*)** %fn, align 8, !tbaa !30
  %data7 = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  store i8* %data, i8** %data7, align 8, !tbaa !31
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @secp256k1_default_illegal_callback_fn(i8* noundef %str, i8* nocapture noundef readnone %data) #6 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !16
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %0, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i64 0, i64 0), i8* noundef %str) #22
  tail call void @abort() #21
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @secp256k1_context_set_error_callback(%struct.secp256k1_context_struct* nocapture noundef %ctx, void (i8*, i8*)* noundef %fun, i8* noundef %data) local_unnamed_addr #0 {
entry:
  %0 = load %struct.secp256k1_context_struct*, %struct.secp256k1_context_struct** @secp256k1_context_static, align 8, !tbaa !16
  %cmp.not = icmp eq %struct.secp256k1_context_struct* %0, %ctx
  br i1 %cmp.not, label %if.then, label %do.end, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx11 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx11.val = load i8*, i8** %illegal_callback.idx11, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i8* noundef %illegal_callback.idx11.val) #19
  br label %do.end

do.end:                                           ; preds = %entry, %if.then
  %cmp1 = icmp eq void (i8*, i8*)* %fun, null
  %spec.store.select = select i1 %cmp1, void (i8*, i8*)* @secp256k1_default_error_callback_fn, void (i8*, i8*)* %fun
  %fn = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 0
  store void (i8*, i8*)* %spec.store.select, void (i8*, i8*)** %fn, align 8, !tbaa !32
  %data6 = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 1
  store i8* %data, i8** %data6, align 8, !tbaa !33
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @secp256k1_default_error_callback_fn(i8* noundef %str, i8* nocapture noundef readnone %data) #6 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !16
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.29, i64 0, i64 0), i8* noundef %str) #22
  tail call void @abort() #21
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local %struct.secp256k1_scratch_space_struct* @secp256k1_scratch_space_create(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i64 noundef %max_size) local_unnamed_addr #0 {
entry:
  %add.i = add i64 %max_size, 32
  %call.i.i = tail call noalias i8* @malloc(i64 noundef %add.i) #19
  %cmp.i.i = icmp eq i8* %call.i.i, null
  br i1 %cmp.i.i, label %checked_malloc.exit.thread.i, label %if.then.i

checked_malloc.exit.thread.i:                     ; preds = %entry
  %cb.idx.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 0
  %cb.idx.val.i.i = load void (i8*, i8*)*, void (i8*, i8*)** %cb.idx.i.i, align 8, !tbaa !27
  %cb.idx3.i.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 1
  %cb.idx3.val.i.i = load i8*, i8** %cb.idx3.i.i, align 8, !tbaa !28
  tail call void %cb.idx.val.i.i(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0), i8* noundef %cb.idx3.val.i.i) #19
  br label %secp256k1_scratch_create.exit

if.then.i:                                        ; preds = %entry
  %0 = getelementptr inbounds i8, i8* %call.i.i, i64 16
  %1 = bitcast i8* %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = bitcast i8* %call.i.i to i64*
  store i64 29382749080150899, i64* %2, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i.i, i64 32
  %data.i = getelementptr inbounds i8, i8* %call.i.i, i64 8
  %3 = bitcast i8* %data.i to i8**
  store i8* %add.ptr.i, i8** %3, align 8, !tbaa !34
  %max_size.i = getelementptr inbounds i8, i8* %call.i.i, i64 24
  %4 = bitcast i8* %max_size.i to i64*
  store i64 %max_size, i64* %4, align 8, !tbaa !36
  br label %secp256k1_scratch_create.exit

secp256k1_scratch_create.exit:                    ; preds = %checked_malloc.exit.thread.i, %if.then.i
  %5 = bitcast i8* %call.i.i to %struct.secp256k1_scratch_space_struct*
  ret %struct.secp256k1_scratch_space_struct* %5
}

; Function Attrs: nounwind uwtable
define dso_local void @secp256k1_scratch_space_destroy(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_scratch_space_struct* noundef %scratch) local_unnamed_addr #0 {
entry:
  %cmp.not.i = icmp eq %struct.secp256k1_scratch_space_struct* %scratch, null
  br i1 %cmp.not.i, label %secp256k1_scratch_destroy.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %arraydecay.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 0
  %0 = load i8, i8* %arraydecay.i, align 1, !tbaa !10
  %cmp3.not.i.i = icmp eq i8 %0, 115
  br i1 %cmp3.not.i.i, label %for.cond.i.i, label %if.then2.i

for.cond.i.i:                                     ; preds = %if.then.i
  %arrayidx.i.1.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 1
  %1 = load i8, i8* %arrayidx.i.1.i, align 1, !tbaa !10
  %cmp3.not.i.1.i = icmp eq i8 %1, 99
  br i1 %cmp3.not.i.1.i, label %for.cond.i.1.i, label %if.then2.i

for.cond.i.1.i:                                   ; preds = %for.cond.i.i
  %arrayidx.i.2.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 2
  %2 = load i8, i8* %arrayidx.i.2.i, align 1, !tbaa !10
  %cmp3.not.i.2.i = icmp eq i8 %2, 114
  br i1 %cmp3.not.i.2.i, label %for.cond.i.2.i, label %if.then2.i

for.cond.i.2.i:                                   ; preds = %for.cond.i.1.i
  %arrayidx.i.3.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 3
  %3 = load i8, i8* %arrayidx.i.3.i, align 1, !tbaa !10
  %cmp3.not.i.3.i = icmp eq i8 %3, 97
  br i1 %cmp3.not.i.3.i, label %for.cond.i.3.i, label %if.then2.i

for.cond.i.3.i:                                   ; preds = %for.cond.i.2.i
  %arrayidx.i.4.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 4
  %4 = load i8, i8* %arrayidx.i.4.i, align 1, !tbaa !10
  %cmp3.not.i.4.i = icmp eq i8 %4, 116
  br i1 %cmp3.not.i.4.i, label %for.cond.i.4.i, label %if.then2.i

for.cond.i.4.i:                                   ; preds = %for.cond.i.3.i
  %arrayidx.i.5.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 5
  %5 = load i8, i8* %arrayidx.i.5.i, align 1, !tbaa !10
  %cmp3.not.i.5.i = icmp eq i8 %5, 99
  br i1 %cmp3.not.i.5.i, label %for.cond.i.5.i, label %if.then2.i

for.cond.i.5.i:                                   ; preds = %for.cond.i.4.i
  %arrayidx.i.6.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 6
  %6 = load i8, i8* %arrayidx.i.6.i, align 1, !tbaa !10
  %cmp3.not.i.6.i = icmp eq i8 %6, 104
  br i1 %cmp3.not.i.6.i, label %for.cond.i.6.i, label %if.then2.i

for.cond.i.6.i:                                   ; preds = %for.cond.i.5.i
  %arrayidx.i.7.i = getelementptr inbounds %struct.secp256k1_scratch_space_struct, %struct.secp256k1_scratch_space_struct* %scratch, i64 0, i32 0, i64 7
  %7 = load i8, i8* %arrayidx.i.7.i, align 1, !tbaa !10
  %cmp3.not.i.7.i = icmp eq i8 %7, 0
  br i1 %cmp3.not.i.7.i, label %for.cond.i.7.i, label %if.then2.i

for.cond.i.7.i:                                   ; preds = %for.cond.i.6.i
  tail call void @free(i8* noundef nonnull %arraydecay.i) #19
  br label %secp256k1_scratch_destroy.exit

if.then2.i:                                       ; preds = %for.cond.i.6.i, %for.cond.i.5.i, %for.cond.i.4.i, %for.cond.i.3.i, %for.cond.i.2.i, %for.cond.i.1.i, %for.cond.i.i, %if.then.i
  %error_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 0
  %error_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %error_callback.idx.i, align 8, !tbaa !27
  %error_callback.idx11.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 2, i32 1
  %error_callback.idx11.val.i = load i8*, i8** %error_callback.idx11.i, align 8, !tbaa !28
  tail call void %error_callback.idx.val.i(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i64 0, i64 0), i8* noundef %error_callback.idx11.val.i) #19
  br label %secp256k1_scratch_destroy.exit

secp256k1_scratch_destroy.exit:                   ; preds = %entry, %for.cond.i.7.i, %if.then2.i
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_parse(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef writeonly %pubkey, i8* noundef %input, i64 noundef %inputlen) local_unnamed_addr #0 {
entry:
  %x3.i80.i = alloca %struct.secp256k1_fe, align 16
  %x2.i.i.i = alloca %struct.secp256k1_fe, align 16
  %x3.i.i.i = alloca %struct.secp256k1_fe, align 16
  %x6.i.i.i = alloca %struct.secp256k1_fe, align 16
  %x9.i.i.i = alloca %struct.secp256k1_fe, align 16
  %x11.i.i.i = alloca %struct.secp256k1_fe, align 16
  %x22.i.i.i = alloca %struct.secp256k1_fe, align 8
  %x44.i.i.i = alloca %struct.secp256k1_fe, align 8
  %x88.i.i.i = alloca %struct.secp256k1_fe, align 8
  %x176.i.i.i = alloca %struct.secp256k1_fe, align 8
  %x220.i.i.i = alloca %struct.secp256k1_fe, align 8
  %x223.i.i.i = alloca %struct.secp256k1_fe, align 16
  %t1.i.i.i = alloca %struct.secp256k1_fe, align 8
  %x2.i.i = alloca %struct.secp256k1_fe, align 16
  %x3.i.i = alloca %struct.secp256k1_fe, align 8
  %x.i = alloca %struct.secp256k1_fe, align 8
  %x31.i = alloca %struct.secp256k1_fe, align 8
  %y.i = alloca %struct.secp256k1_fe, align 8
  %Q = alloca %struct.secp256k1_ge, align 8
  %0 = bitcast %struct.secp256k1_ge* %Q to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %0) #19
  %cmp2.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx33 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx33.val = load i8*, i8** %illegal_callback.idx33, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback.idx33.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %1 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %1, i8 0, i64 64, i1 false)
  %cmp8.not = icmp eq i8* %input, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.end6
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx32 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx32.val = load i8*, i8** %illegal_callback16.idx32, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* noundef %illegal_callback16.idx32.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.end6
  switch i64 %inputlen, label %cleanup [
    i64 33, label %land.lhs.true.i
    i64 65, label %land.lhs.true15.i
  ]

land.lhs.true.i:                                  ; preds = %do.end19
  %2 = load i8, i8* %input, align 1, !tbaa !10
  %3 = and i8 %2, -2
  %switch.i = icmp eq i8 %3, 2
  br i1 %switch.i, label %if.then.i, label %cleanup

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = bitcast %struct.secp256k1_fe* %x.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  %add.ptr.i = getelementptr inbounds i8, i8* %input, i64 1
  %call.i = call fastcc i32 @secp256k1_fe_set_b32(%struct.secp256k1_fe* noundef nonnull %x.i, i8* noundef nonnull %add.ptr.i) #19
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then.i
  %5 = load i8, i8* %input, align 1, !tbaa !10
  %6 = bitcast %struct.secp256k1_fe* %x2.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #19
  %7 = bitcast %struct.secp256k1_fe* %x3.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %0, i8* noundef nonnull align 8 dereferenceable(40) %4, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay2.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x.i, i64 0, i32 0, i64 0
  %8 = load i64, i64* %arraydecay2.i.i, align 8, !tbaa !13
  %arrayidx1.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x.i, i64 0, i32 0, i64 1
  %9 = load i64, i64* %arrayidx1.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i107.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x.i, i64 0, i32 0, i64 2
  %10 = load i64, i64* %arrayidx2.i.i107.i, align 8, !tbaa !13
  %arrayidx3.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x.i, i64 0, i32 0, i64 3
  %11 = load i64, i64* %arrayidx3.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i108.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x.i, i64 0, i32 0, i64 4
  %12 = load i64, i64* %arrayidx4.i.i108.i, align 8, !tbaa !13
  %mul.i.i109.i = shl i64 %8, 1
  %conv.i.i.i.i = zext i64 %mul.i.i109.i to i128
  %conv1.i.i.i.i = zext i64 %11 to i128
  %mul.i.i.i110.i = mul nuw i128 %conv1.i.i.i.i, %conv.i.i.i.i
  %mul17.i.i.i = shl i64 %9, 1
  %conv.i215.i.i.i = zext i64 %mul17.i.i.i to i128
  %conv1.i216.i.i.i = zext i64 %10 to i128
  %mul.i217.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv.i215.i.i.i
  %add.i.i.i111.i = add i128 %mul.i.i.i110.i, %mul.i217.i.i.i
  %conv.i218.i.i.i = zext i64 %12 to i128
  %mul.i220.i.i.i = mul nuw i128 %conv.i218.i.i.i, %conv.i218.i.i.i
  %conv1.i222.i.i.i = and i128 %mul.i220.i.i.i, 18446744073709551615
  %mul.i223.i.i.i = mul nuw nsw i128 %conv1.i222.i.i.i, 68719492368
  %add.i224.i.i.i = add i128 %add.i.i.i111.i, %mul.i223.i.i.i
  %shr.i.i.i112.i = lshr i128 %mul.i220.i.i.i, 64
  %shr.i226.i.i.i = lshr i128 %add.i224.i.i.i, 52
  %mul37.i.i.i = shl i64 %12, 1
  %conv.i227.i.i.i = zext i64 %8 to i128
  %conv1.i228.i.i.i = zext i64 %mul37.i.i.i to i128
  %mul.i229.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv.i227.i.i.i
  %mul.i233.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv.i215.i.i.i
  %mul.i237.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv1.i216.i.i.i
  %mul.i241.i.i.i = mul nuw nsw i128 %shr.i.i.i112.i, 281475040739328
  %add.i230.i.i.i = add i128 %mul.i233.i.i.i, %mul.i237.i.i.i
  %add.i234.i.i.i = add i128 %add.i230.i.i.i, %mul.i229.i.i.i
  %add.i238.i.i.i = add i128 %add.i234.i.i.i, %mul.i241.i.i.i
  %add.i242.i.i.i = add i128 %add.i238.i.i.i, %shr.i226.i.i.i
  %conv.i243.i.i.i = trunc i128 %add.i242.i.i.i to i64
  %shr.i244.i.i.i = lshr i128 %add.i242.i.i.i, 52
  %and47.i.i.i = lshr i64 %conv.i243.i.i.i, 48
  %13 = and i64 %and47.i.i.i, 15
  %and54.i.i.i = and i64 %conv.i243.i.i.i, 281474976710655
  %mul.i247.i.i.i = mul nuw i128 %conv.i227.i.i.i, %conv.i227.i.i.i
  %conv.i248.i.i.i = zext i64 %9 to i128
  %mul.i250.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv.i248.i.i.i
  %mul64.i.i.i = shl i64 %10, 1
  %conv.i252.i.i.i = zext i64 %mul64.i.i.i to i128
  %mul.i254.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv.i252.i.i.i
  %add.i251.i.i.i = add i128 %mul.i250.i.i.i, %mul.i254.i.i.i
  %add.i255.i.i.i = add i128 %add.i251.i.i.i, %shr.i244.i.i.i
  %conv.i256.i.i.i = trunc i128 %add.i255.i.i.i to i64
  %shr.i257.i.i.i = lshr i128 %add.i255.i.i.i, 52
  %and69.i.i.i = shl i64 %conv.i256.i.i.i, 4
  %shl.i.i.i = and i64 %and69.i.i.i, 72057594037927920
  %or.i.i113.i = or i64 %shl.i.i.i, %13
  %conv.i258.i.i.i = zext i64 %or.i.i113.i to i128
  %mul.i259.i.i.i = mul nuw nsw i128 %conv.i258.i.i.i, 4294968273
  %add.i260.i.i.i = add i128 %mul.i259.i.i.i, %mul.i247.i.i.i
  %shr.i262.i.i.i = lshr i128 %add.i260.i.i.i, 52
  %mul.i265.i.i.i = mul nuw i128 %conv.i248.i.i.i, %conv.i.i.i.i
  %mul.i269.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv1.i216.i.i.i
  %mul.i273.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv1.i.i.i.i
  %add.i270.i.i.i = add i128 %mul.i269.i.i.i, %mul.i273.i.i.i
  %add.i274.i.i.i = add i128 %add.i270.i.i.i, %shr.i257.i.i.i
  %conv.i276.i.i.i = and i128 %add.i274.i.i.i, 4503599627370495
  %mul.i277.i.i.i = mul nuw nsw i128 %conv.i276.i.i.i, 68719492368
  %add.i266.i.i.i = add i128 %mul.i277.i.i.i, %mul.i265.i.i.i
  %add.i278.i.i.i = add i128 %add.i266.i.i.i, %shr.i262.i.i.i
  %shr.i279.i.i.i = lshr i128 %add.i274.i.i.i, 52
  %14 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i, i64 0
  %15 = insertelement <2 x i128> %14, i128 %add.i278.i.i.i, i64 1
  %16 = trunc <2 x i128> %15 to <2 x i64>
  %17 = and <2 x i64> %16, <i64 4503599627370495, i64 4503599627370495>
  %18 = bitcast %struct.secp256k1_fe* %x2.i.i to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 16, !tbaa !13
  %shr.i281.i.i.i = lshr i128 %add.i278.i.i.i, 52
  %mul.i284.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv.i.i.i.i
  %mul.i288.i.i.i = mul nuw i128 %conv.i248.i.i.i, %conv.i248.i.i.i
  %mul.i292.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv1.i.i.i.i
  %add.i293.i.i.i = add i128 %shr.i279.i.i.i, %mul.i292.i.i.i
  %conv1.i295.i.i.i = and i128 %add.i293.i.i.i, 18446744073709551615
  %mul.i296.i.i.i = mul nuw nsw i128 %conv1.i295.i.i.i, 68719492368
  %add.i285.i.i.i = add i128 %mul.i284.i.i.i, %mul.i288.i.i.i
  %add.i289.i.i.i = add i128 %add.i285.i.i.i, %mul.i296.i.i.i
  %add.i297.i.i.i = add i128 %add.i289.i.i.i, %shr.i281.i.i.i
  %shr.i298.i.i.i = lshr i128 %add.i293.i.i.i, 64
  %arrayidx130.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i, i64 0, i32 0, i64 2
  %shr.i300.i.i.i = lshr i128 %add.i297.i.i.i, 52
  %mul.i303.i.i.i = mul nuw nsw i128 %shr.i298.i.i.i, 281475040739328
  %conv.i305.i.i.i = and i128 %add.i224.i.i.i, 4503599627370494
  %add.i304.i.i.i = add nuw nsw i128 %mul.i303.i.i.i, %conv.i305.i.i.i
  %add.i306.i.i.i = add nuw nsw i128 %add.i304.i.i.i, %shr.i300.i.i.i
  %19 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i, i64 0
  %20 = insertelement <2 x i128> %19, i128 %add.i306.i.i.i, i64 1
  %21 = trunc <2 x i128> %20 to <2 x i64>
  %22 = and <2 x i64> %21, <i64 4503599627370495, i64 4503599627370495>
  %23 = bitcast i64* %arrayidx130.i.i.i to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 16, !tbaa !13
  %shr.i308.i.i.i = lshr i128 %add.i306.i.i.i, 52
  %conv.i309.i.i.i = trunc i128 %shr.i308.i.i.i to i64
  %add.i.i114.i = add nuw nsw i64 %and54.i.i.i, %conv.i309.i.i.i
  %arrayidx151.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i, i64 0, i32 0, i64 4
  store i64 %add.i.i114.i, i64* %arrayidx151.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x3.i.i, %struct.secp256k1_fe* noundef nonnull %x.i, %struct.secp256k1_fe* noundef nonnull %x2.i.i) #19
  %infinity.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 2
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !37
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i, i64 0, i32 0, i64 0
  %24 = load i64, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %add.i.i.i = add i64 %24, 7
  store i64 %add.i.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %arrayidx6.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i, i64 0, i32 0, i64 1
  %25 = load i64, i64* %arrayidx6.i.i.i, align 8, !tbaa !13
  %arrayidx11.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i, i64 0, i32 0, i64 2
  %26 = load i64, i64* %arrayidx11.i.i.i, align 8, !tbaa !13
  %arrayidx16.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i, i64 0, i32 0, i64 3
  %27 = load i64, i64* %arrayidx16.i.i.i, align 8, !tbaa !13
  %arrayidx21.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i, i64 0, i32 0, i64 4
  %28 = load i64, i64* %arrayidx21.i.i.i, align 8, !tbaa !13
  %29 = bitcast %struct.secp256k1_fe* %x2.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #19
  %30 = bitcast %struct.secp256k1_fe* %x3.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #19
  %31 = bitcast %struct.secp256k1_fe* %x6.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #19
  %32 = bitcast %struct.secp256k1_fe* %x9.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #19
  %33 = bitcast %struct.secp256k1_fe* %x11.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #19
  %34 = bitcast %struct.secp256k1_fe* %x22.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #19
  %35 = bitcast %struct.secp256k1_fe* %x44.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #19
  %36 = bitcast %struct.secp256k1_fe* %x88.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #19
  %37 = bitcast %struct.secp256k1_fe* %x176.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #19
  %38 = bitcast %struct.secp256k1_fe* %x220.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #19
  %39 = bitcast %struct.secp256k1_fe* %x223.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #19
  %40 = bitcast %struct.secp256k1_fe* %t1.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #19
  %arraydecay.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i.i, i64 0, i32 0, i64 0
  %mul.i.i.i.i = shl i64 %add.i.i.i, 1
  %conv.i.i.i.i.i = zext i64 %mul.i.i.i.i to i128
  %conv1.i.i.i.i.i = zext i64 %27 to i128
  %mul.i.i.i23.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv.i.i.i.i.i
  %mul17.i.i.i.i = shl i64 %25, 1
  %conv.i215.i.i.i.i = zext i64 %mul17.i.i.i.i to i128
  %conv1.i216.i.i.i.i = zext i64 %26 to i128
  %mul.i217.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i, %conv.i215.i.i.i.i
  %add.i.i.i24.i.i = add i128 %mul.i.i.i23.i.i, %mul.i217.i.i.i.i
  %conv.i218.i.i.i.i = zext i64 %28 to i128
  %mul.i220.i.i.i.i = mul nuw i128 %conv.i218.i.i.i.i, %conv.i218.i.i.i.i
  %conv1.i222.i.i.i.i = and i128 %mul.i220.i.i.i.i, 18446744073709551615
  %mul.i223.i.i.i.i = mul nuw nsw i128 %conv1.i222.i.i.i.i, 68719492368
  %add.i224.i.i.i.i = add i128 %add.i.i.i24.i.i, %mul.i223.i.i.i.i
  %shr.i.i.i25.i.i = lshr i128 %mul.i220.i.i.i.i, 64
  %shr.i226.i.i.i.i = lshr i128 %add.i224.i.i.i.i, 52
  %mul37.i.i.i.i = shl i64 %28, 1
  %conv.i227.i.i.i.i = zext i64 %add.i.i.i to i128
  %conv1.i228.i.i.i.i = zext i64 %mul37.i.i.i.i to i128
  %mul.i229.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv.i227.i.i.i.i
  %mul.i233.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv.i215.i.i.i.i
  %mul.i237.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i, %conv1.i216.i.i.i.i
  %mul.i241.i.i.i.i = mul nuw nsw i128 %shr.i.i.i25.i.i, 281475040739328
  %add.i230.i.i.i.i = add i128 %mul.i233.i.i.i.i, %mul.i237.i.i.i.i
  %add.i234.i.i.i.i = add i128 %add.i230.i.i.i.i, %mul.i229.i.i.i.i
  %add.i238.i.i.i.i = add i128 %add.i234.i.i.i.i, %mul.i241.i.i.i.i
  %add.i242.i.i.i.i = add i128 %add.i238.i.i.i.i, %shr.i226.i.i.i.i
  %conv.i243.i.i.i.i = trunc i128 %add.i242.i.i.i.i to i64
  %shr.i244.i.i.i.i = lshr i128 %add.i242.i.i.i.i, 52
  %and47.i.i.i.i = lshr i64 %conv.i243.i.i.i.i, 48
  %41 = and i64 %and47.i.i.i.i, 15
  %and54.i.i.i.i = and i64 %conv.i243.i.i.i.i, 281474976710655
  %mul.i247.i.i.i.i = mul nuw i128 %conv.i227.i.i.i.i, %conv.i227.i.i.i.i
  %conv.i248.i.i.i.i = zext i64 %25 to i128
  %mul.i250.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv.i248.i.i.i.i
  %mul64.i.i.i.i = shl i64 %26, 1
  %conv.i252.i.i.i.i = zext i64 %mul64.i.i.i.i to i128
  %mul.i254.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv.i252.i.i.i.i
  %add.i251.i.i.i.i = add i128 %mul.i250.i.i.i.i, %mul.i254.i.i.i.i
  %add.i255.i.i.i.i = add i128 %add.i251.i.i.i.i, %shr.i244.i.i.i.i
  %conv.i256.i.i.i.i = trunc i128 %add.i255.i.i.i.i to i64
  %shr.i257.i.i.i.i = lshr i128 %add.i255.i.i.i.i, 52
  %and69.i.i.i.i = shl i64 %conv.i256.i.i.i.i, 4
  %shl.i.i.i.i = and i64 %and69.i.i.i.i, 72057594037927920
  %or.i.i.i.i = or i64 %shl.i.i.i.i, %41
  %conv.i258.i.i.i.i = zext i64 %or.i.i.i.i to i128
  %mul.i259.i.i.i.i = mul nuw nsw i128 %conv.i258.i.i.i.i, 4294968273
  %add.i260.i.i.i.i = add i128 %mul.i259.i.i.i.i, %mul.i247.i.i.i.i
  %shr.i262.i.i.i.i = lshr i128 %add.i260.i.i.i.i, 52
  %mul.i265.i.i.i.i = mul nuw i128 %conv.i248.i.i.i.i, %conv.i.i.i.i.i
  %mul.i269.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv1.i216.i.i.i.i
  %mul.i273.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv1.i.i.i.i.i
  %add.i270.i.i.i.i = add i128 %mul.i269.i.i.i.i, %mul.i273.i.i.i.i
  %add.i274.i.i.i.i = add i128 %add.i270.i.i.i.i, %shr.i257.i.i.i.i
  %conv.i276.i.i.i.i = and i128 %add.i274.i.i.i.i, 4503599627370495
  %mul.i277.i.i.i.i = mul nuw nsw i128 %conv.i276.i.i.i.i, 68719492368
  %add.i266.i.i.i.i = add i128 %mul.i277.i.i.i.i, %mul.i265.i.i.i.i
  %add.i278.i.i.i.i = add i128 %add.i266.i.i.i.i, %shr.i262.i.i.i.i
  %shr.i279.i.i.i.i = lshr i128 %add.i274.i.i.i.i, 52
  %42 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i.i, i64 0
  %43 = insertelement <2 x i128> %42, i128 %add.i278.i.i.i.i, i64 1
  %44 = trunc <2 x i128> %43 to <2 x i64>
  %45 = and <2 x i64> %44, <i64 4503599627370495, i64 4503599627370495>
  %arrayidx108.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i.i, i64 0, i32 0, i64 1
  %46 = bitcast %struct.secp256k1_fe* %x2.i.i.i to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 16, !tbaa !13
  %shr.i281.i.i.i.i = lshr i128 %add.i278.i.i.i.i, 52
  %mul.i284.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i, %conv.i.i.i.i.i
  %mul.i288.i.i.i.i = mul nuw i128 %conv.i248.i.i.i.i, %conv.i248.i.i.i.i
  %mul.i292.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv1.i.i.i.i.i
  %add.i293.i.i.i.i = add i128 %shr.i279.i.i.i.i, %mul.i292.i.i.i.i
  %conv1.i295.i.i.i.i = and i128 %add.i293.i.i.i.i, 18446744073709551615
  %mul.i296.i.i.i.i = mul nuw nsw i128 %conv1.i295.i.i.i.i, 68719492368
  %add.i285.i.i.i.i = add i128 %mul.i284.i.i.i.i, %mul.i288.i.i.i.i
  %add.i289.i.i.i.i = add i128 %add.i285.i.i.i.i, %mul.i296.i.i.i.i
  %add.i297.i.i.i.i = add i128 %add.i289.i.i.i.i, %shr.i281.i.i.i.i
  %shr.i298.i.i.i.i = lshr i128 %add.i293.i.i.i.i, 64
  %arrayidx130.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i.i, i64 0, i32 0, i64 2
  %shr.i300.i.i.i.i = lshr i128 %add.i297.i.i.i.i, 52
  %mul.i303.i.i.i.i = mul nuw nsw i128 %shr.i298.i.i.i.i, 281475040739328
  %conv.i305.i.i.i.i = and i128 %add.i224.i.i.i.i, 4503599627370494
  %add.i304.i.i.i.i = add nuw nsw i128 %mul.i303.i.i.i.i, %conv.i305.i.i.i.i
  %add.i306.i.i.i.i = add nuw nsw i128 %add.i304.i.i.i.i, %shr.i300.i.i.i.i
  %47 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i.i, i64 0
  %48 = insertelement <2 x i128> %47, i128 %add.i306.i.i.i.i, i64 1
  %49 = trunc <2 x i128> %48 to <2 x i64>
  %50 = and <2 x i64> %49, <i64 4503599627370495, i64 4503599627370495>
  %arrayidx143.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i.i, i64 0, i32 0, i64 3
  %51 = bitcast i64* %arrayidx130.i.i.i.i to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 16, !tbaa !13
  %shr.i308.i.i.i.i = lshr i128 %add.i306.i.i.i.i, 52
  %conv.i309.i.i.i.i = trunc i128 %shr.i308.i.i.i.i to i64
  %add.i.i.i.i = add nuw nsw i64 %and54.i.i.i.i, %conv.i309.i.i.i.i
  %arrayidx151.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x2.i.i.i, i64 0, i32 0, i64 4
  store i64 %add.i.i.i.i, i64* %arrayidx151.i.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x2.i.i.i, %struct.secp256k1_fe* noundef nonnull %x2.i.i.i, %struct.secp256k1_fe* noundef nonnull %x3.i.i) #19
  %52 = load i64, i64* %arraydecay.i.i.i, align 16, !tbaa !13
  %53 = load i64, i64* %arrayidx108.i.i.i.i, align 8, !tbaa !13
  %54 = load i64, i64* %arrayidx130.i.i.i.i, align 16, !tbaa !13
  %55 = load i64, i64* %arrayidx143.i.i.i.i, align 8, !tbaa !13
  %56 = load i64, i64* %arrayidx151.i.i.i.i, align 16, !tbaa !13
  %mul.i.i.i.i.i = shl i64 %52, 1
  %conv.i.i.i.i.i.i = zext i64 %mul.i.i.i.i.i to i128
  %conv1.i.i.i.i.i.i = zext i64 %55 to i128
  %mul.i.i.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i.i, %conv.i.i.i.i.i.i
  %mul17.i.i.i.i.i = shl i64 %53, 1
  %conv.i215.i.i.i.i.i = zext i64 %mul17.i.i.i.i.i to i128
  %conv1.i216.i.i.i.i.i = zext i64 %54 to i128
  %mul.i217.i.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i.i, %conv.i215.i.i.i.i.i
  %add.i.i.i.i.i.i = add i128 %mul.i.i.i.i.i.i, %mul.i217.i.i.i.i.i
  %conv.i218.i.i.i.i.i = zext i64 %56 to i128
  %mul.i220.i.i.i.i.i = mul nuw i128 %conv.i218.i.i.i.i.i, %conv.i218.i.i.i.i.i
  %conv1.i222.i.i.i.i.i = and i128 %mul.i220.i.i.i.i.i, 18446744073709551615
  %mul.i223.i.i.i.i.i = mul nuw nsw i128 %conv1.i222.i.i.i.i.i, 68719492368
  %add.i224.i.i.i.i.i = add i128 %add.i.i.i.i.i.i, %mul.i223.i.i.i.i.i
  %shr.i.i.i.i.i.i = lshr i128 %mul.i220.i.i.i.i.i, 64
  %shr.i226.i.i.i.i.i = lshr i128 %add.i224.i.i.i.i.i, 52
  %mul37.i.i.i.i.i = shl i64 %56, 1
  %conv.i227.i.i.i.i.i = zext i64 %52 to i128
  %conv1.i228.i.i.i.i.i = zext i64 %mul37.i.i.i.i.i to i128
  %mul.i229.i.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i.i, %conv.i227.i.i.i.i.i
  %mul.i233.i.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i.i, %conv.i215.i.i.i.i.i
  %mul.i237.i.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i.i, %conv1.i216.i.i.i.i.i
  %mul.i241.i.i.i.i.i = mul nuw nsw i128 %shr.i.i.i.i.i.i, 281475040739328
  %add.i230.i.i.i.i.i = add i128 %mul.i233.i.i.i.i.i, %mul.i237.i.i.i.i.i
  %add.i234.i.i.i.i.i = add i128 %add.i230.i.i.i.i.i, %mul.i229.i.i.i.i.i
  %add.i238.i.i.i.i.i = add i128 %add.i234.i.i.i.i.i, %mul.i241.i.i.i.i.i
  %add.i242.i.i.i.i.i = add i128 %add.i238.i.i.i.i.i, %shr.i226.i.i.i.i.i
  %conv.i243.i.i.i.i.i = trunc i128 %add.i242.i.i.i.i.i to i64
  %shr.i244.i.i.i.i.i = lshr i128 %add.i242.i.i.i.i.i, 52
  %and47.i.i.i.i.i = lshr i64 %conv.i243.i.i.i.i.i, 48
  %57 = and i64 %and47.i.i.i.i.i, 15
  %and54.i.i.i.i.i = and i64 %conv.i243.i.i.i.i.i, 281474976710655
  %mul.i247.i.i.i.i.i = mul nuw i128 %conv.i227.i.i.i.i.i, %conv.i227.i.i.i.i.i
  %conv.i248.i.i.i.i.i = zext i64 %53 to i128
  %mul.i250.i.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i.i, %conv.i248.i.i.i.i.i
  %mul64.i.i.i.i.i = shl i64 %54, 1
  %conv.i252.i.i.i.i.i = zext i64 %mul64.i.i.i.i.i to i128
  %mul.i254.i.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i.i, %conv.i252.i.i.i.i.i
  %add.i251.i.i.i.i.i = add i128 %mul.i250.i.i.i.i.i, %mul.i254.i.i.i.i.i
  %add.i255.i.i.i.i.i = add i128 %add.i251.i.i.i.i.i, %shr.i244.i.i.i.i.i
  %conv.i256.i.i.i.i.i = trunc i128 %add.i255.i.i.i.i.i to i64
  %shr.i257.i.i.i.i.i = lshr i128 %add.i255.i.i.i.i.i, 52
  %and69.i.i.i.i.i = shl i64 %conv.i256.i.i.i.i.i, 4
  %shl.i.i.i.i.i = and i64 %and69.i.i.i.i.i, 72057594037927920
  %or.i.i.i.i.i = or i64 %shl.i.i.i.i.i, %57
  %conv.i258.i.i.i.i.i = zext i64 %or.i.i.i.i.i to i128
  %mul.i259.i.i.i.i.i = mul nuw nsw i128 %conv.i258.i.i.i.i.i, 4294968273
  %add.i260.i.i.i.i.i = add i128 %mul.i259.i.i.i.i.i, %mul.i247.i.i.i.i.i
  %shr.i262.i.i.i.i.i = lshr i128 %add.i260.i.i.i.i.i, 52
  %mul.i265.i.i.i.i.i = mul nuw i128 %conv.i248.i.i.i.i.i, %conv.i.i.i.i.i.i
  %mul.i269.i.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i.i, %conv1.i216.i.i.i.i.i
  %mul.i273.i.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i.i, %conv1.i.i.i.i.i.i
  %add.i270.i.i.i.i.i = add i128 %mul.i269.i.i.i.i.i, %mul.i273.i.i.i.i.i
  %add.i274.i.i.i.i.i = add i128 %add.i270.i.i.i.i.i, %shr.i257.i.i.i.i.i
  %conv.i276.i.i.i.i.i = and i128 %add.i274.i.i.i.i.i, 4503599627370495
  %mul.i277.i.i.i.i.i = mul nuw nsw i128 %conv.i276.i.i.i.i.i, 68719492368
  %add.i266.i.i.i.i.i = add i128 %mul.i277.i.i.i.i.i, %mul.i265.i.i.i.i.i
  %add.i278.i.i.i.i.i = add i128 %add.i266.i.i.i.i.i, %shr.i262.i.i.i.i.i
  %shr.i279.i.i.i.i.i = lshr i128 %add.i274.i.i.i.i.i, 52
  %58 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i.i.i, i64 0
  %59 = insertelement <2 x i128> %58, i128 %add.i278.i.i.i.i.i, i64 1
  %60 = trunc <2 x i128> %59 to <2 x i64>
  %61 = and <2 x i64> %60, <i64 4503599627370495, i64 4503599627370495>
  %62 = bitcast %struct.secp256k1_fe* %x3.i.i.i to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %62, align 16, !tbaa !13
  %shr.i281.i.i.i.i.i = lshr i128 %add.i278.i.i.i.i.i, 52
  %mul.i284.i.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i.i, %conv.i.i.i.i.i.i
  %mul.i288.i.i.i.i.i = mul nuw i128 %conv.i248.i.i.i.i.i, %conv.i248.i.i.i.i.i
  %mul.i292.i.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i.i, %conv1.i.i.i.i.i.i
  %add.i293.i.i.i.i.i = add i128 %shr.i279.i.i.i.i.i, %mul.i292.i.i.i.i.i
  %conv1.i295.i.i.i.i.i = and i128 %add.i293.i.i.i.i.i, 18446744073709551615
  %mul.i296.i.i.i.i.i = mul nuw nsw i128 %conv1.i295.i.i.i.i.i, 68719492368
  %add.i285.i.i.i.i.i = add i128 %mul.i284.i.i.i.i.i, %mul.i288.i.i.i.i.i
  %add.i289.i.i.i.i.i = add i128 %add.i285.i.i.i.i.i, %mul.i296.i.i.i.i.i
  %add.i297.i.i.i.i.i = add i128 %add.i289.i.i.i.i.i, %shr.i281.i.i.i.i.i
  %shr.i298.i.i.i.i.i = lshr i128 %add.i293.i.i.i.i.i, 64
  %arrayidx130.i.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i.i, i64 0, i32 0, i64 2
  %shr.i300.i.i.i.i.i = lshr i128 %add.i297.i.i.i.i.i, 52
  %mul.i303.i.i.i.i.i = mul nuw nsw i128 %shr.i298.i.i.i.i.i, 281475040739328
  %conv.i305.i.i.i.i.i = and i128 %add.i224.i.i.i.i.i, 4503599627370494
  %add.i304.i.i.i.i.i = add nuw nsw i128 %mul.i303.i.i.i.i.i, %conv.i305.i.i.i.i.i
  %add.i306.i.i.i.i.i = add nuw nsw i128 %add.i304.i.i.i.i.i, %shr.i300.i.i.i.i.i
  %63 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i.i.i, i64 0
  %64 = insertelement <2 x i128> %63, i128 %add.i306.i.i.i.i.i, i64 1
  %65 = trunc <2 x i128> %64 to <2 x i64>
  %66 = and <2 x i64> %65, <i64 4503599627370495, i64 4503599627370495>
  %67 = bitcast i64* %arrayidx130.i.i.i.i.i to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 16, !tbaa !13
  %shr.i308.i.i.i.i.i = lshr i128 %add.i306.i.i.i.i.i, 52
  %conv.i309.i.i.i.i.i = trunc i128 %shr.i308.i.i.i.i.i to i64
  %add.i.i.i.i.i = add nuw nsw i64 %and54.i.i.i.i.i, %conv.i309.i.i.i.i.i
  %arrayidx151.i.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i.i.i, i64 0, i32 0, i64 4
  store i64 %add.i.i.i.i.i, i64* %arrayidx151.i.i.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x3.i.i.i, %struct.secp256k1_fe* noundef nonnull %x3.i.i.i, %struct.secp256k1_fe* noundef nonnull %x3.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %31, i8* noundef nonnull align 16 dereferenceable(40) %30, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i101.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x6.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i103.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x6.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i104.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x6.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i105.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x6.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i106.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x6.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i101.promoted.i.i.i = load i64, i64* %arraydecay.i101.i.i.i, align 16, !tbaa !13
  %arrayidx1.i.i103.promoted.i.i.i = load i64, i64* %arrayidx1.i.i103.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i104.promoted.i.i.i = load i64, i64* %arrayidx2.i.i104.i.i.i, align 16, !tbaa !13
  %arrayidx3.i.i105.promoted.i.i.i = load i64, i64* %arrayidx3.i.i105.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i106.promoted.i.i.i = load i64, i64* %arrayidx4.i.i106.i.i.i, align 16, !tbaa !13
  %mul.i.i107.i.i.i = shl i64 %arraydecay.i101.promoted.i.i.i, 1
  %conv.i.i.i108.i.i.i = zext i64 %mul.i.i107.i.i.i to i128
  %conv1.i.i.i109.i.i.i = zext i64 %arrayidx3.i.i105.promoted.i.i.i to i128
  %mul.i.i.i110.i.i.i = mul nuw i128 %conv1.i.i.i109.i.i.i, %conv.i.i.i108.i.i.i
  %mul17.i.i111.i.i.i = shl i64 %arrayidx1.i.i103.promoted.i.i.i, 1
  %conv.i215.i.i112.i.i.i = zext i64 %mul17.i.i111.i.i.i to i128
  %conv1.i216.i.i113.i.i.i = zext i64 %arrayidx2.i.i104.promoted.i.i.i to i128
  %mul.i217.i.i114.i.i.i = mul nuw i128 %conv1.i216.i.i113.i.i.i, %conv.i215.i.i112.i.i.i
  %add.i.i.i115.i.i.i = add i128 %mul.i.i.i110.i.i.i, %mul.i217.i.i114.i.i.i
  %conv.i218.i.i116.i.i.i = zext i64 %arrayidx4.i.i106.promoted.i.i.i to i128
  %mul.i220.i.i117.i.i.i = mul nuw i128 %conv.i218.i.i116.i.i.i, %conv.i218.i.i116.i.i.i
  %conv1.i222.i.i118.i.i.i = and i128 %mul.i220.i.i117.i.i.i, 18446744073709551615
  %mul.i223.i.i119.i.i.i = mul nuw nsw i128 %conv1.i222.i.i118.i.i.i, 68719492368
  %add.i224.i.i120.i.i.i = add i128 %add.i.i.i115.i.i.i, %mul.i223.i.i119.i.i.i
  %shr.i.i.i121.i.i.i = lshr i128 %mul.i220.i.i117.i.i.i, 64
  %shr.i226.i.i122.i.i.i = lshr i128 %add.i224.i.i120.i.i.i, 52
  %mul37.i.i123.i.i.i = shl i64 %arrayidx4.i.i106.promoted.i.i.i, 1
  %conv.i227.i.i124.i.i.i = zext i64 %arraydecay.i101.promoted.i.i.i to i128
  %conv1.i228.i.i125.i.i.i = zext i64 %mul37.i.i123.i.i.i to i128
  %mul.i229.i.i126.i.i.i = mul nuw i128 %conv1.i228.i.i125.i.i.i, %conv.i227.i.i124.i.i.i
  %mul.i233.i.i127.i.i.i = mul nuw i128 %conv1.i.i.i109.i.i.i, %conv.i215.i.i112.i.i.i
  %mul.i237.i.i128.i.i.i = mul nuw i128 %conv1.i216.i.i113.i.i.i, %conv1.i216.i.i113.i.i.i
  %mul.i241.i.i129.i.i.i = mul nuw nsw i128 %shr.i.i.i121.i.i.i, 281475040739328
  %add.i230.i.i130.i.i.i = add i128 %mul.i233.i.i127.i.i.i, %mul.i237.i.i128.i.i.i
  %add.i234.i.i131.i.i.i = add i128 %add.i230.i.i130.i.i.i, %mul.i229.i.i126.i.i.i
  %add.i238.i.i132.i.i.i = add i128 %add.i234.i.i131.i.i.i, %mul.i241.i.i129.i.i.i
  %add.i242.i.i133.i.i.i = add i128 %add.i238.i.i132.i.i.i, %shr.i226.i.i122.i.i.i
  %conv.i243.i.i134.i.i.i = trunc i128 %add.i242.i.i133.i.i.i to i64
  %shr.i244.i.i135.i.i.i = lshr i128 %add.i242.i.i133.i.i.i, 52
  %and47.i.i136.i.i.i = lshr i64 %conv.i243.i.i134.i.i.i, 48
  %68 = and i64 %and47.i.i136.i.i.i, 15
  %and54.i.i137.i.i.i = and i64 %conv.i243.i.i134.i.i.i, 281474976710655
  %mul.i247.i.i138.i.i.i = mul nuw i128 %conv.i227.i.i124.i.i.i, %conv.i227.i.i124.i.i.i
  %conv.i248.i.i139.i.i.i = zext i64 %arrayidx1.i.i103.promoted.i.i.i to i128
  %mul.i250.i.i140.i.i.i = mul nuw i128 %conv1.i228.i.i125.i.i.i, %conv.i248.i.i139.i.i.i
  %mul64.i.i141.i.i.i = shl i64 %arrayidx2.i.i104.promoted.i.i.i, 1
  %conv.i252.i.i142.i.i.i = zext i64 %mul64.i.i141.i.i.i to i128
  %mul.i254.i.i143.i.i.i = mul nuw i128 %conv1.i.i.i109.i.i.i, %conv.i252.i.i142.i.i.i
  %add.i251.i.i144.i.i.i = add i128 %mul.i250.i.i140.i.i.i, %mul.i254.i.i143.i.i.i
  %add.i255.i.i145.i.i.i = add i128 %add.i251.i.i144.i.i.i, %shr.i244.i.i135.i.i.i
  %conv.i256.i.i146.i.i.i = trunc i128 %add.i255.i.i145.i.i.i to i64
  %shr.i257.i.i147.i.i.i = lshr i128 %add.i255.i.i145.i.i.i, 52
  %and69.i.i148.i.i.i = shl i64 %conv.i256.i.i146.i.i.i, 4
  %shl.i.i149.i.i.i = and i64 %and69.i.i148.i.i.i, 72057594037927920
  %or.i.i150.i.i.i = or i64 %shl.i.i149.i.i.i, %68
  %conv.i258.i.i151.i.i.i = zext i64 %or.i.i150.i.i.i to i128
  %mul.i259.i.i152.i.i.i = mul nuw nsw i128 %conv.i258.i.i151.i.i.i, 4294968273
  %add.i260.i.i153.i.i.i = add i128 %mul.i259.i.i152.i.i.i, %mul.i247.i.i138.i.i.i
  %conv.i261.i.i154.i.i.i = trunc i128 %add.i260.i.i153.i.i.i to i64
  %and83.i.i155.i.i.i = and i64 %conv.i261.i.i154.i.i.i, 4503599627370495
  %shr.i262.i.i156.i.i.i = lshr i128 %add.i260.i.i153.i.i.i, 52
  %mul.i265.i.i157.i.i.i = mul nuw i128 %conv.i248.i.i139.i.i.i, %conv.i.i.i108.i.i.i
  %mul.i269.i.i158.i.i.i = mul nuw i128 %conv1.i228.i.i125.i.i.i, %conv1.i216.i.i113.i.i.i
  %mul.i273.i.i159.i.i.i = mul nuw i128 %conv1.i.i.i109.i.i.i, %conv1.i.i.i109.i.i.i
  %add.i270.i.i160.i.i.i = add i128 %mul.i269.i.i158.i.i.i, %mul.i273.i.i159.i.i.i
  %add.i274.i.i161.i.i.i = add i128 %add.i270.i.i160.i.i.i, %shr.i257.i.i147.i.i.i
  %conv.i276.i.i162.i.i.i = and i128 %add.i274.i.i161.i.i.i, 4503599627370495
  %mul.i277.i.i163.i.i.i = mul nuw nsw i128 %conv.i276.i.i162.i.i.i, 68719492368
  %add.i266.i.i164.i.i.i = add i128 %mul.i277.i.i163.i.i.i, %mul.i265.i.i157.i.i.i
  %add.i278.i.i165.i.i.i = add i128 %add.i266.i.i164.i.i.i, %shr.i262.i.i156.i.i.i
  %shr.i279.i.i166.i.i.i = lshr i128 %add.i274.i.i161.i.i.i, 52
  %conv.i280.i.i167.i.i.i = trunc i128 %add.i278.i.i165.i.i.i to i64
  %and107.i.i168.i.i.i = and i64 %conv.i280.i.i167.i.i.i, 4503599627370495
  %shr.i281.i.i170.i.i.i = lshr i128 %add.i278.i.i165.i.i.i, 52
  %mul.i284.i.i171.i.i.i = mul nuw i128 %conv1.i216.i.i113.i.i.i, %conv.i.i.i108.i.i.i
  %mul.i288.i.i172.i.i.i = mul nuw i128 %conv.i248.i.i139.i.i.i, %conv.i248.i.i139.i.i.i
  %mul.i292.i.i173.i.i.i = mul nuw i128 %conv1.i228.i.i125.i.i.i, %conv1.i.i.i109.i.i.i
  %add.i293.i.i174.i.i.i = add i128 %shr.i279.i.i166.i.i.i, %mul.i292.i.i173.i.i.i
  %conv1.i295.i.i175.i.i.i = and i128 %add.i293.i.i174.i.i.i, 18446744073709551615
  %mul.i296.i.i176.i.i.i = mul nuw nsw i128 %conv1.i295.i.i175.i.i.i, 68719492368
  %add.i285.i.i177.i.i.i = add i128 %mul.i284.i.i171.i.i.i, %mul.i288.i.i172.i.i.i
  %add.i289.i.i178.i.i.i = add i128 %add.i285.i.i177.i.i.i, %mul.i296.i.i176.i.i.i
  %add.i297.i.i179.i.i.i = add i128 %add.i289.i.i178.i.i.i, %shr.i281.i.i170.i.i.i
  %shr.i298.i.i180.i.i.i = lshr i128 %add.i293.i.i174.i.i.i, 64
  %conv.i299.i.i181.i.i.i = trunc i128 %add.i297.i.i179.i.i.i to i64
  %and129.i.i182.i.i.i = and i64 %conv.i299.i.i181.i.i.i, 4503599627370495
  %shr.i300.i.i184.i.i.i = lshr i128 %add.i297.i.i179.i.i.i, 52
  %mul.i303.i.i185.i.i.i = mul nuw nsw i128 %shr.i298.i.i180.i.i.i, 281475040739328
  %conv.i305.i.i186.i.i.i = and i128 %add.i224.i.i120.i.i.i, 4503599627370494
  %add.i304.i.i187.i.i.i = add nuw nsw i128 %mul.i303.i.i185.i.i.i, %conv.i305.i.i186.i.i.i
  %add.i306.i.i188.i.i.i = add nuw nsw i128 %add.i304.i.i187.i.i.i, %shr.i300.i.i184.i.i.i
  %shr.i308.i.i192.i.i.i = lshr i128 %add.i306.i.i188.i.i.i, 52
  %conv.i309.i.i193.i.i.i = trunc i128 %shr.i308.i.i192.i.i.i to i64
  %add.i.i194.i.i.i = add nuw nsw i64 %and54.i.i137.i.i.i, %conv.i309.i.i193.i.i.i
  %mul.i.i107.1.i.i.i = shl nuw nsw i64 %and83.i.i155.i.i.i, 1
  %conv.i.i.i108.1.i.i.i = zext i64 %mul.i.i107.1.i.i.i to i128
  %conv1.i.i.i109.1.i.i.i = and i128 %add.i306.i.i188.i.i.i, 4503599627370495
  %mul.i.i.i110.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.1.i.i.i, %conv.i.i.i108.1.i.i.i
  %mul17.i.i111.1.i.i.i = shl nuw nsw i64 %and107.i.i168.i.i.i, 1
  %conv.i215.i.i112.1.i.i.i = zext i64 %mul17.i.i111.1.i.i.i to i128
  %conv1.i216.i.i113.1.i.i.i = zext i64 %and129.i.i182.i.i.i to i128
  %mul.i217.i.i114.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i113.1.i.i.i, %conv.i215.i.i112.1.i.i.i
  %add.i.i.i115.1.i.i.i = add nuw nsw i128 %mul.i.i.i110.1.i.i.i, %mul.i217.i.i114.1.i.i.i
  %conv.i218.i.i116.1.i.i.i = zext i64 %add.i.i194.i.i.i to i128
  %mul.i220.i.i117.1.i.i.i = mul nuw nsw i128 %conv.i218.i.i116.1.i.i.i, %conv.i218.i.i116.1.i.i.i
  %conv1.i222.i.i118.1.i.i.i = and i128 %mul.i220.i.i117.1.i.i.i, 18446744073709551615
  %mul.i223.i.i119.1.i.i.i = mul nuw nsw i128 %conv1.i222.i.i118.1.i.i.i, 68719492368
  %add.i224.i.i120.1.i.i.i = add nuw nsw i128 %add.i.i.i115.1.i.i.i, %mul.i223.i.i119.1.i.i.i
  %shr.i.i.i121.1.i.i.i = lshr i128 %mul.i220.i.i117.1.i.i.i, 64
  %shr.i226.i.i122.1.i.i.i = lshr i128 %add.i224.i.i120.1.i.i.i, 52
  %mul37.i.i123.1.i.i.i = shl nuw nsw i64 %add.i.i194.i.i.i, 1
  %conv.i227.i.i124.1.i.i.i = zext i64 %and83.i.i155.i.i.i to i128
  %conv1.i228.i.i125.1.i.i.i = zext i64 %mul37.i.i123.1.i.i.i to i128
  %mul.i229.i.i126.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i125.1.i.i.i, %conv.i227.i.i124.1.i.i.i
  %mul.i233.i.i127.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.1.i.i.i, %conv.i215.i.i112.1.i.i.i
  %mul.i237.i.i128.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i113.1.i.i.i, %conv1.i216.i.i113.1.i.i.i
  %mul.i241.i.i129.1.i.i.i = mul nuw nsw i128 %shr.i.i.i121.1.i.i.i, 281475040739328
  %add.i230.i.i130.1.i.i.i = add nuw nsw i128 %mul.i233.i.i127.1.i.i.i, %mul.i237.i.i128.1.i.i.i
  %add.i234.i.i131.1.i.i.i = add nuw nsw i128 %add.i230.i.i130.1.i.i.i, %mul.i229.i.i126.1.i.i.i
  %add.i238.i.i132.1.i.i.i = add nuw nsw i128 %add.i234.i.i131.1.i.i.i, %mul.i241.i.i129.1.i.i.i
  %add.i242.i.i133.1.i.i.i = add nuw nsw i128 %add.i238.i.i132.1.i.i.i, %shr.i226.i.i122.1.i.i.i
  %conv.i243.i.i134.1.i.i.i = trunc i128 %add.i242.i.i133.1.i.i.i to i64
  %shr.i244.i.i135.1.i.i.i = lshr i128 %add.i242.i.i133.1.i.i.i, 52
  %and47.i.i136.1.i.i.i = lshr i64 %conv.i243.i.i134.1.i.i.i, 48
  %69 = and i64 %and47.i.i136.1.i.i.i, 15
  %and54.i.i137.1.i.i.i = and i64 %conv.i243.i.i134.1.i.i.i, 281474976710655
  %mul.i247.i.i138.1.i.i.i = mul nuw nsw i128 %conv.i227.i.i124.1.i.i.i, %conv.i227.i.i124.1.i.i.i
  %conv.i248.i.i139.1.i.i.i = zext i64 %and107.i.i168.i.i.i to i128
  %mul.i250.i.i140.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i125.1.i.i.i, %conv.i248.i.i139.1.i.i.i
  %mul64.i.i141.1.i.i.i = shl nuw nsw i64 %and129.i.i182.i.i.i, 1
  %conv.i252.i.i142.1.i.i.i = zext i64 %mul64.i.i141.1.i.i.i to i128
  %mul.i254.i.i143.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.1.i.i.i, %conv.i252.i.i142.1.i.i.i
  %add.i251.i.i144.1.i.i.i = add nuw nsw i128 %mul.i250.i.i140.1.i.i.i, %mul.i254.i.i143.1.i.i.i
  %add.i255.i.i145.1.i.i.i = add nuw nsw i128 %add.i251.i.i144.1.i.i.i, %shr.i244.i.i135.1.i.i.i
  %conv.i256.i.i146.1.i.i.i = trunc i128 %add.i255.i.i145.1.i.i.i to i64
  %shr.i257.i.i147.1.i.i.i = lshr i128 %add.i255.i.i145.1.i.i.i, 52
  %and69.i.i148.1.i.i.i = shl i64 %conv.i256.i.i146.1.i.i.i, 4
  %shl.i.i149.1.i.i.i = and i64 %and69.i.i148.1.i.i.i, 72057594037927920
  %or.i.i150.1.i.i.i = or i64 %shl.i.i149.1.i.i.i, %69
  %conv.i258.i.i151.1.i.i.i = zext i64 %or.i.i150.1.i.i.i to i128
  %mul.i259.i.i152.1.i.i.i = mul nuw nsw i128 %conv.i258.i.i151.1.i.i.i, 4294968273
  %add.i260.i.i153.1.i.i.i = add nuw nsw i128 %mul.i259.i.i152.1.i.i.i, %mul.i247.i.i138.1.i.i.i
  %conv.i261.i.i154.1.i.i.i = trunc i128 %add.i260.i.i153.1.i.i.i to i64
  %and83.i.i155.1.i.i.i = and i64 %conv.i261.i.i154.1.i.i.i, 4503599627370495
  %shr.i262.i.i156.1.i.i.i = lshr i128 %add.i260.i.i153.1.i.i.i, 52
  %mul.i265.i.i157.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i139.1.i.i.i, %conv.i.i.i108.1.i.i.i
  %mul.i269.i.i158.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i125.1.i.i.i, %conv1.i216.i.i113.1.i.i.i
  %mul.i273.i.i159.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.1.i.i.i, %conv1.i.i.i109.1.i.i.i
  %add.i270.i.i160.1.i.i.i = add nuw nsw i128 %mul.i269.i.i158.1.i.i.i, %mul.i273.i.i159.1.i.i.i
  %add.i274.i.i161.1.i.i.i = add nuw nsw i128 %add.i270.i.i160.1.i.i.i, %shr.i257.i.i147.1.i.i.i
  %conv.i276.i.i162.1.i.i.i = and i128 %add.i274.i.i161.1.i.i.i, 4503599627370495
  %mul.i277.i.i163.1.i.i.i = mul nuw nsw i128 %conv.i276.i.i162.1.i.i.i, 68719492368
  %add.i266.i.i164.1.i.i.i = add nuw nsw i128 %mul.i277.i.i163.1.i.i.i, %mul.i265.i.i157.1.i.i.i
  %add.i278.i.i165.1.i.i.i = add nuw nsw i128 %add.i266.i.i164.1.i.i.i, %shr.i262.i.i156.1.i.i.i
  %shr.i279.i.i166.1.i.i.i = lshr i128 %add.i274.i.i161.1.i.i.i, 52
  %conv.i280.i.i167.1.i.i.i = trunc i128 %add.i278.i.i165.1.i.i.i to i64
  %and107.i.i168.1.i.i.i = and i64 %conv.i280.i.i167.1.i.i.i, 4503599627370495
  %shr.i281.i.i170.1.i.i.i = lshr i128 %add.i278.i.i165.1.i.i.i, 52
  %mul.i284.i.i171.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i113.1.i.i.i, %conv.i.i.i108.1.i.i.i
  %mul.i288.i.i172.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i139.1.i.i.i, %conv.i248.i.i139.1.i.i.i
  %mul.i292.i.i173.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.1.i.i.i, %conv1.i228.i.i125.1.i.i.i
  %add.i293.i.i174.1.i.i.i = add nuw nsw i128 %shr.i279.i.i166.1.i.i.i, %mul.i292.i.i173.1.i.i.i
  %conv1.i295.i.i175.1.i.i.i = and i128 %add.i293.i.i174.1.i.i.i, 18446744073709551615
  %mul.i296.i.i176.1.i.i.i = mul nuw nsw i128 %conv1.i295.i.i175.1.i.i.i, 68719492368
  %add.i285.i.i177.1.i.i.i = add nuw nsw i128 %mul.i284.i.i171.1.i.i.i, %mul.i288.i.i172.1.i.i.i
  %add.i289.i.i178.1.i.i.i = add nuw nsw i128 %add.i285.i.i177.1.i.i.i, %mul.i296.i.i176.1.i.i.i
  %add.i297.i.i179.1.i.i.i = add nuw nsw i128 %add.i289.i.i178.1.i.i.i, %shr.i281.i.i170.1.i.i.i
  %shr.i298.i.i180.1.i.i.i = lshr i128 %add.i293.i.i174.1.i.i.i, 64
  %conv.i299.i.i181.1.i.i.i = trunc i128 %add.i297.i.i179.1.i.i.i to i64
  %and129.i.i182.1.i.i.i = and i64 %conv.i299.i.i181.1.i.i.i, 4503599627370495
  %shr.i300.i.i184.1.i.i.i = lshr i128 %add.i297.i.i179.1.i.i.i, 52
  %mul.i303.i.i185.1.i.i.i = mul nuw nsw i128 %shr.i298.i.i180.1.i.i.i, 281475040739328
  %conv.i305.i.i186.1.i.i.i = and i128 %add.i224.i.i120.1.i.i.i, 4503599627370494
  %add.i304.i.i187.1.i.i.i = add nuw nsw i128 %mul.i303.i.i185.1.i.i.i, %conv.i305.i.i186.1.i.i.i
  %add.i306.i.i188.1.i.i.i = add nuw nsw i128 %add.i304.i.i187.1.i.i.i, %shr.i300.i.i184.1.i.i.i
  %shr.i308.i.i192.1.i.i.i = lshr i128 %add.i306.i.i188.1.i.i.i, 52
  %conv.i309.i.i193.1.i.i.i = trunc i128 %shr.i308.i.i192.1.i.i.i to i64
  %add.i.i194.1.i.i.i = add nuw nsw i64 %and54.i.i137.1.i.i.i, %conv.i309.i.i193.1.i.i.i
  %mul.i.i107.2.i.i.i = shl nuw nsw i64 %and83.i.i155.1.i.i.i, 1
  %conv.i.i.i108.2.i.i.i = zext i64 %mul.i.i107.2.i.i.i to i128
  %conv1.i.i.i109.2.i.i.i = and i128 %add.i306.i.i188.1.i.i.i, 4503599627370495
  %mul.i.i.i110.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.2.i.i.i, %conv.i.i.i108.2.i.i.i
  %mul17.i.i111.2.i.i.i = shl nuw nsw i64 %and107.i.i168.1.i.i.i, 1
  %conv.i215.i.i112.2.i.i.i = zext i64 %mul17.i.i111.2.i.i.i to i128
  %conv1.i216.i.i113.2.i.i.i = zext i64 %and129.i.i182.1.i.i.i to i128
  %mul.i217.i.i114.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i113.2.i.i.i, %conv.i215.i.i112.2.i.i.i
  %add.i.i.i115.2.i.i.i = add nuw nsw i128 %mul.i.i.i110.2.i.i.i, %mul.i217.i.i114.2.i.i.i
  %conv.i218.i.i116.2.i.i.i = zext i64 %add.i.i194.1.i.i.i to i128
  %mul.i220.i.i117.2.i.i.i = mul nuw nsw i128 %conv.i218.i.i116.2.i.i.i, %conv.i218.i.i116.2.i.i.i
  %conv1.i222.i.i118.2.i.i.i = and i128 %mul.i220.i.i117.2.i.i.i, 18446744073709551615
  %mul.i223.i.i119.2.i.i.i = mul nuw nsw i128 %conv1.i222.i.i118.2.i.i.i, 68719492368
  %add.i224.i.i120.2.i.i.i = add nuw nsw i128 %add.i.i.i115.2.i.i.i, %mul.i223.i.i119.2.i.i.i
  %shr.i.i.i121.2.i.i.i = lshr i128 %mul.i220.i.i117.2.i.i.i, 64
  %shr.i226.i.i122.2.i.i.i = lshr i128 %add.i224.i.i120.2.i.i.i, 52
  %mul37.i.i123.2.i.i.i = shl nuw nsw i64 %add.i.i194.1.i.i.i, 1
  %conv.i227.i.i124.2.i.i.i = zext i64 %and83.i.i155.1.i.i.i to i128
  %conv1.i228.i.i125.2.i.i.i = zext i64 %mul37.i.i123.2.i.i.i to i128
  %mul.i229.i.i126.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i125.2.i.i.i, %conv.i227.i.i124.2.i.i.i
  %mul.i233.i.i127.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.2.i.i.i, %conv.i215.i.i112.2.i.i.i
  %mul.i237.i.i128.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i113.2.i.i.i, %conv1.i216.i.i113.2.i.i.i
  %mul.i241.i.i129.2.i.i.i = mul nuw nsw i128 %shr.i.i.i121.2.i.i.i, 281475040739328
  %add.i230.i.i130.2.i.i.i = add nuw nsw i128 %mul.i233.i.i127.2.i.i.i, %mul.i237.i.i128.2.i.i.i
  %add.i234.i.i131.2.i.i.i = add nuw nsw i128 %add.i230.i.i130.2.i.i.i, %mul.i229.i.i126.2.i.i.i
  %add.i238.i.i132.2.i.i.i = add nuw nsw i128 %add.i234.i.i131.2.i.i.i, %mul.i241.i.i129.2.i.i.i
  %add.i242.i.i133.2.i.i.i = add nuw nsw i128 %add.i238.i.i132.2.i.i.i, %shr.i226.i.i122.2.i.i.i
  %conv.i243.i.i134.2.i.i.i = trunc i128 %add.i242.i.i133.2.i.i.i to i64
  %shr.i244.i.i135.2.i.i.i = lshr i128 %add.i242.i.i133.2.i.i.i, 52
  %and47.i.i136.2.i.i.i = lshr i64 %conv.i243.i.i134.2.i.i.i, 48
  %70 = and i64 %and47.i.i136.2.i.i.i, 15
  %and54.i.i137.2.i.i.i = and i64 %conv.i243.i.i134.2.i.i.i, 281474976710655
  %mul.i247.i.i138.2.i.i.i = mul nuw nsw i128 %conv.i227.i.i124.2.i.i.i, %conv.i227.i.i124.2.i.i.i
  %conv.i248.i.i139.2.i.i.i = zext i64 %and107.i.i168.1.i.i.i to i128
  %mul.i250.i.i140.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i125.2.i.i.i, %conv.i248.i.i139.2.i.i.i
  %mul64.i.i141.2.i.i.i = shl nuw nsw i64 %and129.i.i182.1.i.i.i, 1
  %conv.i252.i.i142.2.i.i.i = zext i64 %mul64.i.i141.2.i.i.i to i128
  %mul.i254.i.i143.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.2.i.i.i, %conv.i252.i.i142.2.i.i.i
  %add.i251.i.i144.2.i.i.i = add nuw nsw i128 %mul.i250.i.i140.2.i.i.i, %mul.i254.i.i143.2.i.i.i
  %add.i255.i.i145.2.i.i.i = add nuw nsw i128 %add.i251.i.i144.2.i.i.i, %shr.i244.i.i135.2.i.i.i
  %conv.i256.i.i146.2.i.i.i = trunc i128 %add.i255.i.i145.2.i.i.i to i64
  %shr.i257.i.i147.2.i.i.i = lshr i128 %add.i255.i.i145.2.i.i.i, 52
  %and69.i.i148.2.i.i.i = shl i64 %conv.i256.i.i146.2.i.i.i, 4
  %shl.i.i149.2.i.i.i = and i64 %and69.i.i148.2.i.i.i, 72057594037927920
  %or.i.i150.2.i.i.i = or i64 %shl.i.i149.2.i.i.i, %70
  %conv.i258.i.i151.2.i.i.i = zext i64 %or.i.i150.2.i.i.i to i128
  %mul.i259.i.i152.2.i.i.i = mul nuw nsw i128 %conv.i258.i.i151.2.i.i.i, 4294968273
  %add.i260.i.i153.2.i.i.i = add nuw nsw i128 %mul.i259.i.i152.2.i.i.i, %mul.i247.i.i138.2.i.i.i
  %shr.i262.i.i156.2.i.i.i = lshr i128 %add.i260.i.i153.2.i.i.i, 52
  %mul.i265.i.i157.2.i.i.i = mul nuw nsw i128 %conv.i248.i.i139.2.i.i.i, %conv.i.i.i108.2.i.i.i
  %mul.i269.i.i158.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i125.2.i.i.i, %conv1.i216.i.i113.2.i.i.i
  %mul.i273.i.i159.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.2.i.i.i, %conv1.i.i.i109.2.i.i.i
  %add.i270.i.i160.2.i.i.i = add nuw nsw i128 %mul.i269.i.i158.2.i.i.i, %mul.i273.i.i159.2.i.i.i
  %add.i274.i.i161.2.i.i.i = add nuw nsw i128 %add.i270.i.i160.2.i.i.i, %shr.i257.i.i147.2.i.i.i
  %conv.i276.i.i162.2.i.i.i = and i128 %add.i274.i.i161.2.i.i.i, 4503599627370495
  %mul.i277.i.i163.2.i.i.i = mul nuw nsw i128 %conv.i276.i.i162.2.i.i.i, 68719492368
  %add.i266.i.i164.2.i.i.i = add nuw nsw i128 %mul.i277.i.i163.2.i.i.i, %mul.i265.i.i157.2.i.i.i
  %add.i278.i.i165.2.i.i.i = add nuw nsw i128 %add.i266.i.i164.2.i.i.i, %shr.i262.i.i156.2.i.i.i
  %shr.i279.i.i166.2.i.i.i = lshr i128 %add.i274.i.i161.2.i.i.i, 52
  %71 = insertelement <2 x i128> poison, i128 %add.i260.i.i153.2.i.i.i, i64 0
  %72 = insertelement <2 x i128> %71, i128 %add.i278.i.i165.2.i.i.i, i64 1
  %73 = trunc <2 x i128> %72 to <2 x i64>
  %74 = and <2 x i64> %73, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i170.2.i.i.i = lshr i128 %add.i278.i.i165.2.i.i.i, 52
  %mul.i284.i.i171.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i113.2.i.i.i, %conv.i.i.i108.2.i.i.i
  %mul.i288.i.i172.2.i.i.i = mul nuw nsw i128 %conv.i248.i.i139.2.i.i.i, %conv.i248.i.i139.2.i.i.i
  %mul.i292.i.i173.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i109.2.i.i.i, %conv1.i228.i.i125.2.i.i.i
  %add.i293.i.i174.2.i.i.i = add nuw nsw i128 %shr.i279.i.i166.2.i.i.i, %mul.i292.i.i173.2.i.i.i
  %conv1.i295.i.i175.2.i.i.i = and i128 %add.i293.i.i174.2.i.i.i, 18446744073709551615
  %mul.i296.i.i176.2.i.i.i = mul nuw nsw i128 %conv1.i295.i.i175.2.i.i.i, 68719492368
  %add.i285.i.i177.2.i.i.i = add nuw nsw i128 %mul.i284.i.i171.2.i.i.i, %mul.i288.i.i172.2.i.i.i
  %add.i289.i.i178.2.i.i.i = add nuw nsw i128 %add.i285.i.i177.2.i.i.i, %mul.i296.i.i176.2.i.i.i
  %add.i297.i.i179.2.i.i.i = add nuw nsw i128 %add.i289.i.i178.2.i.i.i, %shr.i281.i.i170.2.i.i.i
  %shr.i298.i.i180.2.i.i.i = lshr i128 %add.i293.i.i174.2.i.i.i, 64
  %shr.i300.i.i184.2.i.i.i = lshr i128 %add.i297.i.i179.2.i.i.i, 52
  %mul.i303.i.i185.2.i.i.i = mul nuw nsw i128 %shr.i298.i.i180.2.i.i.i, 281475040739328
  %conv.i305.i.i186.2.i.i.i = and i128 %add.i224.i.i120.2.i.i.i, 4503599627370494
  %add.i304.i.i187.2.i.i.i = add nuw nsw i128 %mul.i303.i.i185.2.i.i.i, %conv.i305.i.i186.2.i.i.i
  %add.i306.i.i188.2.i.i.i = add nuw nsw i128 %add.i304.i.i187.2.i.i.i, %shr.i300.i.i184.2.i.i.i
  %75 = insertelement <2 x i128> poison, i128 %add.i297.i.i179.2.i.i.i, i64 0
  %76 = insertelement <2 x i128> %75, i128 %add.i306.i.i188.2.i.i.i, i64 1
  %77 = trunc <2 x i128> %76 to <2 x i64>
  %78 = and <2 x i64> %77, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i192.2.i.i.i = lshr i128 %add.i306.i.i188.2.i.i.i, 52
  %conv.i309.i.i193.2.i.i.i = trunc i128 %shr.i308.i.i192.2.i.i.i to i64
  %add.i.i194.2.i.i.i = add nuw nsw i64 %and54.i.i137.2.i.i.i, %conv.i309.i.i193.2.i.i.i
  %79 = bitcast %struct.secp256k1_fe* %x6.i.i.i to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %79, align 16, !tbaa !13
  %80 = bitcast i64* %arrayidx2.i.i104.i.i.i to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %80, align 16, !tbaa !13
  store i64 %add.i.i194.2.i.i.i, i64* %arrayidx4.i.i106.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x6.i.i.i, %struct.secp256k1_fe* noundef nonnull %x6.i.i.i, %struct.secp256k1_fe* noundef nonnull %x3.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %32, i8* noundef nonnull align 16 dereferenceable(40) %31, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i196.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x9.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i198.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x9.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i199.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x9.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i200.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x9.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i201.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x9.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i196.promoted.i.i.i = load i64, i64* %arraydecay.i196.i.i.i, align 16, !tbaa !13
  %arrayidx1.i.i198.promoted.i.i.i = load i64, i64* %arrayidx1.i.i198.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i199.promoted.i.i.i = load i64, i64* %arrayidx2.i.i199.i.i.i, align 16, !tbaa !13
  %arrayidx3.i.i200.promoted.i.i.i = load i64, i64* %arrayidx3.i.i200.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i201.promoted.i.i.i = load i64, i64* %arrayidx4.i.i201.i.i.i, align 16, !tbaa !13
  %mul.i.i202.i.i.i = shl i64 %arraydecay.i196.promoted.i.i.i, 1
  %conv.i.i.i203.i.i.i = zext i64 %mul.i.i202.i.i.i to i128
  %conv1.i.i.i204.i.i.i = zext i64 %arrayidx3.i.i200.promoted.i.i.i to i128
  %mul.i.i.i205.i.i.i = mul nuw i128 %conv1.i.i.i204.i.i.i, %conv.i.i.i203.i.i.i
  %mul17.i.i206.i.i.i = shl i64 %arrayidx1.i.i198.promoted.i.i.i, 1
  %conv.i215.i.i207.i.i.i = zext i64 %mul17.i.i206.i.i.i to i128
  %conv1.i216.i.i208.i.i.i = zext i64 %arrayidx2.i.i199.promoted.i.i.i to i128
  %mul.i217.i.i209.i.i.i = mul nuw i128 %conv1.i216.i.i208.i.i.i, %conv.i215.i.i207.i.i.i
  %add.i.i.i210.i.i.i = add i128 %mul.i.i.i205.i.i.i, %mul.i217.i.i209.i.i.i
  %conv.i218.i.i211.i.i.i = zext i64 %arrayidx4.i.i201.promoted.i.i.i to i128
  %mul.i220.i.i212.i.i.i = mul nuw i128 %conv.i218.i.i211.i.i.i, %conv.i218.i.i211.i.i.i
  %conv1.i222.i.i213.i.i.i = and i128 %mul.i220.i.i212.i.i.i, 18446744073709551615
  %mul.i223.i.i214.i.i.i = mul nuw nsw i128 %conv1.i222.i.i213.i.i.i, 68719492368
  %add.i224.i.i215.i.i.i = add i128 %add.i.i.i210.i.i.i, %mul.i223.i.i214.i.i.i
  %shr.i.i.i216.i.i.i = lshr i128 %mul.i220.i.i212.i.i.i, 64
  %shr.i226.i.i217.i.i.i = lshr i128 %add.i224.i.i215.i.i.i, 52
  %mul37.i.i218.i.i.i = shl i64 %arrayidx4.i.i201.promoted.i.i.i, 1
  %conv.i227.i.i219.i.i.i = zext i64 %arraydecay.i196.promoted.i.i.i to i128
  %conv1.i228.i.i220.i.i.i = zext i64 %mul37.i.i218.i.i.i to i128
  %mul.i229.i.i221.i.i.i = mul nuw i128 %conv1.i228.i.i220.i.i.i, %conv.i227.i.i219.i.i.i
  %mul.i233.i.i222.i.i.i = mul nuw i128 %conv1.i.i.i204.i.i.i, %conv.i215.i.i207.i.i.i
  %mul.i237.i.i223.i.i.i = mul nuw i128 %conv1.i216.i.i208.i.i.i, %conv1.i216.i.i208.i.i.i
  %mul.i241.i.i224.i.i.i = mul nuw nsw i128 %shr.i.i.i216.i.i.i, 281475040739328
  %add.i230.i.i225.i.i.i = add i128 %mul.i233.i.i222.i.i.i, %mul.i237.i.i223.i.i.i
  %add.i234.i.i226.i.i.i = add i128 %add.i230.i.i225.i.i.i, %mul.i229.i.i221.i.i.i
  %add.i238.i.i227.i.i.i = add i128 %add.i234.i.i226.i.i.i, %mul.i241.i.i224.i.i.i
  %add.i242.i.i228.i.i.i = add i128 %add.i238.i.i227.i.i.i, %shr.i226.i.i217.i.i.i
  %conv.i243.i.i229.i.i.i = trunc i128 %add.i242.i.i228.i.i.i to i64
  %shr.i244.i.i230.i.i.i = lshr i128 %add.i242.i.i228.i.i.i, 52
  %and47.i.i231.i.i.i = lshr i64 %conv.i243.i.i229.i.i.i, 48
  %81 = and i64 %and47.i.i231.i.i.i, 15
  %and54.i.i232.i.i.i = and i64 %conv.i243.i.i229.i.i.i, 281474976710655
  %mul.i247.i.i233.i.i.i = mul nuw i128 %conv.i227.i.i219.i.i.i, %conv.i227.i.i219.i.i.i
  %conv.i248.i.i234.i.i.i = zext i64 %arrayidx1.i.i198.promoted.i.i.i to i128
  %mul.i250.i.i235.i.i.i = mul nuw i128 %conv1.i228.i.i220.i.i.i, %conv.i248.i.i234.i.i.i
  %mul64.i.i236.i.i.i = shl i64 %arrayidx2.i.i199.promoted.i.i.i, 1
  %conv.i252.i.i237.i.i.i = zext i64 %mul64.i.i236.i.i.i to i128
  %mul.i254.i.i238.i.i.i = mul nuw i128 %conv1.i.i.i204.i.i.i, %conv.i252.i.i237.i.i.i
  %add.i251.i.i239.i.i.i = add i128 %mul.i250.i.i235.i.i.i, %mul.i254.i.i238.i.i.i
  %add.i255.i.i240.i.i.i = add i128 %add.i251.i.i239.i.i.i, %shr.i244.i.i230.i.i.i
  %conv.i256.i.i241.i.i.i = trunc i128 %add.i255.i.i240.i.i.i to i64
  %shr.i257.i.i242.i.i.i = lshr i128 %add.i255.i.i240.i.i.i, 52
  %and69.i.i243.i.i.i = shl i64 %conv.i256.i.i241.i.i.i, 4
  %shl.i.i244.i.i.i = and i64 %and69.i.i243.i.i.i, 72057594037927920
  %or.i.i245.i.i.i = or i64 %shl.i.i244.i.i.i, %81
  %conv.i258.i.i246.i.i.i = zext i64 %or.i.i245.i.i.i to i128
  %mul.i259.i.i247.i.i.i = mul nuw nsw i128 %conv.i258.i.i246.i.i.i, 4294968273
  %add.i260.i.i248.i.i.i = add i128 %mul.i259.i.i247.i.i.i, %mul.i247.i.i233.i.i.i
  %conv.i261.i.i249.i.i.i = trunc i128 %add.i260.i.i248.i.i.i to i64
  %and83.i.i250.i.i.i = and i64 %conv.i261.i.i249.i.i.i, 4503599627370495
  %shr.i262.i.i251.i.i.i = lshr i128 %add.i260.i.i248.i.i.i, 52
  %mul.i265.i.i252.i.i.i = mul nuw i128 %conv.i248.i.i234.i.i.i, %conv.i.i.i203.i.i.i
  %mul.i269.i.i253.i.i.i = mul nuw i128 %conv1.i228.i.i220.i.i.i, %conv1.i216.i.i208.i.i.i
  %mul.i273.i.i254.i.i.i = mul nuw i128 %conv1.i.i.i204.i.i.i, %conv1.i.i.i204.i.i.i
  %add.i270.i.i255.i.i.i = add i128 %mul.i269.i.i253.i.i.i, %mul.i273.i.i254.i.i.i
  %add.i274.i.i256.i.i.i = add i128 %add.i270.i.i255.i.i.i, %shr.i257.i.i242.i.i.i
  %conv.i276.i.i257.i.i.i = and i128 %add.i274.i.i256.i.i.i, 4503599627370495
  %mul.i277.i.i258.i.i.i = mul nuw nsw i128 %conv.i276.i.i257.i.i.i, 68719492368
  %add.i266.i.i259.i.i.i = add i128 %mul.i277.i.i258.i.i.i, %mul.i265.i.i252.i.i.i
  %add.i278.i.i260.i.i.i = add i128 %add.i266.i.i259.i.i.i, %shr.i262.i.i251.i.i.i
  %shr.i279.i.i261.i.i.i = lshr i128 %add.i274.i.i256.i.i.i, 52
  %conv.i280.i.i262.i.i.i = trunc i128 %add.i278.i.i260.i.i.i to i64
  %and107.i.i263.i.i.i = and i64 %conv.i280.i.i262.i.i.i, 4503599627370495
  %shr.i281.i.i265.i.i.i = lshr i128 %add.i278.i.i260.i.i.i, 52
  %mul.i284.i.i266.i.i.i = mul nuw i128 %conv1.i216.i.i208.i.i.i, %conv.i.i.i203.i.i.i
  %mul.i288.i.i267.i.i.i = mul nuw i128 %conv.i248.i.i234.i.i.i, %conv.i248.i.i234.i.i.i
  %mul.i292.i.i268.i.i.i = mul nuw i128 %conv1.i228.i.i220.i.i.i, %conv1.i.i.i204.i.i.i
  %add.i293.i.i269.i.i.i = add i128 %shr.i279.i.i261.i.i.i, %mul.i292.i.i268.i.i.i
  %conv1.i295.i.i270.i.i.i = and i128 %add.i293.i.i269.i.i.i, 18446744073709551615
  %mul.i296.i.i271.i.i.i = mul nuw nsw i128 %conv1.i295.i.i270.i.i.i, 68719492368
  %add.i285.i.i272.i.i.i = add i128 %mul.i284.i.i266.i.i.i, %mul.i288.i.i267.i.i.i
  %add.i289.i.i273.i.i.i = add i128 %add.i285.i.i272.i.i.i, %mul.i296.i.i271.i.i.i
  %add.i297.i.i274.i.i.i = add i128 %add.i289.i.i273.i.i.i, %shr.i281.i.i265.i.i.i
  %shr.i298.i.i275.i.i.i = lshr i128 %add.i293.i.i269.i.i.i, 64
  %conv.i299.i.i276.i.i.i = trunc i128 %add.i297.i.i274.i.i.i to i64
  %and129.i.i277.i.i.i = and i64 %conv.i299.i.i276.i.i.i, 4503599627370495
  %shr.i300.i.i279.i.i.i = lshr i128 %add.i297.i.i274.i.i.i, 52
  %mul.i303.i.i280.i.i.i = mul nuw nsw i128 %shr.i298.i.i275.i.i.i, 281475040739328
  %conv.i305.i.i281.i.i.i = and i128 %add.i224.i.i215.i.i.i, 4503599627370494
  %add.i304.i.i282.i.i.i = add nuw nsw i128 %mul.i303.i.i280.i.i.i, %conv.i305.i.i281.i.i.i
  %add.i306.i.i283.i.i.i = add nuw nsw i128 %add.i304.i.i282.i.i.i, %shr.i300.i.i279.i.i.i
  %shr.i308.i.i287.i.i.i = lshr i128 %add.i306.i.i283.i.i.i, 52
  %conv.i309.i.i288.i.i.i = trunc i128 %shr.i308.i.i287.i.i.i to i64
  %add.i.i289.i.i.i = add nuw nsw i64 %and54.i.i232.i.i.i, %conv.i309.i.i288.i.i.i
  %mul.i.i202.1.i.i.i = shl nuw nsw i64 %and83.i.i250.i.i.i, 1
  %conv.i.i.i203.1.i.i.i = zext i64 %mul.i.i202.1.i.i.i to i128
  %conv1.i.i.i204.1.i.i.i = and i128 %add.i306.i.i283.i.i.i, 4503599627370495
  %mul.i.i.i205.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.1.i.i.i, %conv.i.i.i203.1.i.i.i
  %mul17.i.i206.1.i.i.i = shl nuw nsw i64 %and107.i.i263.i.i.i, 1
  %conv.i215.i.i207.1.i.i.i = zext i64 %mul17.i.i206.1.i.i.i to i128
  %conv1.i216.i.i208.1.i.i.i = zext i64 %and129.i.i277.i.i.i to i128
  %mul.i217.i.i209.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i208.1.i.i.i, %conv.i215.i.i207.1.i.i.i
  %add.i.i.i210.1.i.i.i = add nuw nsw i128 %mul.i.i.i205.1.i.i.i, %mul.i217.i.i209.1.i.i.i
  %conv.i218.i.i211.1.i.i.i = zext i64 %add.i.i289.i.i.i to i128
  %mul.i220.i.i212.1.i.i.i = mul nuw nsw i128 %conv.i218.i.i211.1.i.i.i, %conv.i218.i.i211.1.i.i.i
  %conv1.i222.i.i213.1.i.i.i = and i128 %mul.i220.i.i212.1.i.i.i, 18446744073709551615
  %mul.i223.i.i214.1.i.i.i = mul nuw nsw i128 %conv1.i222.i.i213.1.i.i.i, 68719492368
  %add.i224.i.i215.1.i.i.i = add nuw nsw i128 %add.i.i.i210.1.i.i.i, %mul.i223.i.i214.1.i.i.i
  %shr.i.i.i216.1.i.i.i = lshr i128 %mul.i220.i.i212.1.i.i.i, 64
  %shr.i226.i.i217.1.i.i.i = lshr i128 %add.i224.i.i215.1.i.i.i, 52
  %mul37.i.i218.1.i.i.i = shl nuw nsw i64 %add.i.i289.i.i.i, 1
  %conv.i227.i.i219.1.i.i.i = zext i64 %and83.i.i250.i.i.i to i128
  %conv1.i228.i.i220.1.i.i.i = zext i64 %mul37.i.i218.1.i.i.i to i128
  %mul.i229.i.i221.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i220.1.i.i.i, %conv.i227.i.i219.1.i.i.i
  %mul.i233.i.i222.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.1.i.i.i, %conv.i215.i.i207.1.i.i.i
  %mul.i237.i.i223.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i208.1.i.i.i, %conv1.i216.i.i208.1.i.i.i
  %mul.i241.i.i224.1.i.i.i = mul nuw nsw i128 %shr.i.i.i216.1.i.i.i, 281475040739328
  %add.i230.i.i225.1.i.i.i = add nuw nsw i128 %mul.i233.i.i222.1.i.i.i, %mul.i237.i.i223.1.i.i.i
  %add.i234.i.i226.1.i.i.i = add nuw nsw i128 %add.i230.i.i225.1.i.i.i, %mul.i229.i.i221.1.i.i.i
  %add.i238.i.i227.1.i.i.i = add nuw nsw i128 %add.i234.i.i226.1.i.i.i, %mul.i241.i.i224.1.i.i.i
  %add.i242.i.i228.1.i.i.i = add nuw nsw i128 %add.i238.i.i227.1.i.i.i, %shr.i226.i.i217.1.i.i.i
  %conv.i243.i.i229.1.i.i.i = trunc i128 %add.i242.i.i228.1.i.i.i to i64
  %shr.i244.i.i230.1.i.i.i = lshr i128 %add.i242.i.i228.1.i.i.i, 52
  %and47.i.i231.1.i.i.i = lshr i64 %conv.i243.i.i229.1.i.i.i, 48
  %82 = and i64 %and47.i.i231.1.i.i.i, 15
  %and54.i.i232.1.i.i.i = and i64 %conv.i243.i.i229.1.i.i.i, 281474976710655
  %mul.i247.i.i233.1.i.i.i = mul nuw nsw i128 %conv.i227.i.i219.1.i.i.i, %conv.i227.i.i219.1.i.i.i
  %conv.i248.i.i234.1.i.i.i = zext i64 %and107.i.i263.i.i.i to i128
  %mul.i250.i.i235.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i220.1.i.i.i, %conv.i248.i.i234.1.i.i.i
  %mul64.i.i236.1.i.i.i = shl nuw nsw i64 %and129.i.i277.i.i.i, 1
  %conv.i252.i.i237.1.i.i.i = zext i64 %mul64.i.i236.1.i.i.i to i128
  %mul.i254.i.i238.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.1.i.i.i, %conv.i252.i.i237.1.i.i.i
  %add.i251.i.i239.1.i.i.i = add nuw nsw i128 %mul.i250.i.i235.1.i.i.i, %mul.i254.i.i238.1.i.i.i
  %add.i255.i.i240.1.i.i.i = add nuw nsw i128 %add.i251.i.i239.1.i.i.i, %shr.i244.i.i230.1.i.i.i
  %conv.i256.i.i241.1.i.i.i = trunc i128 %add.i255.i.i240.1.i.i.i to i64
  %shr.i257.i.i242.1.i.i.i = lshr i128 %add.i255.i.i240.1.i.i.i, 52
  %and69.i.i243.1.i.i.i = shl i64 %conv.i256.i.i241.1.i.i.i, 4
  %shl.i.i244.1.i.i.i = and i64 %and69.i.i243.1.i.i.i, 72057594037927920
  %or.i.i245.1.i.i.i = or i64 %shl.i.i244.1.i.i.i, %82
  %conv.i258.i.i246.1.i.i.i = zext i64 %or.i.i245.1.i.i.i to i128
  %mul.i259.i.i247.1.i.i.i = mul nuw nsw i128 %conv.i258.i.i246.1.i.i.i, 4294968273
  %add.i260.i.i248.1.i.i.i = add nuw nsw i128 %mul.i259.i.i247.1.i.i.i, %mul.i247.i.i233.1.i.i.i
  %conv.i261.i.i249.1.i.i.i = trunc i128 %add.i260.i.i248.1.i.i.i to i64
  %and83.i.i250.1.i.i.i = and i64 %conv.i261.i.i249.1.i.i.i, 4503599627370495
  %shr.i262.i.i251.1.i.i.i = lshr i128 %add.i260.i.i248.1.i.i.i, 52
  %mul.i265.i.i252.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i234.1.i.i.i, %conv.i.i.i203.1.i.i.i
  %mul.i269.i.i253.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i220.1.i.i.i, %conv1.i216.i.i208.1.i.i.i
  %mul.i273.i.i254.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.1.i.i.i, %conv1.i.i.i204.1.i.i.i
  %add.i270.i.i255.1.i.i.i = add nuw nsw i128 %mul.i269.i.i253.1.i.i.i, %mul.i273.i.i254.1.i.i.i
  %add.i274.i.i256.1.i.i.i = add nuw nsw i128 %add.i270.i.i255.1.i.i.i, %shr.i257.i.i242.1.i.i.i
  %conv.i276.i.i257.1.i.i.i = and i128 %add.i274.i.i256.1.i.i.i, 4503599627370495
  %mul.i277.i.i258.1.i.i.i = mul nuw nsw i128 %conv.i276.i.i257.1.i.i.i, 68719492368
  %add.i266.i.i259.1.i.i.i = add nuw nsw i128 %mul.i277.i.i258.1.i.i.i, %mul.i265.i.i252.1.i.i.i
  %add.i278.i.i260.1.i.i.i = add nuw nsw i128 %add.i266.i.i259.1.i.i.i, %shr.i262.i.i251.1.i.i.i
  %shr.i279.i.i261.1.i.i.i = lshr i128 %add.i274.i.i256.1.i.i.i, 52
  %conv.i280.i.i262.1.i.i.i = trunc i128 %add.i278.i.i260.1.i.i.i to i64
  %and107.i.i263.1.i.i.i = and i64 %conv.i280.i.i262.1.i.i.i, 4503599627370495
  %shr.i281.i.i265.1.i.i.i = lshr i128 %add.i278.i.i260.1.i.i.i, 52
  %mul.i284.i.i266.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i208.1.i.i.i, %conv.i.i.i203.1.i.i.i
  %mul.i288.i.i267.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i234.1.i.i.i, %conv.i248.i.i234.1.i.i.i
  %mul.i292.i.i268.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.1.i.i.i, %conv1.i228.i.i220.1.i.i.i
  %add.i293.i.i269.1.i.i.i = add nuw nsw i128 %shr.i279.i.i261.1.i.i.i, %mul.i292.i.i268.1.i.i.i
  %conv1.i295.i.i270.1.i.i.i = and i128 %add.i293.i.i269.1.i.i.i, 18446744073709551615
  %mul.i296.i.i271.1.i.i.i = mul nuw nsw i128 %conv1.i295.i.i270.1.i.i.i, 68719492368
  %add.i285.i.i272.1.i.i.i = add nuw nsw i128 %mul.i284.i.i266.1.i.i.i, %mul.i288.i.i267.1.i.i.i
  %add.i289.i.i273.1.i.i.i = add nuw nsw i128 %add.i285.i.i272.1.i.i.i, %mul.i296.i.i271.1.i.i.i
  %add.i297.i.i274.1.i.i.i = add nuw nsw i128 %add.i289.i.i273.1.i.i.i, %shr.i281.i.i265.1.i.i.i
  %shr.i298.i.i275.1.i.i.i = lshr i128 %add.i293.i.i269.1.i.i.i, 64
  %conv.i299.i.i276.1.i.i.i = trunc i128 %add.i297.i.i274.1.i.i.i to i64
  %and129.i.i277.1.i.i.i = and i64 %conv.i299.i.i276.1.i.i.i, 4503599627370495
  %shr.i300.i.i279.1.i.i.i = lshr i128 %add.i297.i.i274.1.i.i.i, 52
  %mul.i303.i.i280.1.i.i.i = mul nuw nsw i128 %shr.i298.i.i275.1.i.i.i, 281475040739328
  %conv.i305.i.i281.1.i.i.i = and i128 %add.i224.i.i215.1.i.i.i, 4503599627370494
  %add.i304.i.i282.1.i.i.i = add nuw nsw i128 %mul.i303.i.i280.1.i.i.i, %conv.i305.i.i281.1.i.i.i
  %add.i306.i.i283.1.i.i.i = add nuw nsw i128 %add.i304.i.i282.1.i.i.i, %shr.i300.i.i279.1.i.i.i
  %shr.i308.i.i287.1.i.i.i = lshr i128 %add.i306.i.i283.1.i.i.i, 52
  %conv.i309.i.i288.1.i.i.i = trunc i128 %shr.i308.i.i287.1.i.i.i to i64
  %add.i.i289.1.i.i.i = add nuw nsw i64 %and54.i.i232.1.i.i.i, %conv.i309.i.i288.1.i.i.i
  %mul.i.i202.2.i.i.i = shl nuw nsw i64 %and83.i.i250.1.i.i.i, 1
  %conv.i.i.i203.2.i.i.i = zext i64 %mul.i.i202.2.i.i.i to i128
  %conv1.i.i.i204.2.i.i.i = and i128 %add.i306.i.i283.1.i.i.i, 4503599627370495
  %mul.i.i.i205.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.2.i.i.i, %conv.i.i.i203.2.i.i.i
  %mul17.i.i206.2.i.i.i = shl nuw nsw i64 %and107.i.i263.1.i.i.i, 1
  %conv.i215.i.i207.2.i.i.i = zext i64 %mul17.i.i206.2.i.i.i to i128
  %conv1.i216.i.i208.2.i.i.i = zext i64 %and129.i.i277.1.i.i.i to i128
  %mul.i217.i.i209.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i208.2.i.i.i, %conv.i215.i.i207.2.i.i.i
  %add.i.i.i210.2.i.i.i = add nuw nsw i128 %mul.i.i.i205.2.i.i.i, %mul.i217.i.i209.2.i.i.i
  %conv.i218.i.i211.2.i.i.i = zext i64 %add.i.i289.1.i.i.i to i128
  %mul.i220.i.i212.2.i.i.i = mul nuw nsw i128 %conv.i218.i.i211.2.i.i.i, %conv.i218.i.i211.2.i.i.i
  %conv1.i222.i.i213.2.i.i.i = and i128 %mul.i220.i.i212.2.i.i.i, 18446744073709551615
  %mul.i223.i.i214.2.i.i.i = mul nuw nsw i128 %conv1.i222.i.i213.2.i.i.i, 68719492368
  %add.i224.i.i215.2.i.i.i = add nuw nsw i128 %add.i.i.i210.2.i.i.i, %mul.i223.i.i214.2.i.i.i
  %shr.i.i.i216.2.i.i.i = lshr i128 %mul.i220.i.i212.2.i.i.i, 64
  %shr.i226.i.i217.2.i.i.i = lshr i128 %add.i224.i.i215.2.i.i.i, 52
  %mul37.i.i218.2.i.i.i = shl nuw nsw i64 %add.i.i289.1.i.i.i, 1
  %conv.i227.i.i219.2.i.i.i = zext i64 %and83.i.i250.1.i.i.i to i128
  %conv1.i228.i.i220.2.i.i.i = zext i64 %mul37.i.i218.2.i.i.i to i128
  %mul.i229.i.i221.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i220.2.i.i.i, %conv.i227.i.i219.2.i.i.i
  %mul.i233.i.i222.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.2.i.i.i, %conv.i215.i.i207.2.i.i.i
  %mul.i237.i.i223.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i208.2.i.i.i, %conv1.i216.i.i208.2.i.i.i
  %mul.i241.i.i224.2.i.i.i = mul nuw nsw i128 %shr.i.i.i216.2.i.i.i, 281475040739328
  %add.i230.i.i225.2.i.i.i = add nuw nsw i128 %mul.i233.i.i222.2.i.i.i, %mul.i237.i.i223.2.i.i.i
  %add.i234.i.i226.2.i.i.i = add nuw nsw i128 %add.i230.i.i225.2.i.i.i, %mul.i229.i.i221.2.i.i.i
  %add.i238.i.i227.2.i.i.i = add nuw nsw i128 %add.i234.i.i226.2.i.i.i, %mul.i241.i.i224.2.i.i.i
  %add.i242.i.i228.2.i.i.i = add nuw nsw i128 %add.i238.i.i227.2.i.i.i, %shr.i226.i.i217.2.i.i.i
  %conv.i243.i.i229.2.i.i.i = trunc i128 %add.i242.i.i228.2.i.i.i to i64
  %shr.i244.i.i230.2.i.i.i = lshr i128 %add.i242.i.i228.2.i.i.i, 52
  %and47.i.i231.2.i.i.i = lshr i64 %conv.i243.i.i229.2.i.i.i, 48
  %83 = and i64 %and47.i.i231.2.i.i.i, 15
  %and54.i.i232.2.i.i.i = and i64 %conv.i243.i.i229.2.i.i.i, 281474976710655
  %mul.i247.i.i233.2.i.i.i = mul nuw nsw i128 %conv.i227.i.i219.2.i.i.i, %conv.i227.i.i219.2.i.i.i
  %conv.i248.i.i234.2.i.i.i = zext i64 %and107.i.i263.1.i.i.i to i128
  %mul.i250.i.i235.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i220.2.i.i.i, %conv.i248.i.i234.2.i.i.i
  %mul64.i.i236.2.i.i.i = shl nuw nsw i64 %and129.i.i277.1.i.i.i, 1
  %conv.i252.i.i237.2.i.i.i = zext i64 %mul64.i.i236.2.i.i.i to i128
  %mul.i254.i.i238.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.2.i.i.i, %conv.i252.i.i237.2.i.i.i
  %add.i251.i.i239.2.i.i.i = add nuw nsw i128 %mul.i250.i.i235.2.i.i.i, %mul.i254.i.i238.2.i.i.i
  %add.i255.i.i240.2.i.i.i = add nuw nsw i128 %add.i251.i.i239.2.i.i.i, %shr.i244.i.i230.2.i.i.i
  %conv.i256.i.i241.2.i.i.i = trunc i128 %add.i255.i.i240.2.i.i.i to i64
  %shr.i257.i.i242.2.i.i.i = lshr i128 %add.i255.i.i240.2.i.i.i, 52
  %and69.i.i243.2.i.i.i = shl i64 %conv.i256.i.i241.2.i.i.i, 4
  %shl.i.i244.2.i.i.i = and i64 %and69.i.i243.2.i.i.i, 72057594037927920
  %or.i.i245.2.i.i.i = or i64 %shl.i.i244.2.i.i.i, %83
  %conv.i258.i.i246.2.i.i.i = zext i64 %or.i.i245.2.i.i.i to i128
  %mul.i259.i.i247.2.i.i.i = mul nuw nsw i128 %conv.i258.i.i246.2.i.i.i, 4294968273
  %add.i260.i.i248.2.i.i.i = add nuw nsw i128 %mul.i259.i.i247.2.i.i.i, %mul.i247.i.i233.2.i.i.i
  %shr.i262.i.i251.2.i.i.i = lshr i128 %add.i260.i.i248.2.i.i.i, 52
  %mul.i265.i.i252.2.i.i.i = mul nuw nsw i128 %conv.i248.i.i234.2.i.i.i, %conv.i.i.i203.2.i.i.i
  %mul.i269.i.i253.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i220.2.i.i.i, %conv1.i216.i.i208.2.i.i.i
  %mul.i273.i.i254.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.2.i.i.i, %conv1.i.i.i204.2.i.i.i
  %add.i270.i.i255.2.i.i.i = add nuw nsw i128 %mul.i269.i.i253.2.i.i.i, %mul.i273.i.i254.2.i.i.i
  %add.i274.i.i256.2.i.i.i = add nuw nsw i128 %add.i270.i.i255.2.i.i.i, %shr.i257.i.i242.2.i.i.i
  %conv.i276.i.i257.2.i.i.i = and i128 %add.i274.i.i256.2.i.i.i, 4503599627370495
  %mul.i277.i.i258.2.i.i.i = mul nuw nsw i128 %conv.i276.i.i257.2.i.i.i, 68719492368
  %add.i266.i.i259.2.i.i.i = add nuw nsw i128 %mul.i277.i.i258.2.i.i.i, %mul.i265.i.i252.2.i.i.i
  %add.i278.i.i260.2.i.i.i = add nuw nsw i128 %add.i266.i.i259.2.i.i.i, %shr.i262.i.i251.2.i.i.i
  %shr.i279.i.i261.2.i.i.i = lshr i128 %add.i274.i.i256.2.i.i.i, 52
  %84 = insertelement <2 x i128> poison, i128 %add.i260.i.i248.2.i.i.i, i64 0
  %85 = insertelement <2 x i128> %84, i128 %add.i278.i.i260.2.i.i.i, i64 1
  %86 = trunc <2 x i128> %85 to <2 x i64>
  %87 = and <2 x i64> %86, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i265.2.i.i.i = lshr i128 %add.i278.i.i260.2.i.i.i, 52
  %mul.i284.i.i266.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i208.2.i.i.i, %conv.i.i.i203.2.i.i.i
  %mul.i288.i.i267.2.i.i.i = mul nuw nsw i128 %conv.i248.i.i234.2.i.i.i, %conv.i248.i.i234.2.i.i.i
  %mul.i292.i.i268.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i204.2.i.i.i, %conv1.i228.i.i220.2.i.i.i
  %add.i293.i.i269.2.i.i.i = add nuw nsw i128 %shr.i279.i.i261.2.i.i.i, %mul.i292.i.i268.2.i.i.i
  %conv1.i295.i.i270.2.i.i.i = and i128 %add.i293.i.i269.2.i.i.i, 18446744073709551615
  %mul.i296.i.i271.2.i.i.i = mul nuw nsw i128 %conv1.i295.i.i270.2.i.i.i, 68719492368
  %add.i285.i.i272.2.i.i.i = add nuw nsw i128 %mul.i284.i.i266.2.i.i.i, %mul.i288.i.i267.2.i.i.i
  %add.i289.i.i273.2.i.i.i = add nuw nsw i128 %add.i285.i.i272.2.i.i.i, %mul.i296.i.i271.2.i.i.i
  %add.i297.i.i274.2.i.i.i = add nuw nsw i128 %add.i289.i.i273.2.i.i.i, %shr.i281.i.i265.2.i.i.i
  %shr.i298.i.i275.2.i.i.i = lshr i128 %add.i293.i.i269.2.i.i.i, 64
  %shr.i300.i.i279.2.i.i.i = lshr i128 %add.i297.i.i274.2.i.i.i, 52
  %mul.i303.i.i280.2.i.i.i = mul nuw nsw i128 %shr.i298.i.i275.2.i.i.i, 281475040739328
  %conv.i305.i.i281.2.i.i.i = and i128 %add.i224.i.i215.2.i.i.i, 4503599627370494
  %add.i304.i.i282.2.i.i.i = add nuw nsw i128 %mul.i303.i.i280.2.i.i.i, %conv.i305.i.i281.2.i.i.i
  %add.i306.i.i283.2.i.i.i = add nuw nsw i128 %add.i304.i.i282.2.i.i.i, %shr.i300.i.i279.2.i.i.i
  %88 = insertelement <2 x i128> poison, i128 %add.i297.i.i274.2.i.i.i, i64 0
  %89 = insertelement <2 x i128> %88, i128 %add.i306.i.i283.2.i.i.i, i64 1
  %90 = trunc <2 x i128> %89 to <2 x i64>
  %91 = and <2 x i64> %90, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i287.2.i.i.i = lshr i128 %add.i306.i.i283.2.i.i.i, 52
  %conv.i309.i.i288.2.i.i.i = trunc i128 %shr.i308.i.i287.2.i.i.i to i64
  %add.i.i289.2.i.i.i = add nuw nsw i64 %and54.i.i232.2.i.i.i, %conv.i309.i.i288.2.i.i.i
  %92 = bitcast %struct.secp256k1_fe* %x9.i.i.i to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %92, align 16, !tbaa !13
  %93 = bitcast i64* %arrayidx2.i.i199.i.i.i to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %93, align 16, !tbaa !13
  store i64 %add.i.i289.2.i.i.i, i64* %arrayidx4.i.i201.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x9.i.i.i, %struct.secp256k1_fe* noundef nonnull %x9.i.i.i, %struct.secp256k1_fe* noundef nonnull %x3.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %33, i8* noundef nonnull align 16 dereferenceable(40) %32, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i291.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x11.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i293.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x11.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i294.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x11.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i295.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x11.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i296.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x11.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i291.promoted.i.i.i = load i64, i64* %arraydecay.i291.i.i.i, align 16, !tbaa !13
  %arrayidx1.i.i293.promoted.i.i.i = load i64, i64* %arrayidx1.i.i293.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i294.promoted.i.i.i = load i64, i64* %arrayidx2.i.i294.i.i.i, align 16, !tbaa !13
  %arrayidx3.i.i295.promoted.i.i.i = load i64, i64* %arrayidx3.i.i295.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i296.promoted.i.i.i = load i64, i64* %arrayidx4.i.i296.i.i.i, align 16, !tbaa !13
  %mul.i.i297.i.i.i = shl i64 %arraydecay.i291.promoted.i.i.i, 1
  %conv.i.i.i298.i.i.i = zext i64 %mul.i.i297.i.i.i to i128
  %conv1.i.i.i299.i.i.i = zext i64 %arrayidx3.i.i295.promoted.i.i.i to i128
  %mul.i.i.i300.i.i.i = mul nuw i128 %conv1.i.i.i299.i.i.i, %conv.i.i.i298.i.i.i
  %mul17.i.i301.i.i.i = shl i64 %arrayidx1.i.i293.promoted.i.i.i, 1
  %conv.i215.i.i302.i.i.i = zext i64 %mul17.i.i301.i.i.i to i128
  %conv1.i216.i.i303.i.i.i = zext i64 %arrayidx2.i.i294.promoted.i.i.i to i128
  %mul.i217.i.i304.i.i.i = mul nuw i128 %conv1.i216.i.i303.i.i.i, %conv.i215.i.i302.i.i.i
  %add.i.i.i305.i.i.i = add i128 %mul.i.i.i300.i.i.i, %mul.i217.i.i304.i.i.i
  %conv.i218.i.i306.i.i.i = zext i64 %arrayidx4.i.i296.promoted.i.i.i to i128
  %mul.i220.i.i307.i.i.i = mul nuw i128 %conv.i218.i.i306.i.i.i, %conv.i218.i.i306.i.i.i
  %conv1.i222.i.i308.i.i.i = and i128 %mul.i220.i.i307.i.i.i, 18446744073709551615
  %mul.i223.i.i309.i.i.i = mul nuw nsw i128 %conv1.i222.i.i308.i.i.i, 68719492368
  %add.i224.i.i310.i.i.i = add i128 %add.i.i.i305.i.i.i, %mul.i223.i.i309.i.i.i
  %shr.i.i.i311.i.i.i = lshr i128 %mul.i220.i.i307.i.i.i, 64
  %shr.i226.i.i312.i.i.i = lshr i128 %add.i224.i.i310.i.i.i, 52
  %mul37.i.i313.i.i.i = shl i64 %arrayidx4.i.i296.promoted.i.i.i, 1
  %conv.i227.i.i314.i.i.i = zext i64 %arraydecay.i291.promoted.i.i.i to i128
  %conv1.i228.i.i315.i.i.i = zext i64 %mul37.i.i313.i.i.i to i128
  %mul.i229.i.i316.i.i.i = mul nuw i128 %conv1.i228.i.i315.i.i.i, %conv.i227.i.i314.i.i.i
  %mul.i233.i.i317.i.i.i = mul nuw i128 %conv1.i.i.i299.i.i.i, %conv.i215.i.i302.i.i.i
  %mul.i237.i.i318.i.i.i = mul nuw i128 %conv1.i216.i.i303.i.i.i, %conv1.i216.i.i303.i.i.i
  %mul.i241.i.i319.i.i.i = mul nuw nsw i128 %shr.i.i.i311.i.i.i, 281475040739328
  %add.i230.i.i320.i.i.i = add i128 %mul.i233.i.i317.i.i.i, %mul.i237.i.i318.i.i.i
  %add.i234.i.i321.i.i.i = add i128 %add.i230.i.i320.i.i.i, %mul.i229.i.i316.i.i.i
  %add.i238.i.i322.i.i.i = add i128 %add.i234.i.i321.i.i.i, %mul.i241.i.i319.i.i.i
  %add.i242.i.i323.i.i.i = add i128 %add.i238.i.i322.i.i.i, %shr.i226.i.i312.i.i.i
  %conv.i243.i.i324.i.i.i = trunc i128 %add.i242.i.i323.i.i.i to i64
  %shr.i244.i.i325.i.i.i = lshr i128 %add.i242.i.i323.i.i.i, 52
  %and47.i.i326.i.i.i = lshr i64 %conv.i243.i.i324.i.i.i, 48
  %94 = and i64 %and47.i.i326.i.i.i, 15
  %and54.i.i327.i.i.i = and i64 %conv.i243.i.i324.i.i.i, 281474976710655
  %mul.i247.i.i328.i.i.i = mul nuw i128 %conv.i227.i.i314.i.i.i, %conv.i227.i.i314.i.i.i
  %conv.i248.i.i329.i.i.i = zext i64 %arrayidx1.i.i293.promoted.i.i.i to i128
  %mul.i250.i.i330.i.i.i = mul nuw i128 %conv1.i228.i.i315.i.i.i, %conv.i248.i.i329.i.i.i
  %mul64.i.i331.i.i.i = shl i64 %arrayidx2.i.i294.promoted.i.i.i, 1
  %conv.i252.i.i332.i.i.i = zext i64 %mul64.i.i331.i.i.i to i128
  %mul.i254.i.i333.i.i.i = mul nuw i128 %conv1.i.i.i299.i.i.i, %conv.i252.i.i332.i.i.i
  %add.i251.i.i334.i.i.i = add i128 %mul.i250.i.i330.i.i.i, %mul.i254.i.i333.i.i.i
  %add.i255.i.i335.i.i.i = add i128 %add.i251.i.i334.i.i.i, %shr.i244.i.i325.i.i.i
  %conv.i256.i.i336.i.i.i = trunc i128 %add.i255.i.i335.i.i.i to i64
  %shr.i257.i.i337.i.i.i = lshr i128 %add.i255.i.i335.i.i.i, 52
  %and69.i.i338.i.i.i = shl i64 %conv.i256.i.i336.i.i.i, 4
  %shl.i.i339.i.i.i = and i64 %and69.i.i338.i.i.i, 72057594037927920
  %or.i.i340.i.i.i = or i64 %shl.i.i339.i.i.i, %94
  %conv.i258.i.i341.i.i.i = zext i64 %or.i.i340.i.i.i to i128
  %mul.i259.i.i342.i.i.i = mul nuw nsw i128 %conv.i258.i.i341.i.i.i, 4294968273
  %add.i260.i.i343.i.i.i = add i128 %mul.i259.i.i342.i.i.i, %mul.i247.i.i328.i.i.i
  %conv.i261.i.i344.i.i.i = trunc i128 %add.i260.i.i343.i.i.i to i64
  %and83.i.i345.i.i.i = and i64 %conv.i261.i.i344.i.i.i, 4503599627370495
  %shr.i262.i.i346.i.i.i = lshr i128 %add.i260.i.i343.i.i.i, 52
  %mul.i265.i.i347.i.i.i = mul nuw i128 %conv.i248.i.i329.i.i.i, %conv.i.i.i298.i.i.i
  %mul.i269.i.i348.i.i.i = mul nuw i128 %conv1.i228.i.i315.i.i.i, %conv1.i216.i.i303.i.i.i
  %mul.i273.i.i349.i.i.i = mul nuw i128 %conv1.i.i.i299.i.i.i, %conv1.i.i.i299.i.i.i
  %add.i270.i.i350.i.i.i = add i128 %mul.i269.i.i348.i.i.i, %mul.i273.i.i349.i.i.i
  %add.i274.i.i351.i.i.i = add i128 %add.i270.i.i350.i.i.i, %shr.i257.i.i337.i.i.i
  %conv.i276.i.i352.i.i.i = and i128 %add.i274.i.i351.i.i.i, 4503599627370495
  %mul.i277.i.i353.i.i.i = mul nuw nsw i128 %conv.i276.i.i352.i.i.i, 68719492368
  %add.i266.i.i354.i.i.i = add i128 %mul.i277.i.i353.i.i.i, %mul.i265.i.i347.i.i.i
  %add.i278.i.i355.i.i.i = add i128 %add.i266.i.i354.i.i.i, %shr.i262.i.i346.i.i.i
  %shr.i279.i.i356.i.i.i = lshr i128 %add.i274.i.i351.i.i.i, 52
  %conv.i280.i.i357.i.i.i = trunc i128 %add.i278.i.i355.i.i.i to i64
  %and107.i.i358.i.i.i = and i64 %conv.i280.i.i357.i.i.i, 4503599627370495
  %shr.i281.i.i360.i.i.i = lshr i128 %add.i278.i.i355.i.i.i, 52
  %mul.i284.i.i361.i.i.i = mul nuw i128 %conv1.i216.i.i303.i.i.i, %conv.i.i.i298.i.i.i
  %mul.i288.i.i362.i.i.i = mul nuw i128 %conv.i248.i.i329.i.i.i, %conv.i248.i.i329.i.i.i
  %mul.i292.i.i363.i.i.i = mul nuw i128 %conv1.i228.i.i315.i.i.i, %conv1.i.i.i299.i.i.i
  %add.i293.i.i364.i.i.i = add i128 %shr.i279.i.i356.i.i.i, %mul.i292.i.i363.i.i.i
  %conv1.i295.i.i365.i.i.i = and i128 %add.i293.i.i364.i.i.i, 18446744073709551615
  %mul.i296.i.i366.i.i.i = mul nuw nsw i128 %conv1.i295.i.i365.i.i.i, 68719492368
  %add.i285.i.i367.i.i.i = add i128 %mul.i284.i.i361.i.i.i, %mul.i288.i.i362.i.i.i
  %add.i289.i.i368.i.i.i = add i128 %add.i285.i.i367.i.i.i, %mul.i296.i.i366.i.i.i
  %add.i297.i.i369.i.i.i = add i128 %add.i289.i.i368.i.i.i, %shr.i281.i.i360.i.i.i
  %shr.i298.i.i370.i.i.i = lshr i128 %add.i293.i.i364.i.i.i, 64
  %conv.i299.i.i371.i.i.i = trunc i128 %add.i297.i.i369.i.i.i to i64
  %and129.i.i372.i.i.i = and i64 %conv.i299.i.i371.i.i.i, 4503599627370495
  %shr.i300.i.i374.i.i.i = lshr i128 %add.i297.i.i369.i.i.i, 52
  %mul.i303.i.i375.i.i.i = mul nuw nsw i128 %shr.i298.i.i370.i.i.i, 281475040739328
  %conv.i305.i.i376.i.i.i = and i128 %add.i224.i.i310.i.i.i, 4503599627370494
  %add.i304.i.i377.i.i.i = add nuw nsw i128 %mul.i303.i.i375.i.i.i, %conv.i305.i.i376.i.i.i
  %add.i306.i.i378.i.i.i = add nuw nsw i128 %add.i304.i.i377.i.i.i, %shr.i300.i.i374.i.i.i
  %shr.i308.i.i382.i.i.i = lshr i128 %add.i306.i.i378.i.i.i, 52
  %conv.i309.i.i383.i.i.i = trunc i128 %shr.i308.i.i382.i.i.i to i64
  %add.i.i384.i.i.i = add nuw nsw i64 %and54.i.i327.i.i.i, %conv.i309.i.i383.i.i.i
  %mul.i.i297.1.i.i.i = shl nuw nsw i64 %and83.i.i345.i.i.i, 1
  %conv.i.i.i298.1.i.i.i = zext i64 %mul.i.i297.1.i.i.i to i128
  %conv1.i.i.i299.1.i.i.i = and i128 %add.i306.i.i378.i.i.i, 4503599627370495
  %mul.i.i.i300.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i299.1.i.i.i, %conv.i.i.i298.1.i.i.i
  %mul17.i.i301.1.i.i.i = shl nuw nsw i64 %and107.i.i358.i.i.i, 1
  %conv.i215.i.i302.1.i.i.i = zext i64 %mul17.i.i301.1.i.i.i to i128
  %conv1.i216.i.i303.1.i.i.i = zext i64 %and129.i.i372.i.i.i to i128
  %mul.i217.i.i304.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i303.1.i.i.i, %conv.i215.i.i302.1.i.i.i
  %add.i.i.i305.1.i.i.i = add nuw nsw i128 %mul.i.i.i300.1.i.i.i, %mul.i217.i.i304.1.i.i.i
  %conv.i218.i.i306.1.i.i.i = zext i64 %add.i.i384.i.i.i to i128
  %mul.i220.i.i307.1.i.i.i = mul nuw nsw i128 %conv.i218.i.i306.1.i.i.i, %conv.i218.i.i306.1.i.i.i
  %conv1.i222.i.i308.1.i.i.i = and i128 %mul.i220.i.i307.1.i.i.i, 18446744073709551615
  %mul.i223.i.i309.1.i.i.i = mul nuw nsw i128 %conv1.i222.i.i308.1.i.i.i, 68719492368
  %add.i224.i.i310.1.i.i.i = add nuw nsw i128 %add.i.i.i305.1.i.i.i, %mul.i223.i.i309.1.i.i.i
  %shr.i.i.i311.1.i.i.i = lshr i128 %mul.i220.i.i307.1.i.i.i, 64
  %shr.i226.i.i312.1.i.i.i = lshr i128 %add.i224.i.i310.1.i.i.i, 52
  %mul37.i.i313.1.i.i.i = shl nuw nsw i64 %add.i.i384.i.i.i, 1
  %conv.i227.i.i314.1.i.i.i = zext i64 %and83.i.i345.i.i.i to i128
  %conv1.i228.i.i315.1.i.i.i = zext i64 %mul37.i.i313.1.i.i.i to i128
  %mul.i229.i.i316.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i315.1.i.i.i, %conv.i227.i.i314.1.i.i.i
  %mul.i233.i.i317.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i299.1.i.i.i, %conv.i215.i.i302.1.i.i.i
  %mul.i237.i.i318.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i303.1.i.i.i, %conv1.i216.i.i303.1.i.i.i
  %mul.i241.i.i319.1.i.i.i = mul nuw nsw i128 %shr.i.i.i311.1.i.i.i, 281475040739328
  %add.i230.i.i320.1.i.i.i = add nuw nsw i128 %mul.i233.i.i317.1.i.i.i, %mul.i237.i.i318.1.i.i.i
  %add.i234.i.i321.1.i.i.i = add nuw nsw i128 %add.i230.i.i320.1.i.i.i, %mul.i229.i.i316.1.i.i.i
  %add.i238.i.i322.1.i.i.i = add nuw nsw i128 %add.i234.i.i321.1.i.i.i, %mul.i241.i.i319.1.i.i.i
  %add.i242.i.i323.1.i.i.i = add nuw nsw i128 %add.i238.i.i322.1.i.i.i, %shr.i226.i.i312.1.i.i.i
  %conv.i243.i.i324.1.i.i.i = trunc i128 %add.i242.i.i323.1.i.i.i to i64
  %shr.i244.i.i325.1.i.i.i = lshr i128 %add.i242.i.i323.1.i.i.i, 52
  %and47.i.i326.1.i.i.i = lshr i64 %conv.i243.i.i324.1.i.i.i, 48
  %95 = and i64 %and47.i.i326.1.i.i.i, 15
  %and54.i.i327.1.i.i.i = and i64 %conv.i243.i.i324.1.i.i.i, 281474976710655
  %mul.i247.i.i328.1.i.i.i = mul nuw nsw i128 %conv.i227.i.i314.1.i.i.i, %conv.i227.i.i314.1.i.i.i
  %conv.i248.i.i329.1.i.i.i = zext i64 %and107.i.i358.i.i.i to i128
  %mul.i250.i.i330.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i315.1.i.i.i, %conv.i248.i.i329.1.i.i.i
  %mul64.i.i331.1.i.i.i = shl nuw nsw i64 %and129.i.i372.i.i.i, 1
  %conv.i252.i.i332.1.i.i.i = zext i64 %mul64.i.i331.1.i.i.i to i128
  %mul.i254.i.i333.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i299.1.i.i.i, %conv.i252.i.i332.1.i.i.i
  %add.i251.i.i334.1.i.i.i = add nuw nsw i128 %mul.i250.i.i330.1.i.i.i, %mul.i254.i.i333.1.i.i.i
  %add.i255.i.i335.1.i.i.i = add nuw nsw i128 %add.i251.i.i334.1.i.i.i, %shr.i244.i.i325.1.i.i.i
  %conv.i256.i.i336.1.i.i.i = trunc i128 %add.i255.i.i335.1.i.i.i to i64
  %shr.i257.i.i337.1.i.i.i = lshr i128 %add.i255.i.i335.1.i.i.i, 52
  %and69.i.i338.1.i.i.i = shl i64 %conv.i256.i.i336.1.i.i.i, 4
  %shl.i.i339.1.i.i.i = and i64 %and69.i.i338.1.i.i.i, 72057594037927920
  %or.i.i340.1.i.i.i = or i64 %shl.i.i339.1.i.i.i, %95
  %conv.i258.i.i341.1.i.i.i = zext i64 %or.i.i340.1.i.i.i to i128
  %mul.i259.i.i342.1.i.i.i = mul nuw nsw i128 %conv.i258.i.i341.1.i.i.i, 4294968273
  %add.i260.i.i343.1.i.i.i = add nuw nsw i128 %mul.i259.i.i342.1.i.i.i, %mul.i247.i.i328.1.i.i.i
  %shr.i262.i.i346.1.i.i.i = lshr i128 %add.i260.i.i343.1.i.i.i, 52
  %mul.i265.i.i347.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i329.1.i.i.i, %conv.i.i.i298.1.i.i.i
  %mul.i269.i.i348.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i315.1.i.i.i, %conv1.i216.i.i303.1.i.i.i
  %mul.i273.i.i349.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i299.1.i.i.i, %conv1.i.i.i299.1.i.i.i
  %add.i270.i.i350.1.i.i.i = add nuw nsw i128 %mul.i269.i.i348.1.i.i.i, %mul.i273.i.i349.1.i.i.i
  %add.i274.i.i351.1.i.i.i = add nuw nsw i128 %add.i270.i.i350.1.i.i.i, %shr.i257.i.i337.1.i.i.i
  %conv.i276.i.i352.1.i.i.i = and i128 %add.i274.i.i351.1.i.i.i, 4503599627370495
  %mul.i277.i.i353.1.i.i.i = mul nuw nsw i128 %conv.i276.i.i352.1.i.i.i, 68719492368
  %add.i266.i.i354.1.i.i.i = add nuw nsw i128 %mul.i277.i.i353.1.i.i.i, %mul.i265.i.i347.1.i.i.i
  %add.i278.i.i355.1.i.i.i = add nuw nsw i128 %add.i266.i.i354.1.i.i.i, %shr.i262.i.i346.1.i.i.i
  %shr.i279.i.i356.1.i.i.i = lshr i128 %add.i274.i.i351.1.i.i.i, 52
  %96 = insertelement <2 x i128> poison, i128 %add.i260.i.i343.1.i.i.i, i64 0
  %97 = insertelement <2 x i128> %96, i128 %add.i278.i.i355.1.i.i.i, i64 1
  %98 = trunc <2 x i128> %97 to <2 x i64>
  %99 = and <2 x i64> %98, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i360.1.i.i.i = lshr i128 %add.i278.i.i355.1.i.i.i, 52
  %mul.i284.i.i361.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i303.1.i.i.i, %conv.i.i.i298.1.i.i.i
  %mul.i288.i.i362.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i329.1.i.i.i, %conv.i248.i.i329.1.i.i.i
  %mul.i292.i.i363.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i299.1.i.i.i, %conv1.i228.i.i315.1.i.i.i
  %add.i293.i.i364.1.i.i.i = add nuw nsw i128 %shr.i279.i.i356.1.i.i.i, %mul.i292.i.i363.1.i.i.i
  %conv1.i295.i.i365.1.i.i.i = and i128 %add.i293.i.i364.1.i.i.i, 18446744073709551615
  %mul.i296.i.i366.1.i.i.i = mul nuw nsw i128 %conv1.i295.i.i365.1.i.i.i, 68719492368
  %add.i285.i.i367.1.i.i.i = add nuw nsw i128 %mul.i284.i.i361.1.i.i.i, %mul.i288.i.i362.1.i.i.i
  %add.i289.i.i368.1.i.i.i = add nuw nsw i128 %add.i285.i.i367.1.i.i.i, %mul.i296.i.i366.1.i.i.i
  %add.i297.i.i369.1.i.i.i = add nuw nsw i128 %add.i289.i.i368.1.i.i.i, %shr.i281.i.i360.1.i.i.i
  %shr.i298.i.i370.1.i.i.i = lshr i128 %add.i293.i.i364.1.i.i.i, 64
  %shr.i300.i.i374.1.i.i.i = lshr i128 %add.i297.i.i369.1.i.i.i, 52
  %mul.i303.i.i375.1.i.i.i = mul nuw nsw i128 %shr.i298.i.i370.1.i.i.i, 281475040739328
  %conv.i305.i.i376.1.i.i.i = and i128 %add.i224.i.i310.1.i.i.i, 4503599627370494
  %add.i304.i.i377.1.i.i.i = add nuw nsw i128 %mul.i303.i.i375.1.i.i.i, %conv.i305.i.i376.1.i.i.i
  %add.i306.i.i378.1.i.i.i = add nuw nsw i128 %add.i304.i.i377.1.i.i.i, %shr.i300.i.i374.1.i.i.i
  %100 = insertelement <2 x i128> poison, i128 %add.i297.i.i369.1.i.i.i, i64 0
  %101 = insertelement <2 x i128> %100, i128 %add.i306.i.i378.1.i.i.i, i64 1
  %102 = trunc <2 x i128> %101 to <2 x i64>
  %103 = and <2 x i64> %102, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i382.1.i.i.i = lshr i128 %add.i306.i.i378.1.i.i.i, 52
  %conv.i309.i.i383.1.i.i.i = trunc i128 %shr.i308.i.i382.1.i.i.i to i64
  %add.i.i384.1.i.i.i = add nuw nsw i64 %and54.i.i327.1.i.i.i, %conv.i309.i.i383.1.i.i.i
  %104 = bitcast %struct.secp256k1_fe* %x11.i.i.i to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %104, align 16, !tbaa !13
  %105 = bitcast i64* %arrayidx2.i.i294.i.i.i to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %105, align 16, !tbaa !13
  store i64 %add.i.i384.1.i.i.i, i64* %arrayidx4.i.i296.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x11.i.i.i, %struct.secp256k1_fe* noundef nonnull %x11.i.i.i, %struct.secp256k1_fe* noundef nonnull %x2.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %34, i8* noundef nonnull align 16 dereferenceable(40) %33, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i386.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x22.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i388.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x22.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i389.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x22.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i390.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x22.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i391.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x22.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i386.promoted.i.i.i = load i64, i64* %arraydecay.i386.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i388.promoted.i.i.i = load i64, i64* %arrayidx1.i.i388.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i389.promoted.i.i.i = load i64, i64* %arrayidx2.i.i389.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i390.promoted.i.i.i = load i64, i64* %arrayidx3.i.i390.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i391.promoted.i.i.i = load i64, i64* %arrayidx4.i.i391.i.i.i, align 8, !tbaa !13
  br label %for.body20.i.i.i

for.body20.i.i.i:                                 ; preds = %for.body20.i.i.i, %land.rhs.i
  %j.31285.i.i.i = phi i32 [ 0, %land.rhs.i ], [ %inc22.i.i.i, %for.body20.i.i.i ]
  %106 = phi i64 [ %arraydecay.i386.promoted.i.i.i, %land.rhs.i ], [ %and83.i.i440.i.i.i, %for.body20.i.i.i ]
  %and107.i.i45312771284.i.i.i = phi i64 [ %arrayidx1.i.i388.promoted.i.i.i, %land.rhs.i ], [ %and107.i.i453.i.i.i, %for.body20.i.i.i ]
  %and129.i.i46712781283.i.i.i = phi i64 [ %arrayidx2.i.i389.promoted.i.i.i, %land.rhs.i ], [ %and129.i.i467.i.i.i, %for.body20.i.i.i ]
  %and142.i.i47512791282.i.i.i = phi i64 [ %arrayidx3.i.i390.promoted.i.i.i, %land.rhs.i ], [ %and142.i.i475.i.i.i, %for.body20.i.i.i ]
  %add.i.i47912801281.i.i.i = phi i64 [ %arrayidx4.i.i391.promoted.i.i.i, %land.rhs.i ], [ %add.i.i479.i.i.i, %for.body20.i.i.i ]
  %mul.i.i392.i.i.i = shl i64 %106, 1
  %conv.i.i.i393.i.i.i = zext i64 %mul.i.i392.i.i.i to i128
  %conv1.i.i.i394.i.i.i = zext i64 %and142.i.i47512791282.i.i.i to i128
  %mul.i.i.i395.i.i.i = mul nuw i128 %conv1.i.i.i394.i.i.i, %conv.i.i.i393.i.i.i
  %mul17.i.i396.i.i.i = shl i64 %and107.i.i45312771284.i.i.i, 1
  %conv.i215.i.i397.i.i.i = zext i64 %mul17.i.i396.i.i.i to i128
  %conv1.i216.i.i398.i.i.i = zext i64 %and129.i.i46712781283.i.i.i to i128
  %mul.i217.i.i399.i.i.i = mul nuw i128 %conv1.i216.i.i398.i.i.i, %conv.i215.i.i397.i.i.i
  %add.i.i.i400.i.i.i = add i128 %mul.i.i.i395.i.i.i, %mul.i217.i.i399.i.i.i
  %conv.i218.i.i401.i.i.i = zext i64 %add.i.i47912801281.i.i.i to i128
  %mul.i220.i.i402.i.i.i = mul nuw i128 %conv.i218.i.i401.i.i.i, %conv.i218.i.i401.i.i.i
  %conv1.i222.i.i403.i.i.i = and i128 %mul.i220.i.i402.i.i.i, 18446744073709551615
  %mul.i223.i.i404.i.i.i = mul nuw nsw i128 %conv1.i222.i.i403.i.i.i, 68719492368
  %add.i224.i.i405.i.i.i = add i128 %add.i.i.i400.i.i.i, %mul.i223.i.i404.i.i.i
  %shr.i.i.i406.i.i.i = lshr i128 %mul.i220.i.i402.i.i.i, 64
  %shr.i226.i.i407.i.i.i = lshr i128 %add.i224.i.i405.i.i.i, 52
  %mul37.i.i408.i.i.i = shl i64 %add.i.i47912801281.i.i.i, 1
  %conv.i227.i.i409.i.i.i = zext i64 %106 to i128
  %conv1.i228.i.i410.i.i.i = zext i64 %mul37.i.i408.i.i.i to i128
  %mul.i229.i.i411.i.i.i = mul nuw i128 %conv1.i228.i.i410.i.i.i, %conv.i227.i.i409.i.i.i
  %mul.i233.i.i412.i.i.i = mul nuw i128 %conv1.i.i.i394.i.i.i, %conv.i215.i.i397.i.i.i
  %mul.i237.i.i413.i.i.i = mul nuw i128 %conv1.i216.i.i398.i.i.i, %conv1.i216.i.i398.i.i.i
  %mul.i241.i.i414.i.i.i = mul nuw nsw i128 %shr.i.i.i406.i.i.i, 281475040739328
  %add.i230.i.i415.i.i.i = add i128 %mul.i233.i.i412.i.i.i, %mul.i237.i.i413.i.i.i
  %add.i234.i.i416.i.i.i = add i128 %add.i230.i.i415.i.i.i, %mul.i229.i.i411.i.i.i
  %add.i238.i.i417.i.i.i = add i128 %add.i234.i.i416.i.i.i, %mul.i241.i.i414.i.i.i
  %add.i242.i.i418.i.i.i = add i128 %add.i238.i.i417.i.i.i, %shr.i226.i.i407.i.i.i
  %conv.i243.i.i419.i.i.i = trunc i128 %add.i242.i.i418.i.i.i to i64
  %shr.i244.i.i420.i.i.i = lshr i128 %add.i242.i.i418.i.i.i, 52
  %and47.i.i421.i.i.i = lshr i64 %conv.i243.i.i419.i.i.i, 48
  %107 = and i64 %and47.i.i421.i.i.i, 15
  %and54.i.i422.i.i.i = and i64 %conv.i243.i.i419.i.i.i, 281474976710655
  %mul.i247.i.i423.i.i.i = mul nuw i128 %conv.i227.i.i409.i.i.i, %conv.i227.i.i409.i.i.i
  %conv.i248.i.i424.i.i.i = zext i64 %and107.i.i45312771284.i.i.i to i128
  %mul.i250.i.i425.i.i.i = mul nuw i128 %conv1.i228.i.i410.i.i.i, %conv.i248.i.i424.i.i.i
  %mul64.i.i426.i.i.i = shl i64 %and129.i.i46712781283.i.i.i, 1
  %conv.i252.i.i427.i.i.i = zext i64 %mul64.i.i426.i.i.i to i128
  %mul.i254.i.i428.i.i.i = mul nuw i128 %conv1.i.i.i394.i.i.i, %conv.i252.i.i427.i.i.i
  %add.i251.i.i429.i.i.i = add i128 %mul.i250.i.i425.i.i.i, %mul.i254.i.i428.i.i.i
  %add.i255.i.i430.i.i.i = add i128 %add.i251.i.i429.i.i.i, %shr.i244.i.i420.i.i.i
  %conv.i256.i.i431.i.i.i = trunc i128 %add.i255.i.i430.i.i.i to i64
  %shr.i257.i.i432.i.i.i = lshr i128 %add.i255.i.i430.i.i.i, 52
  %and69.i.i433.i.i.i = shl i64 %conv.i256.i.i431.i.i.i, 4
  %shl.i.i434.i.i.i = and i64 %and69.i.i433.i.i.i, 72057594037927920
  %or.i.i435.i.i.i = or i64 %shl.i.i434.i.i.i, %107
  %conv.i258.i.i436.i.i.i = zext i64 %or.i.i435.i.i.i to i128
  %mul.i259.i.i437.i.i.i = mul nuw nsw i128 %conv.i258.i.i436.i.i.i, 4294968273
  %add.i260.i.i438.i.i.i = add i128 %mul.i259.i.i437.i.i.i, %mul.i247.i.i423.i.i.i
  %conv.i261.i.i439.i.i.i = trunc i128 %add.i260.i.i438.i.i.i to i64
  %and83.i.i440.i.i.i = and i64 %conv.i261.i.i439.i.i.i, 4503599627370495
  %shr.i262.i.i441.i.i.i = lshr i128 %add.i260.i.i438.i.i.i, 52
  %mul.i265.i.i442.i.i.i = mul nuw i128 %conv.i248.i.i424.i.i.i, %conv.i.i.i393.i.i.i
  %mul.i269.i.i443.i.i.i = mul nuw i128 %conv1.i228.i.i410.i.i.i, %conv1.i216.i.i398.i.i.i
  %mul.i273.i.i444.i.i.i = mul nuw i128 %conv1.i.i.i394.i.i.i, %conv1.i.i.i394.i.i.i
  %add.i270.i.i445.i.i.i = add i128 %mul.i269.i.i443.i.i.i, %mul.i273.i.i444.i.i.i
  %add.i274.i.i446.i.i.i = add i128 %add.i270.i.i445.i.i.i, %shr.i257.i.i432.i.i.i
  %conv.i276.i.i447.i.i.i = and i128 %add.i274.i.i446.i.i.i, 4503599627370495
  %mul.i277.i.i448.i.i.i = mul nuw nsw i128 %conv.i276.i.i447.i.i.i, 68719492368
  %add.i266.i.i449.i.i.i = add i128 %mul.i277.i.i448.i.i.i, %mul.i265.i.i442.i.i.i
  %add.i278.i.i450.i.i.i = add i128 %add.i266.i.i449.i.i.i, %shr.i262.i.i441.i.i.i
  %shr.i279.i.i451.i.i.i = lshr i128 %add.i274.i.i446.i.i.i, 52
  %conv.i280.i.i452.i.i.i = trunc i128 %add.i278.i.i450.i.i.i to i64
  %and107.i.i453.i.i.i = and i64 %conv.i280.i.i452.i.i.i, 4503599627370495
  %shr.i281.i.i455.i.i.i = lshr i128 %add.i278.i.i450.i.i.i, 52
  %mul.i284.i.i456.i.i.i = mul nuw i128 %conv1.i216.i.i398.i.i.i, %conv.i.i.i393.i.i.i
  %mul.i288.i.i457.i.i.i = mul nuw i128 %conv.i248.i.i424.i.i.i, %conv.i248.i.i424.i.i.i
  %mul.i292.i.i458.i.i.i = mul nuw i128 %conv1.i228.i.i410.i.i.i, %conv1.i.i.i394.i.i.i
  %add.i293.i.i459.i.i.i = add i128 %shr.i279.i.i451.i.i.i, %mul.i292.i.i458.i.i.i
  %conv1.i295.i.i460.i.i.i = and i128 %add.i293.i.i459.i.i.i, 18446744073709551615
  %mul.i296.i.i461.i.i.i = mul nuw nsw i128 %conv1.i295.i.i460.i.i.i, 68719492368
  %add.i285.i.i462.i.i.i = add i128 %mul.i284.i.i456.i.i.i, %mul.i288.i.i457.i.i.i
  %add.i289.i.i463.i.i.i = add i128 %add.i285.i.i462.i.i.i, %mul.i296.i.i461.i.i.i
  %add.i297.i.i464.i.i.i = add i128 %add.i289.i.i463.i.i.i, %shr.i281.i.i455.i.i.i
  %shr.i298.i.i465.i.i.i = lshr i128 %add.i293.i.i459.i.i.i, 64
  %conv.i299.i.i466.i.i.i = trunc i128 %add.i297.i.i464.i.i.i to i64
  %and129.i.i467.i.i.i = and i64 %conv.i299.i.i466.i.i.i, 4503599627370495
  %shr.i300.i.i469.i.i.i = lshr i128 %add.i297.i.i464.i.i.i, 52
  %mul.i303.i.i470.i.i.i = mul nuw nsw i128 %shr.i298.i.i465.i.i.i, 281475040739328
  %conv.i305.i.i471.i.i.i = and i128 %add.i224.i.i405.i.i.i, 4503599627370494
  %add.i304.i.i472.i.i.i = add nuw nsw i128 %mul.i303.i.i470.i.i.i, %conv.i305.i.i471.i.i.i
  %add.i306.i.i473.i.i.i = add nuw nsw i128 %add.i304.i.i472.i.i.i, %shr.i300.i.i469.i.i.i
  %conv.i307.i.i474.i.i.i = trunc i128 %add.i306.i.i473.i.i.i to i64
  %and142.i.i475.i.i.i = and i64 %conv.i307.i.i474.i.i.i, 4503599627370495
  %shr.i308.i.i477.i.i.i = lshr i128 %add.i306.i.i473.i.i.i, 52
  %conv.i309.i.i478.i.i.i = trunc i128 %shr.i308.i.i477.i.i.i to i64
  %add.i.i479.i.i.i = add nuw nsw i64 %and54.i.i422.i.i.i, %conv.i309.i.i478.i.i.i
  %inc22.i.i.i = add nuw nsw i32 %j.31285.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc22.i.i.i, 11
  br i1 %exitcond.not.i.i.i, label %for.end23.i.i.i, label %for.body20.i.i.i, !llvm.loop !39

for.end23.i.i.i:                                  ; preds = %for.body20.i.i.i
  store i64 %and83.i.i440.i.i.i, i64* %arraydecay.i386.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i453.i.i.i, i64* %arrayidx1.i.i388.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i467.i.i.i, i64* %arrayidx2.i.i389.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i475.i.i.i, i64* %arrayidx3.i.i390.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i479.i.i.i, i64* %arrayidx4.i.i391.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x22.i.i.i, %struct.secp256k1_fe* noundef nonnull %x22.i.i.i, %struct.secp256k1_fe* noundef nonnull %x11.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %35, i8* noundef nonnull align 8 dereferenceable(40) %34, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i481.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x44.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i483.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x44.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i484.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x44.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i485.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x44.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i486.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x44.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i481.promoted.i.i.i = load i64, i64* %arraydecay.i481.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i483.promoted.i.i.i = load i64, i64* %arrayidx1.i.i483.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i484.promoted.i.i.i = load i64, i64* %arrayidx2.i.i484.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i485.promoted.i.i.i = load i64, i64* %arrayidx3.i.i485.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i486.promoted.i.i.i = load i64, i64* %arrayidx4.i.i486.i.i.i, align 8, !tbaa !13
  br label %for.body27.i.i.i

for.body27.i.i.i:                                 ; preds = %for.body27.i.i.i, %for.end23.i.i.i
  %j.41295.i.i.i = phi i32 [ 0, %for.end23.i.i.i ], [ %inc29.i.i.i, %for.body27.i.i.i ]
  %108 = phi i64 [ %arraydecay.i481.promoted.i.i.i, %for.end23.i.i.i ], [ %and83.i.i535.i.i.i, %for.body27.i.i.i ]
  %and107.i.i54812871294.i.i.i = phi i64 [ %arrayidx1.i.i483.promoted.i.i.i, %for.end23.i.i.i ], [ %and107.i.i548.i.i.i, %for.body27.i.i.i ]
  %and129.i.i56212881293.i.i.i = phi i64 [ %arrayidx2.i.i484.promoted.i.i.i, %for.end23.i.i.i ], [ %and129.i.i562.i.i.i, %for.body27.i.i.i ]
  %and142.i.i57012891292.i.i.i = phi i64 [ %arrayidx3.i.i485.promoted.i.i.i, %for.end23.i.i.i ], [ %and142.i.i570.i.i.i, %for.body27.i.i.i ]
  %add.i.i57412901291.i.i.i = phi i64 [ %arrayidx4.i.i486.promoted.i.i.i, %for.end23.i.i.i ], [ %add.i.i574.i.i.i, %for.body27.i.i.i ]
  %mul.i.i487.i.i.i = shl i64 %108, 1
  %conv.i.i.i488.i.i.i = zext i64 %mul.i.i487.i.i.i to i128
  %conv1.i.i.i489.i.i.i = zext i64 %and142.i.i57012891292.i.i.i to i128
  %mul.i.i.i490.i.i.i = mul nuw i128 %conv1.i.i.i489.i.i.i, %conv.i.i.i488.i.i.i
  %mul17.i.i491.i.i.i = shl i64 %and107.i.i54812871294.i.i.i, 1
  %conv.i215.i.i492.i.i.i = zext i64 %mul17.i.i491.i.i.i to i128
  %conv1.i216.i.i493.i.i.i = zext i64 %and129.i.i56212881293.i.i.i to i128
  %mul.i217.i.i494.i.i.i = mul nuw i128 %conv1.i216.i.i493.i.i.i, %conv.i215.i.i492.i.i.i
  %add.i.i.i495.i.i.i = add i128 %mul.i.i.i490.i.i.i, %mul.i217.i.i494.i.i.i
  %conv.i218.i.i496.i.i.i = zext i64 %add.i.i57412901291.i.i.i to i128
  %mul.i220.i.i497.i.i.i = mul nuw i128 %conv.i218.i.i496.i.i.i, %conv.i218.i.i496.i.i.i
  %conv1.i222.i.i498.i.i.i = and i128 %mul.i220.i.i497.i.i.i, 18446744073709551615
  %mul.i223.i.i499.i.i.i = mul nuw nsw i128 %conv1.i222.i.i498.i.i.i, 68719492368
  %add.i224.i.i500.i.i.i = add i128 %add.i.i.i495.i.i.i, %mul.i223.i.i499.i.i.i
  %shr.i.i.i501.i.i.i = lshr i128 %mul.i220.i.i497.i.i.i, 64
  %shr.i226.i.i502.i.i.i = lshr i128 %add.i224.i.i500.i.i.i, 52
  %mul37.i.i503.i.i.i = shl i64 %add.i.i57412901291.i.i.i, 1
  %conv.i227.i.i504.i.i.i = zext i64 %108 to i128
  %conv1.i228.i.i505.i.i.i = zext i64 %mul37.i.i503.i.i.i to i128
  %mul.i229.i.i506.i.i.i = mul nuw i128 %conv1.i228.i.i505.i.i.i, %conv.i227.i.i504.i.i.i
  %mul.i233.i.i507.i.i.i = mul nuw i128 %conv1.i.i.i489.i.i.i, %conv.i215.i.i492.i.i.i
  %mul.i237.i.i508.i.i.i = mul nuw i128 %conv1.i216.i.i493.i.i.i, %conv1.i216.i.i493.i.i.i
  %mul.i241.i.i509.i.i.i = mul nuw nsw i128 %shr.i.i.i501.i.i.i, 281475040739328
  %add.i230.i.i510.i.i.i = add i128 %mul.i233.i.i507.i.i.i, %mul.i237.i.i508.i.i.i
  %add.i234.i.i511.i.i.i = add i128 %add.i230.i.i510.i.i.i, %mul.i229.i.i506.i.i.i
  %add.i238.i.i512.i.i.i = add i128 %add.i234.i.i511.i.i.i, %mul.i241.i.i509.i.i.i
  %add.i242.i.i513.i.i.i = add i128 %add.i238.i.i512.i.i.i, %shr.i226.i.i502.i.i.i
  %conv.i243.i.i514.i.i.i = trunc i128 %add.i242.i.i513.i.i.i to i64
  %shr.i244.i.i515.i.i.i = lshr i128 %add.i242.i.i513.i.i.i, 52
  %and47.i.i516.i.i.i = lshr i64 %conv.i243.i.i514.i.i.i, 48
  %109 = and i64 %and47.i.i516.i.i.i, 15
  %and54.i.i517.i.i.i = and i64 %conv.i243.i.i514.i.i.i, 281474976710655
  %mul.i247.i.i518.i.i.i = mul nuw i128 %conv.i227.i.i504.i.i.i, %conv.i227.i.i504.i.i.i
  %conv.i248.i.i519.i.i.i = zext i64 %and107.i.i54812871294.i.i.i to i128
  %mul.i250.i.i520.i.i.i = mul nuw i128 %conv1.i228.i.i505.i.i.i, %conv.i248.i.i519.i.i.i
  %mul64.i.i521.i.i.i = shl i64 %and129.i.i56212881293.i.i.i, 1
  %conv.i252.i.i522.i.i.i = zext i64 %mul64.i.i521.i.i.i to i128
  %mul.i254.i.i523.i.i.i = mul nuw i128 %conv1.i.i.i489.i.i.i, %conv.i252.i.i522.i.i.i
  %add.i251.i.i524.i.i.i = add i128 %mul.i250.i.i520.i.i.i, %mul.i254.i.i523.i.i.i
  %add.i255.i.i525.i.i.i = add i128 %add.i251.i.i524.i.i.i, %shr.i244.i.i515.i.i.i
  %conv.i256.i.i526.i.i.i = trunc i128 %add.i255.i.i525.i.i.i to i64
  %shr.i257.i.i527.i.i.i = lshr i128 %add.i255.i.i525.i.i.i, 52
  %and69.i.i528.i.i.i = shl i64 %conv.i256.i.i526.i.i.i, 4
  %shl.i.i529.i.i.i = and i64 %and69.i.i528.i.i.i, 72057594037927920
  %or.i.i530.i.i.i = or i64 %shl.i.i529.i.i.i, %109
  %conv.i258.i.i531.i.i.i = zext i64 %or.i.i530.i.i.i to i128
  %mul.i259.i.i532.i.i.i = mul nuw nsw i128 %conv.i258.i.i531.i.i.i, 4294968273
  %add.i260.i.i533.i.i.i = add i128 %mul.i259.i.i532.i.i.i, %mul.i247.i.i518.i.i.i
  %conv.i261.i.i534.i.i.i = trunc i128 %add.i260.i.i533.i.i.i to i64
  %and83.i.i535.i.i.i = and i64 %conv.i261.i.i534.i.i.i, 4503599627370495
  %shr.i262.i.i536.i.i.i = lshr i128 %add.i260.i.i533.i.i.i, 52
  %mul.i265.i.i537.i.i.i = mul nuw i128 %conv.i248.i.i519.i.i.i, %conv.i.i.i488.i.i.i
  %mul.i269.i.i538.i.i.i = mul nuw i128 %conv1.i228.i.i505.i.i.i, %conv1.i216.i.i493.i.i.i
  %mul.i273.i.i539.i.i.i = mul nuw i128 %conv1.i.i.i489.i.i.i, %conv1.i.i.i489.i.i.i
  %add.i270.i.i540.i.i.i = add i128 %mul.i269.i.i538.i.i.i, %mul.i273.i.i539.i.i.i
  %add.i274.i.i541.i.i.i = add i128 %add.i270.i.i540.i.i.i, %shr.i257.i.i527.i.i.i
  %conv.i276.i.i542.i.i.i = and i128 %add.i274.i.i541.i.i.i, 4503599627370495
  %mul.i277.i.i543.i.i.i = mul nuw nsw i128 %conv.i276.i.i542.i.i.i, 68719492368
  %add.i266.i.i544.i.i.i = add i128 %mul.i277.i.i543.i.i.i, %mul.i265.i.i537.i.i.i
  %add.i278.i.i545.i.i.i = add i128 %add.i266.i.i544.i.i.i, %shr.i262.i.i536.i.i.i
  %shr.i279.i.i546.i.i.i = lshr i128 %add.i274.i.i541.i.i.i, 52
  %conv.i280.i.i547.i.i.i = trunc i128 %add.i278.i.i545.i.i.i to i64
  %and107.i.i548.i.i.i = and i64 %conv.i280.i.i547.i.i.i, 4503599627370495
  %shr.i281.i.i550.i.i.i = lshr i128 %add.i278.i.i545.i.i.i, 52
  %mul.i284.i.i551.i.i.i = mul nuw i128 %conv1.i216.i.i493.i.i.i, %conv.i.i.i488.i.i.i
  %mul.i288.i.i552.i.i.i = mul nuw i128 %conv.i248.i.i519.i.i.i, %conv.i248.i.i519.i.i.i
  %mul.i292.i.i553.i.i.i = mul nuw i128 %conv1.i228.i.i505.i.i.i, %conv1.i.i.i489.i.i.i
  %add.i293.i.i554.i.i.i = add i128 %shr.i279.i.i546.i.i.i, %mul.i292.i.i553.i.i.i
  %conv1.i295.i.i555.i.i.i = and i128 %add.i293.i.i554.i.i.i, 18446744073709551615
  %mul.i296.i.i556.i.i.i = mul nuw nsw i128 %conv1.i295.i.i555.i.i.i, 68719492368
  %add.i285.i.i557.i.i.i = add i128 %mul.i284.i.i551.i.i.i, %mul.i288.i.i552.i.i.i
  %add.i289.i.i558.i.i.i = add i128 %add.i285.i.i557.i.i.i, %mul.i296.i.i556.i.i.i
  %add.i297.i.i559.i.i.i = add i128 %add.i289.i.i558.i.i.i, %shr.i281.i.i550.i.i.i
  %shr.i298.i.i560.i.i.i = lshr i128 %add.i293.i.i554.i.i.i, 64
  %conv.i299.i.i561.i.i.i = trunc i128 %add.i297.i.i559.i.i.i to i64
  %and129.i.i562.i.i.i = and i64 %conv.i299.i.i561.i.i.i, 4503599627370495
  %shr.i300.i.i564.i.i.i = lshr i128 %add.i297.i.i559.i.i.i, 52
  %mul.i303.i.i565.i.i.i = mul nuw nsw i128 %shr.i298.i.i560.i.i.i, 281475040739328
  %conv.i305.i.i566.i.i.i = and i128 %add.i224.i.i500.i.i.i, 4503599627370494
  %add.i304.i.i567.i.i.i = add nuw nsw i128 %mul.i303.i.i565.i.i.i, %conv.i305.i.i566.i.i.i
  %add.i306.i.i568.i.i.i = add nuw nsw i128 %add.i304.i.i567.i.i.i, %shr.i300.i.i564.i.i.i
  %conv.i307.i.i569.i.i.i = trunc i128 %add.i306.i.i568.i.i.i to i64
  %and142.i.i570.i.i.i = and i64 %conv.i307.i.i569.i.i.i, 4503599627370495
  %shr.i308.i.i572.i.i.i = lshr i128 %add.i306.i.i568.i.i.i, 52
  %conv.i309.i.i573.i.i.i = trunc i128 %shr.i308.i.i572.i.i.i to i64
  %add.i.i574.i.i.i = add nuw nsw i64 %and54.i.i517.i.i.i, %conv.i309.i.i573.i.i.i
  %inc29.i.i.i = add nuw nsw i32 %j.41295.i.i.i, 1
  %exitcond1356.not.i.i.i = icmp eq i32 %inc29.i.i.i, 22
  br i1 %exitcond1356.not.i.i.i, label %for.end30.i.i.i, label %for.body27.i.i.i, !llvm.loop !40

for.end30.i.i.i:                                  ; preds = %for.body27.i.i.i
  store i64 %and83.i.i535.i.i.i, i64* %arraydecay.i481.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i548.i.i.i, i64* %arrayidx1.i.i483.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i562.i.i.i, i64* %arrayidx2.i.i484.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i570.i.i.i, i64* %arrayidx3.i.i485.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i574.i.i.i, i64* %arrayidx4.i.i486.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x44.i.i.i, %struct.secp256k1_fe* noundef nonnull %x44.i.i.i, %struct.secp256k1_fe* noundef nonnull %x22.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %36, i8* noundef nonnull align 8 dereferenceable(40) %35, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i576.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x88.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i578.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x88.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i579.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x88.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i580.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x88.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i581.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x88.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i576.promoted.i.i.i = load i64, i64* %arraydecay.i576.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i578.promoted.i.i.i = load i64, i64* %arrayidx1.i.i578.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i579.promoted.i.i.i = load i64, i64* %arrayidx2.i.i579.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i580.promoted.i.i.i = load i64, i64* %arrayidx3.i.i580.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i581.promoted.i.i.i = load i64, i64* %arrayidx4.i.i581.i.i.i, align 8, !tbaa !13
  br label %for.body34.i.i.i

for.body34.i.i.i:                                 ; preds = %for.body34.i.i.i, %for.end30.i.i.i
  %j.51305.i.i.i = phi i32 [ 0, %for.end30.i.i.i ], [ %inc36.i.i.i, %for.body34.i.i.i ]
  %110 = phi i64 [ %arraydecay.i576.promoted.i.i.i, %for.end30.i.i.i ], [ %and83.i.i630.i.i.i, %for.body34.i.i.i ]
  %and107.i.i64312971304.i.i.i = phi i64 [ %arrayidx1.i.i578.promoted.i.i.i, %for.end30.i.i.i ], [ %and107.i.i643.i.i.i, %for.body34.i.i.i ]
  %and129.i.i65712981303.i.i.i = phi i64 [ %arrayidx2.i.i579.promoted.i.i.i, %for.end30.i.i.i ], [ %and129.i.i657.i.i.i, %for.body34.i.i.i ]
  %and142.i.i66512991302.i.i.i = phi i64 [ %arrayidx3.i.i580.promoted.i.i.i, %for.end30.i.i.i ], [ %and142.i.i665.i.i.i, %for.body34.i.i.i ]
  %add.i.i66913001301.i.i.i = phi i64 [ %arrayidx4.i.i581.promoted.i.i.i, %for.end30.i.i.i ], [ %add.i.i669.i.i.i, %for.body34.i.i.i ]
  %mul.i.i582.i.i.i = shl i64 %110, 1
  %conv.i.i.i583.i.i.i = zext i64 %mul.i.i582.i.i.i to i128
  %conv1.i.i.i584.i.i.i = zext i64 %and142.i.i66512991302.i.i.i to i128
  %mul.i.i.i585.i.i.i = mul nuw i128 %conv1.i.i.i584.i.i.i, %conv.i.i.i583.i.i.i
  %mul17.i.i586.i.i.i = shl i64 %and107.i.i64312971304.i.i.i, 1
  %conv.i215.i.i587.i.i.i = zext i64 %mul17.i.i586.i.i.i to i128
  %conv1.i216.i.i588.i.i.i = zext i64 %and129.i.i65712981303.i.i.i to i128
  %mul.i217.i.i589.i.i.i = mul nuw i128 %conv1.i216.i.i588.i.i.i, %conv.i215.i.i587.i.i.i
  %add.i.i.i590.i.i.i = add i128 %mul.i.i.i585.i.i.i, %mul.i217.i.i589.i.i.i
  %conv.i218.i.i591.i.i.i = zext i64 %add.i.i66913001301.i.i.i to i128
  %mul.i220.i.i592.i.i.i = mul nuw i128 %conv.i218.i.i591.i.i.i, %conv.i218.i.i591.i.i.i
  %conv1.i222.i.i593.i.i.i = and i128 %mul.i220.i.i592.i.i.i, 18446744073709551615
  %mul.i223.i.i594.i.i.i = mul nuw nsw i128 %conv1.i222.i.i593.i.i.i, 68719492368
  %add.i224.i.i595.i.i.i = add i128 %add.i.i.i590.i.i.i, %mul.i223.i.i594.i.i.i
  %shr.i.i.i596.i.i.i = lshr i128 %mul.i220.i.i592.i.i.i, 64
  %shr.i226.i.i597.i.i.i = lshr i128 %add.i224.i.i595.i.i.i, 52
  %mul37.i.i598.i.i.i = shl i64 %add.i.i66913001301.i.i.i, 1
  %conv.i227.i.i599.i.i.i = zext i64 %110 to i128
  %conv1.i228.i.i600.i.i.i = zext i64 %mul37.i.i598.i.i.i to i128
  %mul.i229.i.i601.i.i.i = mul nuw i128 %conv1.i228.i.i600.i.i.i, %conv.i227.i.i599.i.i.i
  %mul.i233.i.i602.i.i.i = mul nuw i128 %conv1.i.i.i584.i.i.i, %conv.i215.i.i587.i.i.i
  %mul.i237.i.i603.i.i.i = mul nuw i128 %conv1.i216.i.i588.i.i.i, %conv1.i216.i.i588.i.i.i
  %mul.i241.i.i604.i.i.i = mul nuw nsw i128 %shr.i.i.i596.i.i.i, 281475040739328
  %add.i230.i.i605.i.i.i = add i128 %mul.i233.i.i602.i.i.i, %mul.i237.i.i603.i.i.i
  %add.i234.i.i606.i.i.i = add i128 %add.i230.i.i605.i.i.i, %mul.i229.i.i601.i.i.i
  %add.i238.i.i607.i.i.i = add i128 %add.i234.i.i606.i.i.i, %mul.i241.i.i604.i.i.i
  %add.i242.i.i608.i.i.i = add i128 %add.i238.i.i607.i.i.i, %shr.i226.i.i597.i.i.i
  %conv.i243.i.i609.i.i.i = trunc i128 %add.i242.i.i608.i.i.i to i64
  %shr.i244.i.i610.i.i.i = lshr i128 %add.i242.i.i608.i.i.i, 52
  %and47.i.i611.i.i.i = lshr i64 %conv.i243.i.i609.i.i.i, 48
  %111 = and i64 %and47.i.i611.i.i.i, 15
  %and54.i.i612.i.i.i = and i64 %conv.i243.i.i609.i.i.i, 281474976710655
  %mul.i247.i.i613.i.i.i = mul nuw i128 %conv.i227.i.i599.i.i.i, %conv.i227.i.i599.i.i.i
  %conv.i248.i.i614.i.i.i = zext i64 %and107.i.i64312971304.i.i.i to i128
  %mul.i250.i.i615.i.i.i = mul nuw i128 %conv1.i228.i.i600.i.i.i, %conv.i248.i.i614.i.i.i
  %mul64.i.i616.i.i.i = shl i64 %and129.i.i65712981303.i.i.i, 1
  %conv.i252.i.i617.i.i.i = zext i64 %mul64.i.i616.i.i.i to i128
  %mul.i254.i.i618.i.i.i = mul nuw i128 %conv1.i.i.i584.i.i.i, %conv.i252.i.i617.i.i.i
  %add.i251.i.i619.i.i.i = add i128 %mul.i250.i.i615.i.i.i, %mul.i254.i.i618.i.i.i
  %add.i255.i.i620.i.i.i = add i128 %add.i251.i.i619.i.i.i, %shr.i244.i.i610.i.i.i
  %conv.i256.i.i621.i.i.i = trunc i128 %add.i255.i.i620.i.i.i to i64
  %shr.i257.i.i622.i.i.i = lshr i128 %add.i255.i.i620.i.i.i, 52
  %and69.i.i623.i.i.i = shl i64 %conv.i256.i.i621.i.i.i, 4
  %shl.i.i624.i.i.i = and i64 %and69.i.i623.i.i.i, 72057594037927920
  %or.i.i625.i.i.i = or i64 %shl.i.i624.i.i.i, %111
  %conv.i258.i.i626.i.i.i = zext i64 %or.i.i625.i.i.i to i128
  %mul.i259.i.i627.i.i.i = mul nuw nsw i128 %conv.i258.i.i626.i.i.i, 4294968273
  %add.i260.i.i628.i.i.i = add i128 %mul.i259.i.i627.i.i.i, %mul.i247.i.i613.i.i.i
  %conv.i261.i.i629.i.i.i = trunc i128 %add.i260.i.i628.i.i.i to i64
  %and83.i.i630.i.i.i = and i64 %conv.i261.i.i629.i.i.i, 4503599627370495
  %shr.i262.i.i631.i.i.i = lshr i128 %add.i260.i.i628.i.i.i, 52
  %mul.i265.i.i632.i.i.i = mul nuw i128 %conv.i248.i.i614.i.i.i, %conv.i.i.i583.i.i.i
  %mul.i269.i.i633.i.i.i = mul nuw i128 %conv1.i228.i.i600.i.i.i, %conv1.i216.i.i588.i.i.i
  %mul.i273.i.i634.i.i.i = mul nuw i128 %conv1.i.i.i584.i.i.i, %conv1.i.i.i584.i.i.i
  %add.i270.i.i635.i.i.i = add i128 %mul.i269.i.i633.i.i.i, %mul.i273.i.i634.i.i.i
  %add.i274.i.i636.i.i.i = add i128 %add.i270.i.i635.i.i.i, %shr.i257.i.i622.i.i.i
  %conv.i276.i.i637.i.i.i = and i128 %add.i274.i.i636.i.i.i, 4503599627370495
  %mul.i277.i.i638.i.i.i = mul nuw nsw i128 %conv.i276.i.i637.i.i.i, 68719492368
  %add.i266.i.i639.i.i.i = add i128 %mul.i277.i.i638.i.i.i, %mul.i265.i.i632.i.i.i
  %add.i278.i.i640.i.i.i = add i128 %add.i266.i.i639.i.i.i, %shr.i262.i.i631.i.i.i
  %shr.i279.i.i641.i.i.i = lshr i128 %add.i274.i.i636.i.i.i, 52
  %conv.i280.i.i642.i.i.i = trunc i128 %add.i278.i.i640.i.i.i to i64
  %and107.i.i643.i.i.i = and i64 %conv.i280.i.i642.i.i.i, 4503599627370495
  %shr.i281.i.i645.i.i.i = lshr i128 %add.i278.i.i640.i.i.i, 52
  %mul.i284.i.i646.i.i.i = mul nuw i128 %conv1.i216.i.i588.i.i.i, %conv.i.i.i583.i.i.i
  %mul.i288.i.i647.i.i.i = mul nuw i128 %conv.i248.i.i614.i.i.i, %conv.i248.i.i614.i.i.i
  %mul.i292.i.i648.i.i.i = mul nuw i128 %conv1.i228.i.i600.i.i.i, %conv1.i.i.i584.i.i.i
  %add.i293.i.i649.i.i.i = add i128 %shr.i279.i.i641.i.i.i, %mul.i292.i.i648.i.i.i
  %conv1.i295.i.i650.i.i.i = and i128 %add.i293.i.i649.i.i.i, 18446744073709551615
  %mul.i296.i.i651.i.i.i = mul nuw nsw i128 %conv1.i295.i.i650.i.i.i, 68719492368
  %add.i285.i.i652.i.i.i = add i128 %mul.i284.i.i646.i.i.i, %mul.i288.i.i647.i.i.i
  %add.i289.i.i653.i.i.i = add i128 %add.i285.i.i652.i.i.i, %mul.i296.i.i651.i.i.i
  %add.i297.i.i654.i.i.i = add i128 %add.i289.i.i653.i.i.i, %shr.i281.i.i645.i.i.i
  %shr.i298.i.i655.i.i.i = lshr i128 %add.i293.i.i649.i.i.i, 64
  %conv.i299.i.i656.i.i.i = trunc i128 %add.i297.i.i654.i.i.i to i64
  %and129.i.i657.i.i.i = and i64 %conv.i299.i.i656.i.i.i, 4503599627370495
  %shr.i300.i.i659.i.i.i = lshr i128 %add.i297.i.i654.i.i.i, 52
  %mul.i303.i.i660.i.i.i = mul nuw nsw i128 %shr.i298.i.i655.i.i.i, 281475040739328
  %conv.i305.i.i661.i.i.i = and i128 %add.i224.i.i595.i.i.i, 4503599627370494
  %add.i304.i.i662.i.i.i = add nuw nsw i128 %mul.i303.i.i660.i.i.i, %conv.i305.i.i661.i.i.i
  %add.i306.i.i663.i.i.i = add nuw nsw i128 %add.i304.i.i662.i.i.i, %shr.i300.i.i659.i.i.i
  %conv.i307.i.i664.i.i.i = trunc i128 %add.i306.i.i663.i.i.i to i64
  %and142.i.i665.i.i.i = and i64 %conv.i307.i.i664.i.i.i, 4503599627370495
  %shr.i308.i.i667.i.i.i = lshr i128 %add.i306.i.i663.i.i.i, 52
  %conv.i309.i.i668.i.i.i = trunc i128 %shr.i308.i.i667.i.i.i to i64
  %add.i.i669.i.i.i = add nuw nsw i64 %and54.i.i612.i.i.i, %conv.i309.i.i668.i.i.i
  %inc36.i.i.i = add nuw nsw i32 %j.51305.i.i.i, 1
  %exitcond1357.not.i.i.i = icmp eq i32 %inc36.i.i.i, 44
  br i1 %exitcond1357.not.i.i.i, label %for.end37.i.i.i, label %for.body34.i.i.i, !llvm.loop !41

for.end37.i.i.i:                                  ; preds = %for.body34.i.i.i
  store i64 %and83.i.i630.i.i.i, i64* %arraydecay.i576.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i643.i.i.i, i64* %arrayidx1.i.i578.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i657.i.i.i, i64* %arrayidx2.i.i579.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i665.i.i.i, i64* %arrayidx3.i.i580.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i669.i.i.i, i64* %arrayidx4.i.i581.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x88.i.i.i, %struct.secp256k1_fe* noundef nonnull %x88.i.i.i, %struct.secp256k1_fe* noundef nonnull %x44.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %37, i8* noundef nonnull align 8 dereferenceable(40) %36, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i671.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x176.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i673.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x176.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i674.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x176.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i675.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x176.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i676.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x176.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i671.promoted.i.i.i = load i64, i64* %arraydecay.i671.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i673.promoted.i.i.i = load i64, i64* %arrayidx1.i.i673.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i674.promoted.i.i.i = load i64, i64* %arrayidx2.i.i674.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i675.promoted.i.i.i = load i64, i64* %arrayidx3.i.i675.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i676.promoted.i.i.i = load i64, i64* %arrayidx4.i.i676.i.i.i, align 8, !tbaa !13
  br label %for.body41.i.i.i

for.body41.i.i.i:                                 ; preds = %for.body41.i.i.i, %for.end37.i.i.i
  %j.61315.i.i.i = phi i32 [ 0, %for.end37.i.i.i ], [ %inc43.i.i.i, %for.body41.i.i.i ]
  %112 = phi i64 [ %arraydecay.i671.promoted.i.i.i, %for.end37.i.i.i ], [ %and83.i.i725.i.i.i, %for.body41.i.i.i ]
  %and107.i.i73813071314.i.i.i = phi i64 [ %arrayidx1.i.i673.promoted.i.i.i, %for.end37.i.i.i ], [ %and107.i.i738.i.i.i, %for.body41.i.i.i ]
  %and129.i.i75213081313.i.i.i = phi i64 [ %arrayidx2.i.i674.promoted.i.i.i, %for.end37.i.i.i ], [ %and129.i.i752.i.i.i, %for.body41.i.i.i ]
  %and142.i.i76013091312.i.i.i = phi i64 [ %arrayidx3.i.i675.promoted.i.i.i, %for.end37.i.i.i ], [ %and142.i.i760.i.i.i, %for.body41.i.i.i ]
  %add.i.i76413101311.i.i.i = phi i64 [ %arrayidx4.i.i676.promoted.i.i.i, %for.end37.i.i.i ], [ %add.i.i764.i.i.i, %for.body41.i.i.i ]
  %mul.i.i677.i.i.i = shl i64 %112, 1
  %conv.i.i.i678.i.i.i = zext i64 %mul.i.i677.i.i.i to i128
  %conv1.i.i.i679.i.i.i = zext i64 %and142.i.i76013091312.i.i.i to i128
  %mul.i.i.i680.i.i.i = mul nuw i128 %conv1.i.i.i679.i.i.i, %conv.i.i.i678.i.i.i
  %mul17.i.i681.i.i.i = shl i64 %and107.i.i73813071314.i.i.i, 1
  %conv.i215.i.i682.i.i.i = zext i64 %mul17.i.i681.i.i.i to i128
  %conv1.i216.i.i683.i.i.i = zext i64 %and129.i.i75213081313.i.i.i to i128
  %mul.i217.i.i684.i.i.i = mul nuw i128 %conv1.i216.i.i683.i.i.i, %conv.i215.i.i682.i.i.i
  %add.i.i.i685.i.i.i = add i128 %mul.i.i.i680.i.i.i, %mul.i217.i.i684.i.i.i
  %conv.i218.i.i686.i.i.i = zext i64 %add.i.i76413101311.i.i.i to i128
  %mul.i220.i.i687.i.i.i = mul nuw i128 %conv.i218.i.i686.i.i.i, %conv.i218.i.i686.i.i.i
  %conv1.i222.i.i688.i.i.i = and i128 %mul.i220.i.i687.i.i.i, 18446744073709551615
  %mul.i223.i.i689.i.i.i = mul nuw nsw i128 %conv1.i222.i.i688.i.i.i, 68719492368
  %add.i224.i.i690.i.i.i = add i128 %add.i.i.i685.i.i.i, %mul.i223.i.i689.i.i.i
  %shr.i.i.i691.i.i.i = lshr i128 %mul.i220.i.i687.i.i.i, 64
  %shr.i226.i.i692.i.i.i = lshr i128 %add.i224.i.i690.i.i.i, 52
  %mul37.i.i693.i.i.i = shl i64 %add.i.i76413101311.i.i.i, 1
  %conv.i227.i.i694.i.i.i = zext i64 %112 to i128
  %conv1.i228.i.i695.i.i.i = zext i64 %mul37.i.i693.i.i.i to i128
  %mul.i229.i.i696.i.i.i = mul nuw i128 %conv1.i228.i.i695.i.i.i, %conv.i227.i.i694.i.i.i
  %mul.i233.i.i697.i.i.i = mul nuw i128 %conv1.i.i.i679.i.i.i, %conv.i215.i.i682.i.i.i
  %mul.i237.i.i698.i.i.i = mul nuw i128 %conv1.i216.i.i683.i.i.i, %conv1.i216.i.i683.i.i.i
  %mul.i241.i.i699.i.i.i = mul nuw nsw i128 %shr.i.i.i691.i.i.i, 281475040739328
  %add.i230.i.i700.i.i.i = add i128 %mul.i233.i.i697.i.i.i, %mul.i237.i.i698.i.i.i
  %add.i234.i.i701.i.i.i = add i128 %add.i230.i.i700.i.i.i, %mul.i229.i.i696.i.i.i
  %add.i238.i.i702.i.i.i = add i128 %add.i234.i.i701.i.i.i, %mul.i241.i.i699.i.i.i
  %add.i242.i.i703.i.i.i = add i128 %add.i238.i.i702.i.i.i, %shr.i226.i.i692.i.i.i
  %conv.i243.i.i704.i.i.i = trunc i128 %add.i242.i.i703.i.i.i to i64
  %shr.i244.i.i705.i.i.i = lshr i128 %add.i242.i.i703.i.i.i, 52
  %and47.i.i706.i.i.i = lshr i64 %conv.i243.i.i704.i.i.i, 48
  %113 = and i64 %and47.i.i706.i.i.i, 15
  %and54.i.i707.i.i.i = and i64 %conv.i243.i.i704.i.i.i, 281474976710655
  %mul.i247.i.i708.i.i.i = mul nuw i128 %conv.i227.i.i694.i.i.i, %conv.i227.i.i694.i.i.i
  %conv.i248.i.i709.i.i.i = zext i64 %and107.i.i73813071314.i.i.i to i128
  %mul.i250.i.i710.i.i.i = mul nuw i128 %conv1.i228.i.i695.i.i.i, %conv.i248.i.i709.i.i.i
  %mul64.i.i711.i.i.i = shl i64 %and129.i.i75213081313.i.i.i, 1
  %conv.i252.i.i712.i.i.i = zext i64 %mul64.i.i711.i.i.i to i128
  %mul.i254.i.i713.i.i.i = mul nuw i128 %conv1.i.i.i679.i.i.i, %conv.i252.i.i712.i.i.i
  %add.i251.i.i714.i.i.i = add i128 %mul.i250.i.i710.i.i.i, %mul.i254.i.i713.i.i.i
  %add.i255.i.i715.i.i.i = add i128 %add.i251.i.i714.i.i.i, %shr.i244.i.i705.i.i.i
  %conv.i256.i.i716.i.i.i = trunc i128 %add.i255.i.i715.i.i.i to i64
  %shr.i257.i.i717.i.i.i = lshr i128 %add.i255.i.i715.i.i.i, 52
  %and69.i.i718.i.i.i = shl i64 %conv.i256.i.i716.i.i.i, 4
  %shl.i.i719.i.i.i = and i64 %and69.i.i718.i.i.i, 72057594037927920
  %or.i.i720.i.i.i = or i64 %shl.i.i719.i.i.i, %113
  %conv.i258.i.i721.i.i.i = zext i64 %or.i.i720.i.i.i to i128
  %mul.i259.i.i722.i.i.i = mul nuw nsw i128 %conv.i258.i.i721.i.i.i, 4294968273
  %add.i260.i.i723.i.i.i = add i128 %mul.i259.i.i722.i.i.i, %mul.i247.i.i708.i.i.i
  %conv.i261.i.i724.i.i.i = trunc i128 %add.i260.i.i723.i.i.i to i64
  %and83.i.i725.i.i.i = and i64 %conv.i261.i.i724.i.i.i, 4503599627370495
  %shr.i262.i.i726.i.i.i = lshr i128 %add.i260.i.i723.i.i.i, 52
  %mul.i265.i.i727.i.i.i = mul nuw i128 %conv.i248.i.i709.i.i.i, %conv.i.i.i678.i.i.i
  %mul.i269.i.i728.i.i.i = mul nuw i128 %conv1.i228.i.i695.i.i.i, %conv1.i216.i.i683.i.i.i
  %mul.i273.i.i729.i.i.i = mul nuw i128 %conv1.i.i.i679.i.i.i, %conv1.i.i.i679.i.i.i
  %add.i270.i.i730.i.i.i = add i128 %mul.i269.i.i728.i.i.i, %mul.i273.i.i729.i.i.i
  %add.i274.i.i731.i.i.i = add i128 %add.i270.i.i730.i.i.i, %shr.i257.i.i717.i.i.i
  %conv.i276.i.i732.i.i.i = and i128 %add.i274.i.i731.i.i.i, 4503599627370495
  %mul.i277.i.i733.i.i.i = mul nuw nsw i128 %conv.i276.i.i732.i.i.i, 68719492368
  %add.i266.i.i734.i.i.i = add i128 %mul.i277.i.i733.i.i.i, %mul.i265.i.i727.i.i.i
  %add.i278.i.i735.i.i.i = add i128 %add.i266.i.i734.i.i.i, %shr.i262.i.i726.i.i.i
  %shr.i279.i.i736.i.i.i = lshr i128 %add.i274.i.i731.i.i.i, 52
  %conv.i280.i.i737.i.i.i = trunc i128 %add.i278.i.i735.i.i.i to i64
  %and107.i.i738.i.i.i = and i64 %conv.i280.i.i737.i.i.i, 4503599627370495
  %shr.i281.i.i740.i.i.i = lshr i128 %add.i278.i.i735.i.i.i, 52
  %mul.i284.i.i741.i.i.i = mul nuw i128 %conv1.i216.i.i683.i.i.i, %conv.i.i.i678.i.i.i
  %mul.i288.i.i742.i.i.i = mul nuw i128 %conv.i248.i.i709.i.i.i, %conv.i248.i.i709.i.i.i
  %mul.i292.i.i743.i.i.i = mul nuw i128 %conv1.i228.i.i695.i.i.i, %conv1.i.i.i679.i.i.i
  %add.i293.i.i744.i.i.i = add i128 %shr.i279.i.i736.i.i.i, %mul.i292.i.i743.i.i.i
  %conv1.i295.i.i745.i.i.i = and i128 %add.i293.i.i744.i.i.i, 18446744073709551615
  %mul.i296.i.i746.i.i.i = mul nuw nsw i128 %conv1.i295.i.i745.i.i.i, 68719492368
  %add.i285.i.i747.i.i.i = add i128 %mul.i284.i.i741.i.i.i, %mul.i288.i.i742.i.i.i
  %add.i289.i.i748.i.i.i = add i128 %add.i285.i.i747.i.i.i, %mul.i296.i.i746.i.i.i
  %add.i297.i.i749.i.i.i = add i128 %add.i289.i.i748.i.i.i, %shr.i281.i.i740.i.i.i
  %shr.i298.i.i750.i.i.i = lshr i128 %add.i293.i.i744.i.i.i, 64
  %conv.i299.i.i751.i.i.i = trunc i128 %add.i297.i.i749.i.i.i to i64
  %and129.i.i752.i.i.i = and i64 %conv.i299.i.i751.i.i.i, 4503599627370495
  %shr.i300.i.i754.i.i.i = lshr i128 %add.i297.i.i749.i.i.i, 52
  %mul.i303.i.i755.i.i.i = mul nuw nsw i128 %shr.i298.i.i750.i.i.i, 281475040739328
  %conv.i305.i.i756.i.i.i = and i128 %add.i224.i.i690.i.i.i, 4503599627370494
  %add.i304.i.i757.i.i.i = add nuw nsw i128 %mul.i303.i.i755.i.i.i, %conv.i305.i.i756.i.i.i
  %add.i306.i.i758.i.i.i = add nuw nsw i128 %add.i304.i.i757.i.i.i, %shr.i300.i.i754.i.i.i
  %conv.i307.i.i759.i.i.i = trunc i128 %add.i306.i.i758.i.i.i to i64
  %and142.i.i760.i.i.i = and i64 %conv.i307.i.i759.i.i.i, 4503599627370495
  %shr.i308.i.i762.i.i.i = lshr i128 %add.i306.i.i758.i.i.i, 52
  %conv.i309.i.i763.i.i.i = trunc i128 %shr.i308.i.i762.i.i.i to i64
  %add.i.i764.i.i.i = add nuw nsw i64 %and54.i.i707.i.i.i, %conv.i309.i.i763.i.i.i
  %inc43.i.i.i = add nuw nsw i32 %j.61315.i.i.i, 1
  %exitcond1358.not.i.i.i = icmp eq i32 %inc43.i.i.i, 88
  br i1 %exitcond1358.not.i.i.i, label %for.end44.i.i.i, label %for.body41.i.i.i, !llvm.loop !42

for.end44.i.i.i:                                  ; preds = %for.body41.i.i.i
  store i64 %and83.i.i725.i.i.i, i64* %arraydecay.i671.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i738.i.i.i, i64* %arrayidx1.i.i673.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i752.i.i.i, i64* %arrayidx2.i.i674.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i760.i.i.i, i64* %arrayidx3.i.i675.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i764.i.i.i, i64* %arrayidx4.i.i676.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x176.i.i.i, %struct.secp256k1_fe* noundef nonnull %x176.i.i.i, %struct.secp256k1_fe* noundef nonnull %x88.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %38, i8* noundef nonnull align 8 dereferenceable(40) %37, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i766.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x220.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i768.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x220.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i769.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x220.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i770.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x220.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i771.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x220.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i766.promoted.i.i.i = load i64, i64* %arraydecay.i766.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i768.promoted.i.i.i = load i64, i64* %arrayidx1.i.i768.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i769.promoted.i.i.i = load i64, i64* %arrayidx2.i.i769.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i770.promoted.i.i.i = load i64, i64* %arrayidx3.i.i770.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i771.promoted.i.i.i = load i64, i64* %arrayidx4.i.i771.i.i.i, align 8, !tbaa !13
  br label %for.body48.i.i.i

for.body48.i.i.i:                                 ; preds = %for.body48.i.i.i, %for.end44.i.i.i
  %j.71325.i.i.i = phi i32 [ 0, %for.end44.i.i.i ], [ %inc50.i.i.i, %for.body48.i.i.i ]
  %114 = phi i64 [ %arraydecay.i766.promoted.i.i.i, %for.end44.i.i.i ], [ %and83.i.i820.i.i.i, %for.body48.i.i.i ]
  %and107.i.i83313171324.i.i.i = phi i64 [ %arrayidx1.i.i768.promoted.i.i.i, %for.end44.i.i.i ], [ %and107.i.i833.i.i.i, %for.body48.i.i.i ]
  %and129.i.i84713181323.i.i.i = phi i64 [ %arrayidx2.i.i769.promoted.i.i.i, %for.end44.i.i.i ], [ %and129.i.i847.i.i.i, %for.body48.i.i.i ]
  %and142.i.i85513191322.i.i.i = phi i64 [ %arrayidx3.i.i770.promoted.i.i.i, %for.end44.i.i.i ], [ %and142.i.i855.i.i.i, %for.body48.i.i.i ]
  %add.i.i85913201321.i.i.i = phi i64 [ %arrayidx4.i.i771.promoted.i.i.i, %for.end44.i.i.i ], [ %add.i.i859.i.i.i, %for.body48.i.i.i ]
  %mul.i.i772.i.i.i = shl i64 %114, 1
  %conv.i.i.i773.i.i.i = zext i64 %mul.i.i772.i.i.i to i128
  %conv1.i.i.i774.i.i.i = zext i64 %and142.i.i85513191322.i.i.i to i128
  %mul.i.i.i775.i.i.i = mul nuw i128 %conv1.i.i.i774.i.i.i, %conv.i.i.i773.i.i.i
  %mul17.i.i776.i.i.i = shl i64 %and107.i.i83313171324.i.i.i, 1
  %conv.i215.i.i777.i.i.i = zext i64 %mul17.i.i776.i.i.i to i128
  %conv1.i216.i.i778.i.i.i = zext i64 %and129.i.i84713181323.i.i.i to i128
  %mul.i217.i.i779.i.i.i = mul nuw i128 %conv1.i216.i.i778.i.i.i, %conv.i215.i.i777.i.i.i
  %add.i.i.i780.i.i.i = add i128 %mul.i.i.i775.i.i.i, %mul.i217.i.i779.i.i.i
  %conv.i218.i.i781.i.i.i = zext i64 %add.i.i85913201321.i.i.i to i128
  %mul.i220.i.i782.i.i.i = mul nuw i128 %conv.i218.i.i781.i.i.i, %conv.i218.i.i781.i.i.i
  %conv1.i222.i.i783.i.i.i = and i128 %mul.i220.i.i782.i.i.i, 18446744073709551615
  %mul.i223.i.i784.i.i.i = mul nuw nsw i128 %conv1.i222.i.i783.i.i.i, 68719492368
  %add.i224.i.i785.i.i.i = add i128 %add.i.i.i780.i.i.i, %mul.i223.i.i784.i.i.i
  %shr.i.i.i786.i.i.i = lshr i128 %mul.i220.i.i782.i.i.i, 64
  %shr.i226.i.i787.i.i.i = lshr i128 %add.i224.i.i785.i.i.i, 52
  %mul37.i.i788.i.i.i = shl i64 %add.i.i85913201321.i.i.i, 1
  %conv.i227.i.i789.i.i.i = zext i64 %114 to i128
  %conv1.i228.i.i790.i.i.i = zext i64 %mul37.i.i788.i.i.i to i128
  %mul.i229.i.i791.i.i.i = mul nuw i128 %conv1.i228.i.i790.i.i.i, %conv.i227.i.i789.i.i.i
  %mul.i233.i.i792.i.i.i = mul nuw i128 %conv1.i.i.i774.i.i.i, %conv.i215.i.i777.i.i.i
  %mul.i237.i.i793.i.i.i = mul nuw i128 %conv1.i216.i.i778.i.i.i, %conv1.i216.i.i778.i.i.i
  %mul.i241.i.i794.i.i.i = mul nuw nsw i128 %shr.i.i.i786.i.i.i, 281475040739328
  %add.i230.i.i795.i.i.i = add i128 %mul.i233.i.i792.i.i.i, %mul.i237.i.i793.i.i.i
  %add.i234.i.i796.i.i.i = add i128 %add.i230.i.i795.i.i.i, %mul.i229.i.i791.i.i.i
  %add.i238.i.i797.i.i.i = add i128 %add.i234.i.i796.i.i.i, %mul.i241.i.i794.i.i.i
  %add.i242.i.i798.i.i.i = add i128 %add.i238.i.i797.i.i.i, %shr.i226.i.i787.i.i.i
  %conv.i243.i.i799.i.i.i = trunc i128 %add.i242.i.i798.i.i.i to i64
  %shr.i244.i.i800.i.i.i = lshr i128 %add.i242.i.i798.i.i.i, 52
  %and47.i.i801.i.i.i = lshr i64 %conv.i243.i.i799.i.i.i, 48
  %115 = and i64 %and47.i.i801.i.i.i, 15
  %and54.i.i802.i.i.i = and i64 %conv.i243.i.i799.i.i.i, 281474976710655
  %mul.i247.i.i803.i.i.i = mul nuw i128 %conv.i227.i.i789.i.i.i, %conv.i227.i.i789.i.i.i
  %conv.i248.i.i804.i.i.i = zext i64 %and107.i.i83313171324.i.i.i to i128
  %mul.i250.i.i805.i.i.i = mul nuw i128 %conv1.i228.i.i790.i.i.i, %conv.i248.i.i804.i.i.i
  %mul64.i.i806.i.i.i = shl i64 %and129.i.i84713181323.i.i.i, 1
  %conv.i252.i.i807.i.i.i = zext i64 %mul64.i.i806.i.i.i to i128
  %mul.i254.i.i808.i.i.i = mul nuw i128 %conv1.i.i.i774.i.i.i, %conv.i252.i.i807.i.i.i
  %add.i251.i.i809.i.i.i = add i128 %mul.i250.i.i805.i.i.i, %mul.i254.i.i808.i.i.i
  %add.i255.i.i810.i.i.i = add i128 %add.i251.i.i809.i.i.i, %shr.i244.i.i800.i.i.i
  %conv.i256.i.i811.i.i.i = trunc i128 %add.i255.i.i810.i.i.i to i64
  %shr.i257.i.i812.i.i.i = lshr i128 %add.i255.i.i810.i.i.i, 52
  %and69.i.i813.i.i.i = shl i64 %conv.i256.i.i811.i.i.i, 4
  %shl.i.i814.i.i.i = and i64 %and69.i.i813.i.i.i, 72057594037927920
  %or.i.i815.i.i.i = or i64 %shl.i.i814.i.i.i, %115
  %conv.i258.i.i816.i.i.i = zext i64 %or.i.i815.i.i.i to i128
  %mul.i259.i.i817.i.i.i = mul nuw nsw i128 %conv.i258.i.i816.i.i.i, 4294968273
  %add.i260.i.i818.i.i.i = add i128 %mul.i259.i.i817.i.i.i, %mul.i247.i.i803.i.i.i
  %conv.i261.i.i819.i.i.i = trunc i128 %add.i260.i.i818.i.i.i to i64
  %and83.i.i820.i.i.i = and i64 %conv.i261.i.i819.i.i.i, 4503599627370495
  %shr.i262.i.i821.i.i.i = lshr i128 %add.i260.i.i818.i.i.i, 52
  %mul.i265.i.i822.i.i.i = mul nuw i128 %conv.i248.i.i804.i.i.i, %conv.i.i.i773.i.i.i
  %mul.i269.i.i823.i.i.i = mul nuw i128 %conv1.i228.i.i790.i.i.i, %conv1.i216.i.i778.i.i.i
  %mul.i273.i.i824.i.i.i = mul nuw i128 %conv1.i.i.i774.i.i.i, %conv1.i.i.i774.i.i.i
  %add.i270.i.i825.i.i.i = add i128 %mul.i269.i.i823.i.i.i, %mul.i273.i.i824.i.i.i
  %add.i274.i.i826.i.i.i = add i128 %add.i270.i.i825.i.i.i, %shr.i257.i.i812.i.i.i
  %conv.i276.i.i827.i.i.i = and i128 %add.i274.i.i826.i.i.i, 4503599627370495
  %mul.i277.i.i828.i.i.i = mul nuw nsw i128 %conv.i276.i.i827.i.i.i, 68719492368
  %add.i266.i.i829.i.i.i = add i128 %mul.i277.i.i828.i.i.i, %mul.i265.i.i822.i.i.i
  %add.i278.i.i830.i.i.i = add i128 %add.i266.i.i829.i.i.i, %shr.i262.i.i821.i.i.i
  %shr.i279.i.i831.i.i.i = lshr i128 %add.i274.i.i826.i.i.i, 52
  %conv.i280.i.i832.i.i.i = trunc i128 %add.i278.i.i830.i.i.i to i64
  %and107.i.i833.i.i.i = and i64 %conv.i280.i.i832.i.i.i, 4503599627370495
  %shr.i281.i.i835.i.i.i = lshr i128 %add.i278.i.i830.i.i.i, 52
  %mul.i284.i.i836.i.i.i = mul nuw i128 %conv1.i216.i.i778.i.i.i, %conv.i.i.i773.i.i.i
  %mul.i288.i.i837.i.i.i = mul nuw i128 %conv.i248.i.i804.i.i.i, %conv.i248.i.i804.i.i.i
  %mul.i292.i.i838.i.i.i = mul nuw i128 %conv1.i228.i.i790.i.i.i, %conv1.i.i.i774.i.i.i
  %add.i293.i.i839.i.i.i = add i128 %shr.i279.i.i831.i.i.i, %mul.i292.i.i838.i.i.i
  %conv1.i295.i.i840.i.i.i = and i128 %add.i293.i.i839.i.i.i, 18446744073709551615
  %mul.i296.i.i841.i.i.i = mul nuw nsw i128 %conv1.i295.i.i840.i.i.i, 68719492368
  %add.i285.i.i842.i.i.i = add i128 %mul.i284.i.i836.i.i.i, %mul.i288.i.i837.i.i.i
  %add.i289.i.i843.i.i.i = add i128 %add.i285.i.i842.i.i.i, %mul.i296.i.i841.i.i.i
  %add.i297.i.i844.i.i.i = add i128 %add.i289.i.i843.i.i.i, %shr.i281.i.i835.i.i.i
  %shr.i298.i.i845.i.i.i = lshr i128 %add.i293.i.i839.i.i.i, 64
  %conv.i299.i.i846.i.i.i = trunc i128 %add.i297.i.i844.i.i.i to i64
  %and129.i.i847.i.i.i = and i64 %conv.i299.i.i846.i.i.i, 4503599627370495
  %shr.i300.i.i849.i.i.i = lshr i128 %add.i297.i.i844.i.i.i, 52
  %mul.i303.i.i850.i.i.i = mul nuw nsw i128 %shr.i298.i.i845.i.i.i, 281475040739328
  %conv.i305.i.i851.i.i.i = and i128 %add.i224.i.i785.i.i.i, 4503599627370494
  %add.i304.i.i852.i.i.i = add nuw nsw i128 %mul.i303.i.i850.i.i.i, %conv.i305.i.i851.i.i.i
  %add.i306.i.i853.i.i.i = add nuw nsw i128 %add.i304.i.i852.i.i.i, %shr.i300.i.i849.i.i.i
  %conv.i307.i.i854.i.i.i = trunc i128 %add.i306.i.i853.i.i.i to i64
  %and142.i.i855.i.i.i = and i64 %conv.i307.i.i854.i.i.i, 4503599627370495
  %shr.i308.i.i857.i.i.i = lshr i128 %add.i306.i.i853.i.i.i, 52
  %conv.i309.i.i858.i.i.i = trunc i128 %shr.i308.i.i857.i.i.i to i64
  %add.i.i859.i.i.i = add nuw nsw i64 %and54.i.i802.i.i.i, %conv.i309.i.i858.i.i.i
  %inc50.i.i.i = add nuw nsw i32 %j.71325.i.i.i, 1
  %exitcond1359.not.i.i.i = icmp eq i32 %inc50.i.i.i, 44
  br i1 %exitcond1359.not.i.i.i, label %for.end51.i.i.i, label %for.body48.i.i.i, !llvm.loop !43

for.end51.i.i.i:                                  ; preds = %for.body48.i.i.i
  store i64 %and83.i.i820.i.i.i, i64* %arraydecay.i766.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i833.i.i.i, i64* %arrayidx1.i.i768.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i847.i.i.i, i64* %arrayidx2.i.i769.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i855.i.i.i, i64* %arrayidx3.i.i770.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i859.i.i.i, i64* %arrayidx4.i.i771.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x220.i.i.i, %struct.secp256k1_fe* noundef nonnull %x220.i.i.i, %struct.secp256k1_fe* noundef nonnull %x44.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %39, i8* noundef nonnull align 8 dereferenceable(40) %38, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i861.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x223.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i863.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x223.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i864.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x223.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i865.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x223.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i866.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x223.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i861.promoted.i.i.i = load i64, i64* %arraydecay.i861.i.i.i, align 16, !tbaa !13
  %arrayidx1.i.i863.promoted.i.i.i = load i64, i64* %arrayidx1.i.i863.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i864.promoted.i.i.i = load i64, i64* %arrayidx2.i.i864.i.i.i, align 16, !tbaa !13
  %arrayidx3.i.i865.promoted.i.i.i = load i64, i64* %arrayidx3.i.i865.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i866.promoted.i.i.i = load i64, i64* %arrayidx4.i.i866.i.i.i, align 16, !tbaa !13
  %mul.i.i867.i.i.i = shl i64 %arraydecay.i861.promoted.i.i.i, 1
  %conv.i.i.i868.i.i.i = zext i64 %mul.i.i867.i.i.i to i128
  %conv1.i.i.i869.i.i.i = zext i64 %arrayidx3.i.i865.promoted.i.i.i to i128
  %mul.i.i.i870.i.i.i = mul nuw i128 %conv1.i.i.i869.i.i.i, %conv.i.i.i868.i.i.i
  %mul17.i.i871.i.i.i = shl i64 %arrayidx1.i.i863.promoted.i.i.i, 1
  %conv.i215.i.i872.i.i.i = zext i64 %mul17.i.i871.i.i.i to i128
  %conv1.i216.i.i873.i.i.i = zext i64 %arrayidx2.i.i864.promoted.i.i.i to i128
  %mul.i217.i.i874.i.i.i = mul nuw i128 %conv1.i216.i.i873.i.i.i, %conv.i215.i.i872.i.i.i
  %add.i.i.i875.i.i.i = add i128 %mul.i.i.i870.i.i.i, %mul.i217.i.i874.i.i.i
  %conv.i218.i.i876.i.i.i = zext i64 %arrayidx4.i.i866.promoted.i.i.i to i128
  %mul.i220.i.i877.i.i.i = mul nuw i128 %conv.i218.i.i876.i.i.i, %conv.i218.i.i876.i.i.i
  %conv1.i222.i.i878.i.i.i = and i128 %mul.i220.i.i877.i.i.i, 18446744073709551615
  %mul.i223.i.i879.i.i.i = mul nuw nsw i128 %conv1.i222.i.i878.i.i.i, 68719492368
  %add.i224.i.i880.i.i.i = add i128 %add.i.i.i875.i.i.i, %mul.i223.i.i879.i.i.i
  %shr.i.i.i881.i.i.i = lshr i128 %mul.i220.i.i877.i.i.i, 64
  %shr.i226.i.i882.i.i.i = lshr i128 %add.i224.i.i880.i.i.i, 52
  %mul37.i.i883.i.i.i = shl i64 %arrayidx4.i.i866.promoted.i.i.i, 1
  %conv.i227.i.i884.i.i.i = zext i64 %arraydecay.i861.promoted.i.i.i to i128
  %conv1.i228.i.i885.i.i.i = zext i64 %mul37.i.i883.i.i.i to i128
  %mul.i229.i.i886.i.i.i = mul nuw i128 %conv1.i228.i.i885.i.i.i, %conv.i227.i.i884.i.i.i
  %mul.i233.i.i887.i.i.i = mul nuw i128 %conv1.i.i.i869.i.i.i, %conv.i215.i.i872.i.i.i
  %mul.i237.i.i888.i.i.i = mul nuw i128 %conv1.i216.i.i873.i.i.i, %conv1.i216.i.i873.i.i.i
  %mul.i241.i.i889.i.i.i = mul nuw nsw i128 %shr.i.i.i881.i.i.i, 281475040739328
  %add.i230.i.i890.i.i.i = add i128 %mul.i233.i.i887.i.i.i, %mul.i237.i.i888.i.i.i
  %add.i234.i.i891.i.i.i = add i128 %add.i230.i.i890.i.i.i, %mul.i229.i.i886.i.i.i
  %add.i238.i.i892.i.i.i = add i128 %add.i234.i.i891.i.i.i, %mul.i241.i.i889.i.i.i
  %add.i242.i.i893.i.i.i = add i128 %add.i238.i.i892.i.i.i, %shr.i226.i.i882.i.i.i
  %conv.i243.i.i894.i.i.i = trunc i128 %add.i242.i.i893.i.i.i to i64
  %shr.i244.i.i895.i.i.i = lshr i128 %add.i242.i.i893.i.i.i, 52
  %and47.i.i896.i.i.i = lshr i64 %conv.i243.i.i894.i.i.i, 48
  %116 = and i64 %and47.i.i896.i.i.i, 15
  %and54.i.i897.i.i.i = and i64 %conv.i243.i.i894.i.i.i, 281474976710655
  %mul.i247.i.i898.i.i.i = mul nuw i128 %conv.i227.i.i884.i.i.i, %conv.i227.i.i884.i.i.i
  %conv.i248.i.i899.i.i.i = zext i64 %arrayidx1.i.i863.promoted.i.i.i to i128
  %mul.i250.i.i900.i.i.i = mul nuw i128 %conv1.i228.i.i885.i.i.i, %conv.i248.i.i899.i.i.i
  %mul64.i.i901.i.i.i = shl i64 %arrayidx2.i.i864.promoted.i.i.i, 1
  %conv.i252.i.i902.i.i.i = zext i64 %mul64.i.i901.i.i.i to i128
  %mul.i254.i.i903.i.i.i = mul nuw i128 %conv1.i.i.i869.i.i.i, %conv.i252.i.i902.i.i.i
  %add.i251.i.i904.i.i.i = add i128 %mul.i250.i.i900.i.i.i, %mul.i254.i.i903.i.i.i
  %add.i255.i.i905.i.i.i = add i128 %add.i251.i.i904.i.i.i, %shr.i244.i.i895.i.i.i
  %conv.i256.i.i906.i.i.i = trunc i128 %add.i255.i.i905.i.i.i to i64
  %shr.i257.i.i907.i.i.i = lshr i128 %add.i255.i.i905.i.i.i, 52
  %and69.i.i908.i.i.i = shl i64 %conv.i256.i.i906.i.i.i, 4
  %shl.i.i909.i.i.i = and i64 %and69.i.i908.i.i.i, 72057594037927920
  %or.i.i910.i.i.i = or i64 %shl.i.i909.i.i.i, %116
  %conv.i258.i.i911.i.i.i = zext i64 %or.i.i910.i.i.i to i128
  %mul.i259.i.i912.i.i.i = mul nuw nsw i128 %conv.i258.i.i911.i.i.i, 4294968273
  %add.i260.i.i913.i.i.i = add i128 %mul.i259.i.i912.i.i.i, %mul.i247.i.i898.i.i.i
  %conv.i261.i.i914.i.i.i = trunc i128 %add.i260.i.i913.i.i.i to i64
  %and83.i.i915.i.i.i = and i64 %conv.i261.i.i914.i.i.i, 4503599627370495
  %shr.i262.i.i916.i.i.i = lshr i128 %add.i260.i.i913.i.i.i, 52
  %mul.i265.i.i917.i.i.i = mul nuw i128 %conv.i248.i.i899.i.i.i, %conv.i.i.i868.i.i.i
  %mul.i269.i.i918.i.i.i = mul nuw i128 %conv1.i228.i.i885.i.i.i, %conv1.i216.i.i873.i.i.i
  %mul.i273.i.i919.i.i.i = mul nuw i128 %conv1.i.i.i869.i.i.i, %conv1.i.i.i869.i.i.i
  %add.i270.i.i920.i.i.i = add i128 %mul.i269.i.i918.i.i.i, %mul.i273.i.i919.i.i.i
  %add.i274.i.i921.i.i.i = add i128 %add.i270.i.i920.i.i.i, %shr.i257.i.i907.i.i.i
  %conv.i276.i.i922.i.i.i = and i128 %add.i274.i.i921.i.i.i, 4503599627370495
  %mul.i277.i.i923.i.i.i = mul nuw nsw i128 %conv.i276.i.i922.i.i.i, 68719492368
  %add.i266.i.i924.i.i.i = add i128 %mul.i277.i.i923.i.i.i, %mul.i265.i.i917.i.i.i
  %add.i278.i.i925.i.i.i = add i128 %add.i266.i.i924.i.i.i, %shr.i262.i.i916.i.i.i
  %shr.i279.i.i926.i.i.i = lshr i128 %add.i274.i.i921.i.i.i, 52
  %conv.i280.i.i927.i.i.i = trunc i128 %add.i278.i.i925.i.i.i to i64
  %and107.i.i928.i.i.i = and i64 %conv.i280.i.i927.i.i.i, 4503599627370495
  %shr.i281.i.i930.i.i.i = lshr i128 %add.i278.i.i925.i.i.i, 52
  %mul.i284.i.i931.i.i.i = mul nuw i128 %conv1.i216.i.i873.i.i.i, %conv.i.i.i868.i.i.i
  %mul.i288.i.i932.i.i.i = mul nuw i128 %conv.i248.i.i899.i.i.i, %conv.i248.i.i899.i.i.i
  %mul.i292.i.i933.i.i.i = mul nuw i128 %conv1.i228.i.i885.i.i.i, %conv1.i.i.i869.i.i.i
  %add.i293.i.i934.i.i.i = add i128 %shr.i279.i.i926.i.i.i, %mul.i292.i.i933.i.i.i
  %conv1.i295.i.i935.i.i.i = and i128 %add.i293.i.i934.i.i.i, 18446744073709551615
  %mul.i296.i.i936.i.i.i = mul nuw nsw i128 %conv1.i295.i.i935.i.i.i, 68719492368
  %add.i285.i.i937.i.i.i = add i128 %mul.i284.i.i931.i.i.i, %mul.i288.i.i932.i.i.i
  %add.i289.i.i938.i.i.i = add i128 %add.i285.i.i937.i.i.i, %mul.i296.i.i936.i.i.i
  %add.i297.i.i939.i.i.i = add i128 %add.i289.i.i938.i.i.i, %shr.i281.i.i930.i.i.i
  %shr.i298.i.i940.i.i.i = lshr i128 %add.i293.i.i934.i.i.i, 64
  %conv.i299.i.i941.i.i.i = trunc i128 %add.i297.i.i939.i.i.i to i64
  %and129.i.i942.i.i.i = and i64 %conv.i299.i.i941.i.i.i, 4503599627370495
  %shr.i300.i.i944.i.i.i = lshr i128 %add.i297.i.i939.i.i.i, 52
  %mul.i303.i.i945.i.i.i = mul nuw nsw i128 %shr.i298.i.i940.i.i.i, 281475040739328
  %conv.i305.i.i946.i.i.i = and i128 %add.i224.i.i880.i.i.i, 4503599627370494
  %add.i304.i.i947.i.i.i = add nuw nsw i128 %mul.i303.i.i945.i.i.i, %conv.i305.i.i946.i.i.i
  %add.i306.i.i948.i.i.i = add nuw nsw i128 %add.i304.i.i947.i.i.i, %shr.i300.i.i944.i.i.i
  %shr.i308.i.i952.i.i.i = lshr i128 %add.i306.i.i948.i.i.i, 52
  %conv.i309.i.i953.i.i.i = trunc i128 %shr.i308.i.i952.i.i.i to i64
  %add.i.i954.i.i.i = add nuw nsw i64 %and54.i.i897.i.i.i, %conv.i309.i.i953.i.i.i
  %mul.i.i867.1.i.i.i = shl nuw nsw i64 %and83.i.i915.i.i.i, 1
  %conv.i.i.i868.1.i.i.i = zext i64 %mul.i.i867.1.i.i.i to i128
  %conv1.i.i.i869.1.i.i.i = and i128 %add.i306.i.i948.i.i.i, 4503599627370495
  %mul.i.i.i870.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.1.i.i.i, %conv.i.i.i868.1.i.i.i
  %mul17.i.i871.1.i.i.i = shl nuw nsw i64 %and107.i.i928.i.i.i, 1
  %conv.i215.i.i872.1.i.i.i = zext i64 %mul17.i.i871.1.i.i.i to i128
  %conv1.i216.i.i873.1.i.i.i = zext i64 %and129.i.i942.i.i.i to i128
  %mul.i217.i.i874.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i873.1.i.i.i, %conv.i215.i.i872.1.i.i.i
  %add.i.i.i875.1.i.i.i = add nuw nsw i128 %mul.i.i.i870.1.i.i.i, %mul.i217.i.i874.1.i.i.i
  %conv.i218.i.i876.1.i.i.i = zext i64 %add.i.i954.i.i.i to i128
  %mul.i220.i.i877.1.i.i.i = mul nuw nsw i128 %conv.i218.i.i876.1.i.i.i, %conv.i218.i.i876.1.i.i.i
  %conv1.i222.i.i878.1.i.i.i = and i128 %mul.i220.i.i877.1.i.i.i, 18446744073709551615
  %mul.i223.i.i879.1.i.i.i = mul nuw nsw i128 %conv1.i222.i.i878.1.i.i.i, 68719492368
  %add.i224.i.i880.1.i.i.i = add nuw nsw i128 %add.i.i.i875.1.i.i.i, %mul.i223.i.i879.1.i.i.i
  %shr.i.i.i881.1.i.i.i = lshr i128 %mul.i220.i.i877.1.i.i.i, 64
  %shr.i226.i.i882.1.i.i.i = lshr i128 %add.i224.i.i880.1.i.i.i, 52
  %mul37.i.i883.1.i.i.i = shl nuw nsw i64 %add.i.i954.i.i.i, 1
  %conv.i227.i.i884.1.i.i.i = zext i64 %and83.i.i915.i.i.i to i128
  %conv1.i228.i.i885.1.i.i.i = zext i64 %mul37.i.i883.1.i.i.i to i128
  %mul.i229.i.i886.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i885.1.i.i.i, %conv.i227.i.i884.1.i.i.i
  %mul.i233.i.i887.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.1.i.i.i, %conv.i215.i.i872.1.i.i.i
  %mul.i237.i.i888.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i873.1.i.i.i, %conv1.i216.i.i873.1.i.i.i
  %mul.i241.i.i889.1.i.i.i = mul nuw nsw i128 %shr.i.i.i881.1.i.i.i, 281475040739328
  %add.i230.i.i890.1.i.i.i = add nuw nsw i128 %mul.i233.i.i887.1.i.i.i, %mul.i237.i.i888.1.i.i.i
  %add.i234.i.i891.1.i.i.i = add nuw nsw i128 %add.i230.i.i890.1.i.i.i, %mul.i229.i.i886.1.i.i.i
  %add.i238.i.i892.1.i.i.i = add nuw nsw i128 %add.i234.i.i891.1.i.i.i, %mul.i241.i.i889.1.i.i.i
  %add.i242.i.i893.1.i.i.i = add nuw nsw i128 %add.i238.i.i892.1.i.i.i, %shr.i226.i.i882.1.i.i.i
  %conv.i243.i.i894.1.i.i.i = trunc i128 %add.i242.i.i893.1.i.i.i to i64
  %shr.i244.i.i895.1.i.i.i = lshr i128 %add.i242.i.i893.1.i.i.i, 52
  %and47.i.i896.1.i.i.i = lshr i64 %conv.i243.i.i894.1.i.i.i, 48
  %117 = and i64 %and47.i.i896.1.i.i.i, 15
  %and54.i.i897.1.i.i.i = and i64 %conv.i243.i.i894.1.i.i.i, 281474976710655
  %mul.i247.i.i898.1.i.i.i = mul nuw nsw i128 %conv.i227.i.i884.1.i.i.i, %conv.i227.i.i884.1.i.i.i
  %conv.i248.i.i899.1.i.i.i = zext i64 %and107.i.i928.i.i.i to i128
  %mul.i250.i.i900.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i885.1.i.i.i, %conv.i248.i.i899.1.i.i.i
  %mul64.i.i901.1.i.i.i = shl nuw nsw i64 %and129.i.i942.i.i.i, 1
  %conv.i252.i.i902.1.i.i.i = zext i64 %mul64.i.i901.1.i.i.i to i128
  %mul.i254.i.i903.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.1.i.i.i, %conv.i252.i.i902.1.i.i.i
  %add.i251.i.i904.1.i.i.i = add nuw nsw i128 %mul.i250.i.i900.1.i.i.i, %mul.i254.i.i903.1.i.i.i
  %add.i255.i.i905.1.i.i.i = add nuw nsw i128 %add.i251.i.i904.1.i.i.i, %shr.i244.i.i895.1.i.i.i
  %conv.i256.i.i906.1.i.i.i = trunc i128 %add.i255.i.i905.1.i.i.i to i64
  %shr.i257.i.i907.1.i.i.i = lshr i128 %add.i255.i.i905.1.i.i.i, 52
  %and69.i.i908.1.i.i.i = shl i64 %conv.i256.i.i906.1.i.i.i, 4
  %shl.i.i909.1.i.i.i = and i64 %and69.i.i908.1.i.i.i, 72057594037927920
  %or.i.i910.1.i.i.i = or i64 %shl.i.i909.1.i.i.i, %117
  %conv.i258.i.i911.1.i.i.i = zext i64 %or.i.i910.1.i.i.i to i128
  %mul.i259.i.i912.1.i.i.i = mul nuw nsw i128 %conv.i258.i.i911.1.i.i.i, 4294968273
  %add.i260.i.i913.1.i.i.i = add nuw nsw i128 %mul.i259.i.i912.1.i.i.i, %mul.i247.i.i898.1.i.i.i
  %conv.i261.i.i914.1.i.i.i = trunc i128 %add.i260.i.i913.1.i.i.i to i64
  %and83.i.i915.1.i.i.i = and i64 %conv.i261.i.i914.1.i.i.i, 4503599627370495
  %shr.i262.i.i916.1.i.i.i = lshr i128 %add.i260.i.i913.1.i.i.i, 52
  %mul.i265.i.i917.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i899.1.i.i.i, %conv.i.i.i868.1.i.i.i
  %mul.i269.i.i918.1.i.i.i = mul nuw nsw i128 %conv1.i228.i.i885.1.i.i.i, %conv1.i216.i.i873.1.i.i.i
  %mul.i273.i.i919.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.1.i.i.i, %conv1.i.i.i869.1.i.i.i
  %add.i270.i.i920.1.i.i.i = add nuw nsw i128 %mul.i269.i.i918.1.i.i.i, %mul.i273.i.i919.1.i.i.i
  %add.i274.i.i921.1.i.i.i = add nuw nsw i128 %add.i270.i.i920.1.i.i.i, %shr.i257.i.i907.1.i.i.i
  %conv.i276.i.i922.1.i.i.i = and i128 %add.i274.i.i921.1.i.i.i, 4503599627370495
  %mul.i277.i.i923.1.i.i.i = mul nuw nsw i128 %conv.i276.i.i922.1.i.i.i, 68719492368
  %add.i266.i.i924.1.i.i.i = add nuw nsw i128 %mul.i277.i.i923.1.i.i.i, %mul.i265.i.i917.1.i.i.i
  %add.i278.i.i925.1.i.i.i = add nuw nsw i128 %add.i266.i.i924.1.i.i.i, %shr.i262.i.i916.1.i.i.i
  %shr.i279.i.i926.1.i.i.i = lshr i128 %add.i274.i.i921.1.i.i.i, 52
  %conv.i280.i.i927.1.i.i.i = trunc i128 %add.i278.i.i925.1.i.i.i to i64
  %and107.i.i928.1.i.i.i = and i64 %conv.i280.i.i927.1.i.i.i, 4503599627370495
  %shr.i281.i.i930.1.i.i.i = lshr i128 %add.i278.i.i925.1.i.i.i, 52
  %mul.i284.i.i931.1.i.i.i = mul nuw nsw i128 %conv1.i216.i.i873.1.i.i.i, %conv.i.i.i868.1.i.i.i
  %mul.i288.i.i932.1.i.i.i = mul nuw nsw i128 %conv.i248.i.i899.1.i.i.i, %conv.i248.i.i899.1.i.i.i
  %mul.i292.i.i933.1.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.1.i.i.i, %conv1.i228.i.i885.1.i.i.i
  %add.i293.i.i934.1.i.i.i = add nuw nsw i128 %shr.i279.i.i926.1.i.i.i, %mul.i292.i.i933.1.i.i.i
  %conv1.i295.i.i935.1.i.i.i = and i128 %add.i293.i.i934.1.i.i.i, 18446744073709551615
  %mul.i296.i.i936.1.i.i.i = mul nuw nsw i128 %conv1.i295.i.i935.1.i.i.i, 68719492368
  %add.i285.i.i937.1.i.i.i = add nuw nsw i128 %mul.i284.i.i931.1.i.i.i, %mul.i288.i.i932.1.i.i.i
  %add.i289.i.i938.1.i.i.i = add nuw nsw i128 %add.i285.i.i937.1.i.i.i, %mul.i296.i.i936.1.i.i.i
  %add.i297.i.i939.1.i.i.i = add nuw nsw i128 %add.i289.i.i938.1.i.i.i, %shr.i281.i.i930.1.i.i.i
  %shr.i298.i.i940.1.i.i.i = lshr i128 %add.i293.i.i934.1.i.i.i, 64
  %conv.i299.i.i941.1.i.i.i = trunc i128 %add.i297.i.i939.1.i.i.i to i64
  %and129.i.i942.1.i.i.i = and i64 %conv.i299.i.i941.1.i.i.i, 4503599627370495
  %shr.i300.i.i944.1.i.i.i = lshr i128 %add.i297.i.i939.1.i.i.i, 52
  %mul.i303.i.i945.1.i.i.i = mul nuw nsw i128 %shr.i298.i.i940.1.i.i.i, 281475040739328
  %conv.i305.i.i946.1.i.i.i = and i128 %add.i224.i.i880.1.i.i.i, 4503599627370494
  %add.i304.i.i947.1.i.i.i = add nuw nsw i128 %mul.i303.i.i945.1.i.i.i, %conv.i305.i.i946.1.i.i.i
  %add.i306.i.i948.1.i.i.i = add nuw nsw i128 %add.i304.i.i947.1.i.i.i, %shr.i300.i.i944.1.i.i.i
  %shr.i308.i.i952.1.i.i.i = lshr i128 %add.i306.i.i948.1.i.i.i, 52
  %conv.i309.i.i953.1.i.i.i = trunc i128 %shr.i308.i.i952.1.i.i.i to i64
  %add.i.i954.1.i.i.i = add nuw nsw i64 %and54.i.i897.1.i.i.i, %conv.i309.i.i953.1.i.i.i
  %mul.i.i867.2.i.i.i = shl nuw nsw i64 %and83.i.i915.1.i.i.i, 1
  %conv.i.i.i868.2.i.i.i = zext i64 %mul.i.i867.2.i.i.i to i128
  %conv1.i.i.i869.2.i.i.i = and i128 %add.i306.i.i948.1.i.i.i, 4503599627370495
  %mul.i.i.i870.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.2.i.i.i, %conv.i.i.i868.2.i.i.i
  %mul17.i.i871.2.i.i.i = shl nuw nsw i64 %and107.i.i928.1.i.i.i, 1
  %conv.i215.i.i872.2.i.i.i = zext i64 %mul17.i.i871.2.i.i.i to i128
  %conv1.i216.i.i873.2.i.i.i = zext i64 %and129.i.i942.1.i.i.i to i128
  %mul.i217.i.i874.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i873.2.i.i.i, %conv.i215.i.i872.2.i.i.i
  %add.i.i.i875.2.i.i.i = add nuw nsw i128 %mul.i.i.i870.2.i.i.i, %mul.i217.i.i874.2.i.i.i
  %conv.i218.i.i876.2.i.i.i = zext i64 %add.i.i954.1.i.i.i to i128
  %mul.i220.i.i877.2.i.i.i = mul nuw nsw i128 %conv.i218.i.i876.2.i.i.i, %conv.i218.i.i876.2.i.i.i
  %conv1.i222.i.i878.2.i.i.i = and i128 %mul.i220.i.i877.2.i.i.i, 18446744073709551615
  %mul.i223.i.i879.2.i.i.i = mul nuw nsw i128 %conv1.i222.i.i878.2.i.i.i, 68719492368
  %add.i224.i.i880.2.i.i.i = add nuw nsw i128 %add.i.i.i875.2.i.i.i, %mul.i223.i.i879.2.i.i.i
  %shr.i.i.i881.2.i.i.i = lshr i128 %mul.i220.i.i877.2.i.i.i, 64
  %shr.i226.i.i882.2.i.i.i = lshr i128 %add.i224.i.i880.2.i.i.i, 52
  %mul37.i.i883.2.i.i.i = shl nuw nsw i64 %add.i.i954.1.i.i.i, 1
  %conv.i227.i.i884.2.i.i.i = zext i64 %and83.i.i915.1.i.i.i to i128
  %conv1.i228.i.i885.2.i.i.i = zext i64 %mul37.i.i883.2.i.i.i to i128
  %mul.i229.i.i886.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i885.2.i.i.i, %conv.i227.i.i884.2.i.i.i
  %mul.i233.i.i887.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.2.i.i.i, %conv.i215.i.i872.2.i.i.i
  %mul.i237.i.i888.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i873.2.i.i.i, %conv1.i216.i.i873.2.i.i.i
  %mul.i241.i.i889.2.i.i.i = mul nuw nsw i128 %shr.i.i.i881.2.i.i.i, 281475040739328
  %add.i230.i.i890.2.i.i.i = add nuw nsw i128 %mul.i233.i.i887.2.i.i.i, %mul.i237.i.i888.2.i.i.i
  %add.i234.i.i891.2.i.i.i = add nuw nsw i128 %add.i230.i.i890.2.i.i.i, %mul.i229.i.i886.2.i.i.i
  %add.i238.i.i892.2.i.i.i = add nuw nsw i128 %add.i234.i.i891.2.i.i.i, %mul.i241.i.i889.2.i.i.i
  %add.i242.i.i893.2.i.i.i = add nuw nsw i128 %add.i238.i.i892.2.i.i.i, %shr.i226.i.i882.2.i.i.i
  %conv.i243.i.i894.2.i.i.i = trunc i128 %add.i242.i.i893.2.i.i.i to i64
  %shr.i244.i.i895.2.i.i.i = lshr i128 %add.i242.i.i893.2.i.i.i, 52
  %and47.i.i896.2.i.i.i = lshr i64 %conv.i243.i.i894.2.i.i.i, 48
  %118 = and i64 %and47.i.i896.2.i.i.i, 15
  %and54.i.i897.2.i.i.i = and i64 %conv.i243.i.i894.2.i.i.i, 281474976710655
  %mul.i247.i.i898.2.i.i.i = mul nuw nsw i128 %conv.i227.i.i884.2.i.i.i, %conv.i227.i.i884.2.i.i.i
  %conv.i248.i.i899.2.i.i.i = zext i64 %and107.i.i928.1.i.i.i to i128
  %mul.i250.i.i900.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i885.2.i.i.i, %conv.i248.i.i899.2.i.i.i
  %mul64.i.i901.2.i.i.i = shl nuw nsw i64 %and129.i.i942.1.i.i.i, 1
  %conv.i252.i.i902.2.i.i.i = zext i64 %mul64.i.i901.2.i.i.i to i128
  %mul.i254.i.i903.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.2.i.i.i, %conv.i252.i.i902.2.i.i.i
  %add.i251.i.i904.2.i.i.i = add nuw nsw i128 %mul.i250.i.i900.2.i.i.i, %mul.i254.i.i903.2.i.i.i
  %add.i255.i.i905.2.i.i.i = add nuw nsw i128 %add.i251.i.i904.2.i.i.i, %shr.i244.i.i895.2.i.i.i
  %conv.i256.i.i906.2.i.i.i = trunc i128 %add.i255.i.i905.2.i.i.i to i64
  %shr.i257.i.i907.2.i.i.i = lshr i128 %add.i255.i.i905.2.i.i.i, 52
  %and69.i.i908.2.i.i.i = shl i64 %conv.i256.i.i906.2.i.i.i, 4
  %shl.i.i909.2.i.i.i = and i64 %and69.i.i908.2.i.i.i, 72057594037927920
  %or.i.i910.2.i.i.i = or i64 %shl.i.i909.2.i.i.i, %118
  %conv.i258.i.i911.2.i.i.i = zext i64 %or.i.i910.2.i.i.i to i128
  %mul.i259.i.i912.2.i.i.i = mul nuw nsw i128 %conv.i258.i.i911.2.i.i.i, 4294968273
  %add.i260.i.i913.2.i.i.i = add nuw nsw i128 %mul.i259.i.i912.2.i.i.i, %mul.i247.i.i898.2.i.i.i
  %shr.i262.i.i916.2.i.i.i = lshr i128 %add.i260.i.i913.2.i.i.i, 52
  %mul.i265.i.i917.2.i.i.i = mul nuw nsw i128 %conv.i248.i.i899.2.i.i.i, %conv.i.i.i868.2.i.i.i
  %mul.i269.i.i918.2.i.i.i = mul nuw nsw i128 %conv1.i228.i.i885.2.i.i.i, %conv1.i216.i.i873.2.i.i.i
  %mul.i273.i.i919.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.2.i.i.i, %conv1.i.i.i869.2.i.i.i
  %add.i270.i.i920.2.i.i.i = add nuw nsw i128 %mul.i269.i.i918.2.i.i.i, %mul.i273.i.i919.2.i.i.i
  %add.i274.i.i921.2.i.i.i = add nuw nsw i128 %add.i270.i.i920.2.i.i.i, %shr.i257.i.i907.2.i.i.i
  %conv.i276.i.i922.2.i.i.i = and i128 %add.i274.i.i921.2.i.i.i, 4503599627370495
  %mul.i277.i.i923.2.i.i.i = mul nuw nsw i128 %conv.i276.i.i922.2.i.i.i, 68719492368
  %add.i266.i.i924.2.i.i.i = add nuw nsw i128 %mul.i277.i.i923.2.i.i.i, %mul.i265.i.i917.2.i.i.i
  %add.i278.i.i925.2.i.i.i = add nuw nsw i128 %add.i266.i.i924.2.i.i.i, %shr.i262.i.i916.2.i.i.i
  %shr.i279.i.i926.2.i.i.i = lshr i128 %add.i274.i.i921.2.i.i.i, 52
  %119 = insertelement <2 x i128> poison, i128 %add.i260.i.i913.2.i.i.i, i64 0
  %120 = insertelement <2 x i128> %119, i128 %add.i278.i.i925.2.i.i.i, i64 1
  %121 = trunc <2 x i128> %120 to <2 x i64>
  %122 = and <2 x i64> %121, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i930.2.i.i.i = lshr i128 %add.i278.i.i925.2.i.i.i, 52
  %mul.i284.i.i931.2.i.i.i = mul nuw nsw i128 %conv1.i216.i.i873.2.i.i.i, %conv.i.i.i868.2.i.i.i
  %mul.i288.i.i932.2.i.i.i = mul nuw nsw i128 %conv.i248.i.i899.2.i.i.i, %conv.i248.i.i899.2.i.i.i
  %mul.i292.i.i933.2.i.i.i = mul nuw nsw i128 %conv1.i.i.i869.2.i.i.i, %conv1.i228.i.i885.2.i.i.i
  %add.i293.i.i934.2.i.i.i = add nuw nsw i128 %shr.i279.i.i926.2.i.i.i, %mul.i292.i.i933.2.i.i.i
  %conv1.i295.i.i935.2.i.i.i = and i128 %add.i293.i.i934.2.i.i.i, 18446744073709551615
  %mul.i296.i.i936.2.i.i.i = mul nuw nsw i128 %conv1.i295.i.i935.2.i.i.i, 68719492368
  %add.i285.i.i937.2.i.i.i = add nuw nsw i128 %mul.i284.i.i931.2.i.i.i, %mul.i288.i.i932.2.i.i.i
  %add.i289.i.i938.2.i.i.i = add nuw nsw i128 %add.i285.i.i937.2.i.i.i, %mul.i296.i.i936.2.i.i.i
  %add.i297.i.i939.2.i.i.i = add nuw nsw i128 %add.i289.i.i938.2.i.i.i, %shr.i281.i.i930.2.i.i.i
  %shr.i298.i.i940.2.i.i.i = lshr i128 %add.i293.i.i934.2.i.i.i, 64
  %shr.i300.i.i944.2.i.i.i = lshr i128 %add.i297.i.i939.2.i.i.i, 52
  %mul.i303.i.i945.2.i.i.i = mul nuw nsw i128 %shr.i298.i.i940.2.i.i.i, 281475040739328
  %conv.i305.i.i946.2.i.i.i = and i128 %add.i224.i.i880.2.i.i.i, 4503599627370494
  %add.i304.i.i947.2.i.i.i = add nuw nsw i128 %mul.i303.i.i945.2.i.i.i, %conv.i305.i.i946.2.i.i.i
  %add.i306.i.i948.2.i.i.i = add nuw nsw i128 %add.i304.i.i947.2.i.i.i, %shr.i300.i.i944.2.i.i.i
  %123 = insertelement <2 x i128> poison, i128 %add.i297.i.i939.2.i.i.i, i64 0
  %124 = insertelement <2 x i128> %123, i128 %add.i306.i.i948.2.i.i.i, i64 1
  %125 = trunc <2 x i128> %124 to <2 x i64>
  %126 = and <2 x i64> %125, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i952.2.i.i.i = lshr i128 %add.i306.i.i948.2.i.i.i, 52
  %conv.i309.i.i953.2.i.i.i = trunc i128 %shr.i308.i.i952.2.i.i.i to i64
  %add.i.i954.2.i.i.i = add nuw nsw i64 %and54.i.i897.2.i.i.i, %conv.i309.i.i953.2.i.i.i
  %127 = bitcast %struct.secp256k1_fe* %x223.i.i.i to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %127, align 16, !tbaa !13
  %128 = bitcast i64* %arrayidx2.i.i864.i.i.i to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %128, align 16, !tbaa !13
  store i64 %add.i.i954.2.i.i.i, i64* %arrayidx4.i.i866.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x223.i.i.i, %struct.secp256k1_fe* noundef nonnull %x223.i.i.i, %struct.secp256k1_fe* noundef nonnull %x3.i.i.i) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %40, i8* noundef nonnull align 16 dereferenceable(40) %39, i64 40, i1 false) #19, !tbaa.struct !18
  %arraydecay.i956.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t1.i.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i958.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t1.i.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i959.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t1.i.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i960.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t1.i.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i961.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t1.i.i.i, i64 0, i32 0, i64 4
  %arraydecay.i956.promoted.i.i.i = load i64, i64* %arraydecay.i956.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i958.promoted.i.i.i = load i64, i64* %arrayidx1.i.i958.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i959.promoted.i.i.i = load i64, i64* %arrayidx2.i.i959.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i960.promoted.i.i.i = load i64, i64* %arrayidx3.i.i960.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i961.promoted.i.i.i = load i64, i64* %arrayidx4.i.i961.i.i.i, align 8, !tbaa !13
  br label %for.body62.i.i.i

for.body62.i.i.i:                                 ; preds = %for.body62.i.i.i, %for.end51.i.i.i
  %j.91345.i.i.i = phi i32 [ 0, %for.end51.i.i.i ], [ %inc64.i.i.i, %for.body62.i.i.i ]
  %129 = phi i64 [ %arraydecay.i956.promoted.i.i.i, %for.end51.i.i.i ], [ %and83.i.i1010.i.i.i, %for.body62.i.i.i ]
  %and107.i.i102313371344.i.i.i = phi i64 [ %arrayidx1.i.i958.promoted.i.i.i, %for.end51.i.i.i ], [ %and107.i.i1023.i.i.i, %for.body62.i.i.i ]
  %and129.i.i103713381343.i.i.i = phi i64 [ %arrayidx2.i.i959.promoted.i.i.i, %for.end51.i.i.i ], [ %and129.i.i1037.i.i.i, %for.body62.i.i.i ]
  %and142.i.i104513391342.i.i.i = phi i64 [ %arrayidx3.i.i960.promoted.i.i.i, %for.end51.i.i.i ], [ %and142.i.i1045.i.i.i, %for.body62.i.i.i ]
  %add.i.i104913401341.i.i.i = phi i64 [ %arrayidx4.i.i961.promoted.i.i.i, %for.end51.i.i.i ], [ %add.i.i1049.i.i.i, %for.body62.i.i.i ]
  %mul.i.i962.i.i.i = shl i64 %129, 1
  %conv.i.i.i963.i.i.i = zext i64 %mul.i.i962.i.i.i to i128
  %conv1.i.i.i964.i.i.i = zext i64 %and142.i.i104513391342.i.i.i to i128
  %mul.i.i.i965.i.i.i = mul nuw i128 %conv1.i.i.i964.i.i.i, %conv.i.i.i963.i.i.i
  %mul17.i.i966.i.i.i = shl i64 %and107.i.i102313371344.i.i.i, 1
  %conv.i215.i.i967.i.i.i = zext i64 %mul17.i.i966.i.i.i to i128
  %conv1.i216.i.i968.i.i.i = zext i64 %and129.i.i103713381343.i.i.i to i128
  %mul.i217.i.i969.i.i.i = mul nuw i128 %conv1.i216.i.i968.i.i.i, %conv.i215.i.i967.i.i.i
  %add.i.i.i970.i.i.i = add i128 %mul.i.i.i965.i.i.i, %mul.i217.i.i969.i.i.i
  %conv.i218.i.i971.i.i.i = zext i64 %add.i.i104913401341.i.i.i to i128
  %mul.i220.i.i972.i.i.i = mul nuw i128 %conv.i218.i.i971.i.i.i, %conv.i218.i.i971.i.i.i
  %conv1.i222.i.i973.i.i.i = and i128 %mul.i220.i.i972.i.i.i, 18446744073709551615
  %mul.i223.i.i974.i.i.i = mul nuw nsw i128 %conv1.i222.i.i973.i.i.i, 68719492368
  %add.i224.i.i975.i.i.i = add i128 %add.i.i.i970.i.i.i, %mul.i223.i.i974.i.i.i
  %shr.i.i.i976.i.i.i = lshr i128 %mul.i220.i.i972.i.i.i, 64
  %shr.i226.i.i977.i.i.i = lshr i128 %add.i224.i.i975.i.i.i, 52
  %mul37.i.i978.i.i.i = shl i64 %add.i.i104913401341.i.i.i, 1
  %conv.i227.i.i979.i.i.i = zext i64 %129 to i128
  %conv1.i228.i.i980.i.i.i = zext i64 %mul37.i.i978.i.i.i to i128
  %mul.i229.i.i981.i.i.i = mul nuw i128 %conv1.i228.i.i980.i.i.i, %conv.i227.i.i979.i.i.i
  %mul.i233.i.i982.i.i.i = mul nuw i128 %conv1.i.i.i964.i.i.i, %conv.i215.i.i967.i.i.i
  %mul.i237.i.i983.i.i.i = mul nuw i128 %conv1.i216.i.i968.i.i.i, %conv1.i216.i.i968.i.i.i
  %mul.i241.i.i984.i.i.i = mul nuw nsw i128 %shr.i.i.i976.i.i.i, 281475040739328
  %add.i230.i.i985.i.i.i = add i128 %mul.i233.i.i982.i.i.i, %mul.i237.i.i983.i.i.i
  %add.i234.i.i986.i.i.i = add i128 %add.i230.i.i985.i.i.i, %mul.i229.i.i981.i.i.i
  %add.i238.i.i987.i.i.i = add i128 %add.i234.i.i986.i.i.i, %mul.i241.i.i984.i.i.i
  %add.i242.i.i988.i.i.i = add i128 %add.i238.i.i987.i.i.i, %shr.i226.i.i977.i.i.i
  %conv.i243.i.i989.i.i.i = trunc i128 %add.i242.i.i988.i.i.i to i64
  %shr.i244.i.i990.i.i.i = lshr i128 %add.i242.i.i988.i.i.i, 52
  %and47.i.i991.i.i.i = lshr i64 %conv.i243.i.i989.i.i.i, 48
  %130 = and i64 %and47.i.i991.i.i.i, 15
  %and54.i.i992.i.i.i = and i64 %conv.i243.i.i989.i.i.i, 281474976710655
  %mul.i247.i.i993.i.i.i = mul nuw i128 %conv.i227.i.i979.i.i.i, %conv.i227.i.i979.i.i.i
  %conv.i248.i.i994.i.i.i = zext i64 %and107.i.i102313371344.i.i.i to i128
  %mul.i250.i.i995.i.i.i = mul nuw i128 %conv1.i228.i.i980.i.i.i, %conv.i248.i.i994.i.i.i
  %mul64.i.i996.i.i.i = shl i64 %and129.i.i103713381343.i.i.i, 1
  %conv.i252.i.i997.i.i.i = zext i64 %mul64.i.i996.i.i.i to i128
  %mul.i254.i.i998.i.i.i = mul nuw i128 %conv1.i.i.i964.i.i.i, %conv.i252.i.i997.i.i.i
  %add.i251.i.i999.i.i.i = add i128 %mul.i250.i.i995.i.i.i, %mul.i254.i.i998.i.i.i
  %add.i255.i.i1000.i.i.i = add i128 %add.i251.i.i999.i.i.i, %shr.i244.i.i990.i.i.i
  %conv.i256.i.i1001.i.i.i = trunc i128 %add.i255.i.i1000.i.i.i to i64
  %shr.i257.i.i1002.i.i.i = lshr i128 %add.i255.i.i1000.i.i.i, 52
  %and69.i.i1003.i.i.i = shl i64 %conv.i256.i.i1001.i.i.i, 4
  %shl.i.i1004.i.i.i = and i64 %and69.i.i1003.i.i.i, 72057594037927920
  %or.i.i1005.i.i.i = or i64 %shl.i.i1004.i.i.i, %130
  %conv.i258.i.i1006.i.i.i = zext i64 %or.i.i1005.i.i.i to i128
  %mul.i259.i.i1007.i.i.i = mul nuw nsw i128 %conv.i258.i.i1006.i.i.i, 4294968273
  %add.i260.i.i1008.i.i.i = add i128 %mul.i259.i.i1007.i.i.i, %mul.i247.i.i993.i.i.i
  %conv.i261.i.i1009.i.i.i = trunc i128 %add.i260.i.i1008.i.i.i to i64
  %and83.i.i1010.i.i.i = and i64 %conv.i261.i.i1009.i.i.i, 4503599627370495
  %shr.i262.i.i1011.i.i.i = lshr i128 %add.i260.i.i1008.i.i.i, 52
  %mul.i265.i.i1012.i.i.i = mul nuw i128 %conv.i248.i.i994.i.i.i, %conv.i.i.i963.i.i.i
  %mul.i269.i.i1013.i.i.i = mul nuw i128 %conv1.i228.i.i980.i.i.i, %conv1.i216.i.i968.i.i.i
  %mul.i273.i.i1014.i.i.i = mul nuw i128 %conv1.i.i.i964.i.i.i, %conv1.i.i.i964.i.i.i
  %add.i270.i.i1015.i.i.i = add i128 %mul.i269.i.i1013.i.i.i, %mul.i273.i.i1014.i.i.i
  %add.i274.i.i1016.i.i.i = add i128 %add.i270.i.i1015.i.i.i, %shr.i257.i.i1002.i.i.i
  %conv.i276.i.i1017.i.i.i = and i128 %add.i274.i.i1016.i.i.i, 4503599627370495
  %mul.i277.i.i1018.i.i.i = mul nuw nsw i128 %conv.i276.i.i1017.i.i.i, 68719492368
  %add.i266.i.i1019.i.i.i = add i128 %mul.i277.i.i1018.i.i.i, %mul.i265.i.i1012.i.i.i
  %add.i278.i.i1020.i.i.i = add i128 %add.i266.i.i1019.i.i.i, %shr.i262.i.i1011.i.i.i
  %shr.i279.i.i1021.i.i.i = lshr i128 %add.i274.i.i1016.i.i.i, 52
  %conv.i280.i.i1022.i.i.i = trunc i128 %add.i278.i.i1020.i.i.i to i64
  %and107.i.i1023.i.i.i = and i64 %conv.i280.i.i1022.i.i.i, 4503599627370495
  %shr.i281.i.i1025.i.i.i = lshr i128 %add.i278.i.i1020.i.i.i, 52
  %mul.i284.i.i1026.i.i.i = mul nuw i128 %conv1.i216.i.i968.i.i.i, %conv.i.i.i963.i.i.i
  %mul.i288.i.i1027.i.i.i = mul nuw i128 %conv.i248.i.i994.i.i.i, %conv.i248.i.i994.i.i.i
  %mul.i292.i.i1028.i.i.i = mul nuw i128 %conv1.i228.i.i980.i.i.i, %conv1.i.i.i964.i.i.i
  %add.i293.i.i1029.i.i.i = add i128 %shr.i279.i.i1021.i.i.i, %mul.i292.i.i1028.i.i.i
  %conv1.i295.i.i1030.i.i.i = and i128 %add.i293.i.i1029.i.i.i, 18446744073709551615
  %mul.i296.i.i1031.i.i.i = mul nuw nsw i128 %conv1.i295.i.i1030.i.i.i, 68719492368
  %add.i285.i.i1032.i.i.i = add i128 %mul.i284.i.i1026.i.i.i, %mul.i288.i.i1027.i.i.i
  %add.i289.i.i1033.i.i.i = add i128 %add.i285.i.i1032.i.i.i, %mul.i296.i.i1031.i.i.i
  %add.i297.i.i1034.i.i.i = add i128 %add.i289.i.i1033.i.i.i, %shr.i281.i.i1025.i.i.i
  %shr.i298.i.i1035.i.i.i = lshr i128 %add.i293.i.i1029.i.i.i, 64
  %conv.i299.i.i1036.i.i.i = trunc i128 %add.i297.i.i1034.i.i.i to i64
  %and129.i.i1037.i.i.i = and i64 %conv.i299.i.i1036.i.i.i, 4503599627370495
  %shr.i300.i.i1039.i.i.i = lshr i128 %add.i297.i.i1034.i.i.i, 52
  %mul.i303.i.i1040.i.i.i = mul nuw nsw i128 %shr.i298.i.i1035.i.i.i, 281475040739328
  %conv.i305.i.i1041.i.i.i = and i128 %add.i224.i.i975.i.i.i, 4503599627370494
  %add.i304.i.i1042.i.i.i = add nuw nsw i128 %mul.i303.i.i1040.i.i.i, %conv.i305.i.i1041.i.i.i
  %add.i306.i.i1043.i.i.i = add nuw nsw i128 %add.i304.i.i1042.i.i.i, %shr.i300.i.i1039.i.i.i
  %conv.i307.i.i1044.i.i.i = trunc i128 %add.i306.i.i1043.i.i.i to i64
  %and142.i.i1045.i.i.i = and i64 %conv.i307.i.i1044.i.i.i, 4503599627370495
  %shr.i308.i.i1047.i.i.i = lshr i128 %add.i306.i.i1043.i.i.i, 52
  %conv.i309.i.i1048.i.i.i = trunc i128 %shr.i308.i.i1047.i.i.i to i64
  %add.i.i1049.i.i.i = add nuw nsw i64 %and54.i.i992.i.i.i, %conv.i309.i.i1048.i.i.i
  %inc64.i.i.i = add nuw nsw i32 %j.91345.i.i.i, 1
  %exitcond1361.not.i.i.i = icmp eq i32 %inc64.i.i.i, 23
  br i1 %exitcond1361.not.i.i.i, label %for.end65.i.i.i, label %for.body62.i.i.i, !llvm.loop !44

for.end65.i.i.i:                                  ; preds = %for.body62.i.i.i
  store i64 %and83.i.i1010.i.i.i, i64* %arraydecay.i956.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i1023.i.i.i, i64* %arrayidx1.i.i958.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i1037.i.i.i, i64* %arrayidx2.i.i959.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i1045.i.i.i, i64* %arrayidx3.i.i960.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i1049.i.i.i, i64* %arrayidx4.i.i961.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %t1.i.i.i, %struct.secp256k1_fe* noundef nonnull %t1.i.i.i, %struct.secp256k1_fe* noundef nonnull %x22.i.i.i) #19
  %arraydecay.i1051.promoted.i.i.i = load i64, i64* %arraydecay.i956.i.i.i, align 8, !tbaa !13
  %arrayidx1.i.i1053.promoted.i.i.i = load i64, i64* %arrayidx1.i.i958.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i1054.promoted.i.i.i = load i64, i64* %arrayidx2.i.i959.i.i.i, align 8, !tbaa !13
  %arrayidx3.i.i1055.promoted.i.i.i = load i64, i64* %arrayidx3.i.i960.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i1056.promoted.i.i.i = load i64, i64* %arrayidx4.i.i961.i.i.i, align 8, !tbaa !13
  br label %for.body69.i.i.i

for.body69.i.i.i:                                 ; preds = %for.body69.i.i.i, %for.end65.i.i.i
  %j.101355.i.i.i = phi i32 [ 0, %for.end65.i.i.i ], [ %inc71.i.i.i, %for.body69.i.i.i ]
  %131 = phi i64 [ %arraydecay.i1051.promoted.i.i.i, %for.end65.i.i.i ], [ %and83.i.i1105.i.i.i, %for.body69.i.i.i ]
  %and107.i.i111813471354.i.i.i = phi i64 [ %arrayidx1.i.i1053.promoted.i.i.i, %for.end65.i.i.i ], [ %and107.i.i1118.i.i.i, %for.body69.i.i.i ]
  %and129.i.i113213481353.i.i.i = phi i64 [ %arrayidx2.i.i1054.promoted.i.i.i, %for.end65.i.i.i ], [ %and129.i.i1132.i.i.i, %for.body69.i.i.i ]
  %and142.i.i114013491352.i.i.i = phi i64 [ %arrayidx3.i.i1055.promoted.i.i.i, %for.end65.i.i.i ], [ %and142.i.i1140.i.i.i, %for.body69.i.i.i ]
  %add.i.i114413501351.i.i.i = phi i64 [ %arrayidx4.i.i1056.promoted.i.i.i, %for.end65.i.i.i ], [ %add.i.i1144.i.i.i, %for.body69.i.i.i ]
  %mul.i.i1057.i.i.i = shl i64 %131, 1
  %conv.i.i.i1058.i.i.i = zext i64 %mul.i.i1057.i.i.i to i128
  %conv1.i.i.i1059.i.i.i = zext i64 %and142.i.i114013491352.i.i.i to i128
  %mul.i.i.i1060.i.i.i = mul nuw i128 %conv1.i.i.i1059.i.i.i, %conv.i.i.i1058.i.i.i
  %mul17.i.i1061.i.i.i = shl i64 %and107.i.i111813471354.i.i.i, 1
  %conv.i215.i.i1062.i.i.i = zext i64 %mul17.i.i1061.i.i.i to i128
  %conv1.i216.i.i1063.i.i.i = zext i64 %and129.i.i113213481353.i.i.i to i128
  %mul.i217.i.i1064.i.i.i = mul nuw i128 %conv1.i216.i.i1063.i.i.i, %conv.i215.i.i1062.i.i.i
  %add.i.i.i1065.i.i.i = add i128 %mul.i.i.i1060.i.i.i, %mul.i217.i.i1064.i.i.i
  %conv.i218.i.i1066.i.i.i = zext i64 %add.i.i114413501351.i.i.i to i128
  %mul.i220.i.i1067.i.i.i = mul nuw i128 %conv.i218.i.i1066.i.i.i, %conv.i218.i.i1066.i.i.i
  %conv1.i222.i.i1068.i.i.i = and i128 %mul.i220.i.i1067.i.i.i, 18446744073709551615
  %mul.i223.i.i1069.i.i.i = mul nuw nsw i128 %conv1.i222.i.i1068.i.i.i, 68719492368
  %add.i224.i.i1070.i.i.i = add i128 %add.i.i.i1065.i.i.i, %mul.i223.i.i1069.i.i.i
  %shr.i.i.i1071.i.i.i = lshr i128 %mul.i220.i.i1067.i.i.i, 64
  %shr.i226.i.i1072.i.i.i = lshr i128 %add.i224.i.i1070.i.i.i, 52
  %mul37.i.i1073.i.i.i = shl i64 %add.i.i114413501351.i.i.i, 1
  %conv.i227.i.i1074.i.i.i = zext i64 %131 to i128
  %conv1.i228.i.i1075.i.i.i = zext i64 %mul37.i.i1073.i.i.i to i128
  %mul.i229.i.i1076.i.i.i = mul nuw i128 %conv1.i228.i.i1075.i.i.i, %conv.i227.i.i1074.i.i.i
  %mul.i233.i.i1077.i.i.i = mul nuw i128 %conv1.i.i.i1059.i.i.i, %conv.i215.i.i1062.i.i.i
  %mul.i237.i.i1078.i.i.i = mul nuw i128 %conv1.i216.i.i1063.i.i.i, %conv1.i216.i.i1063.i.i.i
  %mul.i241.i.i1079.i.i.i = mul nuw nsw i128 %shr.i.i.i1071.i.i.i, 281475040739328
  %add.i230.i.i1080.i.i.i = add i128 %mul.i233.i.i1077.i.i.i, %mul.i237.i.i1078.i.i.i
  %add.i234.i.i1081.i.i.i = add i128 %add.i230.i.i1080.i.i.i, %mul.i229.i.i1076.i.i.i
  %add.i238.i.i1082.i.i.i = add i128 %add.i234.i.i1081.i.i.i, %mul.i241.i.i1079.i.i.i
  %add.i242.i.i1083.i.i.i = add i128 %add.i238.i.i1082.i.i.i, %shr.i226.i.i1072.i.i.i
  %conv.i243.i.i1084.i.i.i = trunc i128 %add.i242.i.i1083.i.i.i to i64
  %shr.i244.i.i1085.i.i.i = lshr i128 %add.i242.i.i1083.i.i.i, 52
  %and47.i.i1086.i.i.i = lshr i64 %conv.i243.i.i1084.i.i.i, 48
  %132 = and i64 %and47.i.i1086.i.i.i, 15
  %and54.i.i1087.i.i.i = and i64 %conv.i243.i.i1084.i.i.i, 281474976710655
  %mul.i247.i.i1088.i.i.i = mul nuw i128 %conv.i227.i.i1074.i.i.i, %conv.i227.i.i1074.i.i.i
  %conv.i248.i.i1089.i.i.i = zext i64 %and107.i.i111813471354.i.i.i to i128
  %mul.i250.i.i1090.i.i.i = mul nuw i128 %conv1.i228.i.i1075.i.i.i, %conv.i248.i.i1089.i.i.i
  %mul64.i.i1091.i.i.i = shl i64 %and129.i.i113213481353.i.i.i, 1
  %conv.i252.i.i1092.i.i.i = zext i64 %mul64.i.i1091.i.i.i to i128
  %mul.i254.i.i1093.i.i.i = mul nuw i128 %conv1.i.i.i1059.i.i.i, %conv.i252.i.i1092.i.i.i
  %add.i251.i.i1094.i.i.i = add i128 %mul.i250.i.i1090.i.i.i, %mul.i254.i.i1093.i.i.i
  %add.i255.i.i1095.i.i.i = add i128 %add.i251.i.i1094.i.i.i, %shr.i244.i.i1085.i.i.i
  %conv.i256.i.i1096.i.i.i = trunc i128 %add.i255.i.i1095.i.i.i to i64
  %shr.i257.i.i1097.i.i.i = lshr i128 %add.i255.i.i1095.i.i.i, 52
  %and69.i.i1098.i.i.i = shl i64 %conv.i256.i.i1096.i.i.i, 4
  %shl.i.i1099.i.i.i = and i64 %and69.i.i1098.i.i.i, 72057594037927920
  %or.i.i1100.i.i.i = or i64 %shl.i.i1099.i.i.i, %132
  %conv.i258.i.i1101.i.i.i = zext i64 %or.i.i1100.i.i.i to i128
  %mul.i259.i.i1102.i.i.i = mul nuw nsw i128 %conv.i258.i.i1101.i.i.i, 4294968273
  %add.i260.i.i1103.i.i.i = add i128 %mul.i259.i.i1102.i.i.i, %mul.i247.i.i1088.i.i.i
  %conv.i261.i.i1104.i.i.i = trunc i128 %add.i260.i.i1103.i.i.i to i64
  %and83.i.i1105.i.i.i = and i64 %conv.i261.i.i1104.i.i.i, 4503599627370495
  %shr.i262.i.i1106.i.i.i = lshr i128 %add.i260.i.i1103.i.i.i, 52
  %mul.i265.i.i1107.i.i.i = mul nuw i128 %conv.i248.i.i1089.i.i.i, %conv.i.i.i1058.i.i.i
  %mul.i269.i.i1108.i.i.i = mul nuw i128 %conv1.i228.i.i1075.i.i.i, %conv1.i216.i.i1063.i.i.i
  %mul.i273.i.i1109.i.i.i = mul nuw i128 %conv1.i.i.i1059.i.i.i, %conv1.i.i.i1059.i.i.i
  %add.i270.i.i1110.i.i.i = add i128 %mul.i269.i.i1108.i.i.i, %mul.i273.i.i1109.i.i.i
  %add.i274.i.i1111.i.i.i = add i128 %add.i270.i.i1110.i.i.i, %shr.i257.i.i1097.i.i.i
  %conv.i276.i.i1112.i.i.i = and i128 %add.i274.i.i1111.i.i.i, 4503599627370495
  %mul.i277.i.i1113.i.i.i = mul nuw nsw i128 %conv.i276.i.i1112.i.i.i, 68719492368
  %add.i266.i.i1114.i.i.i = add i128 %mul.i277.i.i1113.i.i.i, %mul.i265.i.i1107.i.i.i
  %add.i278.i.i1115.i.i.i = add i128 %add.i266.i.i1114.i.i.i, %shr.i262.i.i1106.i.i.i
  %shr.i279.i.i1116.i.i.i = lshr i128 %add.i274.i.i1111.i.i.i, 52
  %conv.i280.i.i1117.i.i.i = trunc i128 %add.i278.i.i1115.i.i.i to i64
  %and107.i.i1118.i.i.i = and i64 %conv.i280.i.i1117.i.i.i, 4503599627370495
  %shr.i281.i.i1120.i.i.i = lshr i128 %add.i278.i.i1115.i.i.i, 52
  %mul.i284.i.i1121.i.i.i = mul nuw i128 %conv1.i216.i.i1063.i.i.i, %conv.i.i.i1058.i.i.i
  %mul.i288.i.i1122.i.i.i = mul nuw i128 %conv.i248.i.i1089.i.i.i, %conv.i248.i.i1089.i.i.i
  %mul.i292.i.i1123.i.i.i = mul nuw i128 %conv1.i228.i.i1075.i.i.i, %conv1.i.i.i1059.i.i.i
  %add.i293.i.i1124.i.i.i = add i128 %shr.i279.i.i1116.i.i.i, %mul.i292.i.i1123.i.i.i
  %conv1.i295.i.i1125.i.i.i = and i128 %add.i293.i.i1124.i.i.i, 18446744073709551615
  %mul.i296.i.i1126.i.i.i = mul nuw nsw i128 %conv1.i295.i.i1125.i.i.i, 68719492368
  %add.i285.i.i1127.i.i.i = add i128 %mul.i284.i.i1121.i.i.i, %mul.i288.i.i1122.i.i.i
  %add.i289.i.i1128.i.i.i = add i128 %add.i285.i.i1127.i.i.i, %mul.i296.i.i1126.i.i.i
  %add.i297.i.i1129.i.i.i = add i128 %add.i289.i.i1128.i.i.i, %shr.i281.i.i1120.i.i.i
  %shr.i298.i.i1130.i.i.i = lshr i128 %add.i293.i.i1124.i.i.i, 64
  %conv.i299.i.i1131.i.i.i = trunc i128 %add.i297.i.i1129.i.i.i to i64
  %and129.i.i1132.i.i.i = and i64 %conv.i299.i.i1131.i.i.i, 4503599627370495
  %shr.i300.i.i1134.i.i.i = lshr i128 %add.i297.i.i1129.i.i.i, 52
  %mul.i303.i.i1135.i.i.i = mul nuw nsw i128 %shr.i298.i.i1130.i.i.i, 281475040739328
  %conv.i305.i.i1136.i.i.i = and i128 %add.i224.i.i1070.i.i.i, 4503599627370494
  %add.i304.i.i1137.i.i.i = add nuw nsw i128 %mul.i303.i.i1135.i.i.i, %conv.i305.i.i1136.i.i.i
  %add.i306.i.i1138.i.i.i = add nuw nsw i128 %add.i304.i.i1137.i.i.i, %shr.i300.i.i1134.i.i.i
  %conv.i307.i.i1139.i.i.i = trunc i128 %add.i306.i.i1138.i.i.i to i64
  %and142.i.i1140.i.i.i = and i64 %conv.i307.i.i1139.i.i.i, 4503599627370495
  %shr.i308.i.i1142.i.i.i = lshr i128 %add.i306.i.i1138.i.i.i, 52
  %conv.i309.i.i1143.i.i.i = trunc i128 %shr.i308.i.i1142.i.i.i to i64
  %add.i.i1144.i.i.i = add nuw nsw i64 %and54.i.i1087.i.i.i, %conv.i309.i.i1143.i.i.i
  %inc71.i.i.i = add nuw nsw i32 %j.101355.i.i.i, 1
  %exitcond1362.not.i.i.i = icmp eq i32 %inc71.i.i.i, 6
  br i1 %exitcond1362.not.i.i.i, label %secp256k1_fe_sqrt.exit.i.i, label %for.body69.i.i.i, !llvm.loop !45

secp256k1_fe_sqrt.exit.i.i:                       ; preds = %for.body69.i.i.i
  %cmp9.i = icmp ne i8 %5, 3
  store i64 %and83.i.i1105.i.i.i, i64* %arraydecay.i956.i.i.i, align 8, !tbaa !13
  store i64 %and107.i.i1118.i.i.i, i64* %arrayidx1.i.i958.i.i.i, align 8, !tbaa !13
  store i64 %and129.i.i1132.i.i.i, i64* %arrayidx2.i.i959.i.i.i, align 8, !tbaa !13
  store i64 %and142.i.i1140.i.i.i, i64* %arrayidx3.i.i960.i.i.i, align 8, !tbaa !13
  store i64 %add.i.i1144.i.i.i, i64* %arrayidx4.i.i961.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %t1.i.i.i, %struct.secp256k1_fe* noundef nonnull %t1.i.i.i, %struct.secp256k1_fe* noundef nonnull %x2.i.i.i) #19
  %133 = load i64, i64* %arraydecay.i956.i.i.i, align 8, !tbaa !13
  %134 = load i64, i64* %arrayidx1.i.i958.i.i.i, align 8, !tbaa !13
  %135 = load i64, i64* %arrayidx2.i.i959.i.i.i, align 8, !tbaa !13
  %136 = load i64, i64* %arrayidx3.i.i960.i.i.i, align 8, !tbaa !13
  %137 = load i64, i64* %arrayidx4.i.i961.i.i.i, align 8, !tbaa !13
  %mul.i.i1152.i.i.i = shl i64 %133, 1
  %conv.i.i.i1153.i.i.i = zext i64 %mul.i.i1152.i.i.i to i128
  %conv1.i.i.i1154.i.i.i = zext i64 %136 to i128
  %mul.i.i.i1155.i.i.i = mul nuw i128 %conv1.i.i.i1154.i.i.i, %conv.i.i.i1153.i.i.i
  %mul17.i.i1156.i.i.i = shl i64 %134, 1
  %conv.i215.i.i1157.i.i.i = zext i64 %mul17.i.i1156.i.i.i to i128
  %conv1.i216.i.i1158.i.i.i = zext i64 %135 to i128
  %mul.i217.i.i1159.i.i.i = mul nuw i128 %conv1.i216.i.i1158.i.i.i, %conv.i215.i.i1157.i.i.i
  %add.i.i.i1160.i.i.i = add i128 %mul.i.i.i1155.i.i.i, %mul.i217.i.i1159.i.i.i
  %conv.i218.i.i1161.i.i.i = zext i64 %137 to i128
  %mul.i220.i.i1162.i.i.i = mul nuw i128 %conv.i218.i.i1161.i.i.i, %conv.i218.i.i1161.i.i.i
  %conv1.i222.i.i1163.i.i.i = and i128 %mul.i220.i.i1162.i.i.i, 18446744073709551615
  %mul.i223.i.i1164.i.i.i = mul nuw nsw i128 %conv1.i222.i.i1163.i.i.i, 68719492368
  %add.i224.i.i1165.i.i.i = add i128 %add.i.i.i1160.i.i.i, %mul.i223.i.i1164.i.i.i
  %shr.i.i.i1166.i.i.i = lshr i128 %mul.i220.i.i1162.i.i.i, 64
  %shr.i226.i.i1167.i.i.i = lshr i128 %add.i224.i.i1165.i.i.i, 52
  %mul37.i.i1168.i.i.i = shl i64 %137, 1
  %conv.i227.i.i1169.i.i.i = zext i64 %133 to i128
  %conv1.i228.i.i1170.i.i.i = zext i64 %mul37.i.i1168.i.i.i to i128
  %mul.i229.i.i1171.i.i.i = mul nuw i128 %conv1.i228.i.i1170.i.i.i, %conv.i227.i.i1169.i.i.i
  %mul.i233.i.i1172.i.i.i = mul nuw i128 %conv1.i.i.i1154.i.i.i, %conv.i215.i.i1157.i.i.i
  %mul.i237.i.i1173.i.i.i = mul nuw i128 %conv1.i216.i.i1158.i.i.i, %conv1.i216.i.i1158.i.i.i
  %mul.i241.i.i1174.i.i.i = mul nuw nsw i128 %shr.i.i.i1166.i.i.i, 281475040739328
  %add.i230.i.i1175.i.i.i = add i128 %mul.i233.i.i1172.i.i.i, %mul.i237.i.i1173.i.i.i
  %add.i234.i.i1176.i.i.i = add i128 %add.i230.i.i1175.i.i.i, %mul.i229.i.i1171.i.i.i
  %add.i238.i.i1177.i.i.i = add i128 %add.i234.i.i1176.i.i.i, %mul.i241.i.i1174.i.i.i
  %add.i242.i.i1178.i.i.i = add i128 %add.i238.i.i1177.i.i.i, %shr.i226.i.i1167.i.i.i
  %conv.i243.i.i1179.i.i.i = trunc i128 %add.i242.i.i1178.i.i.i to i64
  %shr.i244.i.i1180.i.i.i = lshr i128 %add.i242.i.i1178.i.i.i, 52
  %and47.i.i1181.i.i.i = lshr i64 %conv.i243.i.i1179.i.i.i, 48
  %138 = and i64 %and47.i.i1181.i.i.i, 15
  %and54.i.i1182.i.i.i = and i64 %conv.i243.i.i1179.i.i.i, 281474976710655
  %mul.i247.i.i1183.i.i.i = mul nuw i128 %conv.i227.i.i1169.i.i.i, %conv.i227.i.i1169.i.i.i
  %conv.i248.i.i1184.i.i.i = zext i64 %134 to i128
  %mul.i250.i.i1185.i.i.i = mul nuw i128 %conv1.i228.i.i1170.i.i.i, %conv.i248.i.i1184.i.i.i
  %mul64.i.i1186.i.i.i = shl i64 %135, 1
  %conv.i252.i.i1187.i.i.i = zext i64 %mul64.i.i1186.i.i.i to i128
  %mul.i254.i.i1188.i.i.i = mul nuw i128 %conv1.i.i.i1154.i.i.i, %conv.i252.i.i1187.i.i.i
  %add.i251.i.i1189.i.i.i = add i128 %mul.i250.i.i1185.i.i.i, %mul.i254.i.i1188.i.i.i
  %add.i255.i.i1190.i.i.i = add i128 %add.i251.i.i1189.i.i.i, %shr.i244.i.i1180.i.i.i
  %conv.i256.i.i1191.i.i.i = trunc i128 %add.i255.i.i1190.i.i.i to i64
  %shr.i257.i.i1192.i.i.i = lshr i128 %add.i255.i.i1190.i.i.i, 52
  %and69.i.i1193.i.i.i = shl i64 %conv.i256.i.i1191.i.i.i, 4
  %shl.i.i1194.i.i.i = and i64 %and69.i.i1193.i.i.i, 72057594037927920
  %or.i.i1195.i.i.i = or i64 %shl.i.i1194.i.i.i, %138
  %conv.i258.i.i1196.i.i.i = zext i64 %or.i.i1195.i.i.i to i128
  %mul.i259.i.i1197.i.i.i = mul nuw nsw i128 %conv.i258.i.i1196.i.i.i, 4294968273
  %add.i260.i.i1198.i.i.i = add i128 %mul.i259.i.i1197.i.i.i, %mul.i247.i.i1183.i.i.i
  %conv.i261.i.i1199.i.i.i = trunc i128 %add.i260.i.i1198.i.i.i to i64
  %and83.i.i1200.i.i.i = and i64 %conv.i261.i.i1199.i.i.i, 4503599627370495
  %shr.i262.i.i1201.i.i.i = lshr i128 %add.i260.i.i1198.i.i.i, 52
  %mul.i265.i.i1202.i.i.i = mul nuw i128 %conv.i248.i.i1184.i.i.i, %conv.i.i.i1153.i.i.i
  %mul.i269.i.i1203.i.i.i = mul nuw i128 %conv1.i228.i.i1170.i.i.i, %conv1.i216.i.i1158.i.i.i
  %mul.i273.i.i1204.i.i.i = mul nuw i128 %conv1.i.i.i1154.i.i.i, %conv1.i.i.i1154.i.i.i
  %add.i270.i.i1205.i.i.i = add i128 %mul.i269.i.i1203.i.i.i, %mul.i273.i.i1204.i.i.i
  %add.i274.i.i1206.i.i.i = add i128 %add.i270.i.i1205.i.i.i, %shr.i257.i.i1192.i.i.i
  %conv.i276.i.i1207.i.i.i = and i128 %add.i274.i.i1206.i.i.i, 4503599627370495
  %mul.i277.i.i1208.i.i.i = mul nuw nsw i128 %conv.i276.i.i1207.i.i.i, 68719492368
  %add.i266.i.i1209.i.i.i = add i128 %mul.i277.i.i1208.i.i.i, %mul.i265.i.i1202.i.i.i
  %add.i278.i.i1210.i.i.i = add i128 %add.i266.i.i1209.i.i.i, %shr.i262.i.i1201.i.i.i
  %shr.i279.i.i1211.i.i.i = lshr i128 %add.i274.i.i1206.i.i.i, 52
  %conv.i280.i.i1212.i.i.i = trunc i128 %add.i278.i.i1210.i.i.i to i64
  %and107.i.i1213.i.i.i = and i64 %conv.i280.i.i1212.i.i.i, 4503599627370495
  %shr.i281.i.i1215.i.i.i = lshr i128 %add.i278.i.i1210.i.i.i, 52
  %mul.i284.i.i1216.i.i.i = mul nuw i128 %conv1.i216.i.i1158.i.i.i, %conv.i.i.i1153.i.i.i
  %mul.i288.i.i1217.i.i.i = mul nuw i128 %conv.i248.i.i1184.i.i.i, %conv.i248.i.i1184.i.i.i
  %mul.i292.i.i1218.i.i.i = mul nuw i128 %conv1.i228.i.i1170.i.i.i, %conv1.i.i.i1154.i.i.i
  %add.i293.i.i1219.i.i.i = add i128 %shr.i279.i.i1211.i.i.i, %mul.i292.i.i1218.i.i.i
  %conv1.i295.i.i1220.i.i.i = and i128 %add.i293.i.i1219.i.i.i, 18446744073709551615
  %mul.i296.i.i1221.i.i.i = mul nuw nsw i128 %conv1.i295.i.i1220.i.i.i, 68719492368
  %add.i285.i.i1222.i.i.i = add i128 %mul.i284.i.i1216.i.i.i, %mul.i288.i.i1217.i.i.i
  %add.i289.i.i1223.i.i.i = add i128 %add.i285.i.i1222.i.i.i, %mul.i296.i.i1221.i.i.i
  %add.i297.i.i1224.i.i.i = add i128 %add.i289.i.i1223.i.i.i, %shr.i281.i.i1215.i.i.i
  %shr.i298.i.i1225.i.i.i = lshr i128 %add.i293.i.i1219.i.i.i, 64
  %conv.i299.i.i1226.i.i.i = trunc i128 %add.i297.i.i1224.i.i.i to i64
  %and129.i.i1227.i.i.i = and i64 %conv.i299.i.i1226.i.i.i, 4503599627370495
  %shr.i300.i.i1229.i.i.i = lshr i128 %add.i297.i.i1224.i.i.i, 52
  %mul.i303.i.i1230.i.i.i = mul nuw nsw i128 %shr.i298.i.i1225.i.i.i, 281475040739328
  %conv.i305.i.i1231.i.i.i = and i128 %add.i224.i.i1165.i.i.i, 4503599627370494
  %add.i304.i.i1232.i.i.i = add nuw nsw i128 %mul.i303.i.i1230.i.i.i, %conv.i305.i.i1231.i.i.i
  %add.i306.i.i1233.i.i.i = add nuw nsw i128 %add.i304.i.i1232.i.i.i, %shr.i300.i.i1229.i.i.i
  %shr.i308.i.i1237.i.i.i = lshr i128 %add.i306.i.i1233.i.i.i, 52
  %conv.i309.i.i1238.i.i.i = trunc i128 %shr.i308.i.i1237.i.i.i to i64
  %add.i.i1239.i.i.i = add nuw nsw i64 %and54.i.i1182.i.i.i, %conv.i309.i.i1238.i.i.i
  %arraydecay.i227 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 0
  %mul.i.i233 = shl nuw nsw i64 %and83.i.i1200.i.i.i, 1
  %conv.i.i.i234 = zext i64 %mul.i.i233 to i128
  %conv1.i.i.i235 = and i128 %add.i306.i.i1233.i.i.i, 4503599627370495
  %mul.i.i.i236 = mul nuw nsw i128 %conv1.i.i.i235, %conv.i.i.i234
  %mul17.i.i237 = shl nuw nsw i64 %and107.i.i1213.i.i.i, 1
  %conv.i215.i.i238 = zext i64 %mul17.i.i237 to i128
  %conv1.i216.i.i239 = zext i64 %and129.i.i1227.i.i.i to i128
  %mul.i217.i.i240 = mul nuw nsw i128 %conv1.i216.i.i239, %conv.i215.i.i238
  %add.i.i.i241 = add nuw nsw i128 %mul.i.i.i236, %mul.i217.i.i240
  %conv.i218.i.i242 = zext i64 %add.i.i1239.i.i.i to i128
  %mul.i220.i.i243 = mul nuw nsw i128 %conv.i218.i.i242, %conv.i218.i.i242
  %conv1.i222.i.i244 = and i128 %mul.i220.i.i243, 18446744073709551615
  %mul.i223.i.i245 = mul nuw nsw i128 %conv1.i222.i.i244, 68719492368
  %add.i224.i.i246 = add nuw nsw i128 %add.i.i.i241, %mul.i223.i.i245
  %shr.i.i.i247 = lshr i128 %mul.i220.i.i243, 64
  %shr.i226.i.i248 = lshr i128 %add.i224.i.i246, 52
  %mul37.i.i249 = shl nuw nsw i64 %add.i.i1239.i.i.i, 1
  %conv.i227.i.i250 = zext i64 %and83.i.i1200.i.i.i to i128
  %conv1.i228.i.i251 = zext i64 %mul37.i.i249 to i128
  %mul.i229.i.i252 = mul nuw nsw i128 %conv1.i228.i.i251, %conv.i227.i.i250
  %mul.i233.i.i253 = mul nuw nsw i128 %conv1.i.i.i235, %conv.i215.i.i238
  %mul.i237.i.i254 = mul nuw nsw i128 %conv1.i216.i.i239, %conv1.i216.i.i239
  %mul.i241.i.i255 = mul nuw nsw i128 %shr.i.i.i247, 281475040739328
  %add.i230.i.i256 = add nuw nsw i128 %mul.i233.i.i253, %mul.i237.i.i254
  %add.i234.i.i257 = add nuw nsw i128 %add.i230.i.i256, %mul.i229.i.i252
  %add.i238.i.i258 = add nuw nsw i128 %add.i234.i.i257, %mul.i241.i.i255
  %add.i242.i.i259 = add nuw nsw i128 %add.i238.i.i258, %shr.i226.i.i248
  %conv.i243.i.i260 = trunc i128 %add.i242.i.i259 to i64
  %shr.i244.i.i261 = lshr i128 %add.i242.i.i259, 52
  %and47.i.i262 = lshr i64 %conv.i243.i.i260, 48
  %139 = and i64 %and47.i.i262, 15
  %and54.i.i263 = and i64 %conv.i243.i.i260, 281474976710655
  %mul.i247.i.i264 = mul nuw nsw i128 %conv.i227.i.i250, %conv.i227.i.i250
  %conv.i248.i.i265 = zext i64 %and107.i.i1213.i.i.i to i128
  %mul.i250.i.i266 = mul nuw nsw i128 %conv1.i228.i.i251, %conv.i248.i.i265
  %mul64.i.i267 = shl nuw nsw i64 %and129.i.i1227.i.i.i, 1
  %conv.i252.i.i268 = zext i64 %mul64.i.i267 to i128
  %mul.i254.i.i269 = mul nuw nsw i128 %conv1.i.i.i235, %conv.i252.i.i268
  %add.i251.i.i270 = add nuw nsw i128 %mul.i250.i.i266, %mul.i254.i.i269
  %add.i255.i.i271 = add nuw nsw i128 %add.i251.i.i270, %shr.i244.i.i261
  %conv.i256.i.i272 = trunc i128 %add.i255.i.i271 to i64
  %shr.i257.i.i273 = lshr i128 %add.i255.i.i271, 52
  %and69.i.i274 = shl i64 %conv.i256.i.i272, 4
  %shl.i.i275 = and i64 %and69.i.i274, 72057594037927920
  %or.i.i276 = or i64 %shl.i.i275, %139
  %conv.i258.i.i277 = zext i64 %or.i.i276 to i128
  %mul.i259.i.i278 = mul nuw nsw i128 %conv.i258.i.i277, 4294968273
  %add.i260.i.i279 = add nuw nsw i128 %mul.i259.i.i278, %mul.i247.i.i264
  %conv.i261.i.i280 = trunc i128 %add.i260.i.i279 to i64
  %and83.i.i281 = and i64 %conv.i261.i.i280, 4503599627370495
  store i64 %and83.i.i281, i64* %arraydecay.i227, align 8, !tbaa !13
  %shr.i262.i.i282 = lshr i128 %add.i260.i.i279, 52
  %mul.i265.i.i283 = mul nuw nsw i128 %conv.i248.i.i265, %conv.i.i.i234
  %mul.i269.i.i284 = mul nuw nsw i128 %conv1.i228.i.i251, %conv1.i216.i.i239
  %mul.i273.i.i285 = mul nuw nsw i128 %conv1.i.i.i235, %conv1.i.i.i235
  %add.i270.i.i286 = add nuw nsw i128 %mul.i269.i.i284, %mul.i273.i.i285
  %add.i274.i.i287 = add nuw nsw i128 %add.i270.i.i286, %shr.i257.i.i273
  %conv.i276.i.i288 = and i128 %add.i274.i.i287, 4503599627370495
  %mul.i277.i.i289 = mul nuw nsw i128 %conv.i276.i.i288, 68719492368
  %add.i266.i.i290 = add nuw nsw i128 %mul.i277.i.i289, %mul.i265.i.i283
  %add.i278.i.i291 = add nuw nsw i128 %add.i266.i.i290, %shr.i262.i.i282
  %shr.i279.i.i292 = lshr i128 %add.i274.i.i287, 52
  %conv.i280.i.i293 = trunc i128 %add.i278.i.i291 to i64
  %and107.i.i294 = and i64 %conv.i280.i.i293, 4503599627370495
  %arrayidx108.i.i295 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 1
  store i64 %and107.i.i294, i64* %arrayidx108.i.i295, align 8, !tbaa !13
  %shr.i281.i.i296 = lshr i128 %add.i278.i.i291, 52
  %mul.i284.i.i297 = mul nuw nsw i128 %conv1.i216.i.i239, %conv.i.i.i234
  %mul.i288.i.i298 = mul nuw nsw i128 %conv.i248.i.i265, %conv.i248.i.i265
  %mul.i292.i.i299 = mul nuw nsw i128 %conv1.i.i.i235, %conv1.i228.i.i251
  %add.i293.i.i300 = add nuw nsw i128 %shr.i279.i.i292, %mul.i292.i.i299
  %conv1.i295.i.i301 = and i128 %add.i293.i.i300, 18446744073709551615
  %mul.i296.i.i302 = mul nuw nsw i128 %conv1.i295.i.i301, 68719492368
  %add.i285.i.i303 = add nuw nsw i128 %mul.i284.i.i297, %mul.i288.i.i298
  %add.i289.i.i304 = add nuw nsw i128 %add.i285.i.i303, %mul.i296.i.i302
  %add.i297.i.i305 = add nuw nsw i128 %add.i289.i.i304, %shr.i281.i.i296
  %shr.i298.i.i306 = lshr i128 %add.i293.i.i300, 64
  %conv.i299.i.i307 = trunc i128 %add.i297.i.i305 to i64
  %and129.i.i308 = and i64 %conv.i299.i.i307, 4503599627370495
  %arrayidx130.i.i309 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 2
  store i64 %and129.i.i308, i64* %arrayidx130.i.i309, align 8, !tbaa !13
  %shr.i300.i.i310 = lshr i128 %add.i297.i.i305, 52
  %mul.i303.i.i311 = mul nuw nsw i128 %shr.i298.i.i306, 281475040739328
  %conv.i305.i.i312 = and i128 %add.i224.i.i246, 4503599627370494
  %add.i304.i.i313 = add nuw nsw i128 %mul.i303.i.i311, %conv.i305.i.i312
  %add.i306.i.i314 = add nuw nsw i128 %add.i304.i.i313, %shr.i300.i.i310
  %conv.i307.i.i315 = trunc i128 %add.i306.i.i314 to i64
  %and142.i.i316 = and i64 %conv.i307.i.i315, 4503599627370495
  %arrayidx143.i.i317 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 3
  store i64 %and142.i.i316, i64* %arrayidx143.i.i317, align 8, !tbaa !13
  %shr.i308.i.i318 = lshr i128 %add.i306.i.i314, 52
  %conv.i309.i.i319 = trunc i128 %shr.i308.i.i318 to i64
  %add.i.i320 = add nuw nsw i64 %and54.i.i263, %conv.i309.i.i319
  %arrayidx151.i.i321 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 4
  store i64 %add.i.i320, i64* %arrayidx151.i.i321, align 8, !tbaa !13
  %mul.i.i138 = shl nuw nsw i64 %and83.i.i281, 1
  %conv.i.i.i139 = zext i64 %mul.i.i138 to i128
  %conv1.i.i.i140 = zext i64 %and142.i.i316 to i128
  %mul.i.i.i141 = mul nuw nsw i128 %conv1.i.i.i140, %conv.i.i.i139
  %mul17.i.i142 = shl nuw nsw i64 %and107.i.i294, 1
  %conv.i215.i.i143 = zext i64 %mul17.i.i142 to i128
  %conv1.i216.i.i144 = zext i64 %and129.i.i308 to i128
  %mul.i217.i.i145 = mul nuw nsw i128 %conv1.i216.i.i144, %conv.i215.i.i143
  %add.i.i.i146 = add nuw nsw i128 %mul.i.i.i141, %mul.i217.i.i145
  %conv.i218.i.i147 = zext i64 %add.i.i320 to i128
  %mul.i220.i.i148 = mul nuw nsw i128 %conv.i218.i.i147, %conv.i218.i.i147
  %conv1.i222.i.i149 = and i128 %mul.i220.i.i148, 18446744073709551615
  %mul.i223.i.i150 = mul nuw nsw i128 %conv1.i222.i.i149, 68719492368
  %add.i224.i.i151 = add nuw nsw i128 %add.i.i.i146, %mul.i223.i.i150
  %shr.i.i.i152 = lshr i128 %mul.i220.i.i148, 64
  %shr.i226.i.i153 = lshr i128 %add.i224.i.i151, 52
  %mul37.i.i154 = shl nuw nsw i64 %add.i.i320, 1
  %conv.i227.i.i155 = zext i64 %and83.i.i281 to i128
  %conv1.i228.i.i156 = zext i64 %mul37.i.i154 to i128
  %mul.i229.i.i157 = mul nuw nsw i128 %conv1.i228.i.i156, %conv.i227.i.i155
  %mul.i233.i.i158 = mul nuw nsw i128 %conv1.i.i.i140, %conv.i215.i.i143
  %mul.i237.i.i159 = mul nuw nsw i128 %conv1.i216.i.i144, %conv1.i216.i.i144
  %mul.i241.i.i160 = mul nuw nsw i128 %shr.i.i.i152, 281475040739328
  %add.i230.i.i161 = add nuw nsw i128 %mul.i233.i.i158, %mul.i237.i.i159
  %add.i234.i.i162 = add nuw nsw i128 %add.i230.i.i161, %mul.i229.i.i157
  %add.i238.i.i163 = add nuw nsw i128 %add.i234.i.i162, %mul.i241.i.i160
  %add.i242.i.i164 = add nuw nsw i128 %add.i238.i.i163, %shr.i226.i.i153
  %conv.i243.i.i165 = trunc i128 %add.i242.i.i164 to i64
  %shr.i244.i.i166 = lshr i128 %add.i242.i.i164, 52
  %and47.i.i167 = lshr i64 %conv.i243.i.i165, 48
  %140 = and i64 %and47.i.i167, 15
  %and54.i.i168 = and i64 %conv.i243.i.i165, 281474976710655
  %mul.i247.i.i169 = mul nuw nsw i128 %conv.i227.i.i155, %conv.i227.i.i155
  %conv.i248.i.i170 = zext i64 %and107.i.i294 to i128
  %mul.i250.i.i171 = mul nuw nsw i128 %conv1.i228.i.i156, %conv.i248.i.i170
  %mul64.i.i172 = shl nuw nsw i64 %and129.i.i308, 1
  %conv.i252.i.i173 = zext i64 %mul64.i.i172 to i128
  %mul.i254.i.i174 = mul nuw nsw i128 %conv1.i.i.i140, %conv.i252.i.i173
  %add.i251.i.i175 = add nuw nsw i128 %mul.i250.i.i171, %mul.i254.i.i174
  %add.i255.i.i176 = add nuw nsw i128 %add.i251.i.i175, %shr.i244.i.i166
  %conv.i256.i.i177 = trunc i128 %add.i255.i.i176 to i64
  %shr.i257.i.i178 = lshr i128 %add.i255.i.i176, 52
  %and69.i.i179 = shl i64 %conv.i256.i.i177, 4
  %shl.i.i180 = and i64 %and69.i.i179, 72057594037927920
  %or.i.i181 = or i64 %shl.i.i180, %140
  %conv.i258.i.i182 = zext i64 %or.i.i181 to i128
  %mul.i259.i.i183 = mul nuw nsw i128 %conv.i258.i.i182, 4294968273
  %add.i260.i.i184 = add nuw nsw i128 %mul.i259.i.i183, %mul.i247.i.i169
  %conv.i261.i.i185 = trunc i128 %add.i260.i.i184 to i64
  %and83.i.i186 = and i64 %conv.i261.i.i185, 4503599627370495
  %shr.i262.i.i187 = lshr i128 %add.i260.i.i184, 52
  %mul.i265.i.i188 = mul nuw nsw i128 %conv.i248.i.i170, %conv.i.i.i139
  %mul.i269.i.i189 = mul nuw nsw i128 %conv1.i228.i.i156, %conv1.i216.i.i144
  %mul.i273.i.i190 = mul nuw nsw i128 %conv1.i.i.i140, %conv1.i.i.i140
  %add.i270.i.i191 = add nuw nsw i128 %mul.i269.i.i189, %mul.i273.i.i190
  %add.i274.i.i192 = add nuw nsw i128 %add.i270.i.i191, %shr.i257.i.i178
  %conv.i276.i.i193 = and i128 %add.i274.i.i192, 4503599627370495
  %mul.i277.i.i194 = mul nuw nsw i128 %conv.i276.i.i193, 68719492368
  %add.i266.i.i195 = add nuw nsw i128 %mul.i277.i.i194, %mul.i265.i.i188
  %add.i278.i.i196 = add nuw nsw i128 %add.i266.i.i195, %shr.i262.i.i187
  %shr.i279.i.i197 = lshr i128 %add.i274.i.i192, 52
  %conv.i280.i.i198 = trunc i128 %add.i278.i.i196 to i64
  %and107.i.i199 = and i64 %conv.i280.i.i198, 4503599627370495
  %shr.i281.i.i201 = lshr i128 %add.i278.i.i196, 52
  %mul.i284.i.i202 = mul nuw nsw i128 %conv1.i216.i.i144, %conv.i.i.i139
  %mul.i288.i.i203 = mul nuw nsw i128 %conv.i248.i.i170, %conv.i248.i.i170
  %mul.i292.i.i204 = mul nuw nsw i128 %conv1.i228.i.i156, %conv1.i.i.i140
  %add.i293.i.i205 = add nuw nsw i128 %shr.i279.i.i197, %mul.i292.i.i204
  %conv1.i295.i.i206 = and i128 %add.i293.i.i205, 18446744073709551615
  %mul.i296.i.i207 = mul nuw nsw i128 %conv1.i295.i.i206, 68719492368
  %add.i285.i.i208 = add nuw nsw i128 %mul.i284.i.i202, %mul.i288.i.i203
  %add.i289.i.i209 = add nuw nsw i128 %add.i285.i.i208, %mul.i296.i.i207
  %add.i297.i.i210 = add nuw nsw i128 %add.i289.i.i209, %shr.i281.i.i201
  %shr.i298.i.i211 = lshr i128 %add.i293.i.i205, 64
  %conv.i299.i.i212 = trunc i128 %add.i297.i.i210 to i64
  %and129.i.i213 = and i64 %conv.i299.i.i212, 4503599627370495
  %shr.i300.i.i215 = lshr i128 %add.i297.i.i210, 52
  %mul.i303.i.i216 = mul nuw nsw i128 %shr.i298.i.i211, 281475040739328
  %conv.i305.i.i217 = and i128 %add.i224.i.i151, 4503599627370494
  %add.i304.i.i218 = add nuw nsw i128 %mul.i303.i.i216, %conv.i305.i.i217
  %add.i306.i.i219 = add nuw nsw i128 %add.i304.i.i218, %shr.i300.i.i215
  %conv.i307.i.i220 = trunc i128 %add.i306.i.i219 to i64
  %and142.i.i221 = and i64 %conv.i307.i.i220, 4503599627370495
  %shr.i308.i.i223 = lshr i128 %add.i306.i.i219, 52
  %conv.i309.i.i224 = trunc i128 %shr.i308.i.i223 to i64
  %add.i.i225 = add nuw nsw i64 %and54.i.i168, %conv.i309.i.i224
  %sub32.i.i.i.i.i = sub nuw nsw i64 1125899906842620, %add.i.i225
  %141 = load i64, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %142 = load i64, i64* %arrayidx6.i.i.i, align 8, !tbaa !13
  %143 = load i64, i64* %arrayidx11.i.i.i, align 8, !tbaa !13
  %144 = load i64, i64* %arrayidx16.i.i.i, align 8, !tbaa !13
  %145 = load i64, i64* %arrayidx21.i.i.i, align 8, !tbaa !13
  %add22.i.i.i.i.i = add i64 %sub32.i.i.i.i.i, %145
  %shr.i.i.i.i.i = lshr i64 %add22.i.i.i.i.i, 48
  %and.i.i.i.i.i = and i64 %add22.i.i.i.i.i, 281474976710655
  %mul.i.i1243.i.i.i = mul nuw nsw i64 %shr.i.i.i.i.i, 4294968273
  %sub.i.i.i.i.i = add i64 %141, 18014381329608892
  %add.i.i1241.i.i.i = sub i64 %sub.i.i.i.i.i, %and83.i.i186
  %add.i7.i.i.i.i = add i64 %add.i.i1241.i.i.i, %mul.i.i1243.i.i.i
  %shr9.i.i.i.i.i = lshr i64 %add.i7.i.i.i.i, 52
  %sub8.i.i.i.i.i = add i64 %142, 18014398509481980
  %add7.i.i.i.i.i = sub i64 %sub8.i.i.i.i.i, %and107.i.i199
  %add10.i.i.i.i.i = add i64 %add7.i.i.i.i.i, %shr9.i.i.i.i.i
  %xor.i.i.i.i.i = xor i64 %add.i7.i.i.i.i, 4294968272
  %shr12.i.i.i.i.i = lshr i64 %add10.i.i.i.i.i, 52
  %sub16.i.i.i.i.i = add i64 %143, 18014398509481980
  %add12.i.i.i.i.i = sub i64 %sub16.i.i.i.i.i, %and129.i.i213
  %add13.i.i.i.i.i = add i64 %add12.i.i.i.i.i, %shr12.i.i.i.i.i
  %and1177.i.i.i.i.i = or i64 %add10.i.i.i.i.i, %add.i7.i.i.i.i
  %and15.i.i.i.i.i = and i64 %add10.i.i.i.i.i, %xor.i.i.i.i.i
  %shr16.i.i.i.i.i = lshr i64 %add13.i.i.i.i.i, 52
  %sub24.i.i.i.i.i = add i64 %144, 18014398509481980
  %add17.i.i.i.i.i = sub i64 %sub24.i.i.i.i.i, %and142.i.i221
  %add17.i8.i.i.i.i = add i64 %add17.i.i.i.i.i, %shr16.i.i.i.i.i
  %or78.i.i.i.i.i = or i64 %and1177.i.i.i.i.i, %add13.i.i.i.i.i
  %and20.i.i.i.i.i = and i64 %and15.i.i.i.i.i, %add13.i.i.i.i.i
  %shr21.i.i.i.i.i = lshr i64 %add17.i8.i.i.i.i, 52
  %add22.i9.i.i.i.i = add nuw nsw i64 %shr21.i.i.i.i.i, %and.i.i.i.i.i
  %or1979.i.i.i.i.i = or i64 %or78.i.i.i.i.i, %add17.i8.i.i.i.i
  %or24.i.i.i.i.i = and i64 %or1979.i.i.i.i.i, 4503599627370495
  %and25.i.i.i.i.i = and i64 %and20.i.i.i.i.i, %add17.i8.i.i.i.i
  %or26.i.i.i.i.i = or i64 %or24.i.i.i.i.i, %add22.i9.i.i.i.i
  %xor27.i.i.i.i.i = xor i64 %add22.i9.i.i.i.i, 4222124650659840
  %and28.i.i.i.i.i = and i64 %and25.i.i.i.i.i, %xor27.i.i.i.i.i
  %cmp30.i.i.i.i.i = icmp ne i64 %or26.i.i.i.i.i, 0
  %cmp32.i.i.i.i.i = icmp ne i64 %and28.i.i.i.i.i, 4503599627370495
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #19
  %tobool.not.i.i = and i1 %cmp30.i.i.i.i.i, %cmp32.i.i.i.i.i
  br i1 %tobool.not.i.i, label %secp256k1_ge_set_xo_var.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %secp256k1_fe_sqrt.exit.i.i
  %146 = load i64, i64* %arrayidx108.i.i295, align 8, !tbaa !13
  %147 = load i64, i64* %arrayidx130.i.i309, align 8, !tbaa !13
  %148 = load i64, i64* %arrayidx143.i.i317, align 8, !tbaa !13
  %149 = load i64, i64* %arrayidx151.i.i321, align 8, !tbaa !13
  %shr.i.i.i = lshr i64 %149, 48
  %and.i.i.i = and i64 %149, 281474976710655
  %mul.i.i.i = mul nuw nsw i64 %shr.i.i.i, 4294968273
  %add.i20.i.i = add nuw nsw i64 %mul.i.i.i, %and83.i.i281
  %shr9.i.i.i = lshr i64 %add.i20.i.i, 52
  %add10.i.i.i = add i64 %shr9.i.i.i, %146
  %and11.i.i.i = and i64 %add.i20.i.i, 4503599627370495
  %shr12.i.i.i = lshr i64 %add10.i.i.i, 52
  %add13.i.i.i = add i64 %shr12.i.i.i, %147
  %and14.i.i.i = and i64 %add10.i.i.i, 4503599627370495
  %shr15.i.i.i = lshr i64 %add13.i.i.i, 52
  %add16.i.i.i = add i64 %shr15.i.i.i, %148
  %and17.i.i.i = and i64 %add13.i.i.i, 4503599627370495
  %and18.i.i.i = and i64 %and17.i.i.i, %add10.i.i.i
  %shr19.i.i.i = lshr i64 %add16.i.i.i, 52
  %add20.i.i.i = add nuw nsw i64 %shr19.i.i.i, %and.i.i.i
  %and21.i.i.i = and i64 %add16.i.i.i, 4503599627370495
  %and22.i.i.i = and i64 %and18.i.i.i, %add16.i.i.i
  %shr24.i.i.i = lshr i64 %add20.i.i.i, 48
  %cmp25.i.i.i = icmp eq i64 %add20.i.i.i, 281474976710655
  %cmp27.i.i.i = icmp eq i64 %and22.i.i.i, 4503599627370495
  %and29121.i.i.i = and i1 %cmp27.i.i.i, %cmp25.i.i.i
  %cmp30.i.i.i = icmp ugt i64 %and11.i.i.i, 4503595332402222
  %and32122.i.i.i = and i1 %cmp30.i.i.i, %and29121.i.i.i
  %150 = zext i1 %and32122.i.i.i to i64
  %or.i.i.i = or i64 %shr24.i.i.i, %150
  %tobool.not.i.i.i = icmp eq i64 %or.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %secp256k1_fe_normalize_var.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %add34.i.i.i = add nuw nsw i64 %and11.i.i.i, 4294968273
  %shr35.i.i.i = lshr i64 %add34.i.i.i, 52
  %add36.i.i.i = add nuw nsw i64 %and14.i.i.i, %shr35.i.i.i
  %and37.i.i.i = and i64 %add34.i.i.i, 4503599627370495
  %shr38.i.i.i = lshr i64 %add36.i.i.i, 52
  %add39.i.i.i = add nuw nsw i64 %and17.i.i.i, %shr38.i.i.i
  %and40.i.i.i = and i64 %add36.i.i.i, 4503599627370495
  %shr41.i.i.i = lshr i64 %add39.i.i.i, 52
  %add42.i.i.i = add nuw nsw i64 %and21.i.i.i, %shr41.i.i.i
  %and43.i.i.i = and i64 %add39.i.i.i, 4503599627370495
  %shr44.i.i.i = lshr i64 %add42.i.i.i, 52
  %add45.i.i.i = add nuw nsw i64 %shr44.i.i.i, %add20.i.i.i
  %and46.i.i.i = and i64 %add42.i.i.i, 4503599627370495
  %and53.i.i.i = and i64 %add45.i.i.i, 281474976710655
  br label %secp256k1_fe_normalize_var.exit.i.i

secp256k1_fe_normalize_var.exit.i.i:              ; preds = %if.then.i.i.i, %if.end.i.i
  %t1.0.i.i.i = phi i64 [ %and40.i.i.i, %if.then.i.i.i ], [ %and14.i.i.i, %if.end.i.i ]
  %t2.0.i.i.i = phi i64 [ %and43.i.i.i, %if.then.i.i.i ], [ %and17.i.i.i, %if.end.i.i ]
  %t3.0.i.i.i = phi i64 [ %and46.i.i.i, %if.then.i.i.i ], [ %and21.i.i.i, %if.end.i.i ]
  %t4.0.i.i.i = phi i64 [ %and53.i.i.i, %if.then.i.i.i ], [ %add20.i.i.i, %if.end.i.i ]
  %t0.0.i.i.i = phi i64 [ %and37.i.i.i, %if.then.i.i.i ], [ %and11.i.i.i, %if.end.i.i ]
  store i64 %t0.0.i.i.i, i64* %arraydecay.i227, align 8, !tbaa !13
  store i64 %t1.0.i.i.i, i64* %arrayidx108.i.i295, align 8, !tbaa !13
  store i64 %t2.0.i.i.i, i64* %arrayidx130.i.i309, align 8, !tbaa !13
  store i64 %t3.0.i.i.i, i64* %arrayidx143.i.i317, align 8, !tbaa !13
  store i64 %t4.0.i.i.i, i64* %arrayidx151.i.i321, align 8, !tbaa !13
  %151 = and i64 %t0.0.i.i.i, 1
  %152 = icmp ne i64 %151, 0
  %cmp.not.i.i = xor i1 %cmp9.i, %152
  br i1 %cmp.not.i.i, label %secp256k1_ge_set_xo_var.exit.i, label %if.then5.i.i

if.then5.i.i:                                     ; preds = %secp256k1_fe_normalize_var.exit.i.i
  %sub.i.i.i = sub nuw nsw i64 18014381329608892, %t0.0.i.i.i
  store i64 %sub.i.i.i, i64* %arraydecay.i227, align 8, !tbaa !13
  %sub8.i.i.i = sub nuw nsw i64 18014398509481980, %t1.0.i.i.i
  store i64 %sub8.i.i.i, i64* %arrayidx108.i.i295, align 8, !tbaa !13
  %sub16.i.i.i = sub nuw nsw i64 18014398509481980, %t2.0.i.i.i
  store i64 %sub16.i.i.i, i64* %arrayidx130.i.i309, align 8, !tbaa !13
  %sub24.i.i.i = sub nuw nsw i64 18014398509481980, %t3.0.i.i.i
  store i64 %sub24.i.i.i, i64* %arrayidx143.i.i317, align 8, !tbaa !13
  %sub32.i.i.i = sub nuw nsw i64 1125899906842620, %t4.0.i.i.i
  store i64 %sub32.i.i.i, i64* %arrayidx151.i.i321, align 8, !tbaa !13
  br label %secp256k1_ge_set_xo_var.exit.i

secp256k1_ge_set_xo_var.exit.i:                   ; preds = %if.then5.i.i, %secp256k1_fe_normalize_var.exit.i.i, %secp256k1_fe_sqrt.exit.i.i
  %tobool12.i = phi i32 [ 0, %secp256k1_fe_sqrt.exit.i.i ], [ 1, %secp256k1_fe_normalize_var.exit.i.i ], [ 1, %if.then5.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #19
  br label %land.end.i

land.end.i:                                       ; preds = %secp256k1_ge_set_xo_var.exit.i, %if.then.i
  %153 = phi i32 [ 0, %if.then.i ], [ %tobool12.i, %secp256k1_ge_set_xo_var.exit.i ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  br label %secp256k1_eckey_pubkey_parse.exit

land.lhs.true15.i:                                ; preds = %do.end19
  %154 = load i8, i8* %input, align 1, !tbaa !10
  switch i8 %154, label %cleanup [
    i8 4, label %if.then30.i
    i8 6, label %if.then30.i
    i8 7, label %if.then30.i
  ]

if.then30.i:                                      ; preds = %land.lhs.true15.i, %land.lhs.true15.i, %land.lhs.true15.i
  %155 = bitcast %struct.secp256k1_fe* %x31.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %155) #19
  %156 = bitcast %struct.secp256k1_fe* %y.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %156) #19
  %add.ptr32.i = getelementptr inbounds i8, i8* %input, i64 1
  %call33.i = call fastcc i32 @secp256k1_fe_set_b32(%struct.secp256k1_fe* noundef nonnull %x31.i, i8* noundef nonnull %add.ptr32.i) #19
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.not.i, label %cleanup.i, label %lor.lhs.false35.i

lor.lhs.false35.i:                                ; preds = %if.then30.i
  %add.ptr36.i = getelementptr inbounds i8, i8* %input, i64 33
  %call37.i = call fastcc i32 @secp256k1_fe_set_b32(%struct.secp256k1_fe* noundef nonnull %y.i, i8* noundef nonnull %add.ptr36.i) #19
  %tobool38.not.i = icmp eq i32 %call37.i, 0
  br i1 %tobool38.not.i, label %cleanup.i, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false35.i
  %infinity.i78.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 2
  store i32 0, i32* %infinity.i78.i, align 8, !tbaa !37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %0, i8* noundef nonnull align 8 dereferenceable(40) %155, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1
  %157 = bitcast %struct.secp256k1_fe* %y2.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %157, i8* noundef nonnull align 8 dereferenceable(40) %156, i64 40, i1 false) #19, !tbaa.struct !18
  %158 = load i8, i8* %input, align 1, !tbaa !10
  %159 = and i8 %158, -2
  %switch77.i = icmp eq i8 %159, 6
  br i1 %switch77.i, label %land.lhs.true49.i, label %if.end.i102.i

land.lhs.true49.i:                                ; preds = %if.end.i
  %y.idx.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %y.i, i64 0, i32 0, i64 0
  %y.idx.val.i = load i64, i64* %y.idx.i, align 8, !tbaa !13
  %cmp53.i = icmp ne i8 %158, 7
  %160 = and i64 %y.idx.val.i, 1
  %161 = icmp ne i64 %160, 0
  %cmp55.not.i = xor i1 %cmp53.i, %161
  br i1 %cmp55.not.i, label %if.end.i102.i, label %cleanup.i

if.end.i102.i:                                    ; preds = %land.lhs.true49.i, %if.end.i
  %162 = bitcast %struct.secp256k1_fe* %x3.i80.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %162) #19
  %arraydecay2.i38 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %y2.i.i, i64 0, i32 0, i64 0
  %163 = load i64, i64* %arraydecay2.i38, align 8, !tbaa !13
  %arrayidx1.i.i39 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 1
  %164 = load i64, i64* %arrayidx1.i.i39, align 8, !tbaa !13
  %arrayidx2.i.i40 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 2
  %165 = load i64, i64* %arrayidx2.i.i40, align 8, !tbaa !13
  %arrayidx3.i.i41 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 3
  %166 = load i64, i64* %arrayidx3.i.i41, align 8, !tbaa !13
  %arrayidx4.i.i42 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 4
  %167 = load i64, i64* %arrayidx4.i.i42, align 8, !tbaa !13
  %mul.i.i43 = shl i64 %163, 1
  %conv.i.i.i44 = zext i64 %mul.i.i43 to i128
  %conv1.i.i.i45 = zext i64 %166 to i128
  %mul.i.i.i46 = mul nuw i128 %conv1.i.i.i45, %conv.i.i.i44
  %mul17.i.i47 = shl i64 %164, 1
  %conv.i215.i.i48 = zext i64 %mul17.i.i47 to i128
  %conv1.i216.i.i49 = zext i64 %165 to i128
  %mul.i217.i.i50 = mul nuw i128 %conv1.i216.i.i49, %conv.i215.i.i48
  %add.i.i.i51 = add i128 %mul.i.i.i46, %mul.i217.i.i50
  %conv.i218.i.i52 = zext i64 %167 to i128
  %mul.i220.i.i53 = mul nuw i128 %conv.i218.i.i52, %conv.i218.i.i52
  %conv1.i222.i.i54 = and i128 %mul.i220.i.i53, 18446744073709551615
  %mul.i223.i.i55 = mul nuw nsw i128 %conv1.i222.i.i54, 68719492368
  %add.i224.i.i56 = add i128 %add.i.i.i51, %mul.i223.i.i55
  %shr.i.i.i57 = lshr i128 %mul.i220.i.i53, 64
  %shr.i226.i.i58 = lshr i128 %add.i224.i.i56, 52
  %mul37.i.i59 = shl i64 %167, 1
  %conv.i227.i.i60 = zext i64 %163 to i128
  %conv1.i228.i.i61 = zext i64 %mul37.i.i59 to i128
  %mul.i229.i.i62 = mul nuw i128 %conv1.i228.i.i61, %conv.i227.i.i60
  %mul.i233.i.i63 = mul nuw i128 %conv1.i.i.i45, %conv.i215.i.i48
  %mul.i237.i.i64 = mul nuw i128 %conv1.i216.i.i49, %conv1.i216.i.i49
  %mul.i241.i.i65 = mul nuw nsw i128 %shr.i.i.i57, 281475040739328
  %add.i230.i.i66 = add i128 %mul.i233.i.i63, %mul.i237.i.i64
  %add.i234.i.i67 = add i128 %add.i230.i.i66, %mul.i229.i.i62
  %add.i238.i.i68 = add i128 %add.i234.i.i67, %mul.i241.i.i65
  %add.i242.i.i69 = add i128 %add.i238.i.i68, %shr.i226.i.i58
  %conv.i243.i.i70 = trunc i128 %add.i242.i.i69 to i64
  %shr.i244.i.i71 = lshr i128 %add.i242.i.i69, 52
  %and47.i.i72 = lshr i64 %conv.i243.i.i70, 48
  %168 = and i64 %and47.i.i72, 15
  %and54.i.i73 = and i64 %conv.i243.i.i70, 281474976710655
  %mul.i247.i.i74 = mul nuw i128 %conv.i227.i.i60, %conv.i227.i.i60
  %conv.i248.i.i75 = zext i64 %164 to i128
  %mul.i250.i.i76 = mul nuw i128 %conv1.i228.i.i61, %conv.i248.i.i75
  %mul64.i.i77 = shl i64 %165, 1
  %conv.i252.i.i78 = zext i64 %mul64.i.i77 to i128
  %mul.i254.i.i79 = mul nuw i128 %conv1.i.i.i45, %conv.i252.i.i78
  %add.i251.i.i80 = add i128 %mul.i250.i.i76, %mul.i254.i.i79
  %add.i255.i.i81 = add i128 %add.i251.i.i80, %shr.i244.i.i71
  %conv.i256.i.i82 = trunc i128 %add.i255.i.i81 to i64
  %shr.i257.i.i83 = lshr i128 %add.i255.i.i81, 52
  %and69.i.i84 = shl i64 %conv.i256.i.i82, 4
  %shl.i.i85 = and i64 %and69.i.i84, 72057594037927920
  %or.i.i86 = or i64 %shl.i.i85, %168
  %conv.i258.i.i87 = zext i64 %or.i.i86 to i128
  %mul.i259.i.i88 = mul nuw nsw i128 %conv.i258.i.i87, 4294968273
  %add.i260.i.i89 = add i128 %mul.i259.i.i88, %mul.i247.i.i74
  %conv.i261.i.i90 = trunc i128 %add.i260.i.i89 to i64
  %and83.i.i91 = and i64 %conv.i261.i.i90, 4503599627370495
  %shr.i262.i.i92 = lshr i128 %add.i260.i.i89, 52
  %mul.i265.i.i93 = mul nuw i128 %conv.i248.i.i75, %conv.i.i.i44
  %mul.i269.i.i94 = mul nuw i128 %conv1.i228.i.i61, %conv1.i216.i.i49
  %mul.i273.i.i95 = mul nuw i128 %conv1.i.i.i45, %conv1.i.i.i45
  %add.i270.i.i96 = add i128 %mul.i269.i.i94, %mul.i273.i.i95
  %add.i274.i.i97 = add i128 %add.i270.i.i96, %shr.i257.i.i83
  %conv.i276.i.i98 = and i128 %add.i274.i.i97, 4503599627370495
  %mul.i277.i.i99 = mul nuw nsw i128 %conv.i276.i.i98, 68719492368
  %add.i266.i.i100 = add i128 %mul.i277.i.i99, %mul.i265.i.i93
  %add.i278.i.i101 = add i128 %add.i266.i.i100, %shr.i262.i.i92
  %shr.i279.i.i102 = lshr i128 %add.i274.i.i97, 52
  %shr.i281.i.i106 = lshr i128 %add.i278.i.i101, 52
  %mul.i284.i.i107 = mul nuw i128 %conv1.i216.i.i49, %conv.i.i.i44
  %mul.i288.i.i108 = mul nuw i128 %conv.i248.i.i75, %conv.i248.i.i75
  %mul.i292.i.i109 = mul nuw i128 %conv1.i228.i.i61, %conv1.i.i.i45
  %add.i293.i.i110 = add i128 %shr.i279.i.i102, %mul.i292.i.i109
  %conv1.i295.i.i111 = and i128 %add.i293.i.i110, 18446744073709551615
  %mul.i296.i.i112 = mul nuw nsw i128 %conv1.i295.i.i111, 68719492368
  %add.i285.i.i113 = add i128 %mul.i284.i.i107, %mul.i288.i.i108
  %add.i289.i.i114 = add i128 %add.i285.i.i113, %mul.i296.i.i112
  %add.i297.i.i115 = add i128 %add.i289.i.i114, %shr.i281.i.i106
  %shr.i298.i.i116 = lshr i128 %add.i293.i.i110, 64
  %shr.i300.i.i120 = lshr i128 %add.i297.i.i115, 52
  %mul.i303.i.i121 = mul nuw nsw i128 %shr.i298.i.i116, 281475040739328
  %conv.i305.i.i122 = and i128 %add.i224.i.i56, 4503599627370494
  %add.i304.i.i123 = add nuw nsw i128 %mul.i303.i.i121, %conv.i305.i.i122
  %add.i306.i.i124 = add nuw nsw i128 %add.i304.i.i123, %shr.i300.i.i120
  %shr.i308.i.i128 = lshr i128 %add.i306.i.i124, 52
  %conv.i309.i.i129 = trunc i128 %shr.i308.i.i128 to i64
  %x.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0
  %arraydecay.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i80.i, i64 0, i32 0, i64 0
  %arraydecay2.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 0
  %169 = load i64, i64* %arraydecay2.i, align 8, !tbaa !13
  %arrayidx1.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 1
  %170 = load i64, i64* %arrayidx1.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 2
  %171 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %arrayidx3.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 3
  %172 = load i64, i64* %arrayidx3.i.i, align 8, !tbaa !13
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 4
  %173 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %mul.i.i = shl i64 %169, 1
  %conv.i.i.i = zext i64 %mul.i.i to i128
  %conv1.i.i.i = zext i64 %172 to i128
  %mul.i.i.i34 = mul nuw i128 %conv1.i.i.i, %conv.i.i.i
  %mul17.i.i = shl i64 %170, 1
  %conv.i215.i.i = zext i64 %mul17.i.i to i128
  %conv1.i216.i.i = zext i64 %171 to i128
  %mul.i217.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i215.i.i
  %add.i.i.i35 = add i128 %mul.i.i.i34, %mul.i217.i.i
  %conv.i218.i.i = zext i64 %173 to i128
  %mul.i220.i.i = mul nuw i128 %conv.i218.i.i, %conv.i218.i.i
  %conv1.i222.i.i = and i128 %mul.i220.i.i, 18446744073709551615
  %mul.i223.i.i = mul nuw nsw i128 %conv1.i222.i.i, 68719492368
  %add.i224.i.i = add i128 %add.i.i.i35, %mul.i223.i.i
  %shr.i.i.i36 = lshr i128 %mul.i220.i.i, 64
  %shr.i226.i.i = lshr i128 %add.i224.i.i, 52
  %mul37.i.i = shl i64 %173, 1
  %conv.i227.i.i = zext i64 %169 to i128
  %conv1.i228.i.i = zext i64 %mul37.i.i to i128
  %mul.i229.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i227.i.i
  %mul.i233.i.i = mul nuw i128 %conv1.i.i.i, %conv.i215.i.i
  %mul.i237.i.i = mul nuw i128 %conv1.i216.i.i, %conv1.i216.i.i
  %mul.i241.i.i = mul nuw nsw i128 %shr.i.i.i36, 281475040739328
  %add.i230.i.i = add i128 %mul.i233.i.i, %mul.i237.i.i
  %add.i234.i.i = add i128 %add.i230.i.i, %mul.i229.i.i
  %add.i238.i.i = add i128 %add.i234.i.i, %mul.i241.i.i
  %add.i242.i.i = add i128 %add.i238.i.i, %shr.i226.i.i
  %conv.i243.i.i = trunc i128 %add.i242.i.i to i64
  %shr.i244.i.i = lshr i128 %add.i242.i.i, 52
  %and47.i.i = lshr i64 %conv.i243.i.i, 48
  %174 = and i64 %and47.i.i, 15
  %and54.i.i = and i64 %conv.i243.i.i, 281474976710655
  %mul.i247.i.i = mul nuw i128 %conv.i227.i.i, %conv.i227.i.i
  %conv.i248.i.i = zext i64 %170 to i128
  %mul.i250.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i248.i.i
  %mul64.i.i = shl i64 %171, 1
  %conv.i252.i.i = zext i64 %mul64.i.i to i128
  %mul.i254.i.i = mul nuw i128 %conv1.i.i.i, %conv.i252.i.i
  %add.i251.i.i = add i128 %mul.i250.i.i, %mul.i254.i.i
  %add.i255.i.i = add i128 %add.i251.i.i, %shr.i244.i.i
  %conv.i256.i.i = trunc i128 %add.i255.i.i to i64
  %shr.i257.i.i = lshr i128 %add.i255.i.i, 52
  %and69.i.i = shl i64 %conv.i256.i.i, 4
  %shl.i.i = and i64 %and69.i.i, 72057594037927920
  %or.i.i = or i64 %shl.i.i, %174
  %conv.i258.i.i = zext i64 %or.i.i to i128
  %mul.i259.i.i = mul nuw nsw i128 %conv.i258.i.i, 4294968273
  %add.i260.i.i = add i128 %mul.i259.i.i, %mul.i247.i.i
  %shr.i262.i.i = lshr i128 %add.i260.i.i, 52
  %mul.i265.i.i = mul nuw i128 %conv.i248.i.i, %conv.i.i.i
  %mul.i269.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i216.i.i
  %mul.i273.i.i = mul nuw i128 %conv1.i.i.i, %conv1.i.i.i
  %add.i270.i.i = add i128 %mul.i269.i.i, %mul.i273.i.i
  %add.i274.i.i = add i128 %add.i270.i.i, %shr.i257.i.i
  %conv.i276.i.i = and i128 %add.i274.i.i, 4503599627370495
  %mul.i277.i.i = mul nuw nsw i128 %conv.i276.i.i, 68719492368
  %add.i266.i.i = add i128 %mul.i277.i.i, %mul.i265.i.i
  %add.i278.i.i = add i128 %add.i266.i.i, %shr.i262.i.i
  %shr.i279.i.i = lshr i128 %add.i274.i.i, 52
  %175 = insertelement <2 x i128> poison, i128 %add.i260.i.i, i64 0
  %176 = insertelement <2 x i128> %175, i128 %add.i278.i.i, i64 1
  %177 = trunc <2 x i128> %176 to <2 x i64>
  %178 = and <2 x i64> %177, <i64 4503599627370495, i64 4503599627370495>
  %arrayidx108.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i80.i, i64 0, i32 0, i64 1
  %179 = bitcast %struct.secp256k1_fe* %x3.i80.i to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %179, align 16, !tbaa !13
  %shr.i281.i.i = lshr i128 %add.i278.i.i, 52
  %mul.i284.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i.i.i
  %mul.i288.i.i = mul nuw i128 %conv.i248.i.i, %conv.i248.i.i
  %mul.i292.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i.i.i
  %add.i293.i.i = add i128 %shr.i279.i.i, %mul.i292.i.i
  %conv1.i295.i.i = and i128 %add.i293.i.i, 18446744073709551615
  %mul.i296.i.i = mul nuw nsw i128 %conv1.i295.i.i, 68719492368
  %add.i285.i.i = add i128 %mul.i284.i.i, %mul.i288.i.i
  %add.i289.i.i = add i128 %add.i285.i.i, %mul.i296.i.i
  %add.i297.i.i = add i128 %add.i289.i.i, %shr.i281.i.i
  %shr.i298.i.i = lshr i128 %add.i293.i.i, 64
  %arrayidx130.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i80.i, i64 0, i32 0, i64 2
  %shr.i300.i.i = lshr i128 %add.i297.i.i, 52
  %mul.i303.i.i = mul nuw nsw i128 %shr.i298.i.i, 281475040739328
  %conv.i305.i.i = and i128 %add.i224.i.i, 4503599627370494
  %add.i304.i.i = add nuw nsw i128 %mul.i303.i.i, %conv.i305.i.i
  %add.i306.i.i = add nuw nsw i128 %add.i304.i.i, %shr.i300.i.i
  %180 = insertelement <2 x i128> poison, i128 %add.i297.i.i, i64 0
  %181 = insertelement <2 x i128> %180, i128 %add.i306.i.i, i64 1
  %182 = trunc <2 x i128> %181 to <2 x i64>
  %183 = and <2 x i64> %182, <i64 4503599627370495, i64 4503599627370495>
  %arrayidx143.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i80.i, i64 0, i32 0, i64 3
  %184 = bitcast i64* %arrayidx130.i.i to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %184, align 16, !tbaa !13
  %shr.i308.i.i = lshr i128 %add.i306.i.i, 52
  %conv.i309.i.i = trunc i128 %shr.i308.i.i to i64
  %add.i.i = add nuw nsw i64 %and54.i.i, %conv.i309.i.i
  %arrayidx151.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %x3.i80.i, i64 0, i32 0, i64 4
  store i64 %add.i.i, i64* %arrayidx151.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x3.i80.i, %struct.secp256k1_fe* noundef nonnull %x3.i80.i, %struct.secp256k1_fe* noundef nonnull %x.i.i) #19
  %185 = load i64, i64* %arraydecay.i, align 16, !tbaa !13
  %add.i.i85.i = add i64 %185, 7
  %186 = load i64, i64* %arrayidx108.i.i, align 8, !tbaa !13
  %187 = load i64, i64* %arrayidx130.i.i, align 16, !tbaa !13
  %188 = load i64, i64* %arrayidx143.i.i, align 8, !tbaa !13
  %189 = load i64, i64* %arrayidx151.i.i, align 16, !tbaa !13
  %shr.i.i90.i = lshr i64 %189, 48
  %and.i.i91.i = and i64 %189, 281474976710655
  %mul.i.i92.i = mul nuw nsw i64 %shr.i.i90.i, 4294968273
  %add.i8.i.i = add i64 %add.i.i85.i, %mul.i.i92.i
  %shr9.i.i93.i = lshr i64 %add.i8.i.i, 52
  %add10.i.i94.i = add i64 %shr9.i.i93.i, %186
  %and11.i.i95.i = and i64 %add.i8.i.i, 4503599627370495
  %shr12.i.i96.i = lshr i64 %add10.i.i94.i, 52
  %add13.i.i97.i = add i64 %shr12.i.i96.i, %187
  %shr15.i.i98.i = lshr i64 %add13.i.i97.i, 52
  %add16.i.i99.i = add i64 %shr15.i.i98.i, %188
  %shr18.i.i.i = lshr i64 %add16.i.i99.i, 52
  %190 = add nuw nsw i64 %and.i.i91.i, 1125899906842620
  %191 = add nuw nsw i64 %and54.i.i73, %conv.i309.i.i129
  %add19.i.i.i = sub nsw i64 %190, %191
  %add22.i.i.i.i = add nsw i64 %add19.i.i.i, %shr18.i.i.i
  %shr.i.i.i.i = lshr i64 %add22.i.i.i.i, 48
  %mul.i.i.i100.i = mul nuw nsw i64 %shr.i.i.i.i, 4294968273
  %sub.i.i.i.i = sub nuw nsw i64 18014381329608892, %and83.i.i91
  %add.i.i.i101.i = add nuw nsw i64 %sub.i.i.i.i, %and11.i.i95.i
  %add.i5.i.i.i = add nuw nsw i64 %add.i.i.i101.i, %mul.i.i.i100.i
  %and.i.i.i.i = and i64 %add.i5.i.i.i, 4503599627370495
  %xor.i.i.i.i = xor i64 %and.i.i.i.i, 4294968272
  %cmp.i.i.i.i = icmp ne i64 %and.i.i.i.i, 0
  %cmp3.i.i.i.i = icmp ne i64 %xor.i.i.i.i, 4503599627370495
  %and589.i.i.i.i = and i1 %cmp.i.i.i.i, %cmp3.i.i.i.i
  br i1 %and589.i.i.i.i, label %secp256k1_ge_is_valid_var.exit.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end.i102.i
  %conv.i307.i.i125 = trunc i128 %add.i306.i.i124 to i64
  %and142.i.i126 = and i64 %conv.i307.i.i125, 4503599627370495
  %conv.i299.i.i117 = trunc i128 %add.i297.i.i115 to i64
  %and129.i.i118 = and i64 %conv.i299.i.i117, 4503599627370495
  %conv.i280.i.i103 = trunc i128 %add.i278.i.i101 to i64
  %and107.i.i104 = and i64 %conv.i280.i.i103, 4503599627370495
  %and20.i.i.i = and i64 %add16.i.i99.i, 4503599627370495
  %and17.i.i103.i = and i64 %add13.i.i97.i, 4503599627370495
  %and14.i.i104.i = and i64 %add10.i.i94.i, 4503599627370495
  %and12.i.i.i.i = and i64 %add22.i.i.i.i, 281474976710655
  %shr13.i.i.i.i = lshr i64 %add.i5.i.i.i, 52
  %sub8.i.i.i.i = sub nuw nsw i64 18014398509481980, %and107.i.i104
  %add7.i.i.i.i = add nuw nsw i64 %sub8.i.i.i.i, %and14.i.i104.i
  %add14.i.i.i.i = add nuw nsw i64 %add7.i.i.i.i, %shr13.i.i.i.i
  %shr15.i.i.i.i = lshr i64 %add14.i.i.i.i, 52
  %sub16.i.i.i.i = sub nuw nsw i64 18014398509481980, %and129.i.i118
  %add12.i.i.i.i = add nuw nsw i64 %sub16.i.i.i.i, %and17.i.i103.i
  %add16.i.i.i.i = add nuw nsw i64 %add12.i.i.i.i, %shr15.i.i.i.i
  %and18.i.i.i.i = and i64 %add14.i.i.i.i, %xor.i.i.i.i
  %shr19.i.i.i.i = lshr i64 %add16.i.i.i.i, 52
  %sub24.i.i.i.i = sub nuw nsw i64 18014398509481980, %and142.i.i126
  %add17.i.i.i.i = add nuw nsw i64 %sub24.i.i.i.i, %and20.i.i.i
  %add20.i.i.i.i = add nuw nsw i64 %add17.i.i.i.i, %shr19.i.i.i.i
  %and23.i.i.i.i = and i64 %and18.i.i.i.i, %add16.i.i.i.i
  %shr24.i.i.i.i = lshr i64 %add20.i.i.i.i, 52
  %add25.i.i.i.i = add nuw nsw i64 %shr24.i.i.i.i, %and12.i.i.i.i
  %and28.i.i.i.i = and i64 %and23.i.i.i.i, %add20.i.i.i.i
  %xor30.i.i.i.i = xor i64 %add25.i.i.i.i, 4222124650659840
  %and31.i.i.i.i = and i64 %and28.i.i.i.i, %xor30.i.i.i.i
  %cmp37.i.i.i.i = icmp eq i64 %and31.i.i.i.i, 4503599627370495
  %or39.i.i.i.i = zext i1 %cmp37.i.i.i.i to i32
  br label %secp256k1_ge_is_valid_var.exit.i

secp256k1_ge_is_valid_var.exit.i:                 ; preds = %if.end.i.i.i.i, %if.end.i102.i
  %retval.0.i106.i = phi i32 [ %or39.i.i.i.i, %if.end.i.i.i.i ], [ 0, %if.end.i102.i ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %162) #19
  br label %cleanup.i

cleanup.i:                                        ; preds = %secp256k1_ge_is_valid_var.exit.i, %land.lhs.true49.i, %lor.lhs.false35.i, %if.then30.i
  %retval.0.i = phi i32 [ %retval.0.i106.i, %secp256k1_ge_is_valid_var.exit.i ], [ 0, %lor.lhs.false35.i ], [ 0, %if.then30.i ], [ 0, %land.lhs.true49.i ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %156) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %155) #19
  br label %secp256k1_eckey_pubkey_parse.exit

secp256k1_eckey_pubkey_parse.exit:                ; preds = %land.end.i, %cleanup.i
  %retval.1.i = phi i32 [ %153, %land.end.i ], [ %retval.0.i, %cleanup.i ]
  %tobool20.not = icmp eq i32 %retval.1.i, 0
  br i1 %tobool20.not, label %cleanup, label %if.end22

if.end22:                                         ; preds = %secp256k1_eckey_pubkey_parse.exit
  call fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* noundef nonnull %pubkey, %struct.secp256k1_ge* noundef nonnull %Q)
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true.i, %do.end19, %land.lhs.true15.i, %secp256k1_eckey_pubkey_parse.exit, %if.end22, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 1, %if.end22 ], [ 0, %secp256k1_eckey_pubkey_parse.exit ], [ 0, %land.lhs.true15.i ], [ 0, %do.end19 ], [ 0, %land.lhs.true.i ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* nocapture noundef writeonly %pubkey, %struct.secp256k1_ge* nocapture noundef readonly %ge) unnamed_addr #1 {
entry:
  %x.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 0, i32 0, i64 0
  %x.sroa.0.0.copyload.i = load i64, i64* %x.sroa.0.0..sroa_idx.i, align 8, !tbaa.struct !18
  %x.sroa.6.0..sroa_idx100.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 0, i32 0, i64 1
  %x.sroa.6.0.copyload.i = load i64, i64* %x.sroa.6.0..sroa_idx100.i, align 8, !tbaa.struct !46
  %x.sroa.10.0..sroa_idx104.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 0, i32 0, i64 2
  %x.sroa.10.0.copyload.i = load i64, i64* %x.sroa.10.0..sroa_idx104.i, align 8, !tbaa.struct !47
  %x.sroa.14.0..sroa_idx108.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 0, i32 0, i64 3
  %x.sroa.14.0.copyload.i = load i64, i64* %x.sroa.14.0..sroa_idx108.i, align 8, !tbaa.struct !48
  %x.sroa.18.0..sroa_idx112.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 0, i32 0, i64 4
  %x.sroa.18.0.copyload.i = load i64, i64* %x.sroa.18.0..sroa_idx112.i, align 8, !tbaa.struct !49
  %shr.i.i = lshr i64 %x.sroa.18.0.copyload.i, 48
  %and.i.i = and i64 %x.sroa.18.0.copyload.i, 281474976710655
  %mul.i.i = mul nuw nsw i64 %shr.i.i, 4294968273
  %add.i.i = add i64 %mul.i.i, %x.sroa.0.0.copyload.i
  %shr9.i.i = lshr i64 %add.i.i, 52
  %add10.i.i = add i64 %shr9.i.i, %x.sroa.6.0.copyload.i
  %and11.i.i = and i64 %add.i.i, 4503599627370495
  %shr12.i.i = lshr i64 %add10.i.i, 52
  %add13.i.i = add i64 %shr12.i.i, %x.sroa.10.0.copyload.i
  %and14.i.i = and i64 %add10.i.i, 4503599627370495
  %shr15.i.i = lshr i64 %add13.i.i, 52
  %add16.i.i = add i64 %shr15.i.i, %x.sroa.14.0.copyload.i
  %and17.i.i = and i64 %add13.i.i, 4503599627370495
  %and18.i.i = and i64 %and17.i.i, %add10.i.i
  %shr19.i.i = lshr i64 %add16.i.i, 52
  %add20.i.i = add nuw nsw i64 %shr19.i.i, %and.i.i
  %and21.i.i = and i64 %add16.i.i, 4503599627370495
  %and22.i.i = and i64 %and18.i.i, %add16.i.i
  %shr24.i.i = lshr i64 %add20.i.i, 48
  %cmp25.i.i = icmp eq i64 %add20.i.i, 281474976710655
  %cmp27.i.i = icmp eq i64 %and22.i.i, 4503599627370495
  %and29122.i.i = and i1 %cmp27.i.i, %cmp25.i.i
  %cmp30.i.i = icmp ugt i64 %and11.i.i, 4503595332402222
  %and32123.i.i = and i1 %cmp30.i.i, %and29122.i.i
  %0 = zext i1 %and32123.i.i to i64
  %or.i.i = or i64 %shr24.i.i, %0
  %mul34.i.i = mul nuw nsw i64 %or.i.i, 4294968273
  %add35.i.i = add nuw nsw i64 %mul34.i.i, %and11.i.i
  %shr36.i.i = lshr i64 %add35.i.i, 52
  %add37.i.i = add nuw nsw i64 %shr36.i.i, %and14.i.i
  %and38.i.i = and i64 %add35.i.i, 4503599627370495
  %shr39.i.i = lshr i64 %add37.i.i, 52
  %add40.i.i = add nuw nsw i64 %shr39.i.i, %and17.i.i
  %shr42.i.i = lshr i64 %add40.i.i, 52
  %add43.i.i = add nuw nsw i64 %shr42.i.i, %and21.i.i
  %shr45.i.i = lshr i64 %add43.i.i, 52
  %add46.i.i = add nuw nsw i64 %shr45.i.i, %add20.i.i
  %y.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 1, i32 0, i64 0
  %y.sroa.0.0.copyload.i = load i64, i64* %y.sroa.0.0..sroa_idx.i, align 8, !tbaa.struct !18
  %y.sroa.6.0..sroa_idx83.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 1, i32 0, i64 1
  %y.sroa.6.0.copyload.i = load i64, i64* %y.sroa.6.0..sroa_idx83.i, align 8, !tbaa.struct !46
  %y.sroa.10.0..sroa_idx87.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 1, i32 0, i64 2
  %y.sroa.10.0.copyload.i = load i64, i64* %y.sroa.10.0..sroa_idx87.i, align 8, !tbaa.struct !47
  %y.sroa.14.0..sroa_idx91.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 1, i32 0, i64 3
  %y.sroa.14.0.copyload.i = load i64, i64* %y.sroa.14.0..sroa_idx91.i, align 8, !tbaa.struct !48
  %y.sroa.18.0..sroa_idx95.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %ge, i64 0, i32 1, i32 0, i64 4
  %y.sroa.18.0.copyload.i = load i64, i64* %y.sroa.18.0..sroa_idx95.i, align 8, !tbaa.struct !49
  %shr.i13.i = lshr i64 %y.sroa.18.0.copyload.i, 48
  %and.i14.i = and i64 %y.sroa.18.0.copyload.i, 281474976710655
  %mul.i15.i = mul nuw nsw i64 %shr.i13.i, 4294968273
  %add.i16.i = add i64 %mul.i15.i, %y.sroa.0.0.copyload.i
  %shr9.i17.i = lshr i64 %add.i16.i, 52
  %add10.i18.i = add i64 %shr9.i17.i, %y.sroa.6.0.copyload.i
  %and11.i19.i = and i64 %add.i16.i, 4503599627370495
  %shr12.i20.i = lshr i64 %add10.i18.i, 52
  %add13.i21.i = add i64 %shr12.i20.i, %y.sroa.10.0.copyload.i
  %and14.i22.i = and i64 %add10.i18.i, 4503599627370495
  %shr15.i23.i = lshr i64 %add13.i21.i, 52
  %add16.i24.i = add i64 %shr15.i23.i, %y.sroa.14.0.copyload.i
  %and17.i25.i = and i64 %add13.i21.i, 4503599627370495
  %and18.i26.i = and i64 %and17.i25.i, %add10.i18.i
  %shr19.i27.i = lshr i64 %add16.i24.i, 52
  %add20.i28.i = add nuw nsw i64 %shr19.i27.i, %and.i14.i
  %and21.i29.i = and i64 %add16.i24.i, 4503599627370495
  %and22.i30.i = and i64 %and18.i26.i, %add16.i24.i
  %shr24.i31.i = lshr i64 %add20.i28.i, 48
  %cmp25.i32.i = icmp eq i64 %add20.i28.i, 281474976710655
  %cmp27.i33.i = icmp eq i64 %and22.i30.i, 4503599627370495
  %and29122.i34.i = and i1 %cmp27.i33.i, %cmp25.i32.i
  %cmp30.i35.i = icmp ugt i64 %and11.i19.i, 4503595332402222
  %and32123.i36.i = and i1 %cmp30.i35.i, %and29122.i34.i
  %1 = zext i1 %and32123.i36.i to i64
  %or.i37.i = or i64 %shr24.i31.i, %1
  %mul34.i38.i = mul nuw nsw i64 %or.i37.i, 4294968273
  %add35.i39.i = add nuw nsw i64 %mul34.i38.i, %and11.i19.i
  %shr36.i40.i = lshr i64 %add35.i39.i, 52
  %add37.i41.i = add nuw nsw i64 %shr36.i40.i, %and14.i22.i
  %and38.i42.i = and i64 %add35.i39.i, 4503599627370495
  %shr39.i43.i = lshr i64 %add37.i41.i, 52
  %add40.i44.i = add nuw nsw i64 %shr39.i43.i, %and17.i25.i
  %shr42.i46.i = lshr i64 %add40.i44.i, 52
  %add43.i47.i = add nuw nsw i64 %shr42.i46.i, %and21.i29.i
  %shr45.i49.i = lshr i64 %add43.i47.i, 52
  %add46.i50.i = add nuw nsw i64 %shr45.i49.i, %add20.i28.i
  %shl.i.i = shl i64 %add37.i.i, 52
  %or.i55.i = or i64 %shl.i.i, %and38.i.i
  %and41.i.i = lshr i64 %add37.i.i, 12
  %shr.i57.i = and i64 %and41.i.i, 1099511627775
  %shl9.i.i = shl i64 %add40.i.i, 40
  %or10.i.i = or i64 %shl9.i.i, %shr.i57.i
  %and44.i.i = lshr i64 %add40.i.i, 24
  %shr15.i59.i = and i64 %and44.i.i, 268435455
  %shl18.i.i = shl i64 %add43.i.i, 28
  %or19.i.i = or i64 %shl18.i.i, %shr15.i59.i
  %and47.i.i = lshr i64 %add43.i.i, 36
  %shr24.i60.i = and i64 %and47.i.i, 65535
  %and54.i.i = shl i64 %add46.i.i, 16
  %or28.i.i = or i64 %and54.i.i, %shr24.i60.i
  %shl.i63.i = shl i64 %add37.i41.i, 52
  %or.i64.i = or i64 %shl.i63.i, %and38.i42.i
  %and41.i45.i = lshr i64 %add37.i41.i, 12
  %shr.i66.i = and i64 %and41.i45.i, 1099511627775
  %shl9.i68.i = shl i64 %add40.i44.i, 40
  %or10.i69.i = or i64 %shl9.i68.i, %shr.i66.i
  %and44.i48.i = lshr i64 %add40.i44.i, 24
  %shr15.i71.i = and i64 %and44.i48.i, 268435455
  %shl18.i73.i = shl i64 %add43.i47.i, 28
  %or19.i74.i = or i64 %shl18.i73.i, %shr15.i71.i
  %and47.i51.i = lshr i64 %add43.i47.i, 36
  %shr24.i76.i = and i64 %and47.i51.i, 65535
  %and54.i52.i = shl i64 %add46.i50.i, 16
  %or28.i79.i = or i64 %and54.i52.i, %shr24.i76.i
  %s.sroa.0.0.arrayidx.sroa_cast = bitcast %struct.secp256k1_pubkey* %pubkey to i64*
  store i64 %or.i55.i, i64* %s.sroa.0.0.arrayidx.sroa_cast, align 1
  %s.sroa.4.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 8
  %s.sroa.4.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.4.0.arrayidx.sroa_idx to i64*
  store i64 %or10.i.i, i64* %s.sroa.4.0.arrayidx.sroa_cast, align 1
  %s.sroa.5.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %s.sroa.5.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx to i64*
  store i64 %or19.i.i, i64* %s.sroa.5.0.arrayidx.sroa_cast, align 1
  %s.sroa.6.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 24
  %s.sroa.6.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.6.0.arrayidx.sroa_idx to i64*
  store i64 %or28.i.i, i64* %s.sroa.6.0.arrayidx.sroa_cast, align 1
  %s.sroa.7.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %s.sroa.7.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx to i64*
  store i64 %or.i64.i, i64* %s.sroa.7.0.arrayidx.sroa_cast, align 1
  %s.sroa.8.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 40
  %s.sroa.8.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.8.0.arrayidx.sroa_idx to i64*
  store i64 %or10.i69.i, i64* %s.sroa.8.0.arrayidx.sroa_cast, align 1
  %s.sroa.9.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %s.sroa.9.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx to i64*
  store i64 %or19.i74.i, i64* %s.sroa.9.0.arrayidx.sroa_cast, align 1
  %s.sroa.10.0.arrayidx.sroa_idx = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 56
  %s.sroa.10.0.arrayidx.sroa_cast = bitcast i8* %s.sroa.10.0.arrayidx.sroa_idx to i64*
  store i64 %or28.i79.i, i64* %s.sroa.10.0.arrayidx.sroa_cast, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_serialize(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef writeonly %output, i64* noundef %outputlen, %struct.secp256k1_pubkey* noundef readonly %pubkey, i32 noundef %flags) local_unnamed_addr #0 {
entry:
  %cmp2.not = icmp eq i64* %outputlen, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx93 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx93.val = load i8*, i8** %illegal_callback.idx93, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* noundef %illegal_callback.idx93.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %0 = load i64, i64* %outputlen, align 8, !tbaa !13
  %and = and i32 %flags, 256
  %tobool8.not = icmp eq i32 %and, 0
  %cond = select i1 %tobool8.not, i64 65, i64 33
  %cmp10.not = icmp ult i64 %0, %cond
  br i1 %cmp10.not, label %if.then17, label %do.end21, !prof !26

if.then17:                                        ; preds = %do.body7
  %illegal_callback18.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback18.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback18.idx, align 8, !tbaa !27
  %illegal_callback18.idx92 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback18.idx92.val = load i8*, i8** %illegal_callback18.idx92, align 8, !tbaa !28
  tail call void %illegal_callback18.idx.val(i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i8* noundef %illegal_callback18.idx92.val) #19
  br label %cleanup

do.end21:                                         ; preds = %do.body7
  store i64 0, i64* %outputlen, align 8, !tbaa !13
  %cmp23.not = icmp eq i8* %output, null
  br i1 %cmp23.not, label %if.then30, label %do.end34, !prof !26

if.then30:                                        ; preds = %do.end21
  %illegal_callback31.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback31.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback31.idx, align 8, !tbaa !27
  %illegal_callback31.idx91 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback31.idx91.val = load i8*, i8** %illegal_callback31.idx91, align 8, !tbaa !28
  tail call void %illegal_callback31.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* noundef %illegal_callback31.idx91.val) #19
  br label %cleanup

do.end34:                                         ; preds = %do.end21
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %output, i8 0, i64 %0, i1 false)
  %cmp36.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp36.not, label %if.then43, label %do.body48, !prof !26

if.then43:                                        ; preds = %do.end34
  %illegal_callback44.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback44.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback44.idx, align 8, !tbaa !27
  %illegal_callback44.idx90 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback44.idx90.val = load i8*, i8** %illegal_callback44.idx90, align 8, !tbaa !28
  tail call void %illegal_callback44.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback44.idx90.val) #19
  br label %cleanup

do.body48:                                        ; preds = %do.end34
  %and49 = and i32 %flags, 255
  %cmp50.not = icmp eq i32 %and49, 2
  br i1 %cmp50.not, label %do.end61, label %if.then57, !prof !14

if.then57:                                        ; preds = %do.body48
  %illegal_callback58.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback58.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback58.idx, align 8, !tbaa !27
  %illegal_callback58.idx89 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback58.idx89.val = load i8*, i8** %illegal_callback58.idx89, align 8, !tbaa !28
  tail call void %illegal_callback58.idx.val(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.9, i64 0, i64 0), i8* noundef %illegal_callback58.idx89.val) #19
  br label %cleanup

do.end61:                                         ; preds = %do.body48
  %s.sroa.0.0.arrayidx.sroa_cast.i = bitcast %struct.secp256k1_pubkey* %pubkey to i64*
  %s.sroa.0.0.copyload.i = load i64, i64* %s.sroa.0.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.5.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 8
  %s.sroa.5.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.5.0.copyload.i = load i64, i64* %s.sroa.5.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.7.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %s.sroa.7.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.7.0.copyload.i = load i64, i64* %s.sroa.7.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.9.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 24
  %s.sroa.9.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.9.0.copyload.i = load i64, i64* %s.sroa.9.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.11.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %s.sroa.11.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.11.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.11.0.copyload.i = load i64, i64* %s.sroa.11.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.13.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 40
  %s.sroa.13.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.13.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.13.0.copyload.i = load i64, i64* %s.sroa.13.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.15.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %s.sroa.15.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.15.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.15.0.copyload.i = load i64, i64* %s.sroa.15.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.17.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 56
  %s.sroa.17.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.17.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.17.0.copyload.i = load i64, i64* %s.sroa.17.0.arrayidx.sroa_cast.i, align 1
  %and.i.i.i = and i64 %s.sroa.0.0.copyload.i, 4503599627370495
  %shr.i.i.i = lshr i64 %s.sroa.0.0.copyload.i, 52
  %shl.i.i.i = shl i64 %s.sroa.5.0.copyload.i, 12
  %and7.i.i.i = and i64 %shl.i.i.i, 4503599627366400
  %or.i.i.i = or i64 %and7.i.i.i, %shr.i.i.i
  %shr12.i.i.i = lshr i64 %s.sroa.5.0.copyload.i, 40
  %shl15.i.i.i = shl i64 %s.sroa.7.0.copyload.i, 24
  %and16.i.i.i = and i64 %shl15.i.i.i, 4503599610593280
  %or17.i.i.i = or i64 %and16.i.i.i, %shr12.i.i.i
  %shr22.i.i.i = lshr i64 %s.sroa.7.0.copyload.i, 28
  %shl25.i.i.i = shl i64 %s.sroa.9.0.copyload.i, 36
  %and26.i.i.i = and i64 %shl25.i.i.i, 4503530907893760
  %or27.i.i.i = or i64 %and26.i.i.i, %shr22.i.i.i
  %shr32.i.i.i = lshr i64 %s.sroa.9.0.copyload.i, 16
  %and.i7.i.i = and i64 %s.sroa.11.0.copyload.i, 4503599627370495
  %shr.i9.i.i = lshr i64 %s.sroa.11.0.copyload.i, 52
  %shl.i11.i.i = shl i64 %s.sroa.13.0.copyload.i, 12
  %and7.i12.i.i = and i64 %shl.i11.i.i, 4503599627366400
  %or.i13.i.i = or i64 %and7.i12.i.i, %shr.i9.i.i
  %shr12.i15.i.i = lshr i64 %s.sroa.13.0.copyload.i, 40
  %shl15.i17.i.i = shl i64 %s.sroa.15.0.copyload.i, 24
  %and16.i18.i.i = and i64 %shl15.i17.i.i, 4503599610593280
  %or17.i19.i.i = or i64 %and16.i18.i.i, %shr12.i15.i.i
  %shr22.i21.i.i = lshr i64 %s.sroa.15.0.copyload.i, 28
  %shl25.i23.i.i = shl i64 %s.sroa.17.0.copyload.i, 36
  %and26.i24.i.i = and i64 %shl25.i23.i.i, 4503530907893760
  %or27.i25.i.i = or i64 %and26.i24.i.i, %shr22.i21.i.i
  %shr32.i27.i.i = lshr i64 %s.sroa.17.0.copyload.i, 16
  %or.i.i = or i64 %or.i.i.i, %and.i.i.i
  %or3.i.i = or i64 %or.i.i, %shr32.i.i.i
  %or5.i.i = or i64 %or3.i.i, %or17.i.i.i
  %or7.i.i = or i64 %or5.i.i, %or27.i.i.i
  %cmp.i.not.i = icmp eq i64 %or7.i.i, 0
  br i1 %cmp.i.not.i, label %secp256k1_pubkey_load.exit.thread, label %if.end.i, !prof !26

secp256k1_pubkey_load.exit.thread:                ; preds = %do.end61
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx4.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx4.val.i = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* noundef %illegal_callback.idx4.val.i) #19
  br label %cleanup

if.end.i:                                         ; preds = %do.end61
  %and18.i.i = and i64 %or17.i.i.i, %or.i.i.i
  %and22.i.i = and i64 %and18.i.i, %or27.i.i.i
  %cmp25.i.i = icmp eq i64 %shr32.i.i.i, 281474976710655
  %cmp27.i.i = icmp eq i64 %and22.i.i, 4503599627370495
  %and29121.i.i = and i1 %cmp25.i.i, %cmp27.i.i
  %cmp30.i.i = icmp ugt i64 %and.i.i.i, 4503595332402222
  %and32122.i.i = and i1 %cmp30.i.i, %and29121.i.i
  br i1 %and32122.i.i, label %if.then.i.i, label %secp256k1_fe_normalize_var.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  %add34.i.i = add nuw nsw i64 %and.i.i.i, 4294968273
  %shr35.i.i = lshr i64 %add34.i.i, 52
  %add36.i.i = add nuw nsw i64 %or.i.i.i, %shr35.i.i
  %and37.i.i = and i64 %add34.i.i, 4503599627370495
  %shr38.i.i = lshr i64 %add36.i.i, 52
  %add39.i.i = add nuw nsw i64 %shr38.i.i, %or17.i.i.i
  %and40.i.i = and i64 %add36.i.i, 4503599627370495
  %shr41.i.i = lshr i64 %add39.i.i, 52
  %add42.i.i = add nuw nsw i64 %shr41.i.i, %or27.i.i.i
  %and43.i.i = and i64 %add39.i.i, 4503599627370495
  %shr44.i.i = lshr i64 %add42.i.i, 52
  %add45.i.i = add nuw nsw i64 %shr44.i.i, 281474976710655
  %and46.i.i = and i64 %add42.i.i, 4503599627370495
  %and53.i.i = and i64 %add45.i.i, 281474976710655
  br label %secp256k1_fe_normalize_var.exit.i

secp256k1_fe_normalize_var.exit.i:                ; preds = %if.then.i.i, %if.end.i
  %t1.0.i.i = phi i64 [ %and40.i.i, %if.then.i.i ], [ %or.i.i.i, %if.end.i ]
  %t2.0.i.i = phi i64 [ %and43.i.i, %if.then.i.i ], [ %or17.i.i.i, %if.end.i ]
  %t3.0.i.i = phi i64 [ %and46.i.i, %if.then.i.i ], [ %or27.i.i.i, %if.end.i ]
  %t4.0.i.i = phi i64 [ %and53.i.i, %if.then.i.i ], [ %shr32.i.i.i, %if.end.i ]
  %t0.0.i.i = phi i64 [ %and37.i.i, %if.then.i.i ], [ %and.i.i.i, %if.end.i ]
  %and18.i39.i = and i64 %or17.i19.i.i, %or.i13.i.i
  %and22.i43.i = and i64 %and18.i39.i, %or27.i25.i.i
  %cmp25.i45.i = icmp eq i64 %shr32.i27.i.i, 281474976710655
  %cmp27.i46.i = icmp eq i64 %and22.i43.i, 4503599627370495
  %and29121.i47.i = and i1 %cmp25.i45.i, %cmp27.i46.i
  %cmp30.i48.i = icmp ugt i64 %and.i7.i.i, 4503595332402222
  %and32122.i49.i = and i1 %cmp30.i48.i, %and29121.i47.i
  br i1 %and32122.i49.i, label %if.then.i66.i, label %secp256k1_fe_normalize_var.exit72.i

if.then.i66.i:                                    ; preds = %secp256k1_fe_normalize_var.exit.i
  %add34.i52.i = add nuw nsw i64 %and.i7.i.i, 4294968273
  %shr35.i53.i = lshr i64 %add34.i52.i, 52
  %add36.i54.i = add nuw nsw i64 %or.i13.i.i, %shr35.i53.i
  %and37.i55.i = and i64 %add34.i52.i, 4503599627370495
  %shr38.i56.i = lshr i64 %add36.i54.i, 52
  %add39.i57.i = add nuw nsw i64 %shr38.i56.i, %or17.i19.i.i
  %and40.i58.i = and i64 %add36.i54.i, 4503599627370495
  %shr41.i59.i = lshr i64 %add39.i57.i, 52
  %add42.i60.i = add nuw nsw i64 %shr41.i59.i, %or27.i25.i.i
  %and43.i61.i = and i64 %add39.i57.i, 4503599627370495
  %shr44.i62.i = lshr i64 %add42.i60.i, 52
  %add45.i63.i = add nuw nsw i64 %shr44.i62.i, 281474976710655
  %and46.i64.i = and i64 %add42.i60.i, 4503599627370495
  %and53.i65.i = and i64 %add45.i63.i, 281474976710655
  br label %secp256k1_fe_normalize_var.exit72.i

secp256k1_fe_normalize_var.exit72.i:              ; preds = %if.then.i66.i, %secp256k1_fe_normalize_var.exit.i
  %t1.0.i67.i = phi i64 [ %and40.i58.i, %if.then.i66.i ], [ %or.i13.i.i, %secp256k1_fe_normalize_var.exit.i ]
  %t2.0.i68.i = phi i64 [ %and43.i61.i, %if.then.i66.i ], [ %or17.i19.i.i, %secp256k1_fe_normalize_var.exit.i ]
  %t3.0.i69.i = phi i64 [ %and46.i64.i, %if.then.i66.i ], [ %or27.i25.i.i, %secp256k1_fe_normalize_var.exit.i ]
  %t4.0.i70.i = phi i64 [ %and53.i65.i, %if.then.i66.i ], [ %shr32.i27.i.i, %secp256k1_fe_normalize_var.exit.i ]
  %t0.0.i71.i = phi i64 [ %and37.i55.i, %if.then.i66.i ], [ %and.i7.i.i, %secp256k1_fe_normalize_var.exit.i ]
  %arrayidx.i = getelementptr inbounds i8, i8* %output, i64 1
  %shr.i99 = lshr i64 %t4.0.i.i, 40
  %conv.i100 = trunc i64 %shr.i99 to i8
  store i8 %conv.i100, i8* %arrayidx.i, align 1, !tbaa !10
  %shr4.i101 = lshr i64 %t4.0.i.i, 32
  %conv6.i102 = trunc i64 %shr4.i101 to i8
  %arrayidx7.i103 = getelementptr inbounds i8, i8* %output, i64 2
  store i8 %conv6.i102, i8* %arrayidx7.i103, align 1, !tbaa !10
  %shr10.i104 = lshr i64 %t4.0.i.i, 24
  %conv12.i105 = trunc i64 %shr10.i104 to i8
  %arrayidx13.i106 = getelementptr inbounds i8, i8* %output, i64 3
  store i8 %conv12.i105, i8* %arrayidx13.i106, align 1, !tbaa !10
  %shr16.i107 = lshr i64 %t4.0.i.i, 16
  %conv18.i108 = trunc i64 %shr16.i107 to i8
  %arrayidx19.i109 = getelementptr inbounds i8, i8* %output, i64 4
  store i8 %conv18.i108, i8* %arrayidx19.i109, align 1, !tbaa !10
  %shr22.i110 = lshr i64 %t4.0.i.i, 8
  %conv24.i111 = trunc i64 %shr22.i110 to i8
  %arrayidx25.i112 = getelementptr inbounds i8, i8* %output, i64 5
  store i8 %conv24.i111, i8* %arrayidx25.i112, align 1, !tbaa !10
  %conv29.i113 = trunc i64 %t4.0.i.i to i8
  %arrayidx30.i114 = getelementptr inbounds i8, i8* %output, i64 6
  store i8 %conv29.i113, i8* %arrayidx30.i114, align 1, !tbaa !10
  %shr33.i116 = lshr i64 %t3.0.i.i, 44
  %conv35.i117 = trunc i64 %shr33.i116 to i8
  %arrayidx36.i118 = getelementptr inbounds i8, i8* %output, i64 7
  store i8 %conv35.i117, i8* %arrayidx36.i118, align 1, !tbaa !10
  %shr39.i119 = lshr i64 %t3.0.i.i, 36
  %conv41.i120 = trunc i64 %shr39.i119 to i8
  %arrayidx42.i121 = getelementptr inbounds i8, i8* %output, i64 8
  store i8 %conv41.i120, i8* %arrayidx42.i121, align 1, !tbaa !10
  %shr45.i122 = lshr i64 %t3.0.i.i, 28
  %conv47.i123 = trunc i64 %shr45.i122 to i8
  %arrayidx48.i124 = getelementptr inbounds i8, i8* %output, i64 9
  store i8 %conv47.i123, i8* %arrayidx48.i124, align 1, !tbaa !10
  %shr51.i125 = lshr i64 %t3.0.i.i, 20
  %conv53.i126 = trunc i64 %shr51.i125 to i8
  %arrayidx54.i127 = getelementptr inbounds i8, i8* %output, i64 10
  store i8 %conv53.i126, i8* %arrayidx54.i127, align 1, !tbaa !10
  %shr57.i128 = lshr i64 %t3.0.i.i, 12
  %conv59.i129 = trunc i64 %shr57.i128 to i8
  %arrayidx60.i130 = getelementptr inbounds i8, i8* %output, i64 11
  store i8 %conv59.i129, i8* %arrayidx60.i130, align 1, !tbaa !10
  %shr63.i131 = lshr i64 %t3.0.i.i, 4
  %conv65.i132 = trunc i64 %shr63.i131 to i8
  %arrayidx66.i133 = getelementptr inbounds i8, i8* %output, i64 12
  store i8 %conv65.i132, i8* %arrayidx66.i133, align 1, !tbaa !10
  %shr69.i135 = lshr i64 %t2.0.i.i, 48
  %and73.i137 = shl nuw nsw i64 %t3.0.i.i, 4
  %or.i138 = or i64 %and73.i137, %shr69.i135
  %conv74.i139 = trunc i64 %or.i138 to i8
  %arrayidx75.i140 = getelementptr inbounds i8, i8* %output, i64 13
  store i8 %conv74.i139, i8* %arrayidx75.i140, align 1, !tbaa !10
  %shr78.i141 = lshr i64 %t2.0.i.i, 40
  %conv80.i142 = trunc i64 %shr78.i141 to i8
  %arrayidx81.i143 = getelementptr inbounds i8, i8* %output, i64 14
  store i8 %conv80.i142, i8* %arrayidx81.i143, align 1, !tbaa !10
  %shr84.i144 = lshr i64 %t2.0.i.i, 32
  %conv86.i145 = trunc i64 %shr84.i144 to i8
  %arrayidx87.i146 = getelementptr inbounds i8, i8* %output, i64 15
  store i8 %conv86.i145, i8* %arrayidx87.i146, align 1, !tbaa !10
  %shr90.i147 = lshr i64 %t2.0.i.i, 24
  %conv92.i148 = trunc i64 %shr90.i147 to i8
  %arrayidx93.i149 = getelementptr inbounds i8, i8* %output, i64 16
  store i8 %conv92.i148, i8* %arrayidx93.i149, align 1, !tbaa !10
  %shr96.i150 = lshr i64 %t2.0.i.i, 16
  %conv98.i151 = trunc i64 %shr96.i150 to i8
  %arrayidx99.i152 = getelementptr inbounds i8, i8* %output, i64 17
  store i8 %conv98.i151, i8* %arrayidx99.i152, align 1, !tbaa !10
  %shr102.i153 = lshr i64 %t2.0.i.i, 8
  %conv104.i154 = trunc i64 %shr102.i153 to i8
  %arrayidx105.i155 = getelementptr inbounds i8, i8* %output, i64 18
  store i8 %conv104.i154, i8* %arrayidx105.i155, align 1, !tbaa !10
  %conv109.i156 = trunc i64 %t2.0.i.i to i8
  %arrayidx110.i157 = getelementptr inbounds i8, i8* %output, i64 19
  store i8 %conv109.i156, i8* %arrayidx110.i157, align 1, !tbaa !10
  %shr113.i159 = lshr i64 %t1.0.i.i, 44
  %conv115.i160 = trunc i64 %shr113.i159 to i8
  %arrayidx116.i161 = getelementptr inbounds i8, i8* %output, i64 20
  store i8 %conv115.i160, i8* %arrayidx116.i161, align 1, !tbaa !10
  %shr119.i162 = lshr i64 %t1.0.i.i, 36
  %conv121.i163 = trunc i64 %shr119.i162 to i8
  %arrayidx122.i164 = getelementptr inbounds i8, i8* %output, i64 21
  store i8 %conv121.i163, i8* %arrayidx122.i164, align 1, !tbaa !10
  %shr125.i165 = lshr i64 %t1.0.i.i, 28
  %conv127.i166 = trunc i64 %shr125.i165 to i8
  %arrayidx128.i167 = getelementptr inbounds i8, i8* %output, i64 22
  store i8 %conv127.i166, i8* %arrayidx128.i167, align 1, !tbaa !10
  %shr131.i168 = lshr i64 %t1.0.i.i, 20
  %conv133.i169 = trunc i64 %shr131.i168 to i8
  %arrayidx134.i170 = getelementptr inbounds i8, i8* %output, i64 23
  store i8 %conv133.i169, i8* %arrayidx134.i170, align 1, !tbaa !10
  %shr137.i171 = lshr i64 %t1.0.i.i, 12
  %conv139.i172 = trunc i64 %shr137.i171 to i8
  %arrayidx140.i173 = getelementptr inbounds i8, i8* %output, i64 24
  store i8 %conv139.i172, i8* %arrayidx140.i173, align 1, !tbaa !10
  %shr143.i174 = lshr i64 %t1.0.i.i, 4
  %conv145.i175 = trunc i64 %shr143.i174 to i8
  %arrayidx146.i176 = getelementptr inbounds i8, i8* %output, i64 25
  store i8 %conv145.i175, i8* %arrayidx146.i176, align 1, !tbaa !10
  %shr149.i178 = lshr i64 %t0.0.i.i, 48
  %and153.i180 = shl nuw nsw i64 %t1.0.i.i, 4
  %or155.i181 = or i64 %shr149.i178, %and153.i180
  %conv156.i182 = trunc i64 %or155.i181 to i8
  %arrayidx157.i183 = getelementptr inbounds i8, i8* %output, i64 26
  store i8 %conv156.i182, i8* %arrayidx157.i183, align 1, !tbaa !10
  %shr160.i184 = lshr i64 %t0.0.i.i, 40
  %conv162.i185 = trunc i64 %shr160.i184 to i8
  %arrayidx163.i186 = getelementptr inbounds i8, i8* %output, i64 27
  store i8 %conv162.i185, i8* %arrayidx163.i186, align 1, !tbaa !10
  %shr166.i187 = lshr i64 %t0.0.i.i, 32
  %conv168.i188 = trunc i64 %shr166.i187 to i8
  %arrayidx169.i189 = getelementptr inbounds i8, i8* %output, i64 28
  store i8 %conv168.i188, i8* %arrayidx169.i189, align 1, !tbaa !10
  %shr172.i190 = lshr i64 %t0.0.i.i, 24
  %conv174.i191 = trunc i64 %shr172.i190 to i8
  %arrayidx175.i192 = getelementptr inbounds i8, i8* %output, i64 29
  store i8 %conv174.i191, i8* %arrayidx175.i192, align 1, !tbaa !10
  %shr178.i193 = lshr i64 %t0.0.i.i, 16
  %conv180.i194 = trunc i64 %shr178.i193 to i8
  %arrayidx181.i195 = getelementptr inbounds i8, i8* %output, i64 30
  store i8 %conv180.i194, i8* %arrayidx181.i195, align 1, !tbaa !10
  %shr184.i196 = lshr i64 %t0.0.i.i, 8
  %conv186.i197 = trunc i64 %shr184.i196 to i8
  %arrayidx187.i198 = getelementptr inbounds i8, i8* %output, i64 31
  store i8 %conv186.i197, i8* %arrayidx187.i198, align 1, !tbaa !10
  %conv191.i199 = trunc i64 %t0.0.i.i to i8
  %arrayidx192.i200 = getelementptr inbounds i8, i8* %output, i64 32
  store i8 %conv191.i199, i8* %arrayidx192.i200, align 1, !tbaa !10
  br i1 %tobool8.not, label %if.else.i, label %if.then3.i

if.then3.i:                                       ; preds = %secp256k1_fe_normalize_var.exit72.i
  %conv.i73.i = and i64 %t0.0.i71.i, 1
  %tobool6.not.i = icmp eq i64 %conv.i73.i, 0
  %conv.i = select i1 %tobool6.not.i, i8 2, i8 3
  store i8 %conv.i, i8* %output, align 1, !tbaa !10
  br label %if.then67

if.else.i:                                        ; preds = %secp256k1_fe_normalize_var.exit72.i
  store i8 4, i8* %output, align 1, !tbaa !10
  %arrayidx9.i = getelementptr inbounds i8, i8* %output, i64 33
  %shr.i = lshr i64 %t4.0.i70.i, 40
  %conv.i97 = trunc i64 %shr.i to i8
  store i8 %conv.i97, i8* %arrayidx9.i, align 1, !tbaa !10
  %shr4.i = lshr i64 %t4.0.i70.i, 32
  %conv6.i = trunc i64 %shr4.i to i8
  %arrayidx7.i = getelementptr inbounds i8, i8* %output, i64 34
  store i8 %conv6.i, i8* %arrayidx7.i, align 1, !tbaa !10
  %shr10.i = lshr i64 %t4.0.i70.i, 24
  %conv12.i = trunc i64 %shr10.i to i8
  %arrayidx13.i = getelementptr inbounds i8, i8* %output, i64 35
  store i8 %conv12.i, i8* %arrayidx13.i, align 1, !tbaa !10
  %shr16.i = lshr i64 %t4.0.i70.i, 16
  %conv18.i = trunc i64 %shr16.i to i8
  %arrayidx19.i = getelementptr inbounds i8, i8* %output, i64 36
  store i8 %conv18.i, i8* %arrayidx19.i, align 1, !tbaa !10
  %shr22.i = lshr i64 %t4.0.i70.i, 8
  %conv24.i = trunc i64 %shr22.i to i8
  %arrayidx25.i = getelementptr inbounds i8, i8* %output, i64 37
  store i8 %conv24.i, i8* %arrayidx25.i, align 1, !tbaa !10
  %conv29.i = trunc i64 %t4.0.i70.i to i8
  %arrayidx30.i = getelementptr inbounds i8, i8* %output, i64 38
  store i8 %conv29.i, i8* %arrayidx30.i, align 1, !tbaa !10
  %shr33.i = lshr i64 %t3.0.i69.i, 44
  %conv35.i = trunc i64 %shr33.i to i8
  %arrayidx36.i = getelementptr inbounds i8, i8* %output, i64 39
  store i8 %conv35.i, i8* %arrayidx36.i, align 1, !tbaa !10
  %shr39.i = lshr i64 %t3.0.i69.i, 36
  %conv41.i = trunc i64 %shr39.i to i8
  %arrayidx42.i = getelementptr inbounds i8, i8* %output, i64 40
  store i8 %conv41.i, i8* %arrayidx42.i, align 1, !tbaa !10
  %shr45.i = lshr i64 %t3.0.i69.i, 28
  %conv47.i = trunc i64 %shr45.i to i8
  %arrayidx48.i = getelementptr inbounds i8, i8* %output, i64 41
  store i8 %conv47.i, i8* %arrayidx48.i, align 1, !tbaa !10
  %shr51.i = lshr i64 %t3.0.i69.i, 20
  %conv53.i = trunc i64 %shr51.i to i8
  %arrayidx54.i = getelementptr inbounds i8, i8* %output, i64 42
  store i8 %conv53.i, i8* %arrayidx54.i, align 1, !tbaa !10
  %shr57.i = lshr i64 %t3.0.i69.i, 12
  %conv59.i = trunc i64 %shr57.i to i8
  %arrayidx60.i = getelementptr inbounds i8, i8* %output, i64 43
  store i8 %conv59.i, i8* %arrayidx60.i, align 1, !tbaa !10
  %shr63.i = lshr i64 %t3.0.i69.i, 4
  %conv65.i = trunc i64 %shr63.i to i8
  %arrayidx66.i = getelementptr inbounds i8, i8* %output, i64 44
  store i8 %conv65.i, i8* %arrayidx66.i, align 1, !tbaa !10
  %shr69.i = lshr i64 %t2.0.i68.i, 48
  %and73.i = shl nuw nsw i64 %t3.0.i69.i, 4
  %or.i = or i64 %and73.i, %shr69.i
  %conv74.i = trunc i64 %or.i to i8
  %arrayidx75.i = getelementptr inbounds i8, i8* %output, i64 45
  store i8 %conv74.i, i8* %arrayidx75.i, align 1, !tbaa !10
  %shr78.i = lshr i64 %t2.0.i68.i, 40
  %conv80.i = trunc i64 %shr78.i to i8
  %arrayidx81.i = getelementptr inbounds i8, i8* %output, i64 46
  store i8 %conv80.i, i8* %arrayidx81.i, align 1, !tbaa !10
  %shr84.i = lshr i64 %t2.0.i68.i, 32
  %conv86.i = trunc i64 %shr84.i to i8
  %arrayidx87.i = getelementptr inbounds i8, i8* %output, i64 47
  store i8 %conv86.i, i8* %arrayidx87.i, align 1, !tbaa !10
  %shr90.i = lshr i64 %t2.0.i68.i, 24
  %conv92.i = trunc i64 %shr90.i to i8
  %arrayidx93.i = getelementptr inbounds i8, i8* %output, i64 48
  store i8 %conv92.i, i8* %arrayidx93.i, align 1, !tbaa !10
  %shr96.i = lshr i64 %t2.0.i68.i, 16
  %conv98.i = trunc i64 %shr96.i to i8
  %arrayidx99.i = getelementptr inbounds i8, i8* %output, i64 49
  store i8 %conv98.i, i8* %arrayidx99.i, align 1, !tbaa !10
  %shr102.i = lshr i64 %t2.0.i68.i, 8
  %conv104.i = trunc i64 %shr102.i to i8
  %arrayidx105.i = getelementptr inbounds i8, i8* %output, i64 50
  store i8 %conv104.i, i8* %arrayidx105.i, align 1, !tbaa !10
  %conv109.i = trunc i64 %t2.0.i68.i to i8
  %arrayidx110.i = getelementptr inbounds i8, i8* %output, i64 51
  store i8 %conv109.i, i8* %arrayidx110.i, align 1, !tbaa !10
  %shr113.i = lshr i64 %t1.0.i67.i, 44
  %conv115.i = trunc i64 %shr113.i to i8
  %arrayidx116.i = getelementptr inbounds i8, i8* %output, i64 52
  store i8 %conv115.i, i8* %arrayidx116.i, align 1, !tbaa !10
  %shr119.i = lshr i64 %t1.0.i67.i, 36
  %conv121.i = trunc i64 %shr119.i to i8
  %arrayidx122.i = getelementptr inbounds i8, i8* %output, i64 53
  store i8 %conv121.i, i8* %arrayidx122.i, align 1, !tbaa !10
  %shr125.i = lshr i64 %t1.0.i67.i, 28
  %conv127.i = trunc i64 %shr125.i to i8
  %arrayidx128.i = getelementptr inbounds i8, i8* %output, i64 54
  store i8 %conv127.i, i8* %arrayidx128.i, align 1, !tbaa !10
  %shr131.i = lshr i64 %t1.0.i67.i, 20
  %conv133.i = trunc i64 %shr131.i to i8
  %arrayidx134.i = getelementptr inbounds i8, i8* %output, i64 55
  store i8 %conv133.i, i8* %arrayidx134.i, align 1, !tbaa !10
  %shr137.i = lshr i64 %t1.0.i67.i, 12
  %conv139.i = trunc i64 %shr137.i to i8
  %arrayidx140.i = getelementptr inbounds i8, i8* %output, i64 56
  store i8 %conv139.i, i8* %arrayidx140.i, align 1, !tbaa !10
  %shr143.i = lshr i64 %t1.0.i67.i, 4
  %conv145.i = trunc i64 %shr143.i to i8
  %arrayidx146.i = getelementptr inbounds i8, i8* %output, i64 57
  store i8 %conv145.i, i8* %arrayidx146.i, align 1, !tbaa !10
  %shr149.i = lshr i64 %t0.0.i71.i, 48
  %and153.i = shl nuw nsw i64 %t1.0.i67.i, 4
  %or155.i = or i64 %shr149.i, %and153.i
  %conv156.i = trunc i64 %or155.i to i8
  %arrayidx157.i = getelementptr inbounds i8, i8* %output, i64 58
  store i8 %conv156.i, i8* %arrayidx157.i, align 1, !tbaa !10
  %shr160.i = lshr i64 %t0.0.i71.i, 40
  %conv162.i = trunc i64 %shr160.i to i8
  %arrayidx163.i = getelementptr inbounds i8, i8* %output, i64 59
  store i8 %conv162.i, i8* %arrayidx163.i, align 1, !tbaa !10
  %shr166.i = lshr i64 %t0.0.i71.i, 32
  %conv168.i = trunc i64 %shr166.i to i8
  %arrayidx169.i = getelementptr inbounds i8, i8* %output, i64 60
  store i8 %conv168.i, i8* %arrayidx169.i, align 1, !tbaa !10
  %shr172.i = lshr i64 %t0.0.i71.i, 24
  %conv174.i = trunc i64 %shr172.i to i8
  %arrayidx175.i = getelementptr inbounds i8, i8* %output, i64 61
  store i8 %conv174.i, i8* %arrayidx175.i, align 1, !tbaa !10
  %shr178.i = lshr i64 %t0.0.i71.i, 16
  %conv180.i = trunc i64 %shr178.i to i8
  %arrayidx181.i = getelementptr inbounds i8, i8* %output, i64 62
  store i8 %conv180.i, i8* %arrayidx181.i, align 1, !tbaa !10
  %shr184.i = lshr i64 %t0.0.i71.i, 8
  %conv186.i = trunc i64 %shr184.i to i8
  %arrayidx187.i = getelementptr inbounds i8, i8* %output, i64 63
  store i8 %conv186.i, i8* %arrayidx187.i, align 1, !tbaa !10
  %conv191.i = trunc i64 %t0.0.i71.i to i8
  %arrayidx192.i = getelementptr inbounds i8, i8* %output, i64 64
  store i8 %conv191.i, i8* %arrayidx192.i, align 1, !tbaa !10
  br label %if.then67

if.then67:                                        ; preds = %if.else.i, %if.then3.i
  %len.0 = phi i64 [ 65, %if.else.i ], [ 33, %if.then3.i ]
  store i64 %len.0, i64* %outputlen, align 8, !tbaa !13
  br label %cleanup

cleanup:                                          ; preds = %secp256k1_pubkey_load.exit.thread, %if.then67, %if.then57, %if.then43, %if.then30, %if.then17, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then17 ], [ 0, %if.then30 ], [ 0, %if.then43 ], [ 0, %if.then57 ], [ 1, %if.then67 ], [ 0, %secp256k1_pubkey_load.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_cmp(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef %pubkey0, %struct.secp256k1_pubkey* noundef %pubkey1) local_unnamed_addr #0 {
entry:
  %out = alloca [2 x [33 x i8]], align 16
  %out_size = alloca i64, align 8
  %0 = getelementptr inbounds [2 x [33 x i8]], [2 x [33 x i8]]* %out, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %0) #19
  %1 = bitcast i64* %out_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store i64 33, i64* %out_size, align 8, !tbaa !13
  %call = call i32 @secp256k1_ec_pubkey_serialize(%struct.secp256k1_context_struct* noundef %ctx, i8* noundef nonnull %0, i64* noundef nonnull %out_size, %struct.secp256k1_pubkey* noundef %pubkey0, i32 noundef 258)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(33) %0, i8 0, i64 33, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store i64 33, i64* %out_size, align 8, !tbaa !13
  %arraydecay.1 = getelementptr inbounds [2 x [33 x i8]], [2 x [33 x i8]]* %out, i64 0, i64 1, i64 0
  %call.1 = call i32 @secp256k1_ec_pubkey_serialize(%struct.secp256k1_context_struct* noundef %ctx, i8* noundef nonnull %arraydecay.1, i64* noundef nonnull %out_size, %struct.secp256k1_pubkey* noundef %pubkey1, i32 noundef 258)
  %tobool.not.1 = icmp eq i32 %call.1, 0
  br i1 %tobool.not.1, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(33) %arraydecay.1, i8 0, i64 33, i1 false)
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.1, %for.body.i
  %i.017.i = phi i64 [ %inc.i, %for.body.i ], [ 0, %if.end.1 ]
  %arrayidx.i = getelementptr inbounds [2 x [33 x i8]], [2 x [33 x i8]]* %out, i64 0, i64 0, i64 %i.017.i
  %2 = load i8, i8* %arrayidx.i, align 1, !tbaa !10
  %conv.i = zext i8 %2 to i32
  %arrayidx1.i = getelementptr inbounds [2 x [33 x i8]], [2 x [33 x i8]]* %out, i64 0, i64 1, i64 %i.017.i
  %3 = load i8, i8* %arrayidx1.i, align 1, !tbaa !10
  %conv2.i = zext i8 %3 to i32
  %sub.i = sub nsw i32 %conv.i, %conv2.i
  %cmp3.not.i = icmp ne i32 %sub.i, 0
  %inc.i = add nuw nsw i64 %i.017.i, 1
  %exitcond.not.i = icmp eq i64 %inc.i, 33
  %or.cond = select i1 %cmp3.not.i, i1 true, i1 %exitcond.not.i
  br i1 %or.cond, label %secp256k1_memcmp_var.exit, label %for.body.i, !llvm.loop !11

secp256k1_memcmp_var.exit:                        ; preds = %for.body.i
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %0) #19
  ret i32 %sub.i
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_signature_parse_der(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_ecdsa_signature* noundef writeonly %sig, i8* noundef %input, i64 noundef %inputlen) local_unnamed_addr #0 {
entry:
  %sig.addr.i = alloca i8*, align 8
  %r = alloca %struct.secp256k1_scalar, align 8
  %s = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_scalar* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_scalar* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %cmp2.not = icmp eq %struct.secp256k1_ecdsa_signature* %sig, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx29 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx29.val = load i8*, i8** %illegal_callback.idx29, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* noundef %illegal_callback.idx29.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %input, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx28 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx28.val = load i8*, i8** %illegal_callback16.idx28, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* noundef %illegal_callback16.idx28.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  %2 = bitcast i8** %sig.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2)
  %add.ptr.i = getelementptr inbounds i8, i8* %input, i64 %inputlen
  %cmp.i = icmp eq i64 %inputlen, 0
  br i1 %cmp.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %do.end19
  %3 = load i8, i8* %input, align 1, !tbaa !10
  %cmp1.not.i = icmp eq i8 %3, 48
  %cmp1.not.i.i = icmp sgt i64 %inputlen, 1
  %or.cond.i = and i1 %cmp1.not.i.i, %cmp1.not.i
  br i1 %or.cond.i, label %if.end.i.i, label %secp256k1_ecdsa_sig_parse.exit.thread

if.end.i.i:                                       ; preds = %lor.lhs.false.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %input, i64 1
  %incdec.ptr.i.i = getelementptr inbounds i8, i8* %input, i64 2
  store i8* %incdec.ptr.i.i, i8** %sig.addr.i, align 8, !tbaa !16
  %4 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %conv3.i.i = zext i8 %4 to i32
  %cmp4.i.i = icmp eq i8 %4, -1
  br i1 %cmp4.i.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.end.i.i
  %and.i.i = and i32 %conv3.i.i, 128
  %cmp9.i.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp9.i.i, label %secp256k1_der_read_len.exit.thread33.i, label %if.end13.i.i

secp256k1_der_read_len.exit.thread33.i:           ; preds = %if.end7.i.i
  %conv12.i.i = zext i8 %4 to i64
  %gepdiff58.i = add nsw i64 %inputlen, -2
  br label %if.end6.i

if.end13.i.i:                                     ; preds = %if.end7.i.i
  %cmp15.i.i = icmp eq i8 %4, -128
  br i1 %cmp15.i.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %if.end18.i.i

if.end18.i.i:                                     ; preds = %if.end13.i.i
  %and20.i.i = and i32 %conv3.i.i, 127
  %5 = zext i32 %and20.i.i to i64
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %add.ptr.i to i64
  %gepdiff.i = add nsw i64 %inputlen, -2
  %cmp22.i.i = icmp ult i64 %gepdiff.i, %5
  br i1 %cmp22.i.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %if.end25.i.i

if.end25.i.i:                                     ; preds = %if.end18.i.i
  %6 = load i8, i8* %incdec.ptr.i.i, align 1, !tbaa !10
  %cmp27.i.i = icmp eq i8 %6, 0
  %cmp31.i.i = icmp ugt i32 %and20.i.i, 8
  %or.cond.i.i = select i1 %cmp27.i.i, i1 true, i1 %cmp31.i.i
  %cmp35.not74.i.i = icmp eq i32 %and20.i.i, 0
  %or.cond43.i = select i1 %or.cond.i.i, i1 true, i1 %cmp35.not74.i.i
  br i1 %or.cond43.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %while.body.i.preheader.i

while.body.i.preheader.i:                         ; preds = %if.end25.i.i
  %conv37.i46.i = zext i8 %6 to i64
  %incdec.ptr38.i47.i = getelementptr inbounds i8, i8* %input, i64 3
  %dec.i48.i = add nsw i64 %5, -1
  %cmp35.not.i49.i = icmp eq i64 %dec.i48.i, 0
  br i1 %cmp35.not.i49.i, label %while.end.i.i, label %while.body.while.body_crit_edge.i.i.preheader, !llvm.loop !50

while.body.while.body_crit_edge.i.i.preheader:    ; preds = %while.body.i.preheader.i
  %7 = add nsw i64 %5, -2
  %xtraiter = and i64 %dec.i48.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %while.body.while.body_crit_edge.i.i.prol.loopexit, label %while.body.while.body_crit_edge.i.i.prol

while.body.while.body_crit_edge.i.i.prol:         ; preds = %while.body.while.body_crit_edge.i.i.preheader, %while.body.while.body_crit_edge.i.i.prol
  %dec.i52.i.prol = phi i64 [ %dec.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ], [ %dec.i48.i, %while.body.while.body_crit_edge.i.i.preheader ]
  %incdec.ptr38.i51.i.prol = phi i8* [ %incdec.ptr38.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ], [ %incdec.ptr38.i47.i, %while.body.while.body_crit_edge.i.i.preheader ]
  %or.i50.i.prol = phi i64 [ %or.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ], [ %conv37.i46.i, %while.body.while.body_crit_edge.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %while.body.while.body_crit_edge.i.i.prol ], [ 0, %while.body.while.body_crit_edge.i.i.preheader ]
  %.pre.i.i.prol = load i8, i8* %incdec.ptr38.i51.i.prol, align 1, !tbaa !10
  %shl.i.i.prol = shl i64 %or.i50.i.prol, 8
  %conv37.i.i.prol = zext i8 %.pre.i.i.prol to i64
  %or.i.i.prol = or i64 %shl.i.i.prol, %conv37.i.i.prol
  %incdec.ptr38.i.i.prol = getelementptr inbounds i8, i8* %incdec.ptr38.i51.i.prol, i64 1
  %dec.i.i.prol = add nsw i64 %dec.i52.i.prol, -1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %while.body.while.body_crit_edge.i.i.prol.loopexit, label %while.body.while.body_crit_edge.i.i.prol, !llvm.loop !51

while.body.while.body_crit_edge.i.i.prol.loopexit: ; preds = %while.body.while.body_crit_edge.i.i.prol, %while.body.while.body_crit_edge.i.i.preheader
  %or.i.i.lcssa.unr = phi i64 [ undef, %while.body.while.body_crit_edge.i.i.preheader ], [ %or.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ]
  %dec.i52.i.unr = phi i64 [ %dec.i48.i, %while.body.while.body_crit_edge.i.i.preheader ], [ %dec.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ]
  %incdec.ptr38.i51.i.unr = phi i8* [ %incdec.ptr38.i47.i, %while.body.while.body_crit_edge.i.i.preheader ], [ %incdec.ptr38.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ]
  %or.i50.i.unr = phi i64 [ %conv37.i46.i, %while.body.while.body_crit_edge.i.i.preheader ], [ %or.i.i.prol, %while.body.while.body_crit_edge.i.i.prol ]
  %8 = icmp ult i64 %7, 3
  br i1 %8, label %while.end.i.loopexit.i, label %while.body.while.body_crit_edge.i.i

while.body.while.body_crit_edge.i.i:              ; preds = %while.body.while.body_crit_edge.i.i.prol.loopexit, %while.body.while.body_crit_edge.i.i
  %dec.i52.i = phi i64 [ %dec.i.i.3, %while.body.while.body_crit_edge.i.i ], [ %dec.i52.i.unr, %while.body.while.body_crit_edge.i.i.prol.loopexit ]
  %incdec.ptr38.i51.i = phi i8* [ %incdec.ptr38.i.i.3, %while.body.while.body_crit_edge.i.i ], [ %incdec.ptr38.i51.i.unr, %while.body.while.body_crit_edge.i.i.prol.loopexit ]
  %or.i50.i = phi i64 [ %or.i.i.3, %while.body.while.body_crit_edge.i.i ], [ %or.i50.i.unr, %while.body.while.body_crit_edge.i.i.prol.loopexit ]
  %.pre.i.i = load i8, i8* %incdec.ptr38.i51.i, align 1, !tbaa !10
  %conv37.i.i = zext i8 %.pre.i.i to i64
  %incdec.ptr38.i.i = getelementptr inbounds i8, i8* %incdec.ptr38.i51.i, i64 1
  %.pre.i.i.1 = load i8, i8* %incdec.ptr38.i.i, align 1, !tbaa !10
  %9 = shl i64 %or.i50.i, 16
  %10 = shl nuw nsw i64 %conv37.i.i, 8
  %shl.i.i.1 = or i64 %9, %10
  %conv37.i.i.1 = zext i8 %.pre.i.i.1 to i64
  %or.i.i.1 = or i64 %shl.i.i.1, %conv37.i.i.1
  %incdec.ptr38.i.i.1 = getelementptr inbounds i8, i8* %incdec.ptr38.i51.i, i64 2
  %.pre.i.i.2 = load i8, i8* %incdec.ptr38.i.i.1, align 1, !tbaa !10
  %conv37.i.i.2 = zext i8 %.pre.i.i.2 to i64
  %incdec.ptr38.i.i.2 = getelementptr inbounds i8, i8* %incdec.ptr38.i51.i, i64 3
  %.pre.i.i.3 = load i8, i8* %incdec.ptr38.i.i.2, align 1, !tbaa !10
  %11 = shl i64 %or.i.i.1, 16
  %12 = shl nuw nsw i64 %conv37.i.i.2, 8
  %shl.i.i.3 = or i64 %11, %12
  %conv37.i.i.3 = zext i8 %.pre.i.i.3 to i64
  %or.i.i.3 = or i64 %shl.i.i.3, %conv37.i.i.3
  %incdec.ptr38.i.i.3 = getelementptr inbounds i8, i8* %incdec.ptr38.i51.i, i64 4
  %dec.i.i.3 = add nsw i64 %dec.i52.i, -4
  %cmp35.not.i.i.3 = icmp eq i64 %dec.i.i.3, 0
  br i1 %cmp35.not.i.i.3, label %while.end.i.loopexit.i, label %while.body.while.body_crit_edge.i.i, !llvm.loop !50

while.end.i.loopexit.i:                           ; preds = %while.body.while.body_crit_edge.i.i, %while.body.while.body_crit_edge.i.i.prol.loopexit
  %or.i.i.lcssa = phi i64 [ %or.i.i.lcssa.unr, %while.body.while.body_crit_edge.i.i.prol.loopexit ], [ %or.i.i.3, %while.body.while.body_crit_edge.i.i ]
  %13 = add nuw nsw i64 %5, 2
  %scevgep.i = getelementptr i8, i8* %input, i64 %13
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.i.loopexit.i, %while.body.i.preheader.i
  %incdec.ptr38.i.lcssa45.i = phi i8* [ %incdec.ptr38.i47.i, %while.body.i.preheader.i ], [ %scevgep.i, %while.end.i.loopexit.i ]
  %or.i.lcssa.i = phi i64 [ %conv37.i46.i, %while.body.i.preheader.i ], [ %or.i.i.lcssa, %while.end.i.loopexit.i ]
  store i8* %incdec.ptr38.i.lcssa45.i, i8** %sig.addr.i, align 8, !tbaa !16
  %.pre76.i.i = ptrtoint i8* %incdec.ptr38.i.lcssa45.i to i64
  %.pre77.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %.pre76.i.i
  %cmp42.i.i = icmp ugt i64 %or.i.lcssa.i, %.pre77.i.i
  %cmp46.i.i = icmp ult i64 %or.i.lcssa.i, 128
  %or.cond44.i = or i1 %cmp46.i.i, %cmp42.i.i
  br i1 %or.cond44.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %if.end6.i

if.end6.i:                                        ; preds = %while.end.i.i, %secp256k1_der_read_len.exit.thread33.i
  %sub.ptr.sub.pre-phi.i = phi i64 [ %.pre77.i.i, %while.end.i.i ], [ %gepdiff58.i, %secp256k1_der_read_len.exit.thread33.i ]
  %rlen.137.i = phi i64 [ %or.i.lcssa.i, %while.end.i.i ], [ %conv12.i.i, %secp256k1_der_read_len.exit.thread33.i ]
  %cmp7.not.i = icmp eq i64 %rlen.137.i, %sub.ptr.sub.pre-phi.i
  br i1 %cmp7.not.i, label %if.end10.i, label %secp256k1_ecdsa_sig_parse.exit.thread

if.end10.i:                                       ; preds = %if.end6.i
  %call11.i = call fastcc i32 @secp256k1_der_parse_integer(%struct.secp256k1_scalar* noundef nonnull %r, i8** noundef nonnull %sig.addr.i, i8* noundef nonnull %add.ptr.i) #19
  %tobool.not.i = icmp eq i32 %call11.i, 0
  br i1 %tobool.not.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %if.end13.i

if.end13.i:                                       ; preds = %if.end10.i
  %call14.i = call fastcc i32 @secp256k1_der_parse_integer(%struct.secp256k1_scalar* noundef nonnull %s, i8** noundef nonnull %sig.addr.i, i8* noundef nonnull %add.ptr.i) #19
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %secp256k1_ecdsa_sig_parse.exit.thread, label %secp256k1_ecdsa_sig_parse.exit

secp256k1_ecdsa_sig_parse.exit.thread:            ; preds = %lor.lhs.false.i, %do.end19, %if.end6.i, %if.end10.i, %if.end13.i, %if.end.i.i, %if.end13.i.i, %if.end18.i.i, %if.end25.i.i, %while.end.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2)
  br label %if.else

secp256k1_ecdsa_sig_parse.exit:                   ; preds = %if.end13.i
  %14 = load i8*, i8** %sig.addr.i, align 8, !tbaa !16
  %cmp18.not.i.not = icmp eq i8* %14, %add.ptr.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2)
  br i1 %cmp18.not.i.not, label %if.then21, label %if.else

if.then21:                                        ; preds = %secp256k1_ecdsa_sig_parse.exit
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %arrayidx.i, i8* noundef nonnull align 8 dereferenceable(32) %0, i64 32, i1 false) #19
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %arrayidx2.i, i8* noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false) #19
  br label %cleanup

if.else:                                          ; preds = %secp256k1_ecdsa_sig_parse.exit.thread, %secp256k1_ecdsa_sig_parse.exit
  %15 = getelementptr %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %15, i8 0, i64 64, i1 false)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then21, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 1, %if.then21 ], [ 0, %if.else ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_signature_parse_compact(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_ecdsa_signature* noundef writeonly %sig, i8* noundef %input64) local_unnamed_addr #0 {
entry:
  %r = alloca %struct.secp256k1_scalar, align 8
  %s = alloca %struct.secp256k1_scalar, align 8
  %overflow = alloca i32, align 4
  %0 = bitcast %struct.secp256k1_scalar* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_scalar* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %2 = bitcast i32* %overflow to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19
  store i32 0, i32* %overflow, align 4, !tbaa !3
  %cmp2.not = icmp eq %struct.secp256k1_ecdsa_signature* %sig, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx46 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx46.val = load i8*, i8** %illegal_callback.idx46, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* noundef %illegal_callback.idx46.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %input64, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx45 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx45.val = load i8*, i8** %illegal_callback16.idx45, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* noundef %illegal_callback16.idx45.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %r, i8* noundef nonnull %input64, i32* noundef nonnull %overflow)
  %3 = load i32, i32* %overflow, align 4, !tbaa !3
  %arrayidx23 = getelementptr inbounds i8, i8* %input64, i64 32
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %s, i8* noundef nonnull %arrayidx23, i32* noundef nonnull %overflow)
  %4 = load i32, i32* %overflow, align 4, !tbaa !3
  %5 = or i32 %4, %3
  %6 = icmp eq i32 %5, 0
  %arrayidx.i = getelementptr %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 0
  br i1 %6, label %if.then29, label %if.else

if.then29:                                        ; preds = %do.end19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %arrayidx.i, i8* noundef nonnull align 8 dereferenceable(32) %0, i64 32, i1 false) #19
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %arrayidx2.i, i8* noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false) #19
  br label %cleanup

if.else:                                          ; preds = %do.end19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %arrayidx.i, i8 0, i64 64, i1 false)
  br label %cleanup

cleanup:                                          ; preds = %if.then29, %if.else, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 0, %if.else ], [ 1, %if.then29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* nocapture noundef %r, i8* noundef readonly %b32, i32* noundef writeonly %overflow) unnamed_addr #8 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %b32, i64 31
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %b32, i64 30
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !10
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %b32, i64 29
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %arrayidx7 = getelementptr inbounds i8, i8* %b32, i64 28
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !10
  %conv8 = zext i8 %3 to i64
  %shl9 = shl nuw nsw i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  %arrayidx11 = getelementptr inbounds i8, i8* %b32, i64 27
  %4 = load i8, i8* %arrayidx11, align 1, !tbaa !10
  %conv12 = zext i8 %4 to i64
  %shl13 = shl nuw nsw i64 %conv12, 32
  %or14 = or i64 %or10, %shl13
  %arrayidx15 = getelementptr inbounds i8, i8* %b32, i64 26
  %5 = load i8, i8* %arrayidx15, align 1, !tbaa !10
  %conv16 = zext i8 %5 to i64
  %shl17 = shl nuw nsw i64 %conv16, 40
  %or18 = or i64 %or14, %shl17
  %arrayidx19 = getelementptr inbounds i8, i8* %b32, i64 25
  %6 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %conv20 = zext i8 %6 to i64
  %shl21 = shl nuw nsw i64 %conv20, 48
  %or22 = or i64 %or18, %shl21
  %arrayidx23 = getelementptr inbounds i8, i8* %b32, i64 24
  %7 = load i8, i8* %arrayidx23, align 1, !tbaa !10
  %conv24 = zext i8 %7 to i64
  %shl25 = shl nuw i64 %conv24, 56
  %or26 = or i64 %or22, %shl25
  %arrayidx27 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 0
  store i64 %or26, i64* %arrayidx27, align 8, !tbaa !13
  %arrayidx28 = getelementptr inbounds i8, i8* %b32, i64 23
  %8 = load i8, i8* %arrayidx28, align 1, !tbaa !10
  %conv29 = zext i8 %8 to i64
  %arrayidx30 = getelementptr inbounds i8, i8* %b32, i64 22
  %9 = load i8, i8* %arrayidx30, align 1, !tbaa !10
  %conv31 = zext i8 %9 to i64
  %shl32 = shl nuw nsw i64 %conv31, 8
  %or33 = or i64 %shl32, %conv29
  %arrayidx34 = getelementptr inbounds i8, i8* %b32, i64 21
  %10 = load i8, i8* %arrayidx34, align 1, !tbaa !10
  %conv35 = zext i8 %10 to i64
  %shl36 = shl nuw nsw i64 %conv35, 16
  %or37 = or i64 %or33, %shl36
  %arrayidx38 = getelementptr inbounds i8, i8* %b32, i64 20
  %11 = load i8, i8* %arrayidx38, align 1, !tbaa !10
  %conv39 = zext i8 %11 to i64
  %shl40 = shl nuw nsw i64 %conv39, 24
  %or41 = or i64 %or37, %shl40
  %arrayidx42 = getelementptr inbounds i8, i8* %b32, i64 19
  %12 = load i8, i8* %arrayidx42, align 1, !tbaa !10
  %conv43 = zext i8 %12 to i64
  %shl44 = shl nuw nsw i64 %conv43, 32
  %or45 = or i64 %or41, %shl44
  %arrayidx46 = getelementptr inbounds i8, i8* %b32, i64 18
  %13 = load i8, i8* %arrayidx46, align 1, !tbaa !10
  %conv47 = zext i8 %13 to i64
  %shl48 = shl nuw nsw i64 %conv47, 40
  %or49 = or i64 %or45, %shl48
  %arrayidx50 = getelementptr inbounds i8, i8* %b32, i64 17
  %14 = load i8, i8* %arrayidx50, align 1, !tbaa !10
  %conv51 = zext i8 %14 to i64
  %shl52 = shl nuw nsw i64 %conv51, 48
  %or53 = or i64 %or49, %shl52
  %arrayidx54 = getelementptr inbounds i8, i8* %b32, i64 16
  %15 = load i8, i8* %arrayidx54, align 1, !tbaa !10
  %conv55 = zext i8 %15 to i64
  %shl56 = shl nuw i64 %conv55, 56
  %or57 = or i64 %or53, %shl56
  %arrayidx59 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 1
  store i64 %or57, i64* %arrayidx59, align 8, !tbaa !13
  %arrayidx60 = getelementptr inbounds i8, i8* %b32, i64 15
  %16 = load i8, i8* %arrayidx60, align 1, !tbaa !10
  %conv61 = zext i8 %16 to i64
  %arrayidx62 = getelementptr inbounds i8, i8* %b32, i64 14
  %17 = load i8, i8* %arrayidx62, align 1, !tbaa !10
  %conv63 = zext i8 %17 to i64
  %shl64 = shl nuw nsw i64 %conv63, 8
  %or65 = or i64 %shl64, %conv61
  %arrayidx66 = getelementptr inbounds i8, i8* %b32, i64 13
  %18 = load i8, i8* %arrayidx66, align 1, !tbaa !10
  %conv67 = zext i8 %18 to i64
  %shl68 = shl nuw nsw i64 %conv67, 16
  %or69 = or i64 %or65, %shl68
  %arrayidx70 = getelementptr inbounds i8, i8* %b32, i64 12
  %19 = load i8, i8* %arrayidx70, align 1, !tbaa !10
  %conv71 = zext i8 %19 to i64
  %shl72 = shl nuw nsw i64 %conv71, 24
  %or73 = or i64 %or69, %shl72
  %arrayidx74 = getelementptr inbounds i8, i8* %b32, i64 11
  %20 = load i8, i8* %arrayidx74, align 1, !tbaa !10
  %conv75 = zext i8 %20 to i64
  %shl76 = shl nuw nsw i64 %conv75, 32
  %or77 = or i64 %or73, %shl76
  %arrayidx78 = getelementptr inbounds i8, i8* %b32, i64 10
  %21 = load i8, i8* %arrayidx78, align 1, !tbaa !10
  %conv79 = zext i8 %21 to i64
  %shl80 = shl nuw nsw i64 %conv79, 40
  %or81 = or i64 %or77, %shl80
  %arrayidx82 = getelementptr inbounds i8, i8* %b32, i64 9
  %22 = load i8, i8* %arrayidx82, align 1, !tbaa !10
  %conv83 = zext i8 %22 to i64
  %shl84 = shl nuw nsw i64 %conv83, 48
  %or85 = or i64 %or81, %shl84
  %arrayidx86 = getelementptr inbounds i8, i8* %b32, i64 8
  %23 = load i8, i8* %arrayidx86, align 1, !tbaa !10
  %conv87 = zext i8 %23 to i64
  %shl88 = shl nuw i64 %conv87, 56
  %or89 = or i64 %or85, %shl88
  %arrayidx91 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 2
  store i64 %or89, i64* %arrayidx91, align 8, !tbaa !13
  %arrayidx92 = getelementptr inbounds i8, i8* %b32, i64 7
  %24 = load i8, i8* %arrayidx92, align 1, !tbaa !10
  %conv93 = zext i8 %24 to i64
  %arrayidx94 = getelementptr inbounds i8, i8* %b32, i64 6
  %25 = load i8, i8* %arrayidx94, align 1, !tbaa !10
  %conv95 = zext i8 %25 to i64
  %shl96 = shl nuw nsw i64 %conv95, 8
  %or97 = or i64 %shl96, %conv93
  %arrayidx98 = getelementptr inbounds i8, i8* %b32, i64 5
  %26 = load i8, i8* %arrayidx98, align 1, !tbaa !10
  %conv99 = zext i8 %26 to i64
  %shl100 = shl nuw nsw i64 %conv99, 16
  %or101 = or i64 %or97, %shl100
  %arrayidx102 = getelementptr inbounds i8, i8* %b32, i64 4
  %27 = load i8, i8* %arrayidx102, align 1, !tbaa !10
  %conv103 = zext i8 %27 to i64
  %shl104 = shl nuw nsw i64 %conv103, 24
  %or105 = or i64 %or101, %shl104
  %arrayidx106 = getelementptr inbounds i8, i8* %b32, i64 3
  %28 = load i8, i8* %arrayidx106, align 1, !tbaa !10
  %conv107 = zext i8 %28 to i64
  %shl108 = shl nuw nsw i64 %conv107, 32
  %or109 = or i64 %or105, %shl108
  %arrayidx110 = getelementptr inbounds i8, i8* %b32, i64 2
  %29 = load i8, i8* %arrayidx110, align 1, !tbaa !10
  %conv111 = zext i8 %29 to i64
  %shl112 = shl nuw nsw i64 %conv111, 40
  %or113 = or i64 %or109, %shl112
  %arrayidx114 = getelementptr inbounds i8, i8* %b32, i64 1
  %30 = load i8, i8* %arrayidx114, align 1, !tbaa !10
  %conv115 = zext i8 %30 to i64
  %shl116 = shl nuw nsw i64 %conv115, 48
  %or117 = or i64 %or113, %shl116
  %31 = load i8, i8* %b32, align 1, !tbaa !10
  %conv119 = zext i8 %31 to i64
  %shl120 = shl nuw i64 %conv119, 56
  %or121 = or i64 %or117, %shl120
  %arrayidx123 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 3
  %cmp.i = icmp ne i64 %or121, -1
  %cmp3.i = icmp ult i64 %or89, -2
  %or545.i = or i1 %cmp3.i, %cmp.i
  %or5.i = zext i1 %or545.i to i32
  %cmp8.i = icmp eq i64 %or89, -1
  %conv9.i = zext i1 %cmp8.i to i32
  %neg.i = xor i32 %or5.i, -1
  %and.i = and i32 %neg.i, %conv9.i
  %cmp13.i = icmp ult i64 %or57, -4994812053365940165
  %or1546.i = or i1 %cmp13.i, %or545.i
  %or15.i = zext i1 %or1546.i to i32
  %cmp18.i = icmp ugt i64 %or57, -4994812053365940165
  %conv19.i = zext i1 %cmp18.i to i32
  %neg20.i = xor i32 %or15.i, -1
  %and21.i = and i32 %neg20.i, %conv19.i
  %or22.i = or i32 %and21.i, %and.i
  %cmp25.i = icmp ugt i64 %or26, -4624529908474429120
  %conv26.i = zext i1 %cmp25.i to i32
  %and28.i = and i32 %neg20.i, %conv26.i
  %or29.i = or i32 %or22.i, %and28.i
  %conv.i.i = zext i64 %or26 to i128
  %conv1.i = zext i32 %or29.i to i64
  %mul.i = mul nuw i64 %conv1.i, 4624529908474429119
  %conv.i37.i = zext i64 %mul.i to i128
  %add.i.i = add nuw nsw i128 %conv.i37.i, %conv.i.i
  %conv.i38.i = trunc i128 %add.i.i to i64
  store i64 %conv.i38.i, i64* %arrayidx27, align 8, !tbaa !13
  %shr.i.i = lshr i128 %add.i.i, 64
  %conv.i39.i = zext i64 %or57 to i128
  %mul7.i = mul nuw i64 %conv1.i, 4994812053365940164
  %conv.i41.i = zext i64 %mul7.i to i128
  %add.i40.i = add nuw nsw i128 %conv.i41.i, %conv.i39.i
  %add.i42.i = add nuw nsw i128 %add.i40.i, %shr.i.i
  %conv.i43.i = trunc i128 %add.i42.i to i64
  store i64 %conv.i43.i, i64* %arrayidx59, align 8, !tbaa !13
  %shr.i44.i = lshr i128 %add.i42.i, 64
  %conv.i45.i = zext i64 %or89 to i128
  %conv.i47.i = zext i32 %or29.i to i128
  %add.i46.i = add nuw nsw i128 %conv.i47.i, %conv.i45.i
  %add.i48.i = add nuw nsw i128 %add.i46.i, %shr.i44.i
  %conv.i49.i = trunc i128 %add.i48.i to i64
  store i64 %conv.i49.i, i64* %arrayidx91, align 8, !tbaa !13
  %shr.i50.i = lshr i128 %add.i48.i, 64
  %32 = trunc i128 %shr.i50.i to i64
  %conv.i53.i = add i64 %or121, %32
  store i64 %conv.i53.i, i64* %arrayidx123, align 8, !tbaa !13
  %tobool.not = icmp eq i32* %overflow, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %or29.i, i32* %overflow, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_signature_serialize_der(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef writeonly %output, i64* noundef %outputlen, %struct.secp256k1_ecdsa_signature* noundef readonly %sig) local_unnamed_addr #0 {
entry:
  %r.i = alloca [33 x i8], align 16
  %s.i = alloca [33 x i8], align 16
  %cmp2.not = icmp eq i8* %output, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx43 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx43.val = load i8*, i8** %illegal_callback.idx43, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* noundef %illegal_callback.idx43.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i64* %outputlen, null
  br i1 %cmp8.not, label %if.then15, label %do.body20, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx42 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx42.val = load i8*, i8** %illegal_callback16.idx42, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* noundef %illegal_callback16.idx42.val) #19
  br label %cleanup

do.body20:                                        ; preds = %do.body7
  %cmp21.not = icmp eq %struct.secp256k1_ecdsa_signature* %sig, null
  br i1 %cmp21.not, label %if.then28, label %do.end32, !prof !26

if.then28:                                        ; preds = %do.body20
  %illegal_callback29.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback29.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback29.idx, align 8, !tbaa !27
  %illegal_callback29.idx41 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback29.idx41.val = load i8*, i8** %illegal_callback29.idx41, align 8, !tbaa !28
  tail call void %illegal_callback29.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* noundef %illegal_callback29.idx41.val) #19
  br label %cleanup

do.end32:                                         ; preds = %do.body20
  %r.sroa.0.0.arrayidx.i.sroa_cast = bitcast %struct.secp256k1_ecdsa_signature* %sig to i64*
  %r.sroa.0.0.copyload = load i64, i64* %r.sroa.0.0.arrayidx.i.sroa_cast, align 1
  %r.sroa.4.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 8
  %r.sroa.4.0.arrayidx.i.sroa_cast = bitcast i8* %r.sroa.4.0.arrayidx.i.sroa_idx to i64*
  %r.sroa.4.0.copyload = load i64, i64* %r.sroa.4.0.arrayidx.i.sroa_cast, align 1
  %r.sroa.5.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 16
  %r.sroa.5.0.arrayidx.i.sroa_cast = bitcast i8* %r.sroa.5.0.arrayidx.i.sroa_idx to i64*
  %r.sroa.5.0.copyload = load i64, i64* %r.sroa.5.0.arrayidx.i.sroa_cast, align 1
  %r.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 24
  %r.sroa.6.0.arrayidx.i.sroa_cast = bitcast i8* %r.sroa.6.0.arrayidx.i.sroa_idx to i64*
  %r.sroa.6.0.copyload = load i64, i64* %r.sroa.6.0.arrayidx.i.sroa_cast, align 1
  %s.sroa.0.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 32
  %s.sroa.0.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.0.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.0.0.copyload = load i64, i64* %s.sroa.0.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.4.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 40
  %s.sroa.4.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.4.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.4.0.copyload = load i64, i64* %s.sroa.4.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.5.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 48
  %s.sroa.5.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.5.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.5.0.copyload = load i64, i64* %s.sroa.5.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.6.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 56
  %s.sroa.6.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.6.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.6.0.copyload = load i64, i64* %s.sroa.6.0.arrayidx2.i.sroa_cast, align 1
  %0 = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %0) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(33) %0, i8 0, i64 16, i1 false) #19
  %1 = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %1) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(33) %1, i8 0, i64 16, i1 false) #19
  %arrayidx.i44 = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 1
  %shr.i.i = lshr i64 %r.sroa.6.0.copyload, 56
  %conv.i.i = trunc i64 %shr.i.i to i8
  store i8 %conv.i.i, i8* %arrayidx.i44, align 1, !tbaa !10
  %shr4.i.i = lshr i64 %r.sroa.6.0.copyload, 48
  %conv5.i.i = trunc i64 %shr4.i.i to i8
  %arrayidx6.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 2
  store i8 %conv5.i.i, i8* %arrayidx6.i.i, align 2, !tbaa !10
  %shr9.i.i = lshr i64 %r.sroa.6.0.copyload, 40
  %conv10.i.i = trunc i64 %shr9.i.i to i8
  %arrayidx11.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 3
  store i8 %conv10.i.i, i8* %arrayidx11.i.i, align 1, !tbaa !10
  %shr14.i.i = lshr i64 %r.sroa.6.0.copyload, 32
  %conv15.i.i = trunc i64 %shr14.i.i to i8
  %arrayidx16.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 4
  store i8 %conv15.i.i, i8* %arrayidx16.i.i, align 4, !tbaa !10
  %shr19.i.i = lshr i64 %r.sroa.6.0.copyload, 24
  %conv20.i.i = trunc i64 %shr19.i.i to i8
  %arrayidx21.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 5
  store i8 %conv20.i.i, i8* %arrayidx21.i.i, align 1, !tbaa !10
  %shr24.i.i = lshr i64 %r.sroa.6.0.copyload, 16
  %conv25.i.i = trunc i64 %shr24.i.i to i8
  %arrayidx26.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 6
  store i8 %conv25.i.i, i8* %arrayidx26.i.i, align 2, !tbaa !10
  %shr29.i.i = lshr i64 %r.sroa.6.0.copyload, 8
  %conv30.i.i = trunc i64 %shr29.i.i to i8
  %arrayidx31.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 7
  store i8 %conv30.i.i, i8* %arrayidx31.i.i, align 1, !tbaa !10
  %conv34.i.i = trunc i64 %r.sroa.6.0.copyload to i8
  %arrayidx35.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 8
  store i8 %conv34.i.i, i8* %arrayidx35.i.i, align 8, !tbaa !10
  %shr38.i.i = lshr i64 %r.sroa.5.0.copyload, 56
  %conv39.i.i = trunc i64 %shr38.i.i to i8
  %arrayidx40.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 9
  store i8 %conv39.i.i, i8* %arrayidx40.i.i, align 1, !tbaa !10
  %shr43.i.i = lshr i64 %r.sroa.5.0.copyload, 48
  %conv44.i.i = trunc i64 %shr43.i.i to i8
  %arrayidx45.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 10
  store i8 %conv44.i.i, i8* %arrayidx45.i.i, align 2, !tbaa !10
  %shr48.i.i = lshr i64 %r.sroa.5.0.copyload, 40
  %conv49.i.i = trunc i64 %shr48.i.i to i8
  %arrayidx50.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 11
  store i8 %conv49.i.i, i8* %arrayidx50.i.i, align 1, !tbaa !10
  %shr53.i.i = lshr i64 %r.sroa.5.0.copyload, 32
  %conv54.i.i = trunc i64 %shr53.i.i to i8
  %arrayidx55.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 12
  store i8 %conv54.i.i, i8* %arrayidx55.i.i, align 4, !tbaa !10
  %shr58.i.i = lshr i64 %r.sroa.5.0.copyload, 24
  %conv59.i.i = trunc i64 %shr58.i.i to i8
  %arrayidx60.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 13
  store i8 %conv59.i.i, i8* %arrayidx60.i.i, align 1, !tbaa !10
  %shr63.i.i = lshr i64 %r.sroa.5.0.copyload, 16
  %conv64.i.i = trunc i64 %shr63.i.i to i8
  %arrayidx65.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 14
  store i8 %conv64.i.i, i8* %arrayidx65.i.i, align 2, !tbaa !10
  %shr68.i.i = lshr i64 %r.sroa.5.0.copyload, 8
  %conv69.i.i = trunc i64 %shr68.i.i to i8
  %arrayidx70.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 15
  store i8 %conv69.i.i, i8* %arrayidx70.i.i, align 1, !tbaa !10
  %conv73.i.i = trunc i64 %r.sroa.5.0.copyload to i8
  %arrayidx74.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 16
  store i8 %conv73.i.i, i8* %arrayidx74.i.i, align 16, !tbaa !10
  %shr77.i.i = lshr i64 %r.sroa.4.0.copyload, 56
  %conv78.i.i = trunc i64 %shr77.i.i to i8
  %arrayidx79.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 17
  store i8 %conv78.i.i, i8* %arrayidx79.i.i, align 1, !tbaa !10
  %shr82.i.i = lshr i64 %r.sroa.4.0.copyload, 48
  %conv83.i.i = trunc i64 %shr82.i.i to i8
  %arrayidx84.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 18
  store i8 %conv83.i.i, i8* %arrayidx84.i.i, align 2, !tbaa !10
  %shr87.i.i = lshr i64 %r.sroa.4.0.copyload, 40
  %conv88.i.i = trunc i64 %shr87.i.i to i8
  %arrayidx89.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 19
  store i8 %conv88.i.i, i8* %arrayidx89.i.i, align 1, !tbaa !10
  %shr92.i.i = lshr i64 %r.sroa.4.0.copyload, 32
  %conv93.i.i = trunc i64 %shr92.i.i to i8
  %arrayidx94.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 20
  store i8 %conv93.i.i, i8* %arrayidx94.i.i, align 4, !tbaa !10
  %shr97.i.i = lshr i64 %r.sroa.4.0.copyload, 24
  %conv98.i.i = trunc i64 %shr97.i.i to i8
  %arrayidx99.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 21
  store i8 %conv98.i.i, i8* %arrayidx99.i.i, align 1, !tbaa !10
  %shr102.i.i = lshr i64 %r.sroa.4.0.copyload, 16
  %conv103.i.i = trunc i64 %shr102.i.i to i8
  %arrayidx104.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 22
  store i8 %conv103.i.i, i8* %arrayidx104.i.i, align 2, !tbaa !10
  %shr107.i.i = lshr i64 %r.sroa.4.0.copyload, 8
  %conv108.i.i = trunc i64 %shr107.i.i to i8
  %arrayidx109.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 23
  store i8 %conv108.i.i, i8* %arrayidx109.i.i, align 1, !tbaa !10
  %conv112.i.i = trunc i64 %r.sroa.4.0.copyload to i8
  %arrayidx113.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 24
  store i8 %conv112.i.i, i8* %arrayidx113.i.i, align 8, !tbaa !10
  %shr116.i.i = lshr i64 %r.sroa.0.0.copyload, 56
  %conv117.i.i = trunc i64 %shr116.i.i to i8
  %arrayidx118.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 25
  store i8 %conv117.i.i, i8* %arrayidx118.i.i, align 1, !tbaa !10
  %shr121.i.i = lshr i64 %r.sroa.0.0.copyload, 48
  %conv122.i.i = trunc i64 %shr121.i.i to i8
  %arrayidx123.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 26
  store i8 %conv122.i.i, i8* %arrayidx123.i.i, align 2, !tbaa !10
  %shr126.i.i = lshr i64 %r.sroa.0.0.copyload, 40
  %conv127.i.i = trunc i64 %shr126.i.i to i8
  %arrayidx128.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 27
  store i8 %conv127.i.i, i8* %arrayidx128.i.i, align 1, !tbaa !10
  %shr131.i.i = lshr i64 %r.sroa.0.0.copyload, 32
  %conv132.i.i = trunc i64 %shr131.i.i to i8
  %arrayidx133.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 28
  store i8 %conv132.i.i, i8* %arrayidx133.i.i, align 4, !tbaa !10
  %shr136.i.i = lshr i64 %r.sroa.0.0.copyload, 24
  %conv137.i.i = trunc i64 %shr136.i.i to i8
  %arrayidx138.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 29
  store i8 %conv137.i.i, i8* %arrayidx138.i.i, align 1, !tbaa !10
  %shr141.i.i = lshr i64 %r.sroa.0.0.copyload, 16
  %conv142.i.i = trunc i64 %shr141.i.i to i8
  %arrayidx143.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 30
  store i8 %conv142.i.i, i8* %arrayidx143.i.i, align 2, !tbaa !10
  %shr146.i.i = lshr i64 %r.sroa.0.0.copyload, 8
  %conv147.i.i = trunc i64 %shr146.i.i to i8
  %arrayidx148.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 31
  store i8 %conv147.i.i, i8* %arrayidx148.i.i, align 1, !tbaa !10
  %conv151.i.i = trunc i64 %r.sroa.0.0.copyload to i8
  %arrayidx152.i.i = getelementptr inbounds [33 x i8], [33 x i8]* %r.i, i64 0, i64 32
  store i8 %conv151.i.i, i8* %arrayidx152.i.i, align 16, !tbaa !10
  %arrayidx2.i45 = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 1
  %shr.i94.i = lshr i64 %s.sroa.6.0.copyload, 56
  %conv.i95.i = trunc i64 %shr.i94.i to i8
  store i8 %conv.i95.i, i8* %arrayidx2.i45, align 1, !tbaa !10
  %shr4.i96.i = lshr i64 %s.sroa.6.0.copyload, 48
  %conv5.i97.i = trunc i64 %shr4.i96.i to i8
  %arrayidx6.i98.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 2
  store i8 %conv5.i97.i, i8* %arrayidx6.i98.i, align 2, !tbaa !10
  %shr9.i99.i = lshr i64 %s.sroa.6.0.copyload, 40
  %conv10.i100.i = trunc i64 %shr9.i99.i to i8
  %arrayidx11.i101.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 3
  store i8 %conv10.i100.i, i8* %arrayidx11.i101.i, align 1, !tbaa !10
  %shr14.i102.i = lshr i64 %s.sroa.6.0.copyload, 32
  %conv15.i103.i = trunc i64 %shr14.i102.i to i8
  %arrayidx16.i104.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 4
  store i8 %conv15.i103.i, i8* %arrayidx16.i104.i, align 4, !tbaa !10
  %shr19.i105.i = lshr i64 %s.sroa.6.0.copyload, 24
  %conv20.i106.i = trunc i64 %shr19.i105.i to i8
  %arrayidx21.i107.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 5
  store i8 %conv20.i106.i, i8* %arrayidx21.i107.i, align 1, !tbaa !10
  %shr24.i108.i = lshr i64 %s.sroa.6.0.copyload, 16
  %conv25.i109.i = trunc i64 %shr24.i108.i to i8
  %arrayidx26.i110.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 6
  store i8 %conv25.i109.i, i8* %arrayidx26.i110.i, align 2, !tbaa !10
  %shr29.i111.i = lshr i64 %s.sroa.6.0.copyload, 8
  %conv30.i112.i = trunc i64 %shr29.i111.i to i8
  %arrayidx31.i113.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 7
  store i8 %conv30.i112.i, i8* %arrayidx31.i113.i, align 1, !tbaa !10
  %conv34.i114.i = trunc i64 %s.sroa.6.0.copyload to i8
  %arrayidx35.i115.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 8
  store i8 %conv34.i114.i, i8* %arrayidx35.i115.i, align 8, !tbaa !10
  %shr38.i117.i = lshr i64 %s.sroa.5.0.copyload, 56
  %conv39.i118.i = trunc i64 %shr38.i117.i to i8
  %arrayidx40.i119.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 9
  store i8 %conv39.i118.i, i8* %arrayidx40.i119.i, align 1, !tbaa !10
  %shr43.i120.i = lshr i64 %s.sroa.5.0.copyload, 48
  %conv44.i121.i = trunc i64 %shr43.i120.i to i8
  %arrayidx45.i122.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 10
  store i8 %conv44.i121.i, i8* %arrayidx45.i122.i, align 2, !tbaa !10
  %shr48.i123.i = lshr i64 %s.sroa.5.0.copyload, 40
  %conv49.i124.i = trunc i64 %shr48.i123.i to i8
  %arrayidx50.i125.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 11
  store i8 %conv49.i124.i, i8* %arrayidx50.i125.i, align 1, !tbaa !10
  %shr53.i126.i = lshr i64 %s.sroa.5.0.copyload, 32
  %conv54.i127.i = trunc i64 %shr53.i126.i to i8
  %arrayidx55.i128.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 12
  store i8 %conv54.i127.i, i8* %arrayidx55.i128.i, align 4, !tbaa !10
  %shr58.i129.i = lshr i64 %s.sroa.5.0.copyload, 24
  %conv59.i130.i = trunc i64 %shr58.i129.i to i8
  %arrayidx60.i131.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 13
  store i8 %conv59.i130.i, i8* %arrayidx60.i131.i, align 1, !tbaa !10
  %shr63.i132.i = lshr i64 %s.sroa.5.0.copyload, 16
  %conv64.i133.i = trunc i64 %shr63.i132.i to i8
  %arrayidx65.i134.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 14
  store i8 %conv64.i133.i, i8* %arrayidx65.i134.i, align 2, !tbaa !10
  %shr68.i135.i = lshr i64 %s.sroa.5.0.copyload, 8
  %conv69.i136.i = trunc i64 %shr68.i135.i to i8
  %arrayidx70.i137.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 15
  store i8 %conv69.i136.i, i8* %arrayidx70.i137.i, align 1, !tbaa !10
  %conv73.i138.i = trunc i64 %s.sroa.5.0.copyload to i8
  %arrayidx74.i139.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 16
  store i8 %conv73.i138.i, i8* %arrayidx74.i139.i, align 16, !tbaa !10
  %shr77.i141.i = lshr i64 %s.sroa.4.0.copyload, 56
  %conv78.i142.i = trunc i64 %shr77.i141.i to i8
  %arrayidx79.i143.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 17
  store i8 %conv78.i142.i, i8* %arrayidx79.i143.i, align 1, !tbaa !10
  %shr82.i144.i = lshr i64 %s.sroa.4.0.copyload, 48
  %conv83.i145.i = trunc i64 %shr82.i144.i to i8
  %arrayidx84.i146.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 18
  store i8 %conv83.i145.i, i8* %arrayidx84.i146.i, align 2, !tbaa !10
  %shr87.i147.i = lshr i64 %s.sroa.4.0.copyload, 40
  %conv88.i148.i = trunc i64 %shr87.i147.i to i8
  %arrayidx89.i149.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 19
  store i8 %conv88.i148.i, i8* %arrayidx89.i149.i, align 1, !tbaa !10
  %shr92.i150.i = lshr i64 %s.sroa.4.0.copyload, 32
  %conv93.i151.i = trunc i64 %shr92.i150.i to i8
  %arrayidx94.i152.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 20
  store i8 %conv93.i151.i, i8* %arrayidx94.i152.i, align 4, !tbaa !10
  %shr97.i153.i = lshr i64 %s.sroa.4.0.copyload, 24
  %conv98.i154.i = trunc i64 %shr97.i153.i to i8
  %arrayidx99.i155.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 21
  store i8 %conv98.i154.i, i8* %arrayidx99.i155.i, align 1, !tbaa !10
  %shr102.i156.i = lshr i64 %s.sroa.4.0.copyload, 16
  %conv103.i157.i = trunc i64 %shr102.i156.i to i8
  %arrayidx104.i158.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 22
  store i8 %conv103.i157.i, i8* %arrayidx104.i158.i, align 2, !tbaa !10
  %shr107.i159.i = lshr i64 %s.sroa.4.0.copyload, 8
  %conv108.i160.i = trunc i64 %shr107.i159.i to i8
  %arrayidx109.i161.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 23
  store i8 %conv108.i160.i, i8* %arrayidx109.i161.i, align 1, !tbaa !10
  %conv112.i162.i = trunc i64 %s.sroa.4.0.copyload to i8
  %arrayidx113.i163.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 24
  store i8 %conv112.i162.i, i8* %arrayidx113.i163.i, align 8, !tbaa !10
  %shr116.i165.i = lshr i64 %s.sroa.0.0.copyload, 56
  %conv117.i166.i = trunc i64 %shr116.i165.i to i8
  %arrayidx118.i167.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 25
  store i8 %conv117.i166.i, i8* %arrayidx118.i167.i, align 1, !tbaa !10
  %shr121.i168.i = lshr i64 %s.sroa.0.0.copyload, 48
  %conv122.i169.i = trunc i64 %shr121.i168.i to i8
  %arrayidx123.i170.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 26
  store i8 %conv122.i169.i, i8* %arrayidx123.i170.i, align 2, !tbaa !10
  %shr126.i171.i = lshr i64 %s.sroa.0.0.copyload, 40
  %conv127.i172.i = trunc i64 %shr126.i171.i to i8
  %arrayidx128.i173.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 27
  store i8 %conv127.i172.i, i8* %arrayidx128.i173.i, align 1, !tbaa !10
  %shr131.i174.i = lshr i64 %s.sroa.0.0.copyload, 32
  %conv132.i175.i = trunc i64 %shr131.i174.i to i8
  %arrayidx133.i176.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 28
  store i8 %conv132.i175.i, i8* %arrayidx133.i176.i, align 4, !tbaa !10
  %shr136.i177.i = lshr i64 %s.sroa.0.0.copyload, 24
  %conv137.i178.i = trunc i64 %shr136.i177.i to i8
  %arrayidx138.i179.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 29
  store i8 %conv137.i178.i, i8* %arrayidx138.i179.i, align 1, !tbaa !10
  %shr141.i180.i = lshr i64 %s.sroa.0.0.copyload, 16
  %conv142.i181.i = trunc i64 %shr141.i180.i to i8
  %arrayidx143.i182.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 30
  store i8 %conv142.i181.i, i8* %arrayidx143.i182.i, align 2, !tbaa !10
  %shr146.i183.i = lshr i64 %s.sroa.0.0.copyload, 8
  %conv147.i184.i = trunc i64 %shr146.i183.i to i8
  %arrayidx148.i185.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 31
  store i8 %conv147.i184.i, i8* %arrayidx148.i185.i, align 1, !tbaa !10
  %conv151.i186.i = trunc i64 %s.sroa.0.0.copyload to i8
  %arrayidx152.i187.i = getelementptr inbounds [33 x i8], [33 x i8]* %s.i, i64 0, i64 32
  store i8 %conv151.i186.i, i8* %arrayidx152.i187.i, align 16, !tbaa !10
  %2 = load i8, i8* %0, align 16, !tbaa !10
  %cmp4.i = icmp eq i8 %2, 0
  %cmp8.i = icmp sgt i64 %r.sroa.6.0.copyload, -1
  %or.cond = select i1 %cmp4.i, i1 %cmp8.i, i1 false
  br i1 %or.cond, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %do.end32
  %cmp4.1.i = icmp eq i8 %conv.i.i, 0
  %cmp8.1.i = icmp sgt i8 %conv5.i.i, -1
  %or.cond54 = select i1 %cmp4.1.i, i1 %cmp8.1.i, i1 false
  br i1 %or.cond54, label %while.body.1.i, label %while.end.i

while.body.1.i:                                   ; preds = %while.body.i
  %cmp4.2.i = icmp eq i8 %conv5.i.i, 0
  %cmp8.2.i = icmp sgt i8 %conv10.i.i, -1
  %or.cond55 = select i1 %cmp4.2.i, i1 %cmp8.2.i, i1 false
  br i1 %or.cond55, label %while.body.2.i, label %while.end.i

while.body.2.i:                                   ; preds = %while.body.1.i
  %cmp4.3.i = icmp eq i8 %conv10.i.i, 0
  %cmp8.3.i = icmp sgt i8 %conv15.i.i, -1
  %or.cond56 = select i1 %cmp4.3.i, i1 %cmp8.3.i, i1 false
  br i1 %or.cond56, label %while.body.3.i, label %while.end.i

while.body.3.i:                                   ; preds = %while.body.2.i
  %cmp4.4.i = icmp eq i8 %conv15.i.i, 0
  %cmp8.4.i = icmp sgt i8 %conv20.i.i, -1
  %or.cond57 = select i1 %cmp4.4.i, i1 %cmp8.4.i, i1 false
  br i1 %or.cond57, label %while.body.4.i, label %while.end.i

while.body.4.i:                                   ; preds = %while.body.3.i
  %cmp4.5.i = icmp eq i8 %conv20.i.i, 0
  %cmp8.5.i = icmp sgt i8 %conv25.i.i, -1
  %or.cond58 = select i1 %cmp4.5.i, i1 %cmp8.5.i, i1 false
  br i1 %or.cond58, label %while.body.5.i, label %while.end.i

while.body.5.i:                                   ; preds = %while.body.4.i
  %cmp4.6.i = icmp eq i8 %conv25.i.i, 0
  %cmp8.6.i = icmp sgt i8 %conv30.i.i, -1
  %or.cond59 = select i1 %cmp4.6.i, i1 %cmp8.6.i, i1 false
  br i1 %or.cond59, label %while.body.6.i, label %while.end.i

while.body.6.i:                                   ; preds = %while.body.5.i
  %cmp4.7.i = icmp eq i8 %conv30.i.i, 0
  %cmp8.7.i = icmp sgt i8 %conv34.i.i, -1
  %or.cond60 = select i1 %cmp4.7.i, i1 %cmp8.7.i, i1 false
  br i1 %or.cond60, label %while.body.7.i, label %while.end.i

while.body.7.i:                                   ; preds = %while.body.6.i
  %cmp4.8.i = icmp eq i8 %conv34.i.i, 0
  %cmp8.8.i = icmp sgt i64 %r.sroa.5.0.copyload, -1
  %or.cond61 = select i1 %cmp4.8.i, i1 %cmp8.8.i, i1 false
  br i1 %or.cond61, label %while.body.8.i, label %while.end.i

while.body.8.i:                                   ; preds = %while.body.7.i
  %cmp4.9.i = icmp eq i8 %conv39.i.i, 0
  %cmp8.9.i = icmp sgt i8 %conv44.i.i, -1
  %or.cond62 = select i1 %cmp4.9.i, i1 %cmp8.9.i, i1 false
  br i1 %or.cond62, label %while.body.9.i, label %while.end.i

while.body.9.i:                                   ; preds = %while.body.8.i
  %cmp4.10.i = icmp eq i8 %conv44.i.i, 0
  %cmp8.10.i = icmp sgt i8 %conv49.i.i, -1
  %or.cond63 = select i1 %cmp4.10.i, i1 %cmp8.10.i, i1 false
  br i1 %or.cond63, label %while.body.10.i, label %while.end.i

while.body.10.i:                                  ; preds = %while.body.9.i
  %cmp4.11.i = icmp eq i8 %conv49.i.i, 0
  %cmp8.11.i = icmp sgt i8 %conv54.i.i, -1
  %or.cond64 = select i1 %cmp4.11.i, i1 %cmp8.11.i, i1 false
  br i1 %or.cond64, label %while.body.11.i, label %while.end.i

while.body.11.i:                                  ; preds = %while.body.10.i
  %cmp4.12.i = icmp eq i8 %conv54.i.i, 0
  %cmp8.12.i = icmp sgt i8 %conv59.i.i, -1
  %or.cond65 = select i1 %cmp4.12.i, i1 %cmp8.12.i, i1 false
  br i1 %or.cond65, label %while.body.12.i, label %while.end.i

while.body.12.i:                                  ; preds = %while.body.11.i
  %cmp4.13.i = icmp eq i8 %conv59.i.i, 0
  %cmp8.13.i = icmp sgt i8 %conv64.i.i, -1
  %or.cond66 = select i1 %cmp4.13.i, i1 %cmp8.13.i, i1 false
  br i1 %or.cond66, label %while.body.13.i, label %while.end.i

while.body.13.i:                                  ; preds = %while.body.12.i
  %cmp4.14.i = icmp eq i8 %conv64.i.i, 0
  %cmp8.14.i = icmp sgt i8 %conv69.i.i, -1
  %or.cond67 = select i1 %cmp4.14.i, i1 %cmp8.14.i, i1 false
  br i1 %or.cond67, label %while.body.14.i, label %while.end.i

while.body.14.i:                                  ; preds = %while.body.13.i
  %cmp4.15.i = icmp eq i8 %conv69.i.i, 0
  %cmp8.15.i = icmp sgt i8 %conv73.i.i, -1
  %or.cond68 = select i1 %cmp4.15.i, i1 %cmp8.15.i, i1 false
  br i1 %or.cond68, label %while.body.15.i, label %while.end.i

while.body.15.i:                                  ; preds = %while.body.14.i
  %cmp4.16.i = icmp eq i8 %conv73.i.i, 0
  %cmp8.16.i = icmp sgt i64 %r.sroa.4.0.copyload, -1
  %or.cond69 = select i1 %cmp4.16.i, i1 %cmp8.16.i, i1 false
  br i1 %or.cond69, label %while.body.16.i, label %while.end.i

while.body.16.i:                                  ; preds = %while.body.15.i
  %cmp4.17.i = icmp eq i8 %conv78.i.i, 0
  %cmp8.17.i = icmp sgt i8 %conv83.i.i, -1
  %or.cond70 = select i1 %cmp4.17.i, i1 %cmp8.17.i, i1 false
  br i1 %or.cond70, label %while.body.17.i, label %while.end.i

while.body.17.i:                                  ; preds = %while.body.16.i
  %cmp4.18.i = icmp eq i8 %conv83.i.i, 0
  %cmp8.18.i = icmp sgt i8 %conv88.i.i, -1
  %or.cond71 = select i1 %cmp4.18.i, i1 %cmp8.18.i, i1 false
  br i1 %or.cond71, label %while.body.18.i, label %while.end.i

while.body.18.i:                                  ; preds = %while.body.17.i
  %cmp4.19.i = icmp eq i8 %conv88.i.i, 0
  %cmp8.19.i = icmp sgt i8 %conv93.i.i, -1
  %or.cond72 = select i1 %cmp4.19.i, i1 %cmp8.19.i, i1 false
  br i1 %or.cond72, label %while.body.19.i, label %while.end.i

while.body.19.i:                                  ; preds = %while.body.18.i
  %cmp4.20.i = icmp eq i8 %conv93.i.i, 0
  %cmp8.20.i = icmp sgt i8 %conv98.i.i, -1
  %or.cond73 = select i1 %cmp4.20.i, i1 %cmp8.20.i, i1 false
  br i1 %or.cond73, label %while.body.20.i, label %while.end.i

while.body.20.i:                                  ; preds = %while.body.19.i
  %cmp4.21.i = icmp eq i8 %conv98.i.i, 0
  %cmp8.21.i = icmp sgt i8 %conv103.i.i, -1
  %or.cond74 = select i1 %cmp4.21.i, i1 %cmp8.21.i, i1 false
  br i1 %or.cond74, label %while.body.21.i, label %while.end.i

while.body.21.i:                                  ; preds = %while.body.20.i
  %cmp4.22.i = icmp eq i8 %conv103.i.i, 0
  %cmp8.22.i = icmp sgt i8 %conv108.i.i, -1
  %or.cond75 = select i1 %cmp4.22.i, i1 %cmp8.22.i, i1 false
  br i1 %or.cond75, label %while.body.22.i, label %while.end.i

while.body.22.i:                                  ; preds = %while.body.21.i
  %cmp4.23.i = icmp eq i8 %conv108.i.i, 0
  %cmp8.23.i = icmp sgt i8 %conv112.i.i, -1
  %or.cond76 = select i1 %cmp4.23.i, i1 %cmp8.23.i, i1 false
  br i1 %or.cond76, label %while.body.23.i, label %while.end.i

while.body.23.i:                                  ; preds = %while.body.22.i
  %cmp4.24.i = icmp eq i8 %conv112.i.i, 0
  %cmp8.24.i = icmp sgt i64 %r.sroa.0.0.copyload, -1
  %or.cond77 = select i1 %cmp4.24.i, i1 %cmp8.24.i, i1 false
  br i1 %or.cond77, label %while.body.24.i, label %while.end.i

while.body.24.i:                                  ; preds = %while.body.23.i
  %cmp4.25.i = icmp eq i8 %conv117.i.i, 0
  %cmp8.25.i = icmp sgt i8 %conv122.i.i, -1
  %or.cond78 = select i1 %cmp4.25.i, i1 %cmp8.25.i, i1 false
  br i1 %or.cond78, label %while.body.25.i, label %while.end.i

while.body.25.i:                                  ; preds = %while.body.24.i
  %cmp4.26.i = icmp eq i8 %conv122.i.i, 0
  %cmp8.26.i = icmp sgt i8 %conv127.i.i, -1
  %or.cond79 = select i1 %cmp4.26.i, i1 %cmp8.26.i, i1 false
  br i1 %or.cond79, label %while.body.26.i, label %while.end.i

while.body.26.i:                                  ; preds = %while.body.25.i
  %cmp4.27.i = icmp eq i8 %conv127.i.i, 0
  %cmp8.27.i = icmp sgt i8 %conv132.i.i, -1
  %or.cond80 = select i1 %cmp4.27.i, i1 %cmp8.27.i, i1 false
  br i1 %or.cond80, label %while.body.27.i, label %while.end.i

while.body.27.i:                                  ; preds = %while.body.26.i
  %cmp4.28.i = icmp eq i8 %conv132.i.i, 0
  %cmp8.28.i = icmp sgt i8 %conv137.i.i, -1
  %or.cond81 = select i1 %cmp4.28.i, i1 %cmp8.28.i, i1 false
  br i1 %or.cond81, label %while.body.28.i, label %while.end.i

while.body.28.i:                                  ; preds = %while.body.27.i
  %cmp4.29.i = icmp eq i8 %conv137.i.i, 0
  %cmp8.29.i = icmp sgt i8 %conv142.i.i, -1
  %or.cond82 = select i1 %cmp4.29.i, i1 %cmp8.29.i, i1 false
  br i1 %or.cond82, label %while.body.29.i, label %while.end.i

while.body.29.i:                                  ; preds = %while.body.28.i
  %cmp4.30.i = icmp eq i8 %conv142.i.i, 0
  %cmp8.30.i = icmp sgt i8 %conv147.i.i, -1
  %or.cond83 = select i1 %cmp4.30.i, i1 %cmp8.30.i, i1 false
  br i1 %or.cond83, label %while.body.30.i, label %while.end.i

while.body.30.i:                                  ; preds = %while.body.29.i
  %cmp4.31.i = icmp eq i8 %conv147.i.i, 0
  %cmp8.31.i = icmp sgt i8 %conv151.i.i, -1
  %or.cond.i = select i1 %cmp4.31.i, i1 %cmp8.31.i, i1 false
  %spec.select.i = select i1 %or.cond.i, i8* %arrayidx152.i.i, i8* %arrayidx148.i.i
  %spec.select194.i = select i1 %or.cond.i, i64 1, i64 2
  br label %while.end.i

while.end.i:                                      ; preds = %while.body.30.i, %while.body.29.i, %while.body.28.i, %while.body.27.i, %while.body.26.i, %while.body.25.i, %while.body.24.i, %while.body.23.i, %while.body.22.i, %while.body.21.i, %while.body.20.i, %while.body.19.i, %while.body.18.i, %while.body.17.i, %while.body.16.i, %while.body.15.i, %while.body.14.i, %while.body.13.i, %while.body.12.i, %while.body.11.i, %while.body.10.i, %while.body.9.i, %while.body.8.i, %while.body.7.i, %while.body.6.i, %while.body.5.i, %while.body.4.i, %while.body.3.i, %while.body.2.i, %while.body.1.i, %while.body.i, %do.end32
  %rp.0.lcssa.i = phi i8* [ %0, %do.end32 ], [ %arrayidx.i44, %while.body.i ], [ %arrayidx6.i.i, %while.body.1.i ], [ %arrayidx11.i.i, %while.body.2.i ], [ %arrayidx16.i.i, %while.body.3.i ], [ %arrayidx21.i.i, %while.body.4.i ], [ %arrayidx26.i.i, %while.body.5.i ], [ %arrayidx31.i.i, %while.body.6.i ], [ %arrayidx35.i.i, %while.body.7.i ], [ %arrayidx40.i.i, %while.body.8.i ], [ %arrayidx45.i.i, %while.body.9.i ], [ %arrayidx50.i.i, %while.body.10.i ], [ %arrayidx55.i.i, %while.body.11.i ], [ %arrayidx60.i.i, %while.body.12.i ], [ %arrayidx65.i.i, %while.body.13.i ], [ %arrayidx70.i.i, %while.body.14.i ], [ %arrayidx74.i.i, %while.body.15.i ], [ %arrayidx79.i.i, %while.body.16.i ], [ %arrayidx84.i.i, %while.body.17.i ], [ %arrayidx89.i.i, %while.body.18.i ], [ %arrayidx94.i.i, %while.body.19.i ], [ %arrayidx99.i.i, %while.body.20.i ], [ %arrayidx104.i.i, %while.body.21.i ], [ %arrayidx109.i.i, %while.body.22.i ], [ %arrayidx113.i.i, %while.body.23.i ], [ %arrayidx118.i.i, %while.body.24.i ], [ %arrayidx123.i.i, %while.body.25.i ], [ %arrayidx128.i.i, %while.body.26.i ], [ %arrayidx133.i.i, %while.body.27.i ], [ %arrayidx138.i.i, %while.body.28.i ], [ %arrayidx143.i.i, %while.body.29.i ], [ %spec.select.i, %while.body.30.i ]
  %lenR.0.lcssa.i = phi i64 [ 33, %do.end32 ], [ 32, %while.body.i ], [ 31, %while.body.1.i ], [ 30, %while.body.2.i ], [ 29, %while.body.3.i ], [ 28, %while.body.4.i ], [ 27, %while.body.5.i ], [ 26, %while.body.6.i ], [ 25, %while.body.7.i ], [ 24, %while.body.8.i ], [ 23, %while.body.9.i ], [ 22, %while.body.10.i ], [ 21, %while.body.11.i ], [ 20, %while.body.12.i ], [ 19, %while.body.13.i ], [ 18, %while.body.14.i ], [ 17, %while.body.15.i ], [ 16, %while.body.16.i ], [ 15, %while.body.17.i ], [ 14, %while.body.18.i ], [ 13, %while.body.19.i ], [ 12, %while.body.20.i ], [ 11, %while.body.21.i ], [ 10, %while.body.22.i ], [ 9, %while.body.23.i ], [ 8, %while.body.24.i ], [ 7, %while.body.25.i ], [ 6, %while.body.26.i ], [ 5, %while.body.27.i ], [ 4, %while.body.28.i ], [ 3, %while.body.29.i ], [ %spec.select194.i, %while.body.30.i ]
  %3 = load i8, i8* %1, align 16, !tbaa !10
  %cmp16.i = icmp eq i8 %3, 0
  %cmp21.i = icmp sgt i64 %s.sroa.6.0.copyload, -1
  %or.cond84 = select i1 %cmp16.i, i1 %cmp21.i, i1 false
  br i1 %or.cond84, label %while.body24.i, label %while.end27.i

while.body24.i:                                   ; preds = %while.end.i
  %cmp16.1.i = icmp eq i8 %conv.i95.i, 0
  %cmp21.1.i = icmp sgt i8 %conv5.i97.i, -1
  %or.cond85 = select i1 %cmp16.1.i, i1 %cmp21.1.i, i1 false
  br i1 %or.cond85, label %while.body24.1.i, label %while.end27.i

while.body24.1.i:                                 ; preds = %while.body24.i
  %cmp16.2.i = icmp eq i8 %conv5.i97.i, 0
  %cmp21.2.i = icmp sgt i8 %conv10.i100.i, -1
  %or.cond86 = select i1 %cmp16.2.i, i1 %cmp21.2.i, i1 false
  br i1 %or.cond86, label %while.body24.2.i, label %while.end27.i

while.body24.2.i:                                 ; preds = %while.body24.1.i
  %cmp16.3.i = icmp eq i8 %conv10.i100.i, 0
  %cmp21.3.i = icmp sgt i8 %conv15.i103.i, -1
  %or.cond87 = select i1 %cmp16.3.i, i1 %cmp21.3.i, i1 false
  br i1 %or.cond87, label %while.body24.3.i, label %while.end27.i

while.body24.3.i:                                 ; preds = %while.body24.2.i
  %cmp16.4.i = icmp eq i8 %conv15.i103.i, 0
  %cmp21.4.i = icmp sgt i8 %conv20.i106.i, -1
  %or.cond88 = select i1 %cmp16.4.i, i1 %cmp21.4.i, i1 false
  br i1 %or.cond88, label %while.body24.4.i, label %while.end27.i

while.body24.4.i:                                 ; preds = %while.body24.3.i
  %cmp16.5.i = icmp eq i8 %conv20.i106.i, 0
  %cmp21.5.i = icmp sgt i8 %conv25.i109.i, -1
  %or.cond89 = select i1 %cmp16.5.i, i1 %cmp21.5.i, i1 false
  br i1 %or.cond89, label %while.body24.5.i, label %while.end27.i

while.body24.5.i:                                 ; preds = %while.body24.4.i
  %cmp16.6.i = icmp eq i8 %conv25.i109.i, 0
  %cmp21.6.i = icmp sgt i8 %conv30.i112.i, -1
  %or.cond90 = select i1 %cmp16.6.i, i1 %cmp21.6.i, i1 false
  br i1 %or.cond90, label %while.body24.6.i, label %while.end27.i

while.body24.6.i:                                 ; preds = %while.body24.5.i
  %cmp16.7.i = icmp eq i8 %conv30.i112.i, 0
  %cmp21.7.i = icmp sgt i8 %conv34.i114.i, -1
  %or.cond91 = select i1 %cmp16.7.i, i1 %cmp21.7.i, i1 false
  br i1 %or.cond91, label %while.body24.7.i, label %while.end27.i

while.body24.7.i:                                 ; preds = %while.body24.6.i
  %cmp16.8.i = icmp eq i8 %conv34.i114.i, 0
  %cmp21.8.i = icmp sgt i64 %s.sroa.5.0.copyload, -1
  %or.cond92 = select i1 %cmp16.8.i, i1 %cmp21.8.i, i1 false
  br i1 %or.cond92, label %while.body24.8.i, label %while.end27.i

while.body24.8.i:                                 ; preds = %while.body24.7.i
  %cmp16.9.i = icmp eq i8 %conv39.i118.i, 0
  %cmp21.9.i = icmp sgt i8 %conv44.i121.i, -1
  %or.cond93 = select i1 %cmp16.9.i, i1 %cmp21.9.i, i1 false
  br i1 %or.cond93, label %while.body24.9.i, label %while.end27.i

while.body24.9.i:                                 ; preds = %while.body24.8.i
  %cmp16.10.i = icmp eq i8 %conv44.i121.i, 0
  %cmp21.10.i = icmp sgt i8 %conv49.i124.i, -1
  %or.cond94 = select i1 %cmp16.10.i, i1 %cmp21.10.i, i1 false
  br i1 %or.cond94, label %while.body24.10.i, label %while.end27.i

while.body24.10.i:                                ; preds = %while.body24.9.i
  %cmp16.11.i = icmp eq i8 %conv49.i124.i, 0
  %cmp21.11.i = icmp sgt i8 %conv54.i127.i, -1
  %or.cond95 = select i1 %cmp16.11.i, i1 %cmp21.11.i, i1 false
  br i1 %or.cond95, label %while.body24.11.i, label %while.end27.i

while.body24.11.i:                                ; preds = %while.body24.10.i
  %cmp16.12.i = icmp eq i8 %conv54.i127.i, 0
  %cmp21.12.i = icmp sgt i8 %conv59.i130.i, -1
  %or.cond96 = select i1 %cmp16.12.i, i1 %cmp21.12.i, i1 false
  br i1 %or.cond96, label %while.body24.12.i, label %while.end27.i

while.body24.12.i:                                ; preds = %while.body24.11.i
  %cmp16.13.i = icmp eq i8 %conv59.i130.i, 0
  %cmp21.13.i = icmp sgt i8 %conv64.i133.i, -1
  %or.cond97 = select i1 %cmp16.13.i, i1 %cmp21.13.i, i1 false
  br i1 %or.cond97, label %while.body24.13.i, label %while.end27.i

while.body24.13.i:                                ; preds = %while.body24.12.i
  %cmp16.14.i = icmp eq i8 %conv64.i133.i, 0
  %cmp21.14.i = icmp sgt i8 %conv69.i136.i, -1
  %or.cond98 = select i1 %cmp16.14.i, i1 %cmp21.14.i, i1 false
  br i1 %or.cond98, label %while.body24.14.i, label %while.end27.i

while.body24.14.i:                                ; preds = %while.body24.13.i
  %cmp16.15.i = icmp eq i8 %conv69.i136.i, 0
  %cmp21.15.i = icmp sgt i8 %conv73.i138.i, -1
  %or.cond99 = select i1 %cmp16.15.i, i1 %cmp21.15.i, i1 false
  br i1 %or.cond99, label %while.body24.15.i, label %while.end27.i

while.body24.15.i:                                ; preds = %while.body24.14.i
  %cmp16.16.i = icmp eq i8 %conv73.i138.i, 0
  %cmp21.16.i = icmp sgt i64 %s.sroa.4.0.copyload, -1
  %or.cond100 = select i1 %cmp16.16.i, i1 %cmp21.16.i, i1 false
  br i1 %or.cond100, label %while.body24.16.i, label %while.end27.i

while.body24.16.i:                                ; preds = %while.body24.15.i
  %cmp16.17.i = icmp eq i8 %conv78.i142.i, 0
  %cmp21.17.i = icmp sgt i8 %conv83.i145.i, -1
  %or.cond101 = select i1 %cmp16.17.i, i1 %cmp21.17.i, i1 false
  br i1 %or.cond101, label %while.body24.17.i, label %while.end27.i

while.body24.17.i:                                ; preds = %while.body24.16.i
  %cmp16.18.i = icmp eq i8 %conv83.i145.i, 0
  %cmp21.18.i = icmp sgt i8 %conv88.i148.i, -1
  %or.cond102 = select i1 %cmp16.18.i, i1 %cmp21.18.i, i1 false
  br i1 %or.cond102, label %while.body24.18.i, label %while.end27.i

while.body24.18.i:                                ; preds = %while.body24.17.i
  %cmp16.19.i = icmp eq i8 %conv88.i148.i, 0
  %cmp21.19.i = icmp sgt i8 %conv93.i151.i, -1
  %or.cond103 = select i1 %cmp16.19.i, i1 %cmp21.19.i, i1 false
  br i1 %or.cond103, label %while.body24.19.i, label %while.end27.i

while.body24.19.i:                                ; preds = %while.body24.18.i
  %cmp16.20.i = icmp eq i8 %conv93.i151.i, 0
  %cmp21.20.i = icmp sgt i8 %conv98.i154.i, -1
  %or.cond104 = select i1 %cmp16.20.i, i1 %cmp21.20.i, i1 false
  br i1 %or.cond104, label %while.body24.20.i, label %while.end27.i

while.body24.20.i:                                ; preds = %while.body24.19.i
  %cmp16.21.i = icmp eq i8 %conv98.i154.i, 0
  %cmp21.21.i = icmp sgt i8 %conv103.i157.i, -1
  %or.cond105 = select i1 %cmp16.21.i, i1 %cmp21.21.i, i1 false
  br i1 %or.cond105, label %while.body24.21.i, label %while.end27.i

while.body24.21.i:                                ; preds = %while.body24.20.i
  %cmp16.22.i = icmp eq i8 %conv103.i157.i, 0
  %cmp21.22.i = icmp sgt i8 %conv108.i160.i, -1
  %or.cond106 = select i1 %cmp16.22.i, i1 %cmp21.22.i, i1 false
  br i1 %or.cond106, label %while.body24.22.i, label %while.end27.i

while.body24.22.i:                                ; preds = %while.body24.21.i
  %cmp16.23.i = icmp eq i8 %conv108.i160.i, 0
  %cmp21.23.i = icmp sgt i8 %conv112.i162.i, -1
  %or.cond107 = select i1 %cmp16.23.i, i1 %cmp21.23.i, i1 false
  br i1 %or.cond107, label %while.body24.23.i, label %while.end27.i

while.body24.23.i:                                ; preds = %while.body24.22.i
  %cmp16.24.i = icmp eq i8 %conv112.i162.i, 0
  %cmp21.24.i = icmp sgt i64 %s.sroa.0.0.copyload, -1
  %or.cond108 = select i1 %cmp16.24.i, i1 %cmp21.24.i, i1 false
  br i1 %or.cond108, label %while.body24.24.i, label %while.end27.i

while.body24.24.i:                                ; preds = %while.body24.23.i
  %cmp16.25.i = icmp eq i8 %conv117.i166.i, 0
  %cmp21.25.i = icmp sgt i8 %conv122.i169.i, -1
  %or.cond109 = select i1 %cmp16.25.i, i1 %cmp21.25.i, i1 false
  br i1 %or.cond109, label %while.body24.25.i, label %while.end27.i

while.body24.25.i:                                ; preds = %while.body24.24.i
  %cmp16.26.i = icmp eq i8 %conv122.i169.i, 0
  %cmp21.26.i = icmp sgt i8 %conv127.i172.i, -1
  %or.cond110 = select i1 %cmp16.26.i, i1 %cmp21.26.i, i1 false
  br i1 %or.cond110, label %while.body24.26.i, label %while.end27.i

while.body24.26.i:                                ; preds = %while.body24.25.i
  %cmp16.27.i = icmp eq i8 %conv127.i172.i, 0
  %cmp21.27.i = icmp sgt i8 %conv132.i175.i, -1
  %or.cond111 = select i1 %cmp16.27.i, i1 %cmp21.27.i, i1 false
  br i1 %or.cond111, label %while.body24.27.i, label %while.end27.i

while.body24.27.i:                                ; preds = %while.body24.26.i
  %cmp16.28.i = icmp eq i8 %conv132.i175.i, 0
  %cmp21.28.i = icmp sgt i8 %conv137.i178.i, -1
  %or.cond112 = select i1 %cmp16.28.i, i1 %cmp21.28.i, i1 false
  br i1 %or.cond112, label %while.body24.28.i, label %while.end27.i

while.body24.28.i:                                ; preds = %while.body24.27.i
  %cmp16.29.i = icmp eq i8 %conv137.i178.i, 0
  %cmp21.29.i = icmp sgt i8 %conv142.i181.i, -1
  %or.cond113 = select i1 %cmp16.29.i, i1 %cmp21.29.i, i1 false
  br i1 %or.cond113, label %while.body24.29.i, label %while.end27.i

while.body24.29.i:                                ; preds = %while.body24.28.i
  %cmp16.30.i = icmp eq i8 %conv142.i181.i, 0
  %cmp21.30.i = icmp sgt i8 %conv147.i184.i, -1
  %or.cond114 = select i1 %cmp16.30.i, i1 %cmp21.30.i, i1 false
  br i1 %or.cond114, label %while.body24.30.i, label %while.end27.i

while.body24.30.i:                                ; preds = %while.body24.29.i
  %cmp16.31.i = icmp eq i8 %conv147.i184.i, 0
  %cmp21.31.i = icmp sgt i8 %conv151.i186.i, -1
  %or.cond193.i = select i1 %cmp16.31.i, i1 %cmp21.31.i, i1 false
  %spec.select195.i = select i1 %or.cond193.i, i8* %arrayidx152.i187.i, i8* %arrayidx148.i185.i
  %spec.select196.i = select i1 %or.cond193.i, i64 1, i64 2
  br label %while.end27.i

while.end27.i:                                    ; preds = %while.body24.30.i, %while.body24.29.i, %while.body24.28.i, %while.body24.27.i, %while.body24.26.i, %while.body24.25.i, %while.body24.24.i, %while.body24.23.i, %while.body24.22.i, %while.body24.21.i, %while.body24.20.i, %while.body24.19.i, %while.body24.18.i, %while.body24.17.i, %while.body24.16.i, %while.body24.15.i, %while.body24.14.i, %while.body24.13.i, %while.body24.12.i, %while.body24.11.i, %while.body24.10.i, %while.body24.9.i, %while.body24.8.i, %while.body24.7.i, %while.body24.6.i, %while.body24.5.i, %while.body24.4.i, %while.body24.3.i, %while.body24.2.i, %while.body24.1.i, %while.body24.i, %while.end.i
  %sp.0.lcssa.i = phi i8* [ %1, %while.end.i ], [ %arrayidx2.i45, %while.body24.i ], [ %arrayidx6.i98.i, %while.body24.1.i ], [ %arrayidx11.i101.i, %while.body24.2.i ], [ %arrayidx16.i104.i, %while.body24.3.i ], [ %arrayidx21.i107.i, %while.body24.4.i ], [ %arrayidx26.i110.i, %while.body24.5.i ], [ %arrayidx31.i113.i, %while.body24.6.i ], [ %arrayidx35.i115.i, %while.body24.7.i ], [ %arrayidx40.i119.i, %while.body24.8.i ], [ %arrayidx45.i122.i, %while.body24.9.i ], [ %arrayidx50.i125.i, %while.body24.10.i ], [ %arrayidx55.i128.i, %while.body24.11.i ], [ %arrayidx60.i131.i, %while.body24.12.i ], [ %arrayidx65.i134.i, %while.body24.13.i ], [ %arrayidx70.i137.i, %while.body24.14.i ], [ %arrayidx74.i139.i, %while.body24.15.i ], [ %arrayidx79.i143.i, %while.body24.16.i ], [ %arrayidx84.i146.i, %while.body24.17.i ], [ %arrayidx89.i149.i, %while.body24.18.i ], [ %arrayidx94.i152.i, %while.body24.19.i ], [ %arrayidx99.i155.i, %while.body24.20.i ], [ %arrayidx104.i158.i, %while.body24.21.i ], [ %arrayidx109.i161.i, %while.body24.22.i ], [ %arrayidx113.i163.i, %while.body24.23.i ], [ %arrayidx118.i167.i, %while.body24.24.i ], [ %arrayidx123.i170.i, %while.body24.25.i ], [ %arrayidx128.i173.i, %while.body24.26.i ], [ %arrayidx133.i176.i, %while.body24.27.i ], [ %arrayidx138.i179.i, %while.body24.28.i ], [ %arrayidx143.i182.i, %while.body24.29.i ], [ %spec.select195.i, %while.body24.30.i ]
  %lenS.0.lcssa.i = phi i64 [ 33, %while.end.i ], [ 32, %while.body24.i ], [ 31, %while.body24.1.i ], [ 30, %while.body24.2.i ], [ 29, %while.body24.3.i ], [ 28, %while.body24.4.i ], [ 27, %while.body24.5.i ], [ 26, %while.body24.6.i ], [ 25, %while.body24.7.i ], [ 24, %while.body24.8.i ], [ 23, %while.body24.9.i ], [ 22, %while.body24.10.i ], [ 21, %while.body24.11.i ], [ 20, %while.body24.12.i ], [ 19, %while.body24.13.i ], [ 18, %while.body24.14.i ], [ 17, %while.body24.15.i ], [ 16, %while.body24.16.i ], [ 15, %while.body24.17.i ], [ 14, %while.body24.18.i ], [ 13, %while.body24.19.i ], [ 12, %while.body24.20.i ], [ 11, %while.body24.21.i ], [ 10, %while.body24.22.i ], [ 9, %while.body24.23.i ], [ 8, %while.body24.24.i ], [ 7, %while.body24.25.i ], [ 6, %while.body24.26.i ], [ 5, %while.body24.27.i ], [ 4, %while.body24.28.i ], [ 3, %while.body24.29.i ], [ %spec.select196.i, %while.body24.30.i ]
  %4 = load i64, i64* %outputlen, align 8, !tbaa !13
  %add.i = add nuw nsw i64 %lenR.0.lcssa.i, 6
  %add28.i = add nuw nsw i64 %add.i, %lenS.0.lcssa.i
  %cmp29.i = icmp ult i64 %4, %add28.i
  store i64 %add28.i, i64* %outputlen, align 8, !tbaa !13
  br i1 %cmp29.i, label %secp256k1_ecdsa_sig_serialize.exit, label %if.end.i

if.end.i:                                         ; preds = %while.end27.i
  store i8 48, i8* %output, align 1, !tbaa !10
  %add36.i = add nuw nsw i64 %lenR.0.lcssa.i, 4
  %add37.i = add nuw nsw i64 %lenS.0.lcssa.i, %add36.i
  %conv38.i = trunc i64 %add37.i to i8
  %arrayidx39.i = getelementptr inbounds i8, i8* %output, i64 1
  store i8 %conv38.i, i8* %arrayidx39.i, align 1, !tbaa !10
  %arrayidx40.i = getelementptr inbounds i8, i8* %output, i64 2
  store i8 2, i8* %arrayidx40.i, align 1, !tbaa !10
  %conv41.i = trunc i64 %lenR.0.lcssa.i to i8
  %arrayidx42.i = getelementptr inbounds i8, i8* %output, i64 3
  store i8 %conv41.i, i8* %arrayidx42.i, align 1, !tbaa !10
  %add.ptr.i = getelementptr inbounds i8, i8* %output, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 %add.ptr.i, i8* noundef nonnull align 1 %rp.0.lcssa.i, i64 %lenR.0.lcssa.i, i1 false) #19
  %arrayidx44.i = getelementptr inbounds i8, i8* %output, i64 %add36.i
  store i8 2, i8* %arrayidx44.i, align 1, !tbaa !10
  %conv45.i = trunc i64 %lenS.0.lcssa.i to i8
  %add46.i = add nuw nsw i64 %lenR.0.lcssa.i, 5
  %arrayidx47.i = getelementptr inbounds i8, i8* %output, i64 %add46.i
  store i8 %conv45.i, i8* %arrayidx47.i, align 1, !tbaa !10
  %add.ptr48.i = getelementptr inbounds i8, i8* %output, i64 %lenR.0.lcssa.i
  %add.ptr49.i = getelementptr inbounds i8, i8* %add.ptr48.i, i64 6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 %add.ptr49.i, i8* noundef nonnull align 1 %sp.0.lcssa.i, i64 %lenS.0.lcssa.i, i1 false) #19
  br label %secp256k1_ecdsa_sig_serialize.exit

secp256k1_ecdsa_sig_serialize.exit:               ; preds = %while.end27.i, %if.end.i
  %retval.0.i = phi i32 [ 1, %if.end.i ], [ 0, %while.end27.i ]
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %0) #19
  br label %cleanup

cleanup:                                          ; preds = %secp256k1_ecdsa_sig_serialize.exit, %if.then28, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 0, %if.then28 ], [ %retval.0.i, %secp256k1_ecdsa_sig_serialize.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_signature_serialize_compact(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef writeonly %output64, %struct.secp256k1_ecdsa_signature* noundef readonly %sig) local_unnamed_addr #0 {
entry:
  %cmp2.not = icmp eq i8* %output64, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx29 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx29.val = load i8*, i8** %illegal_callback.idx29, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* noundef %illegal_callback.idx29.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq %struct.secp256k1_ecdsa_signature* %sig, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx28 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx28.val = load i8*, i8** %illegal_callback16.idx28, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* noundef %illegal_callback16.idx28.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  %r.sroa.0.0.arrayidx.i.sroa_cast = bitcast %struct.secp256k1_ecdsa_signature* %sig to i64*
  %r.sroa.0.0.copyload = load i64, i64* %r.sroa.0.0.arrayidx.i.sroa_cast, align 1
  %r.sroa.11.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 8
  %r.sroa.11.0.arrayidx.i.sroa_cast = bitcast i8* %r.sroa.11.0.arrayidx.i.sroa_idx to i64*
  %r.sroa.11.0.copyload = load i64, i64* %r.sroa.11.0.arrayidx.i.sroa_cast, align 1
  %r.sroa.19.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 16
  %r.sroa.19.0.arrayidx.i.sroa_cast = bitcast i8* %r.sroa.19.0.arrayidx.i.sroa_idx to i64*
  %r.sroa.19.0.copyload = load i64, i64* %r.sroa.19.0.arrayidx.i.sroa_cast, align 1
  %r.sroa.27.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 24
  %r.sroa.27.0.arrayidx.i.sroa_cast = bitcast i8* %r.sroa.27.0.arrayidx.i.sroa_idx to i64*
  %r.sroa.27.0.copyload = load i64, i64* %r.sroa.27.0.arrayidx.i.sroa_cast, align 1
  %s.sroa.0.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 32
  %s.sroa.0.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.0.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.0.0.copyload = load i64, i64* %s.sroa.0.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.11.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 40
  %s.sroa.11.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.11.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.11.0.copyload = load i64, i64* %s.sroa.11.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.19.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 48
  %s.sroa.19.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.19.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.19.0.copyload = load i64, i64* %s.sroa.19.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.27.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 56
  %s.sroa.27.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.27.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.27.0.copyload = load i64, i64* %s.sroa.27.0.arrayidx2.i.sroa_cast, align 1
  %shr.i = lshr i64 %r.sroa.27.0.copyload, 56
  %conv.i = trunc i64 %shr.i to i8
  store i8 %conv.i, i8* %output64, align 1, !tbaa !10
  %shr4.i = lshr i64 %r.sroa.27.0.copyload, 48
  %conv5.i = trunc i64 %shr4.i to i8
  %arrayidx6.i = getelementptr inbounds i8, i8* %output64, i64 1
  store i8 %conv5.i, i8* %arrayidx6.i, align 1, !tbaa !10
  %shr9.i = lshr i64 %r.sroa.27.0.copyload, 40
  %conv10.i = trunc i64 %shr9.i to i8
  %arrayidx11.i = getelementptr inbounds i8, i8* %output64, i64 2
  store i8 %conv10.i, i8* %arrayidx11.i, align 1, !tbaa !10
  %shr14.i = lshr i64 %r.sroa.27.0.copyload, 32
  %conv15.i = trunc i64 %shr14.i to i8
  %arrayidx16.i = getelementptr inbounds i8, i8* %output64, i64 3
  store i8 %conv15.i, i8* %arrayidx16.i, align 1, !tbaa !10
  %shr19.i = lshr i64 %r.sroa.27.0.copyload, 24
  %conv20.i = trunc i64 %shr19.i to i8
  %arrayidx21.i = getelementptr inbounds i8, i8* %output64, i64 4
  store i8 %conv20.i, i8* %arrayidx21.i, align 1, !tbaa !10
  %shr24.i = lshr i64 %r.sroa.27.0.copyload, 16
  %conv25.i = trunc i64 %shr24.i to i8
  %arrayidx26.i = getelementptr inbounds i8, i8* %output64, i64 5
  store i8 %conv25.i, i8* %arrayidx26.i, align 1, !tbaa !10
  %shr29.i = lshr i64 %r.sroa.27.0.copyload, 8
  %conv30.i = trunc i64 %shr29.i to i8
  %arrayidx31.i = getelementptr inbounds i8, i8* %output64, i64 6
  store i8 %conv30.i, i8* %arrayidx31.i, align 1, !tbaa !10
  %conv34.i = trunc i64 %r.sroa.27.0.copyload to i8
  %arrayidx35.i = getelementptr inbounds i8, i8* %output64, i64 7
  store i8 %conv34.i, i8* %arrayidx35.i, align 1, !tbaa !10
  %shr38.i = lshr i64 %r.sroa.19.0.copyload, 56
  %conv39.i = trunc i64 %shr38.i to i8
  %arrayidx40.i = getelementptr inbounds i8, i8* %output64, i64 8
  store i8 %conv39.i, i8* %arrayidx40.i, align 1, !tbaa !10
  %shr43.i = lshr i64 %r.sroa.19.0.copyload, 48
  %conv44.i = trunc i64 %shr43.i to i8
  %arrayidx45.i = getelementptr inbounds i8, i8* %output64, i64 9
  store i8 %conv44.i, i8* %arrayidx45.i, align 1, !tbaa !10
  %shr48.i = lshr i64 %r.sroa.19.0.copyload, 40
  %conv49.i = trunc i64 %shr48.i to i8
  %arrayidx50.i = getelementptr inbounds i8, i8* %output64, i64 10
  store i8 %conv49.i, i8* %arrayidx50.i, align 1, !tbaa !10
  %shr53.i = lshr i64 %r.sroa.19.0.copyload, 32
  %conv54.i = trunc i64 %shr53.i to i8
  %arrayidx55.i = getelementptr inbounds i8, i8* %output64, i64 11
  store i8 %conv54.i, i8* %arrayidx55.i, align 1, !tbaa !10
  %shr58.i = lshr i64 %r.sroa.19.0.copyload, 24
  %conv59.i = trunc i64 %shr58.i to i8
  %arrayidx60.i = getelementptr inbounds i8, i8* %output64, i64 12
  store i8 %conv59.i, i8* %arrayidx60.i, align 1, !tbaa !10
  %shr63.i = lshr i64 %r.sroa.19.0.copyload, 16
  %conv64.i = trunc i64 %shr63.i to i8
  %arrayidx65.i = getelementptr inbounds i8, i8* %output64, i64 13
  store i8 %conv64.i, i8* %arrayidx65.i, align 1, !tbaa !10
  %shr68.i = lshr i64 %r.sroa.19.0.copyload, 8
  %conv69.i = trunc i64 %shr68.i to i8
  %arrayidx70.i = getelementptr inbounds i8, i8* %output64, i64 14
  store i8 %conv69.i, i8* %arrayidx70.i, align 1, !tbaa !10
  %conv73.i = trunc i64 %r.sroa.19.0.copyload to i8
  %arrayidx74.i = getelementptr inbounds i8, i8* %output64, i64 15
  store i8 %conv73.i, i8* %arrayidx74.i, align 1, !tbaa !10
  %shr77.i = lshr i64 %r.sroa.11.0.copyload, 56
  %conv78.i = trunc i64 %shr77.i to i8
  %arrayidx79.i = getelementptr inbounds i8, i8* %output64, i64 16
  store i8 %conv78.i, i8* %arrayidx79.i, align 1, !tbaa !10
  %shr82.i = lshr i64 %r.sroa.11.0.copyload, 48
  %conv83.i = trunc i64 %shr82.i to i8
  %arrayidx84.i = getelementptr inbounds i8, i8* %output64, i64 17
  store i8 %conv83.i, i8* %arrayidx84.i, align 1, !tbaa !10
  %shr87.i = lshr i64 %r.sroa.11.0.copyload, 40
  %conv88.i = trunc i64 %shr87.i to i8
  %arrayidx89.i = getelementptr inbounds i8, i8* %output64, i64 18
  store i8 %conv88.i, i8* %arrayidx89.i, align 1, !tbaa !10
  %shr92.i = lshr i64 %r.sroa.11.0.copyload, 32
  %conv93.i = trunc i64 %shr92.i to i8
  %arrayidx94.i = getelementptr inbounds i8, i8* %output64, i64 19
  store i8 %conv93.i, i8* %arrayidx94.i, align 1, !tbaa !10
  %shr97.i = lshr i64 %r.sroa.11.0.copyload, 24
  %conv98.i = trunc i64 %shr97.i to i8
  %arrayidx99.i = getelementptr inbounds i8, i8* %output64, i64 20
  store i8 %conv98.i, i8* %arrayidx99.i, align 1, !tbaa !10
  %shr102.i = lshr i64 %r.sroa.11.0.copyload, 16
  %conv103.i = trunc i64 %shr102.i to i8
  %arrayidx104.i = getelementptr inbounds i8, i8* %output64, i64 21
  store i8 %conv103.i, i8* %arrayidx104.i, align 1, !tbaa !10
  %shr107.i = lshr i64 %r.sroa.11.0.copyload, 8
  %conv108.i = trunc i64 %shr107.i to i8
  %arrayidx109.i = getelementptr inbounds i8, i8* %output64, i64 22
  store i8 %conv108.i, i8* %arrayidx109.i, align 1, !tbaa !10
  %conv112.i = trunc i64 %r.sroa.11.0.copyload to i8
  %arrayidx113.i = getelementptr inbounds i8, i8* %output64, i64 23
  store i8 %conv112.i, i8* %arrayidx113.i, align 1, !tbaa !10
  %shr116.i = lshr i64 %r.sroa.0.0.copyload, 56
  %conv117.i = trunc i64 %shr116.i to i8
  %arrayidx118.i = getelementptr inbounds i8, i8* %output64, i64 24
  store i8 %conv117.i, i8* %arrayidx118.i, align 1, !tbaa !10
  %shr121.i = lshr i64 %r.sroa.0.0.copyload, 48
  %conv122.i = trunc i64 %shr121.i to i8
  %arrayidx123.i = getelementptr inbounds i8, i8* %output64, i64 25
  store i8 %conv122.i, i8* %arrayidx123.i, align 1, !tbaa !10
  %shr126.i = lshr i64 %r.sroa.0.0.copyload, 40
  %conv127.i = trunc i64 %shr126.i to i8
  %arrayidx128.i = getelementptr inbounds i8, i8* %output64, i64 26
  store i8 %conv127.i, i8* %arrayidx128.i, align 1, !tbaa !10
  %shr131.i = lshr i64 %r.sroa.0.0.copyload, 32
  %conv132.i = trunc i64 %shr131.i to i8
  %arrayidx133.i = getelementptr inbounds i8, i8* %output64, i64 27
  store i8 %conv132.i, i8* %arrayidx133.i, align 1, !tbaa !10
  %shr136.i = lshr i64 %r.sroa.0.0.copyload, 24
  %conv137.i = trunc i64 %shr136.i to i8
  %arrayidx138.i = getelementptr inbounds i8, i8* %output64, i64 28
  store i8 %conv137.i, i8* %arrayidx138.i, align 1, !tbaa !10
  %shr141.i = lshr i64 %r.sroa.0.0.copyload, 16
  %conv142.i = trunc i64 %shr141.i to i8
  %arrayidx143.i = getelementptr inbounds i8, i8* %output64, i64 29
  store i8 %conv142.i, i8* %arrayidx143.i, align 1, !tbaa !10
  %shr146.i = lshr i64 %r.sroa.0.0.copyload, 8
  %conv147.i = trunc i64 %shr146.i to i8
  %arrayidx148.i = getelementptr inbounds i8, i8* %output64, i64 30
  store i8 %conv147.i, i8* %arrayidx148.i, align 1, !tbaa !10
  %conv151.i = trunc i64 %r.sroa.0.0.copyload to i8
  %arrayidx152.i = getelementptr inbounds i8, i8* %output64, i64 31
  store i8 %conv151.i, i8* %arrayidx152.i, align 1, !tbaa !10
  %arrayidx20 = getelementptr inbounds i8, i8* %output64, i64 32
  %shr.i32 = lshr i64 %s.sroa.27.0.copyload, 56
  %conv.i33 = trunc i64 %shr.i32 to i8
  store i8 %conv.i33, i8* %arrayidx20, align 1, !tbaa !10
  %shr4.i34 = lshr i64 %s.sroa.27.0.copyload, 48
  %conv5.i35 = trunc i64 %shr4.i34 to i8
  %arrayidx6.i36 = getelementptr inbounds i8, i8* %output64, i64 33
  store i8 %conv5.i35, i8* %arrayidx6.i36, align 1, !tbaa !10
  %shr9.i37 = lshr i64 %s.sroa.27.0.copyload, 40
  %conv10.i38 = trunc i64 %shr9.i37 to i8
  %arrayidx11.i39 = getelementptr inbounds i8, i8* %output64, i64 34
  store i8 %conv10.i38, i8* %arrayidx11.i39, align 1, !tbaa !10
  %shr14.i40 = lshr i64 %s.sroa.27.0.copyload, 32
  %conv15.i41 = trunc i64 %shr14.i40 to i8
  %arrayidx16.i42 = getelementptr inbounds i8, i8* %output64, i64 35
  store i8 %conv15.i41, i8* %arrayidx16.i42, align 1, !tbaa !10
  %shr19.i43 = lshr i64 %s.sroa.27.0.copyload, 24
  %conv20.i44 = trunc i64 %shr19.i43 to i8
  %arrayidx21.i45 = getelementptr inbounds i8, i8* %output64, i64 36
  store i8 %conv20.i44, i8* %arrayidx21.i45, align 1, !tbaa !10
  %shr24.i46 = lshr i64 %s.sroa.27.0.copyload, 16
  %conv25.i47 = trunc i64 %shr24.i46 to i8
  %arrayidx26.i48 = getelementptr inbounds i8, i8* %output64, i64 37
  store i8 %conv25.i47, i8* %arrayidx26.i48, align 1, !tbaa !10
  %shr29.i49 = lshr i64 %s.sroa.27.0.copyload, 8
  %conv30.i50 = trunc i64 %shr29.i49 to i8
  %arrayidx31.i51 = getelementptr inbounds i8, i8* %output64, i64 38
  store i8 %conv30.i50, i8* %arrayidx31.i51, align 1, !tbaa !10
  %conv34.i52 = trunc i64 %s.sroa.27.0.copyload to i8
  %arrayidx35.i53 = getelementptr inbounds i8, i8* %output64, i64 39
  store i8 %conv34.i52, i8* %arrayidx35.i53, align 1, !tbaa !10
  %shr38.i55 = lshr i64 %s.sroa.19.0.copyload, 56
  %conv39.i56 = trunc i64 %shr38.i55 to i8
  %arrayidx40.i57 = getelementptr inbounds i8, i8* %output64, i64 40
  store i8 %conv39.i56, i8* %arrayidx40.i57, align 1, !tbaa !10
  %shr43.i58 = lshr i64 %s.sroa.19.0.copyload, 48
  %conv44.i59 = trunc i64 %shr43.i58 to i8
  %arrayidx45.i60 = getelementptr inbounds i8, i8* %output64, i64 41
  store i8 %conv44.i59, i8* %arrayidx45.i60, align 1, !tbaa !10
  %shr48.i61 = lshr i64 %s.sroa.19.0.copyload, 40
  %conv49.i62 = trunc i64 %shr48.i61 to i8
  %arrayidx50.i63 = getelementptr inbounds i8, i8* %output64, i64 42
  store i8 %conv49.i62, i8* %arrayidx50.i63, align 1, !tbaa !10
  %shr53.i64 = lshr i64 %s.sroa.19.0.copyload, 32
  %conv54.i65 = trunc i64 %shr53.i64 to i8
  %arrayidx55.i66 = getelementptr inbounds i8, i8* %output64, i64 43
  store i8 %conv54.i65, i8* %arrayidx55.i66, align 1, !tbaa !10
  %shr58.i67 = lshr i64 %s.sroa.19.0.copyload, 24
  %conv59.i68 = trunc i64 %shr58.i67 to i8
  %arrayidx60.i69 = getelementptr inbounds i8, i8* %output64, i64 44
  store i8 %conv59.i68, i8* %arrayidx60.i69, align 1, !tbaa !10
  %shr63.i70 = lshr i64 %s.sroa.19.0.copyload, 16
  %conv64.i71 = trunc i64 %shr63.i70 to i8
  %arrayidx65.i72 = getelementptr inbounds i8, i8* %output64, i64 45
  store i8 %conv64.i71, i8* %arrayidx65.i72, align 1, !tbaa !10
  %shr68.i73 = lshr i64 %s.sroa.19.0.copyload, 8
  %conv69.i74 = trunc i64 %shr68.i73 to i8
  %arrayidx70.i75 = getelementptr inbounds i8, i8* %output64, i64 46
  store i8 %conv69.i74, i8* %arrayidx70.i75, align 1, !tbaa !10
  %conv73.i76 = trunc i64 %s.sroa.19.0.copyload to i8
  %arrayidx74.i77 = getelementptr inbounds i8, i8* %output64, i64 47
  store i8 %conv73.i76, i8* %arrayidx74.i77, align 1, !tbaa !10
  %shr77.i79 = lshr i64 %s.sroa.11.0.copyload, 56
  %conv78.i80 = trunc i64 %shr77.i79 to i8
  %arrayidx79.i81 = getelementptr inbounds i8, i8* %output64, i64 48
  store i8 %conv78.i80, i8* %arrayidx79.i81, align 1, !tbaa !10
  %shr82.i82 = lshr i64 %s.sroa.11.0.copyload, 48
  %conv83.i83 = trunc i64 %shr82.i82 to i8
  %arrayidx84.i84 = getelementptr inbounds i8, i8* %output64, i64 49
  store i8 %conv83.i83, i8* %arrayidx84.i84, align 1, !tbaa !10
  %shr87.i85 = lshr i64 %s.sroa.11.0.copyload, 40
  %conv88.i86 = trunc i64 %shr87.i85 to i8
  %arrayidx89.i87 = getelementptr inbounds i8, i8* %output64, i64 50
  store i8 %conv88.i86, i8* %arrayidx89.i87, align 1, !tbaa !10
  %shr92.i88 = lshr i64 %s.sroa.11.0.copyload, 32
  %conv93.i89 = trunc i64 %shr92.i88 to i8
  %arrayidx94.i90 = getelementptr inbounds i8, i8* %output64, i64 51
  store i8 %conv93.i89, i8* %arrayidx94.i90, align 1, !tbaa !10
  %shr97.i91 = lshr i64 %s.sroa.11.0.copyload, 24
  %conv98.i92 = trunc i64 %shr97.i91 to i8
  %arrayidx99.i93 = getelementptr inbounds i8, i8* %output64, i64 52
  store i8 %conv98.i92, i8* %arrayidx99.i93, align 1, !tbaa !10
  %shr102.i94 = lshr i64 %s.sroa.11.0.copyload, 16
  %conv103.i95 = trunc i64 %shr102.i94 to i8
  %arrayidx104.i96 = getelementptr inbounds i8, i8* %output64, i64 53
  store i8 %conv103.i95, i8* %arrayidx104.i96, align 1, !tbaa !10
  %shr107.i97 = lshr i64 %s.sroa.11.0.copyload, 8
  %conv108.i98 = trunc i64 %shr107.i97 to i8
  %arrayidx109.i99 = getelementptr inbounds i8, i8* %output64, i64 54
  store i8 %conv108.i98, i8* %arrayidx109.i99, align 1, !tbaa !10
  %conv112.i100 = trunc i64 %s.sroa.11.0.copyload to i8
  %arrayidx113.i101 = getelementptr inbounds i8, i8* %output64, i64 55
  store i8 %conv112.i100, i8* %arrayidx113.i101, align 1, !tbaa !10
  %shr116.i103 = lshr i64 %s.sroa.0.0.copyload, 56
  %conv117.i104 = trunc i64 %shr116.i103 to i8
  %arrayidx118.i105 = getelementptr inbounds i8, i8* %output64, i64 56
  store i8 %conv117.i104, i8* %arrayidx118.i105, align 1, !tbaa !10
  %shr121.i106 = lshr i64 %s.sroa.0.0.copyload, 48
  %conv122.i107 = trunc i64 %shr121.i106 to i8
  %arrayidx123.i108 = getelementptr inbounds i8, i8* %output64, i64 57
  store i8 %conv122.i107, i8* %arrayidx123.i108, align 1, !tbaa !10
  %shr126.i109 = lshr i64 %s.sroa.0.0.copyload, 40
  %conv127.i110 = trunc i64 %shr126.i109 to i8
  %arrayidx128.i111 = getelementptr inbounds i8, i8* %output64, i64 58
  store i8 %conv127.i110, i8* %arrayidx128.i111, align 1, !tbaa !10
  %shr131.i112 = lshr i64 %s.sroa.0.0.copyload, 32
  %conv132.i113 = trunc i64 %shr131.i112 to i8
  %arrayidx133.i114 = getelementptr inbounds i8, i8* %output64, i64 59
  store i8 %conv132.i113, i8* %arrayidx133.i114, align 1, !tbaa !10
  %shr136.i115 = lshr i64 %s.sroa.0.0.copyload, 24
  %conv137.i116 = trunc i64 %shr136.i115 to i8
  %arrayidx138.i117 = getelementptr inbounds i8, i8* %output64, i64 60
  store i8 %conv137.i116, i8* %arrayidx138.i117, align 1, !tbaa !10
  %shr141.i118 = lshr i64 %s.sroa.0.0.copyload, 16
  %conv142.i119 = trunc i64 %shr141.i118 to i8
  %arrayidx143.i120 = getelementptr inbounds i8, i8* %output64, i64 61
  store i8 %conv142.i119, i8* %arrayidx143.i120, align 1, !tbaa !10
  %shr146.i121 = lshr i64 %s.sroa.0.0.copyload, 8
  %conv147.i122 = trunc i64 %shr146.i121 to i8
  %arrayidx148.i123 = getelementptr inbounds i8, i8* %output64, i64 62
  store i8 %conv147.i122, i8* %arrayidx148.i123, align 1, !tbaa !10
  %conv151.i124 = trunc i64 %s.sroa.0.0.copyload to i8
  %arrayidx152.i125 = getelementptr inbounds i8, i8* %output64, i64 63
  store i8 %conv151.i124, i8* %arrayidx152.i125, align 1, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %do.end19, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 1, %do.end19 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_signature_normalize(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_ecdsa_signature* noundef writeonly %sigout, %struct.secp256k1_ecdsa_signature* noundef readonly %sigin) local_unnamed_addr #0 {
entry:
  %cmp2.not = icmp eq %struct.secp256k1_ecdsa_signature* %sigin, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx22 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx22.val = load i8*, i8** %illegal_callback.idx22, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* noundef %illegal_callback.idx22.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %r.sroa.0.0.arrayidx.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigin, i64 0, i32 0, i64 0
  %s.sroa.0.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigin, i64 0, i32 0, i64 32
  %s.sroa.0.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.0.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.0.0.copyload = load i64, i64* %s.sroa.0.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.7.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigin, i64 0, i32 0, i64 40
  %s.sroa.7.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.7.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.7.0.copyload = load i64, i64* %s.sroa.7.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.11.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigin, i64 0, i32 0, i64 48
  %s.sroa.11.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.11.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.11.0.copyload = load i64, i64* %s.sroa.11.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.15.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigin, i64 0, i32 0, i64 56
  %s.sroa.15.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.15.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.15.0.copyload = load i64, i64* %s.sroa.15.0.arrayidx2.i.sroa_cast, align 1
  %cmp.i = icmp ult i64 %s.sroa.15.0.copyload, 9223372036854775807
  %conv.i = zext i1 %cmp.i to i32
  %.lobit.i = lshr i64 %s.sroa.15.0.copyload, 63
  %0 = trunc i64 %.lobit.i to i32
  %cmp8.i = icmp ne i64 %s.sroa.11.0.copyload, -1
  %conv9.i = zext i1 %cmp8.i to i32
  %neg10.i = xor i32 %0, -1
  %and11.i = and i32 %neg10.i, %conv9.i
  %or12.i = or i32 %and11.i, %conv.i
  %cmp15.i = icmp ult i64 %s.sroa.7.0.copyload, 6725966010171805725
  %conv16.i = zext i1 %cmp15.i to i32
  %and18.i = and i32 %neg10.i, %conv16.i
  %or19.i = or i32 %or12.i, %and18.i
  %cmp22.i = icmp ugt i64 %s.sroa.7.0.copyload, 6725966010171805725
  %conv23.i = zext i1 %cmp22.i to i32
  %neg24.i = xor i32 %or19.i, -1
  %and25.i = and i32 %neg24.i, %conv23.i
  %or26.i = or i32 %and25.i, %0
  %cmp29.i = icmp ugt i64 %s.sroa.0.0.copyload, -2312264954237214560
  %conv30.i = zext i1 %cmp29.i to i32
  %and32.i = and i32 %neg24.i, %conv30.i
  %or33.i = or i32 %or26.i, %and32.i
  %cmp7.not = icmp eq %struct.secp256k1_ecdsa_signature* %sigout, null
  br i1 %cmp7.not, label %cleanup, label %if.then9

if.then9:                                         ; preds = %do.end6
  %tobool10.not = icmp eq i32 %or33.i, 0
  br i1 %tobool10.not, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.then9
  %or.i.i = or i64 %s.sroa.7.0.copyload, %s.sroa.0.0.copyload
  %or5.i.i = or i64 %or.i.i, %s.sroa.11.0.copyload
  %or8.i.i = or i64 %or5.i.i, %s.sroa.15.0.copyload
  %cmp.i.i = icmp ne i64 %or8.i.i, 0
  %.neg.i = sext i1 %cmp.i.i to i64
  %neg.i = xor i64 %s.sroa.0.0.copyload, -1
  %conv.i40.i = zext i64 %neg.i to i128
  %add.i.i = add nuw nsw i128 %conv.i40.i, 13822214165235122498
  %conv.i41.i = trunc i128 %add.i.i to i64
  %and.i = and i64 %.neg.i, %conv.i41.i
  %shr.i.i = lshr i128 %add.i.i, 64
  %neg7.i = xor i64 %s.sroa.7.0.copyload, -1
  %conv.i42.i = zext i64 %neg7.i to i128
  %add.i43.i = add nuw nsw i128 %conv.i42.i, 13451932020343611451
  %add.i44.i = add nuw nsw i128 %add.i43.i, %shr.i.i
  %conv.i45.i = trunc i128 %add.i44.i to i64
  %and9.i = and i64 %conv.i45.i, %.neg.i
  %shr.i46.i = lshr i128 %add.i44.i, 64
  %neg14.i = xor i64 %s.sroa.11.0.copyload, -1
  %conv.i47.i = zext i64 %neg14.i to i128
  %add.i48.i = add nuw nsw i128 %conv.i47.i, 18446744073709551614
  %add.i49.i = add nuw nsw i128 %add.i48.i, %shr.i46.i
  %conv.i50.i = trunc i128 %add.i49.i to i64
  %and16.i = and i64 %conv.i50.i, %.neg.i
  %shr.i51.i = lshr i128 %add.i49.i, 64
  %1 = trunc i128 %shr.i51.i to i64
  %2 = sub i64 -2, %s.sroa.15.0.copyload
  %conv.i55.i = add i64 %2, %1
  %and23.i = and i64 %conv.i55.i, %.neg.i
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then9
  %s.sroa.15.0 = phi i64 [ %s.sroa.15.0.copyload, %if.then9 ], [ %and23.i, %if.then11 ]
  %s.sroa.11.0 = phi i64 [ %s.sroa.11.0.copyload, %if.then9 ], [ %and16.i, %if.then11 ]
  %s.sroa.7.0 = phi i64 [ %s.sroa.7.0.copyload, %if.then9 ], [ %and9.i, %if.then11 ]
  %s.sroa.0.0 = phi i64 [ %s.sroa.0.0.copyload, %if.then9 ], [ %and.i, %if.then11 ]
  %r.sroa.0.0.arrayidx.i24.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigout, i64 0, i32 0, i64 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %r.sroa.0.0.arrayidx.i24.sroa_idx, i8* noundef nonnull align 1 dereferenceable(32) %r.sroa.0.0.arrayidx.i.sroa_idx, i64 32, i1 false)
  %s.sroa.0.0.arrayidx2.i25.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigout, i64 0, i32 0, i64 32
  %s.sroa.0.0.arrayidx2.i25.sroa_cast = bitcast i8* %s.sroa.0.0.arrayidx2.i25.sroa_idx to i64*
  store i64 %s.sroa.0.0, i64* %s.sroa.0.0.arrayidx2.i25.sroa_cast, align 1
  %s.sroa.7.0.arrayidx2.i25.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigout, i64 0, i32 0, i64 40
  %s.sroa.7.0.arrayidx2.i25.sroa_cast = bitcast i8* %s.sroa.7.0.arrayidx2.i25.sroa_idx to i64*
  store i64 %s.sroa.7.0, i64* %s.sroa.7.0.arrayidx2.i25.sroa_cast, align 1
  %s.sroa.11.0.arrayidx2.i25.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigout, i64 0, i32 0, i64 48
  %s.sroa.11.0.arrayidx2.i25.sroa_cast = bitcast i8* %s.sroa.11.0.arrayidx2.i25.sroa_idx to i64*
  store i64 %s.sroa.11.0, i64* %s.sroa.11.0.arrayidx2.i25.sroa_cast, align 1
  %s.sroa.15.0.arrayidx2.i25.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sigout, i64 0, i32 0, i64 56
  %s.sroa.15.0.arrayidx2.i25.sroa_cast = bitcast i8* %s.sroa.15.0.arrayidx2.i25.sroa_idx to i64*
  store i64 %s.sroa.15.0, i64* %s.sroa.15.0.arrayidx2.i25.sroa_cast, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end6, %if.end12, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %or33.i, %if.end12 ], [ %or33.i, %do.end6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_verify(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_ecdsa_signature* noundef readonly %sig, i8* noundef %msghash32, %struct.secp256k1_pubkey* noundef readonly %pubkey) local_unnamed_addr #0 {
entry:
  %d.i.i.i = alloca %struct.secp256k1_modinv64_signed62, align 8
  %e.i.i.i = alloca %struct.secp256k1_modinv64_signed62, align 8
  %f.i.i.i = alloca %struct.secp256k1_modinv64_signed62, align 8
  %g.i.i.i = alloca %struct.secp256k1_modinv64_signed62, align 8
  %t.i.i.i = alloca %struct.secp256k1_modinv64_trans2x2, align 8
  %sn.i = alloca %struct.secp256k1_scalar, align 8
  %u1.i = alloca %struct.secp256k1_scalar, align 8
  %u2.i = alloca %struct.secp256k1_scalar, align 8
  %xr.i = alloca %struct.secp256k1_fe, align 8
  %pubkeyj.i = alloca %struct.secp256k1_gej, align 8
  %pr.i = alloca %struct.secp256k1_gej, align 8
  %r = alloca %struct.secp256k1_scalar, align 8
  %m = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_scalar* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_scalar* %m to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %cmp2.not = icmp eq i8* %msghash32, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx51 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx51.val = load i8*, i8** %illegal_callback.idx51, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* noundef %illegal_callback.idx51.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq %struct.secp256k1_ecdsa_signature* %sig, null
  br i1 %cmp8.not, label %if.then15, label %do.body20, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx50 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx50.val = load i8*, i8** %illegal_callback16.idx50, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* noundef %illegal_callback16.idx50.val) #19
  br label %cleanup

do.body20:                                        ; preds = %do.body7
  %cmp21.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp21.not, label %if.then28, label %do.end32, !prof !26

if.then28:                                        ; preds = %do.body20
  %illegal_callback29.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback29.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback29.idx, align 8, !tbaa !27
  %illegal_callback29.idx49 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback29.idx49.val = load i8*, i8** %illegal_callback29.idx49, align 8, !tbaa !28
  tail call void %illegal_callback29.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback29.idx49.val) #19
  br label %cleanup

do.end32:                                         ; preds = %do.body20
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %m, i8* noundef nonnull %msghash32, i32* noundef null)
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %0, i8* noundef nonnull align 1 dereferenceable(32) %arrayidx.i, i64 32, i1 false) #19
  %s.sroa.0.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 32
  %s.sroa.0.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.0.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.0.0.copyload = load i64, i64* %s.sroa.0.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.5.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 40
  %s.sroa.5.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.5.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.5.0.copyload = load i64, i64* %s.sroa.5.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.7.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 48
  %s.sroa.7.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.7.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.7.0.copyload = load i64, i64* %s.sroa.7.0.arrayidx2.i.sroa_cast, align 1
  %s.sroa.9.0.arrayidx2.i.sroa_idx = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %sig, i64 0, i32 0, i64 56
  %s.sroa.9.0.arrayidx2.i.sroa_cast = bitcast i8* %s.sroa.9.0.arrayidx2.i.sroa_idx to i64*
  %s.sroa.9.0.copyload = load i64, i64* %s.sroa.9.0.arrayidx2.i.sroa_cast, align 1
  %cmp.i = icmp ult i64 %s.sroa.9.0.copyload, 9223372036854775807
  %conv.i = zext i1 %cmp.i to i32
  %.lobit.i = lshr i64 %s.sroa.9.0.copyload, 63
  %2 = trunc i64 %.lobit.i to i32
  %cmp8.i = icmp ne i64 %s.sroa.7.0.copyload, -1
  %conv9.i = zext i1 %cmp8.i to i32
  %neg10.i = xor i32 %2, -1
  %and11.i = and i32 %neg10.i, %conv9.i
  %or12.i = or i32 %and11.i, %conv.i
  %cmp15.i = icmp ult i64 %s.sroa.5.0.copyload, 6725966010171805725
  %conv16.i = zext i1 %cmp15.i to i32
  %and18.i = and i32 %neg10.i, %conv16.i
  %or19.i = or i32 %or12.i, %and18.i
  %cmp22.i = icmp ugt i64 %s.sroa.5.0.copyload, 6725966010171805725
  %conv23.i = zext i1 %cmp22.i to i32
  %neg24.i = xor i32 %or19.i, -1
  %and25.i = and i32 %neg24.i, %conv23.i
  %or26.i = or i32 %and25.i, %2
  %cmp29.i = icmp ugt i64 %s.sroa.0.0.copyload, -2312264954237214560
  %conv30.i = zext i1 %cmp29.i to i32
  %and32.i = and i32 %neg24.i, %conv30.i
  %or33.i = or i32 %or26.i, %and32.i
  %tobool33.not = icmp eq i32 %or33.i, 0
  br i1 %tobool33.not, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %do.end32
  %s.sroa.0.0.arrayidx.sroa_cast.i = bitcast %struct.secp256k1_pubkey* %pubkey to i64*
  %s.sroa.0.0.copyload.i = load i64, i64* %s.sroa.0.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.5.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 8
  %s.sroa.5.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.5.0.copyload.i = load i64, i64* %s.sroa.5.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.7.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %s.sroa.7.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.7.0.copyload.i = load i64, i64* %s.sroa.7.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.9.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 24
  %s.sroa.9.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.9.0.copyload.i = load i64, i64* %s.sroa.9.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.11.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %s.sroa.11.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.11.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.11.0.copyload.i = load i64, i64* %s.sroa.11.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.13.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 40
  %s.sroa.13.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.13.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.13.0.copyload.i = load i64, i64* %s.sroa.13.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.15.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %s.sroa.15.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.15.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.15.0.copyload.i = load i64, i64* %s.sroa.15.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.17.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 56
  %s.sroa.17.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.17.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.17.0.copyload.i = load i64, i64* %s.sroa.17.0.arrayidx.sroa_cast.i, align 1
  %and.i.i.i = and i64 %s.sroa.0.0.copyload.i, 4503599627370495
  %shr.i.i.i = lshr i64 %s.sroa.0.0.copyload.i, 52
  %shl.i.i.i = shl i64 %s.sroa.5.0.copyload.i, 12
  %and7.i.i.i = and i64 %shl.i.i.i, 4503599627366400
  %or.i.i.i = or i64 %and7.i.i.i, %shr.i.i.i
  %shr12.i.i.i = lshr i64 %s.sroa.5.0.copyload.i, 40
  %shl15.i.i.i = shl i64 %s.sroa.7.0.copyload.i, 24
  %and16.i.i.i = and i64 %shl15.i.i.i, 4503599610593280
  %or17.i.i.i = or i64 %and16.i.i.i, %shr12.i.i.i
  %shr22.i.i.i = lshr i64 %s.sroa.7.0.copyload.i, 28
  %shl25.i.i.i = shl i64 %s.sroa.9.0.copyload.i, 36
  %and26.i.i.i = and i64 %shl25.i.i.i, 4503530907893760
  %or27.i.i.i = or i64 %and26.i.i.i, %shr22.i.i.i
  %shr32.i.i.i = lshr i64 %s.sroa.9.0.copyload.i, 16
  %and.i7.i.i = and i64 %s.sroa.11.0.copyload.i, 4503599627370495
  %shr.i9.i.i = lshr i64 %s.sroa.11.0.copyload.i, 52
  %shl.i11.i.i = shl i64 %s.sroa.13.0.copyload.i, 12
  %and7.i12.i.i = and i64 %shl.i11.i.i, 4503599627366400
  %or.i13.i.i = or i64 %and7.i12.i.i, %shr.i9.i.i
  %shr12.i15.i.i = lshr i64 %s.sroa.13.0.copyload.i, 40
  %shl15.i17.i.i = shl i64 %s.sroa.15.0.copyload.i, 24
  %and16.i18.i.i = and i64 %shl15.i17.i.i, 4503599610593280
  %or17.i19.i.i = or i64 %and16.i18.i.i, %shr12.i15.i.i
  %shr22.i21.i.i = lshr i64 %s.sroa.15.0.copyload.i, 28
  %shl25.i23.i.i = shl i64 %s.sroa.17.0.copyload.i, 36
  %and26.i24.i.i = and i64 %shl25.i23.i.i, 4503530907893760
  %or27.i25.i.i = or i64 %and26.i24.i.i, %shr22.i21.i.i
  %shr32.i27.i.i = lshr i64 %s.sroa.17.0.copyload.i, 16
  %or.i.i = or i64 %or.i.i.i, %and.i.i.i
  %or3.i.i = or i64 %or.i.i, %shr32.i.i.i
  %or5.i.i = or i64 %or3.i.i, %or17.i.i.i
  %or7.i.i = or i64 %or5.i.i, %or27.i.i.i
  %cmp.i.not.i = icmp eq i64 %or7.i.i, 0
  br i1 %cmp.i.not.i, label %secp256k1_pubkey_load.exit.thread, label %land.rhs, !prof !26

secp256k1_pubkey_load.exit.thread:                ; preds = %land.lhs.true
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx4.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx4.val.i = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* noundef %illegal_callback.idx4.val.i) #19
  br label %cleanup

land.rhs:                                         ; preds = %land.lhs.true
  %3 = bitcast %struct.secp256k1_scalar* %sn.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #19
  %4 = bitcast %struct.secp256k1_scalar* %u1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #19
  %5 = bitcast %struct.secp256k1_scalar* %u2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #19
  %6 = bitcast %struct.secp256k1_fe* %xr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #19
  %7 = bitcast %struct.secp256k1_gej* %pubkeyj.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #19
  %8 = bitcast %struct.secp256k1_gej* %pr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #19
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 0
  %9 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 1
  %10 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %or.i.i53 = or i64 %10, %9
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 2
  %11 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %or5.i.i54 = or i64 %or.i.i53, %11
  %arrayidx7.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 3
  %12 = load i64, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %or8.i.i = or i64 %or5.i.i54, %12
  %cmp.i.not.i55 = icmp eq i64 %or8.i.i, 0
  br i1 %cmp.i.not.i55, label %secp256k1_ecdsa_sig_verify.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %land.rhs
  %or.i31.i = or i64 %s.sroa.5.0.copyload, %s.sroa.0.0.copyload
  %or5.i33.i = or i64 %or.i31.i, %s.sroa.7.0.copyload
  %or8.i35.i = or i64 %or5.i33.i, %s.sroa.9.0.copyload
  %cmp.i36.not.i = icmp eq i64 %or8.i35.i, 0
  br i1 %cmp.i36.not.i, label %secp256k1_ecdsa_sig_verify.exit, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %and.i.i.i56 = and i64 %s.sroa.0.0.copyload, 4611686018427387903
  %or.i.i.i57 = tail call i64 @llvm.fshl.i64(i64 %s.sroa.5.0.copyload, i64 %s.sroa.0.0.copyload, i64 2) #19
  %and8.i.i.i = and i64 %or.i.i.i57, 4611686018427387903
  %or13.i.i.i = tail call i64 @llvm.fshl.i64(i64 %s.sroa.7.0.copyload, i64 %s.sroa.5.0.copyload, i64 4) #19
  %and14.i.i.i = and i64 %or13.i.i.i, 4611686018427387903
  %or19.i.i.i = tail call i64 @llvm.fshl.i64(i64 %s.sroa.9.0.copyload, i64 %s.sroa.7.0.copyload, i64 6) #19
  %and20.i.i.i = and i64 %or19.i.i.i, 4611686018427387903
  %shr23.i.i.i = lshr i64 %s.sroa.9.0.copyload, 56
  %13 = bitcast %struct.secp256k1_modinv64_signed62* %d.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %13, i8 0, i64 40, i1 false) #19
  %14 = bitcast %struct.secp256k1_modinv64_signed62* %e.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #19
  %15 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e.i.i.i, i64 0, i32 0, i64 1
  %16 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %16, i8 0, i64 32, i1 false) #19
  %17 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e.i.i.i, i64 0, i32 0, i64 0
  store i64 1, i64* %17, align 8
  %18 = bitcast %struct.secp256k1_modinv64_signed62* %f.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %18, i8* noundef nonnull align 8 dereferenceable(40) bitcast (%struct.secp256k1_modinv64_modinfo* @secp256k1_const_modinfo_scalar to i8*), i64 40, i1 false) #19, !tbaa.struct !18
  %19 = bitcast %struct.secp256k1_modinv64_signed62* %g.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #19
  %s.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 0
  store i64 %and.i.i.i56, i64* %s.sroa.0.0..sroa_idx.i.i, align 8, !tbaa.struct !18
  %s.sroa.6.0..sroa_idx15.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 1
  store i64 %and8.i.i.i, i64* %s.sroa.6.0..sroa_idx15.i.i, align 8, !tbaa.struct !46
  %s.sroa.8.0..sroa_idx19.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 2
  store i64 %and14.i.i.i, i64* %s.sroa.8.0..sroa_idx19.i.i, align 8, !tbaa.struct !47
  %s.sroa.10.0..sroa_idx23.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 3
  store i64 %and20.i.i.i, i64* %s.sroa.10.0..sroa_idx23.i.i, align 8, !tbaa.struct !48
  %s.sroa.12.0..sroa_idx27.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 4
  store i64 %shr23.i.i.i, i64* %s.sroa.12.0..sroa_idx27.i.i, align 8, !tbaa.struct !49
  %20 = bitcast %struct.secp256k1_modinv64_trans2x2* %t.i.i.i to i8*
  %arrayidx.i1.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %f.i.i.i, i64 0, i32 0, i64 0
  %u126.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t.i.i.i, i64 0, i32 0
  %v127.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t.i.i.i, i64 0, i32 1
  %q128.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t.i.i.i, i64 0, i32 2
  %r129.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t.i.i.i, i64 0, i32 3
  br label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %cleanup.i.i.i, %if.end.i
  %21 = phi i64 [ %and.i.i.i56, %if.end.i ], [ %.pre.i.i, %cleanup.i.i.i ]
  %22 = phi i64 [ 4598842128380346689, %if.end.i ], [ %.pre.i.i.i, %cleanup.i.i.i ]
  %eta.0.i.i.i = phi i64 [ -1, %if.end.i ], [ %sub.lcssa.i.i.i.i, %cleanup.i.i.i ]
  %len.0.i.i.i = phi i32 [ 5, %if.end.i ], [ %len.2.i.i.i, %cleanup.i.i.i ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #19
  %or213.i.i.i.i = or i64 %21, -4611686018427387904
  %23 = tail call i64 @llvm.cttz.i64(i64 %or213.i.i.i.i, i1 true) #19, !range !53
  %cast.i214.i.i.i.i = trunc i64 %23 to i32
  %shl3216.i.i.i.i = shl nuw i64 1, %23
  %sub217.i.i.i.i = sub nsw i64 %eta.0.i.i.i, %23
  %cmp219.i.i.i.i = icmp eq i32 %cast.i214.i.i.i.i, 62
  br i1 %cmp219.i.i.i.i, label %secp256k1_modinv64_divsteps_62_var.exit.i.i.i, label %do.body.preheader.i.i.i.i

do.body.preheader.i.i.i.i:                        ; preds = %while.cond.i.i.i
  %sub6218.i.i.i.i = sub nsw i32 62, %cast.i214.i.i.i.i
  %shr215.i.i.i.i = lshr i64 %21, %23
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %if.end110.i.i.i.i, %do.body.preheader.i.i.i.i
  %sub6227.i.i.i.i = phi i32 [ %sub6.i.i.i.i, %if.end110.i.i.i.i ], [ %sub6218.i.i.i.i, %do.body.preheader.i.i.i.i ]
  %sub226.i.i.i.i = phi i64 [ %sub.i.i.i.i, %if.end110.i.i.i.i ], [ %sub217.i.i.i.i, %do.body.preheader.i.i.i.i ]
  %shl5225.i.i.i.i = phi i64 [ %shl5.i.i.i.i, %if.end110.i.i.i.i ], [ 0, %do.body.preheader.i.i.i.i ]
  %shl3224.i.i.i.i = phi i64 [ %shl3.i.i.i.i, %if.end110.i.i.i.i ], [ %shl3216.i.i.i.i, %do.body.preheader.i.i.i.i ]
  %shr223.i.i.i.i = phi i64 [ %shr.i.i.i.i, %if.end110.i.i.i.i ], [ %shr215.i.i.i.i, %do.body.preheader.i.i.i.i ]
  %f.0222.i.i.i.i = phi i64 [ %f.1.i.i.i.i, %if.end110.i.i.i.i ], [ %22, %do.body.preheader.i.i.i.i ]
  %r.0221.i.i.i.i = phi i64 [ %add119.i.i.i.i, %if.end110.i.i.i.i ], [ 1, %do.body.preheader.i.i.i.i ]
  %q.0220.i.i.i.i = phi i64 [ %add116.i.i.i.i, %if.end110.i.i.i.i ], [ 0, %do.body.preheader.i.i.i.i ]
  %cmp43.i.i.i.i = icmp slt i64 %sub226.i.i.i.i, 0
  br i1 %cmp43.i.i.i.i, label %if.then45.i.i.i.i, label %if.else.i.i.i.i

if.then45.i.i.i.i:                                ; preds = %do.body.i.i.i.i
  %sub46.i.i.i.i = sub nsw i64 0, %sub226.i.i.i.i
  %sub47.i.i.i.i = sub i64 0, %f.0222.i.i.i.i
  %sub48.i.i.i.i = sub i64 0, %shl3224.i.i.i.i
  %sub49.i.i.i.i = sub i64 0, %shl5225.i.i.i.i
  %conv50.i.i.i.i = trunc i64 %sub46.i.i.i.i to i32
  %add51.i.i.i.i = add nsw i32 %conv50.i.i.i.i, 1
  %cmp52.i.i.i.i = icmp sgt i32 %add51.i.i.i.i, %sub6227.i.i.i.i
  %cond.i.i.i.i = select i1 %cmp52.i.i.i.i, i32 %sub6227.i.i.i.i, i32 %add51.i.i.i.i
  %sub66.i.i.i.i = sub nsw i32 64, %cond.i.i.i.i
  %sh_prom67.i.i.i.i = zext i32 %sub66.i.i.i.i to i64
  %shr68.i.i.i.i = lshr i64 -1, %sh_prom67.i.i.i.i
  %mul70.i.i.i.i = mul i64 %shr223.i.i.i.i, %sub47.i.i.i.i
  %mul71.i.i.i.i = mul i64 %shr223.i.i.i.i, %shr223.i.i.i.i
  %sub72.i.i.i.i = add i64 %mul71.i.i.i.i, -2
  %mul73.i.i.i.i = mul i64 %mul70.i.i.i.i, %sub72.i.i.i.i
  %and69.i.i.i.i = and i64 %mul73.i.i.i.i, 63
  %and74.i.i.i.i = and i64 %and69.i.i.i.i, %shr68.i.i.i.i
  br label %if.end110.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %conv76.i.i.i.i = trunc i64 %sub226.i.i.i.i to i32
  %add77.i.i.i.i = add nsw i32 %conv76.i.i.i.i, 1
  %cmp78.i.i.i.i = icmp sgt i32 %add77.i.i.i.i, %sub6227.i.i.i.i
  %cond85.i.i.i.i = select i1 %cmp78.i.i.i.i, i32 %sub6227.i.i.i.i, i32 %add77.i.i.i.i
  %sub96.i.i.i.i = sub nsw i32 64, %cond85.i.i.i.i
  %sh_prom97.i.i.i.i = zext i32 %sub96.i.i.i.i to i64
  %shr98.i.i.i.i = lshr i64 -1, %sh_prom97.i.i.i.i
  %add100.i.i.i.i = shl i64 %f.0222.i.i.i.i, 1
  %and101.i.i.i.i = add i64 %add100.i.i.i.i, 2
  %shl102.i.i.i.i = and i64 %and101.i.i.i.i, 8
  %add103.i.i.i.i = add i64 %f.0222.i.i.i.i, %shl102.i.i.i.i
  %sub105.i.i.i.i = sub i64 0, %add103.i.i.i.i
  %conv106.i.i.i.i = and i64 %sub105.i.i.i.i, 4294967295
  %mul107.i.i.i.i = mul i64 %conv106.i.i.i.i, %shr223.i.i.i.i
  %and99.i.i.i.i = and i64 %shr98.i.i.i.i, 15
  %and108.i.i.i.i = and i64 %and99.i.i.i.i, %mul107.i.i.i.i
  br label %if.end110.i.i.i.i

if.end110.i.i.i.i:                                ; preds = %if.else.i.i.i.i, %if.then45.i.i.i.i
  %v.1.i.i.i.i = phi i64 [ %r.0221.i.i.i.i, %if.then45.i.i.i.i ], [ %shl5225.i.i.i.i, %if.else.i.i.i.i ]
  %q.1.i.i.i.i = phi i64 [ %sub48.i.i.i.i, %if.then45.i.i.i.i ], [ %q.0220.i.i.i.i, %if.else.i.i.i.i ]
  %r.1.i.i.i.i = phi i64 [ %sub49.i.i.i.i, %if.then45.i.i.i.i ], [ %r.0221.i.i.i.i, %if.else.i.i.i.i ]
  %f.1.i.i.i.i = phi i64 [ %shr223.i.i.i.i, %if.then45.i.i.i.i ], [ %f.0222.i.i.i.i, %if.else.i.i.i.i ]
  %g.1.i.i.i.i = phi i64 [ %sub47.i.i.i.i, %if.then45.i.i.i.i ], [ %shr223.i.i.i.i, %if.else.i.i.i.i ]
  %w.0.in.i.i.i.i = phi i64 [ %and74.i.i.i.i, %if.then45.i.i.i.i ], [ %and108.i.i.i.i, %if.else.i.i.i.i ]
  %u.1.i.i.i.i = phi i64 [ %q.0220.i.i.i.i, %if.then45.i.i.i.i ], [ %shl3224.i.i.i.i, %if.else.i.i.i.i ]
  %eta.addr.1.i.i.i.i = phi i64 [ %sub46.i.i.i.i, %if.then45.i.i.i.i ], [ %sub226.i.i.i.i, %if.else.i.i.i.i ]
  %mul112.i.i.i.i = mul i64 %w.0.in.i.i.i.i, %f.1.i.i.i.i
  %add113.i.i.i.i = add i64 %mul112.i.i.i.i, %g.1.i.i.i.i
  %mul115.i.i.i.i = mul i64 %u.1.i.i.i.i, %w.0.in.i.i.i.i
  %add116.i.i.i.i = add i64 %mul115.i.i.i.i, %q.1.i.i.i.i
  %mul118.i.i.i.i = mul i64 %w.0.in.i.i.i.i, %v.1.i.i.i.i
  %add119.i.i.i.i = add i64 %mul118.i.i.i.i, %r.1.i.i.i.i
  %sh_prom.i.i.i.i = zext i32 %sub6227.i.i.i.i to i64
  %shl.i.i.i.i = shl nsw i64 -1, %sh_prom.i.i.i.i
  %or.i.i.i.i = or i64 %add113.i.i.i.i, %shl.i.i.i.i
  %24 = tail call i64 @llvm.cttz.i64(i64 %or.i.i.i.i, i1 true) #19, !range !53
  %cast.i.i.i.i.i = trunc i64 %24 to i32
  %shr.i.i.i.i = lshr i64 %add113.i.i.i.i, %24
  %shl3.i.i.i.i = shl i64 %u.1.i.i.i.i, %24
  %shl5.i.i.i.i = shl i64 %v.1.i.i.i.i, %24
  %sub.i.i.i.i = sub nsw i64 %eta.addr.1.i.i.i.i, %24
  %sub6.i.i.i.i = sub nsw i32 %sub6227.i.i.i.i, %cast.i.i.i.i.i
  %cmp.i.i.i.i = icmp eq i32 %sub6.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %secp256k1_modinv64_divsteps_62_var.exit.i.i.i, label %do.body.i.i.i.i

secp256k1_modinv64_divsteps_62_var.exit.i.i.i:    ; preds = %if.end110.i.i.i.i, %while.cond.i.i.i
  %q.0.lcssa.i.i.i.i = phi i64 [ 0, %while.cond.i.i.i ], [ %add116.i.i.i.i, %if.end110.i.i.i.i ]
  %r.0.lcssa.i.i.i.i = phi i64 [ 1, %while.cond.i.i.i ], [ %add119.i.i.i.i, %if.end110.i.i.i.i ]
  %shl3.lcssa.i.i.i.i = phi i64 [ %shl3216.i.i.i.i, %while.cond.i.i.i ], [ %shl3.i.i.i.i, %if.end110.i.i.i.i ]
  %shl5.lcssa.i.i.i.i = phi i64 [ 0, %while.cond.i.i.i ], [ %shl5.i.i.i.i, %if.end110.i.i.i.i ]
  %sub.lcssa.i.i.i.i = phi i64 [ %sub217.i.i.i.i, %while.cond.i.i.i ], [ %sub.i.i.i.i, %if.end110.i.i.i.i ]
  store i64 %shl3.lcssa.i.i.i.i, i64* %u126.i.i.i.i, align 8, !tbaa !54
  store i64 %shl5.lcssa.i.i.i.i, i64* %v127.i.i.i.i, align 8, !tbaa !56
  store i64 %q.0.lcssa.i.i.i.i, i64* %q128.i.i.i.i, align 8, !tbaa !57
  store i64 %r.0.lcssa.i.i.i.i, i64* %r129.i.i.i.i, align 8, !tbaa !58
  call fastcc void @secp256k1_modinv64_update_de_62(%struct.secp256k1_modinv64_signed62* noundef nonnull %d.i.i.i, %struct.secp256k1_modinv64_signed62* noundef nonnull %e.i.i.i, %struct.secp256k1_modinv64_trans2x2* noundef nonnull %t.i.i.i, %struct.secp256k1_modinv64_modinfo* noundef nonnull @secp256k1_const_modinfo_scalar) #19
  %conv.i.i.i.i.i = sext i64 %shl3.lcssa.i.i.i.i to i128
  %conv1.i.i.i.i.i = sext i64 %22 to i128
  %mul.i.i.i.i.i = mul nsw i128 %conv.i.i.i.i.i, %conv1.i.i.i.i.i
  %conv.i87.i.i.i.i = sext i64 %shl5.lcssa.i.i.i.i to i128
  %conv1.i88.i.i.i.i = sext i64 %21 to i128
  %mul.i89.i.i.i.i = mul nsw i128 %conv.i87.i.i.i.i, %conv1.i88.i.i.i.i
  %add.i.i.i.i.i = add nsw i128 %mul.i89.i.i.i.i, %mul.i.i.i.i.i
  %conv.i90.i.i.i.i = sext i64 %q.0.lcssa.i.i.i.i to i128
  %mul.i92.i.i.i.i = mul nsw i128 %conv.i90.i.i.i.i, %conv1.i.i.i.i.i
  %conv.i93.i.i.i.i = sext i64 %r.0.lcssa.i.i.i.i to i128
  %mul.i95.i.i.i.i = mul nsw i128 %conv.i93.i.i.i.i, %conv1.i88.i.i.i.i
  %add.i96.i.i.i.i = add nsw i128 %mul.i95.i.i.i.i, %mul.i92.i.i.i.i
  %cg.0138.i.i.i.i = ashr i128 %add.i96.i.i.i.i, 62
  %cf.0139.i.i.i.i = ashr i128 %add.i.i.i.i.i, 62
  %cmp20140.i.i.i.i = icmp sgt i32 %len.0.i.i.i, 1
  %extract.t.i.i.i.i = trunc i128 %cg.0138.i.i.i.i to i64
  %extract.t146.i.i.i.i = trunc i128 %cf.0139.i.i.i.i to i64
  br i1 %cmp20140.i.i.i.i, label %for.body.preheader.i.i.i.i, label %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i

for.body.preheader.i.i.i.i:                       ; preds = %secp256k1_modinv64_divsteps_62_var.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %len.0.i.i.i to i64
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.preheader.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ 1, %for.body.preheader.i.i.i.i ], [ %indvars.iv.next.i.i.i.i, %for.body.i.i.i.i ]
  %cf.0143.i.i.i.i = phi i128 [ %cf.0139.i.i.i.i, %for.body.preheader.i.i.i.i ], [ %cf.0.i.i.i.i, %for.body.i.i.i.i ]
  %cg.0142.i.i.i.i = phi i128 [ %cg.0138.i.i.i.i, %for.body.preheader.i.i.i.i ], [ %cg.0.i.i.i.i, %for.body.i.i.i.i ]
  %arrayidx23.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %f.i.i.i, i64 0, i32 0, i64 %indvars.iv.i.i.i.i
  %25 = load i64, i64* %arrayidx23.i.i.i.i, align 8, !tbaa !13
  %arrayidx26.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %indvars.iv.i.i.i.i
  %26 = load i64, i64* %arrayidx26.i.i.i.i, align 8, !tbaa !13
  %conv1.i101.i.i.i.i = sext i64 %25 to i128
  %mul.i102.i.i.i.i = mul nsw i128 %conv1.i101.i.i.i.i, %conv.i.i.i.i.i
  %add.i103.i.i.i.i = add nsw i128 %mul.i102.i.i.i.i, %cf.0143.i.i.i.i
  %conv1.i105.i.i.i.i = sext i64 %26 to i128
  %mul.i106.i.i.i.i = mul nsw i128 %conv1.i105.i.i.i.i, %conv.i87.i.i.i.i
  %add.i107.i.i.i.i = add nsw i128 %add.i103.i.i.i.i, %mul.i106.i.i.i.i
  %mul.i110.i.i.i.i = mul nsw i128 %conv1.i101.i.i.i.i, %conv.i90.i.i.i.i
  %add.i111.i.i.i.i = add nsw i128 %mul.i110.i.i.i.i, %cg.0142.i.i.i.i
  %mul.i114.i.i.i.i = mul nsw i128 %conv1.i105.i.i.i.i, %conv.i93.i.i.i.i
  %add.i115.i.i.i.i = add nsw i128 %add.i111.i.i.i.i, %mul.i114.i.i.i.i
  %conv.i116.i.i.i.i = trunc i128 %add.i107.i.i.i.i to i64
  %and28.i.i.i.i = and i64 %conv.i116.i.i.i.i, 4611686018427387903
  %27 = add nsw i64 %indvars.iv.i.i.i.i, -1
  %arrayidx31.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %f.i.i.i, i64 0, i32 0, i64 %27
  store i64 %and28.i.i.i.i, i64* %arrayidx31.i.i.i.i, align 8, !tbaa !13
  %conv.i118.i.i.i.i = trunc i128 %add.i115.i.i.i.i to i64
  %and33.i.i.i.i = and i64 %conv.i118.i.i.i.i, 4611686018427387903
  %arrayidx37.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %27
  store i64 %and33.i.i.i.i, i64* %arrayidx37.i.i.i.i, align 8, !tbaa !13
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %cg.0.i.i.i.i = ashr i128 %add.i115.i.i.i.i, 62
  %cf.0.i.i.i.i = ashr i128 %add.i107.i.i.i.i, 62
  %exitcond.not.i.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i.i, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i, label %secp256k1_modinv64_update_fg_62_var.exit.i.i.i, label %for.body.i.i.i.i, !llvm.loop !59

secp256k1_modinv64_update_fg_62_var.exit.i.i.i:   ; preds = %for.body.i.i.i.i
  %extract.t147.i.i.i.i = trunc i128 %cf.0.i.i.i.i to i64
  %extract.t145.i.i.i.i = trunc i128 %cg.0.i.i.i.i to i64
  %sub40.i.i.i.i = add nsw i32 %len.0.i.i.i, -1
  %idxprom41.i.i.i.i = sext i32 %sub40.i.i.i.i to i64
  %arrayidx42.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %f.i.i.i, i64 0, i32 0, i64 %idxprom41.i.i.i.i
  store i64 %extract.t147.i.i.i.i, i64* %arrayidx42.i.i.i.i, align 8, !tbaa !13
  %arrayidx47.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %idxprom41.i.i.i.i
  store i64 %extract.t145.i.i.i.i, i64* %arrayidx47.i.i.i.i, align 8, !tbaa !13
  %28 = load i64, i64* %s.sroa.0.0..sroa_idx.i.i, align 8, !tbaa !13
  %cmp.i.i.i = icmp eq i64 %28, 0
  br i1 %cmp.i.i.i, label %for.body.i.i.i.preheader, label %if.end10.i.i.i

for.body.i.i.i.preheader:                         ; preds = %secp256k1_modinv64_update_fg_62_var.exit.i.i.i
  %29 = add nsw i64 %wide.trip.count.i.i.i.i, -1
  %min.iters.check = icmp ult i64 %29, 4
  br i1 %min.iters.check, label %for.body.i.i.i.preheader102, label %vector.ph

vector.ph:                                        ; preds = %for.body.i.i.i.preheader
  %n.vec = and i64 %29, -4
  %ind.end = or i64 %n.vec, 1
  %30 = add nsw i64 %n.vec, -4
  %31 = lshr exact i64 %30, 2
  %32 = add nuw nsw i64 %31, 1
  %xtraiter = and i64 %32, 3
  %33 = icmp ult i64 %30, 12
  br i1 %33, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = and i64 %32, 9223372036854775804
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %vec.phi = phi <2 x i64> [ zeroinitializer, %vector.ph.new ], [ %56, %vector.body ]
  %vec.phi100 = phi <2 x i64> [ zeroinitializer, %vector.ph.new ], [ %57, %vector.body ]
  %niter = phi i64 [ 0, %vector.ph.new ], [ %niter.next.3, %vector.body ]
  %offset.idx = or i64 %index, 1
  %34 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %offset.idx
  %35 = bitcast i64* %34 to <2 x i64>*
  %wide.load = load <2 x i64>, <2 x i64>* %35, align 8, !tbaa !13
  %36 = getelementptr inbounds i64, i64* %34, i64 2
  %37 = bitcast i64* %36 to <2 x i64>*
  %wide.load101 = load <2 x i64>, <2 x i64>* %37, align 8, !tbaa !13
  %38 = or <2 x i64> %wide.load, %vec.phi
  %39 = or <2 x i64> %wide.load101, %vec.phi100
  %offset.idx.1 = or i64 %index, 5
  %40 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %offset.idx.1
  %41 = bitcast i64* %40 to <2 x i64>*
  %wide.load.1 = load <2 x i64>, <2 x i64>* %41, align 8, !tbaa !13
  %42 = getelementptr inbounds i64, i64* %40, i64 2
  %43 = bitcast i64* %42 to <2 x i64>*
  %wide.load101.1 = load <2 x i64>, <2 x i64>* %43, align 8, !tbaa !13
  %44 = or <2 x i64> %wide.load.1, %38
  %45 = or <2 x i64> %wide.load101.1, %39
  %offset.idx.2 = or i64 %index, 9
  %46 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %offset.idx.2
  %47 = bitcast i64* %46 to <2 x i64>*
  %wide.load.2 = load <2 x i64>, <2 x i64>* %47, align 8, !tbaa !13
  %48 = getelementptr inbounds i64, i64* %46, i64 2
  %49 = bitcast i64* %48 to <2 x i64>*
  %wide.load101.2 = load <2 x i64>, <2 x i64>* %49, align 8, !tbaa !13
  %50 = or <2 x i64> %wide.load.2, %44
  %51 = or <2 x i64> %wide.load101.2, %45
  %offset.idx.3 = or i64 %index, 13
  %52 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %offset.idx.3
  %53 = bitcast i64* %52 to <2 x i64>*
  %wide.load.3 = load <2 x i64>, <2 x i64>* %53, align 8, !tbaa !13
  %54 = getelementptr inbounds i64, i64* %52, i64 2
  %55 = bitcast i64* %54 to <2 x i64>*
  %wide.load101.3 = load <2 x i64>, <2 x i64>* %55, align 8, !tbaa !13
  %56 = or <2 x i64> %wide.load.3, %50
  %57 = or <2 x i64> %wide.load101.3, %51
  %index.next.3 = add nuw i64 %index, 16
  %niter.next.3 = add nuw i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !60

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %.lcssa103.ph = phi <2 x i64> [ undef, %vector.ph ], [ %56, %vector.body ]
  %.lcssa.ph = phi <2 x i64> [ undef, %vector.ph ], [ %57, %vector.body ]
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %vec.phi.unr = phi <2 x i64> [ zeroinitializer, %vector.ph ], [ %56, %vector.body ]
  %vec.phi100.unr = phi <2 x i64> [ zeroinitializer, %vector.ph ], [ %57, %vector.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %index.epil = phi i64 [ %index.next.epil, %vector.body.epil ], [ %index.unr, %middle.block.unr-lcssa ]
  %vec.phi.epil = phi <2 x i64> [ %62, %vector.body.epil ], [ %vec.phi.unr, %middle.block.unr-lcssa ]
  %vec.phi100.epil = phi <2 x i64> [ %63, %vector.body.epil ], [ %vec.phi100.unr, %middle.block.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %vector.body.epil ], [ 0, %middle.block.unr-lcssa ]
  %offset.idx.epil = or i64 %index.epil, 1
  %58 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %offset.idx.epil
  %59 = bitcast i64* %58 to <2 x i64>*
  %wide.load.epil = load <2 x i64>, <2 x i64>* %59, align 8, !tbaa !13
  %60 = getelementptr inbounds i64, i64* %58, i64 2
  %61 = bitcast i64* %60 to <2 x i64>*
  %wide.load101.epil = load <2 x i64>, <2 x i64>* %61, align 8, !tbaa !13
  %62 = or <2 x i64> %wide.load.epil, %vec.phi.epil
  %63 = or <2 x i64> %wide.load101.epil, %vec.phi100.epil
  %index.next.epil = add nuw i64 %index.epil, 4
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %middle.block, label %vector.body.epil, !llvm.loop !62

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %.lcssa103 = phi <2 x i64> [ %.lcssa103.ph, %middle.block.unr-lcssa ], [ %62, %vector.body.epil ]
  %.lcssa = phi <2 x i64> [ %.lcssa.ph, %middle.block.unr-lcssa ], [ %63, %vector.body.epil ]
  %bin.rdx = or <2 x i64> %.lcssa, %.lcssa103
  %64 = call i64 @llvm.vector.reduce.or.v2i64(<2 x i64> %bin.rdx)
  %cmp.n = icmp eq i64 %29, %n.vec
  br i1 %cmp.n, label %for.end.i.i.i, label %for.body.i.i.i.preheader102

for.body.i.i.i.preheader102:                      ; preds = %for.body.i.i.i.preheader, %middle.block
  %indvars.iv.i.i.i.ph = phi i64 [ 1, %for.body.i.i.i.preheader ], [ %ind.end, %middle.block ]
  %cond.012.i.i.i.ph = phi i64 [ 0, %for.body.i.i.i.preheader ], [ %64, %middle.block ]
  br label %for.body.i.i.i

secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i: ; preds = %secp256k1_modinv64_divsteps_62_var.exit.i.i.i
  %sub40.i16.i.i.i = add nsw i32 %len.0.i.i.i, -1
  %idxprom41.i17.i.i.i = sext i32 %sub40.i16.i.i.i to i64
  %arrayidx42.i18.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %f.i.i.i, i64 0, i32 0, i64 %idxprom41.i17.i.i.i
  store i64 %extract.t146.i.i.i.i, i64* %arrayidx42.i18.i.i.i, align 8, !tbaa !13
  %arrayidx47.i19.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %idxprom41.i17.i.i.i
  store i64 %extract.t.i.i.i.i, i64* %arrayidx47.i19.i.i.i, align 8, !tbaa !13
  %65 = load i64, i64* %s.sroa.0.0..sroa_idx.i.i, align 8, !tbaa !13
  %cmp20.i.i.i = icmp eq i64 %65, 0
  br i1 %cmp20.i.i.i, label %secp256k1_scalar_inverse_var.exit.i.split.loop.exit112, label %if.end10.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.preheader102, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i, %for.body.i.i.i ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader102 ]
  %cond.012.i.i.i = phi i64 [ %or.i4.i.i, %for.body.i.i.i ], [ %cond.012.i.i.i.ph, %for.body.i.i.i.preheader102 ]
  %arrayidx7.i3.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %indvars.iv.i.i.i
  %66 = load i64, i64* %arrayidx7.i3.i.i, align 8, !tbaa !13
  %or.i4.i.i = or i64 %66, %cond.012.i.i.i
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i, label %for.end.i.i.i, label %for.body.i.i.i, !llvm.loop !63

for.end.i.i.i:                                    ; preds = %for.body.i.i.i, %middle.block
  %or.i4.i.i.lcssa = phi i64 [ %64, %middle.block ], [ %or.i4.i.i, %for.body.i.i.i ]
  %cmp8.i.i.i = icmp eq i64 %or.i4.i.i.lcssa, 0
  br i1 %cmp8.i.i.i, label %secp256k1_scalar_inverse_var.exit.i.split.loop.exit, label %if.end10.i.i.i

if.end10.i.i.i:                                   ; preds = %for.end.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.i.i.i
  %.pre34.i.i = phi i64 [ %65, %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i ], [ 0, %for.end.i.i.i ], [ %28, %secp256k1_modinv64_update_fg_62_var.exit.i.i.i ]
  %sub40.i23.i.i.i = phi i32 [ %sub40.i16.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i ], [ %sub40.i.i.i.i, %for.end.i.i.i ], [ %sub40.i.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.i.i.i ]
  %67 = phi i64 [ %extract.t146.i.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i ], [ %extract.t147.i.i.i.i, %for.end.i.i.i ], [ %extract.t147.i.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.i.i.i ]
  %cg.0.lcssa.off0.i21.i.i.i = phi i64 [ %extract.t.i.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i ], [ %extract.t145.i.i.i.i, %for.end.i.i.i ], [ %extract.t145.i.i.i.i, %secp256k1_modinv64_update_fg_62_var.exit.i.i.i ]
  %conv.i.i.i = sext i32 %len.0.i.i.i to i64
  %sub18.i.i.i = add nsw i64 %conv.i.i.i, -2
  %shr.i.i.i58 = ashr i64 %sub18.i.i.i, 63
  %shr19.i.i.i = ashr i64 %67, 63
  %xor.i.i.i = xor i64 %shr19.i.i.i, %67
  %shr21.i.i.i = ashr i64 %cg.0.lcssa.off0.i21.i.i.i, 63
  %xor22.i.i.i = xor i64 %shr21.i.i.i, %cg.0.lcssa.off0.i21.i.i.i
  %or20.i.i.i = or i64 %xor.i.i.i, %shr.i.i.i58
  %or23.i.i.i = or i64 %or20.i.i.i, %xor22.i.i.i
  %cmp24.i.i.i = icmp eq i64 %or23.i.i.i, 0
  br i1 %cmp24.i.i.i, label %if.then26.i.i.i, label %cleanup.i.i.i

if.then26.i.i.i:                                  ; preds = %if.end10.i.i.i
  %shl.i.i.i59 = shl i64 %67, 62
  %sub28.i.i.i = add nsw i32 %len.0.i.i.i, -2
  %idxprom29.i.i.i = sext i32 %sub28.i.i.i to i64
  %arrayidx30.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %f.i.i.i, i64 0, i32 0, i64 %idxprom29.i.i.i
  %68 = load i64, i64* %arrayidx30.i.i.i, align 8, !tbaa !13
  %or31.i.i.i = or i64 %68, %shl.i.i.i59
  store i64 %or31.i.i.i, i64* %arrayidx30.i.i.i, align 8, !tbaa !13
  %shl32.i.i.i = shl i64 %cg.0.lcssa.off0.i21.i.i.i, 62
  %arrayidx36.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %g.i.i.i, i64 0, i32 0, i64 %idxprom29.i.i.i
  %69 = load i64, i64* %arrayidx36.i.i.i, align 8, !tbaa !13
  %or37.i.i.i = or i64 %69, %shl32.i.i.i
  store i64 %or37.i.i.i, i64* %arrayidx36.i.i.i, align 8, !tbaa !13
  %.pre.pre.i.i = load i64, i64* %s.sroa.0.0..sroa_idx.i.i, align 8, !tbaa !13
  br label %cleanup.i.i.i

cleanup.i.i.i:                                    ; preds = %if.then26.i.i.i, %if.end10.i.i.i
  %.pre.i.i = phi i64 [ %.pre.pre.i.i, %if.then26.i.i.i ], [ %.pre34.i.i, %if.end10.i.i.i ]
  %len.2.i.i.i = phi i32 [ %sub40.i23.i.i.i, %if.then26.i.i.i ], [ %len.0.i.i.i, %if.end10.i.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #19
  %.pre.i.i.i = load i64, i64* %arrayidx.i1.i.i, align 8, !tbaa !13
  br label %while.cond.i.i.i

secp256k1_scalar_inverse_var.exit.i.split.loop.exit: ; preds = %for.end.i.i.i
  %extract.t99.le = trunc i128 %cf.0.i.i.i.i to i64
  br label %secp256k1_scalar_inverse_var.exit.i

secp256k1_scalar_inverse_var.exit.i.split.loop.exit112: ; preds = %secp256k1_modinv64_update_fg_62_var.exit.thread.i.i.i
  %extract.t.le = trunc i128 %cf.0139.i.i.i.i to i64
  br label %secp256k1_scalar_inverse_var.exit.i

secp256k1_scalar_inverse_var.exit.i:              ; preds = %secp256k1_scalar_inverse_var.exit.i.split.loop.exit112, %secp256k1_scalar_inverse_var.exit.i.split.loop.exit
  %cf.0.i.i.i.i.lcssa.lcssa.sink.off0 = phi i64 [ %extract.t99.le, %secp256k1_scalar_inverse_var.exit.i.split.loop.exit ], [ %extract.t.le, %secp256k1_scalar_inverse_var.exit.i.split.loop.exit112 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #19
  %arrayidx.i1.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d.i.i.i, i64 0, i32 0, i64 0
  %70 = load i64, i64* %arrayidx.i1.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d.i.i.i, i64 0, i32 0, i64 1
  %71 = load i64, i64* %arrayidx2.i.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d.i.i.i, i64 0, i32 0, i64 2
  %72 = load i64, i64* %arrayidx4.i.i.i.i, align 8, !tbaa !13
  %arrayidx6.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d.i.i.i, i64 0, i32 0, i64 3
  %73 = load i64, i64* %arrayidx6.i.i.i.i, align 8, !tbaa !13
  %arrayidx8.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d.i.i.i, i64 0, i32 0, i64 4
  %74 = load i64, i64* %arrayidx8.i.i.i.i, align 8, !tbaa !13
  %shr.i2.i.i.i = ashr i64 %74, 63
  %and.i.i.i.i = and i64 %shr.i2.i.i.i, 4598842128380346689
  %add.i.i.i.i = add nsw i64 %and.i.i.i.i, %70
  %and14.i.i.i.i = and i64 %shr.i2.i.i.i, 3079181878673178862
  %add15.i.i.i.i = add nsw i64 %and14.i.i.i.i, %71
  %and19.i.i.i.i = and i64 %shr.i2.i.i.i, -21
  %add20.i.i.i.i = add nsw i64 %and19.i.i.i.i, %72
  %and29.i.i.i.i = and i64 %shr.i2.i.i.i, 256
  %add30.i.i.i.i = add nsw i64 %and29.i.i.i.i, %74
  %shr31.i.i.i.i = ashr i64 %cf.0.i.i.i.i.lcssa.lcssa.sink.off0, 63
  %xor.i.i.i.i = xor i64 %add.i.i.i.i, %shr31.i.i.i.i
  %sub.i3.i.i.i = sub nsw i64 %xor.i.i.i.i, %shr31.i.i.i.i
  %xor32.i.i.i.i = xor i64 %add15.i.i.i.i, %shr31.i.i.i.i
  %sub33.i.i.i.i = sub nsw i64 %xor32.i.i.i.i, %shr31.i.i.i.i
  %xor34.i.i.i.i = xor i64 %add20.i.i.i.i, %shr31.i.i.i.i
  %sub35.i.i.i.i = sub nsw i64 %xor34.i.i.i.i, %shr31.i.i.i.i
  %xor36.i.i.i.i = xor i64 %73, %shr31.i.i.i.i
  %sub37.i.i.i.i = sub nsw i64 %xor36.i.i.i.i, %shr31.i.i.i.i
  %xor38.i.i.i.i = xor i64 %add30.i.i.i.i, %shr31.i.i.i.i
  %sub39.i.i.i.i = sub nsw i64 %xor38.i.i.i.i, %shr31.i.i.i.i
  %shr40.i.i.i.i = ashr i64 %sub.i3.i.i.i, 62
  %add41.i.i.i.i = add nsw i64 %shr40.i.i.i.i, %sub33.i.i.i.i
  %and42.i.i.i.i = and i64 %sub.i3.i.i.i, 4611686018427387903
  %shr43.i.i.i.i = ashr i64 %add41.i.i.i.i, 62
  %add44.i.i.i.i = add nsw i64 %shr43.i.i.i.i, %sub35.i.i.i.i
  %and45.i.i.i.i = and i64 %add41.i.i.i.i, 4611686018427387903
  %shr46.i.i.i.i = ashr i64 %add44.i.i.i.i, 62
  %add47.i.i.i.i = add nsw i64 %shr46.i.i.i.i, %sub37.i.i.i.i
  %and48.i.i.i.i = and i64 %add44.i.i.i.i, 4611686018427387903
  %shr49.i.i.i.i = ashr i64 %add47.i.i.i.i, 62
  %add50.i.i.i.i = add nsw i64 %shr49.i.i.i.i, %sub39.i.i.i.i
  %and51.i.i.i.i = and i64 %add47.i.i.i.i, 4611686018427387903
  %shr52.i.i.i.i = ashr i64 %add50.i.i.i.i, 63
  %and56.i.i.i.i = and i64 %shr52.i.i.i.i, 4598842128380346689
  %add57.i.i.i.i = add nuw nsw i64 %and56.i.i.i.i, %and42.i.i.i.i
  %and61.i.i.i.i = and i64 %shr52.i.i.i.i, 3079181878673178862
  %add62.i.i.i.i = add nuw nsw i64 %and61.i.i.i.i, %and45.i.i.i.i
  %and66.i.i.i.i = and i64 %shr52.i.i.i.i, -21
  %add67.i.i.i.i = add nsw i64 %and66.i.i.i.i, %and48.i.i.i.i
  %shr78.i9.i.i.i = lshr i64 %add57.i.i.i.i, 62
  %add79.i.i.i.i = add nuw nsw i64 %add62.i.i.i.i, %shr78.i9.i.i.i
  %and80.i.i.i.i = and i64 %add57.i.i.i.i, 4611686018427387903
  %shr81.i10.i.i.i = lshr i64 %add79.i.i.i.i, 62
  %add82.i.i.i.i = add nsw i64 %add67.i.i.i.i, %shr81.i10.i.i.i
  %shr84.i.i.i.i = ashr i64 %add82.i.i.i.i, 62
  %add85.i.i.i.i = add nsw i64 %shr84.i.i.i.i, %and51.i.i.i.i
  %shr87.i.i.i.i = ashr i64 %add85.i.i.i.i, 62
  %add88.i.i.i.i = add i64 %shr87.i.i.i.i, %add50.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #19
  %shl.i9.i.i = shl i64 %add79.i.i.i.i, 62
  %or.i10.i.i = or i64 %shl.i9.i.i, %and80.i.i.i.i
  %arrayidx33.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sn.i, i64 0, i32 0, i64 0
  store i64 %or.i10.i.i, i64* %arrayidx33.i.i.i, align 8, !tbaa !13
  %and83.i.i.i.i = lshr i64 %add79.i.i.i.i, 2
  %shr34.i.i.i = and i64 %and83.i.i.i.i, 1152921504606846975
  %shl35.i.i.i = shl i64 %add82.i.i.i.i, 60
  %or36.i.i.i = or i64 %shl35.i.i.i, %shr34.i.i.i
  %arrayidx38.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sn.i, i64 0, i32 0, i64 1
  store i64 %or36.i.i.i, i64* %arrayidx38.i.i.i, align 8, !tbaa !13
  %and86.i.i.i.i = lshr i64 %add82.i.i.i.i, 4
  %shr39.i.i.i = and i64 %and86.i.i.i.i, 288230376151711743
  %shl40.i.i.i = shl i64 %add85.i.i.i.i, 58
  %or41.i.i.i = or i64 %shl40.i.i.i, %shr39.i.i.i
  %arrayidx43.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sn.i, i64 0, i32 0, i64 2
  store i64 %or41.i.i.i, i64* %arrayidx43.i.i.i, align 8, !tbaa !13
  %and89.i.i.i.i = lshr i64 %add85.i.i.i.i, 6
  %shr44.i.i.i = and i64 %and89.i.i.i.i, 72057594037927935
  %shl45.i.i.i = shl i64 %add88.i.i.i.i, 56
  %or46.i.i.i = or i64 %shl45.i.i.i, %shr44.i.i.i
  %arrayidx48.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sn.i, i64 0, i32 0, i64 3
  store i64 %or46.i.i.i, i64* %arrayidx48.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %u1.i, %struct.secp256k1_scalar* noundef nonnull %sn.i, %struct.secp256k1_scalar* noundef nonnull %m) #19
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %u2.i, %struct.secp256k1_scalar* noundef nonnull %sn.i, %struct.secp256k1_scalar* noundef nonnull %r) #19
  %infinity1.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 3
  store i32 0, i32* %infinity1.i.i, align 8, !tbaa !65
  %q.sroa.0.0..sroa_idx = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 0, i32 0, i64 0
  store i64 %and.i.i.i, i64* %q.sroa.0.0..sroa_idx, align 8, !tbaa.struct !18
  %q.sroa.4.0..sroa_idx73 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 0, i32 0, i64 1
  store i64 %or.i.i.i, i64* %q.sroa.4.0..sroa_idx73, align 8, !tbaa.struct !46
  %q.sroa.5.0..sroa_idx75 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 0, i32 0, i64 2
  store i64 %or17.i.i.i, i64* %q.sroa.5.0..sroa_idx75, align 8, !tbaa.struct !47
  %q.sroa.6.0..sroa_idx77 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 0, i32 0, i64 3
  store i64 %or27.i.i.i, i64* %q.sroa.6.0..sroa_idx77, align 8, !tbaa.struct !48
  %q.sroa.7.0..sroa_idx79 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 0, i32 0, i64 4
  store i64 %shr32.i.i.i, i64* %q.sroa.7.0..sroa_idx79, align 8, !tbaa.struct !49
  %q.sroa.8.40..sroa_idx = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 1, i32 0, i64 0
  store i64 %and.i7.i.i, i64* %q.sroa.8.40..sroa_idx, align 8, !tbaa.struct !18
  %q.sroa.10.40..sroa_idx82 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 1, i32 0, i64 1
  store i64 %or.i13.i.i, i64* %q.sroa.10.40..sroa_idx82, align 8, !tbaa.struct !46
  %q.sroa.11.40..sroa_idx84 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 1, i32 0, i64 2
  store i64 %or17.i19.i.i, i64* %q.sroa.11.40..sroa_idx84, align 8, !tbaa.struct !47
  %q.sroa.12.40..sroa_idx86 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 1, i32 0, i64 3
  store i64 %or27.i25.i.i, i64* %q.sroa.12.40..sroa_idx86, align 8, !tbaa.struct !48
  %q.sroa.13.40..sroa_idx88 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 1, i32 0, i64 4
  store i64 %shr32.i27.i.i, i64* %q.sroa.13.40..sroa_idx88, align 8, !tbaa.struct !49
  %arrayidx.i.i38.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 2, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i38.i, align 8, !tbaa !13
  %arrayidx9.i.i.i61 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pubkeyj.i, i64 0, i32 2, i32 0, i64 1
  %75 = bitcast i64* %arrayidx9.i.i.i61 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %75, i8 0, i64 32, i1 false) #19
  call fastcc void @secp256k1_ecmult(%struct.secp256k1_gej* noundef nonnull %pr.i, %struct.secp256k1_gej* noundef nonnull %pubkeyj.i, %struct.secp256k1_scalar* noundef nonnull %u2.i, %struct.secp256k1_scalar* noundef nonnull %u1.i) #19
  %pr.idx.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pr.i, i64 0, i32 3
  %pr.idx.val.i = load i32, i32* %pr.idx.i, align 8, !tbaa !65
  %tobool4.not.i = icmp eq i32 %pr.idx.val.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %secp256k1_ecdsa_sig_verify.exit

if.end6.i:                                        ; preds = %secp256k1_scalar_inverse_var.exit.i
  %shr24.i.i = lshr i64 %12, 16
  %shr87.i.i = lshr i64 %10, 40
  %or23.i.i = and i64 %9, 4503599627370495
  %arrayidx24.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %xr.i, i64 0, i32 0, i64 0
  store i64 %or23.i.i, i64* %arrayidx24.i.i, align 8, !tbaa !13
  %sum.shift.i = lshr i64 %9, 52
  %conv34.i47.i = shl i64 %10, 12
  %or44.i.i = and i64 %conv34.i47.i, 4503599627366400
  %or52.i.i = or i64 %sum.shift.i, %or44.i.i
  %arrayidx54.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %xr.i, i64 0, i32 0, i64 1
  store i64 %or52.i.i, i64* %arrayidx54.i.i, align 8, !tbaa !13
  %conv66.i.i = shl i64 %11, 24
  %or68.i.i = and i64 %conv66.i.i, 4503599610593280
  %or82.i.i = or i64 %shr87.i.i, %or68.i.i
  %arrayidx84.i52.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %xr.i, i64 0, i32 0, i64 2
  store i64 %or82.i.i, i64* %arrayidx84.i52.i, align 8, !tbaa !13
  %76 = lshr i64 %11, 28
  %conv107.i.i = shl i64 %12, 36
  %or93.i.i = and i64 %conv107.i.i, 4503530907893760
  %or113.i.i = or i64 %76, %or93.i.i
  %arrayidx115.i55.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %xr.i, i64 0, i32 0, i64 3
  store i64 %or113.i.i, i64* %arrayidx115.i55.i, align 8, !tbaa !13
  %arrayidx139.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %xr.i, i64 0, i32 0, i64 4
  store i64 %shr24.i.i, i64* %arrayidx139.i.i, align 8, !tbaa !13
  %call9.i = call fastcc i32 @secp256k1_gej_eq_x_var(%struct.secp256k1_fe* noundef nonnull %xr.i, %struct.secp256k1_gej* noundef nonnull %pr.i) #19
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %if.end12.i, label %secp256k1_ecdsa_sig_verify.exit

if.end12.i:                                       ; preds = %if.end6.i
  %cmp4.not.i.i = icmp ugt i64 %12, 65535
  %cmp4.1.not.i.i = icmp ne i64 %or113.i.i, 0
  %or.cond.i = select i1 %cmp4.not.i.i, i1 true, i1 %cmp4.1.not.i.i
  %cmp4.2.i.i = icmp ugt i64 %or82.i.i, 21319971
  %or.cond74.i = select i1 %or.cond.i, i1 true, i1 %cmp4.2.i.i
  br i1 %or.cond74.i, label %secp256k1_ecdsa_sig_verify.exit, label %if.end.2.i.i

if.end.2.i.i:                                     ; preds = %if.end12.i
  %cmp11.2.not.i.i = icmp eq i64 %or82.i.i, 21319971
  br i1 %cmp11.2.not.i.i, label %for.cond.2.i.i, label %if.end15.i

for.cond.2.i.i:                                   ; preds = %if.end.2.i.i
  %cmp4.3.i.i = icmp ugt i64 %or52.i.i, 445351433356290
  br i1 %cmp4.3.i.i, label %secp256k1_ecdsa_sig_verify.exit, label %if.end.3.i.i

if.end.3.i.i:                                     ; preds = %for.cond.2.i.i
  %cmp11.3.not.i.i = icmp eq i64 %or52.i.i, 445351433356290
  %77 = icmp ugt i64 %or23.i.i, 3836686497331949
  %or.cond81.i = select i1 %cmp11.3.not.i.i, i1 %77, i1 false
  br i1 %or.cond81.i, label %secp256k1_ecdsa_sig_verify.exit, label %if.end15.i

if.end15.i:                                       ; preds = %if.end.3.i.i, %if.end.2.i.i
  %add.i.i = add nuw nsw i64 %or23.i.i, 666908835070273
  store i64 %add.i.i, i64* %arrayidx24.i.i, align 8, !tbaa !13
  %add7.i.i = add nuw nsw i64 %or52.i.i, 4058248194014205
  store i64 %add7.i.i, i64* %arrayidx54.i.i, align 8, !tbaa !13
  %add12.i.i = add nuw nsw i64 %or82.i.i, 4503599606050524
  store i64 %add12.i.i, i64* %arrayidx84.i52.i, align 8, !tbaa !13
  %78 = bitcast i64* %arrayidx115.i55.i to <2 x i64>*
  store <2 x i64> <i64 4503599627370495, i64 281474976710655>, <2 x i64>* %78, align 8, !tbaa !13
  %call16.i = call fastcc i32 @secp256k1_gej_eq_x_var(%struct.secp256k1_fe* noundef nonnull %xr.i, %struct.secp256k1_gej* noundef nonnull %pr.i) #19
  %tobool17.not.i = icmp ne i32 %call16.i, 0
  %phi.cast93 = zext i1 %tobool17.not.i to i32
  br label %secp256k1_ecdsa_sig_verify.exit

secp256k1_ecdsa_sig_verify.exit:                  ; preds = %land.rhs, %lor.lhs.false.i, %secp256k1_scalar_inverse_var.exit.i, %if.end6.i, %if.end12.i, %for.cond.2.i.i, %if.end.3.i.i, %if.end15.i
  %retval.0.i62 = phi i32 [ 0, %lor.lhs.false.i ], [ 0, %land.rhs ], [ 0, %secp256k1_scalar_inverse_var.exit.i ], [ 1, %if.end6.i ], [ %phi.cast93, %if.end15.i ], [ 0, %if.end12.i ], [ 0, %for.cond.2.i.i ], [ 0, %if.end.3.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #19
  br label %cleanup

cleanup:                                          ; preds = %secp256k1_pubkey_load.exit.thread, %do.end32, %secp256k1_ecdsa_sig_verify.exit, %if.then28, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 0, %if.then28 ], [ 0, %do.end32 ], [ %retval.0.i62, %secp256k1_ecdsa_sig_verify.exit ], [ 0, %secp256k1_pubkey_load.exit.thread ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nofree nosync nounwind uwtable
define internal i32 @nonce_function_rfc6979(i8* nocapture noundef writeonly %nonce32, i8* noundef %msg32, i8* nocapture noundef readonly %key32, i8* noundef readonly %algo16, i8* noundef readonly %data, i32 noundef %counter) #9 {
entry:
  %keydata = alloca [112 x i8], align 16
  %rng = alloca %struct.secp256k1_rfc6979_hmac_sha256, align 4
  %msg = alloca %struct.secp256k1_scalar, align 8
  %0 = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %0) #19
  %1 = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %1) #19
  %2 = bitcast %struct.secp256k1_scalar* %msg to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %msg, i8* noundef %msg32, i32* noundef null)
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx.i, align 8, !tbaa !13
  %shr.i = lshr i64 %3, 56
  %conv.i = trunc i64 %shr.i to i8
  %shr4.i = lshr i64 %3, 48
  %conv5.i = trunc i64 %shr4.i to i8
  %shr9.i = lshr i64 %3, 40
  %conv10.i = trunc i64 %shr9.i to i8
  %shr14.i = lshr i64 %3, 32
  %conv15.i = trunc i64 %shr14.i to i8
  %shr19.i = lshr i64 %3, 24
  %conv20.i = trunc i64 %shr19.i to i8
  %shr24.i = lshr i64 %3, 16
  %conv25.i = trunc i64 %shr24.i to i8
  %shr29.i = lshr i64 %3, 8
  %conv30.i = trunc i64 %shr29.i to i8
  %conv34.i = trunc i64 %3 to i8
  %arrayidx37.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg, i64 0, i32 0, i64 2
  %4 = load i64, i64* %arrayidx37.i, align 8, !tbaa !13
  %shr38.i = lshr i64 %4, 56
  %conv39.i = trunc i64 %shr38.i to i8
  %shr43.i = lshr i64 %4, 48
  %conv44.i = trunc i64 %shr43.i to i8
  %shr48.i = lshr i64 %4, 40
  %conv49.i = trunc i64 %shr48.i to i8
  %shr53.i = lshr i64 %4, 32
  %conv54.i = trunc i64 %shr53.i to i8
  %shr58.i = lshr i64 %4, 24
  %conv59.i = trunc i64 %shr58.i to i8
  %shr63.i = lshr i64 %4, 16
  %conv64.i = trunc i64 %shr63.i to i8
  %shr68.i = lshr i64 %4, 8
  %conv69.i = trunc i64 %shr68.i to i8
  %conv73.i = trunc i64 %4 to i8
  %arrayidx76.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg, i64 0, i32 0, i64 1
  %5 = load i64, i64* %arrayidx76.i, align 8, !tbaa !13
  %shr77.i = lshr i64 %5, 56
  %conv78.i = trunc i64 %shr77.i to i8
  %shr82.i = lshr i64 %5, 48
  %conv83.i = trunc i64 %shr82.i to i8
  %shr87.i = lshr i64 %5, 40
  %conv88.i = trunc i64 %shr87.i to i8
  %shr92.i = lshr i64 %5, 32
  %conv93.i = trunc i64 %shr92.i to i8
  %shr97.i = lshr i64 %5, 24
  %conv98.i = trunc i64 %shr97.i to i8
  %shr102.i = lshr i64 %5, 16
  %conv103.i = trunc i64 %shr102.i to i8
  %shr107.i = lshr i64 %5, 8
  %conv108.i = trunc i64 %shr107.i to i8
  %conv112.i = trunc i64 %5 to i8
  %arrayidx115.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg, i64 0, i32 0, i64 0
  %6 = load i64, i64* %arrayidx115.i, align 8, !tbaa !13
  %shr116.i = lshr i64 %6, 56
  %conv117.i = trunc i64 %shr116.i to i8
  %shr121.i = lshr i64 %6, 48
  %conv122.i = trunc i64 %shr121.i to i8
  %shr126.i = lshr i64 %6, 40
  %conv127.i = trunc i64 %shr126.i to i8
  %shr131.i = lshr i64 %6, 32
  %conv132.i = trunc i64 %shr131.i to i8
  %shr136.i = lshr i64 %6, 24
  %conv137.i = trunc i64 %shr136.i to i8
  %shr141.i = lshr i64 %6, 16
  %conv142.i = trunc i64 %shr141.i to i8
  %shr146.i = lshr i64 %6, 8
  %conv147.i = trunc i64 %shr146.i to i8
  %conv151.i = trunc i64 %6 to i8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %0, i8* noundef nonnull align 1 dereferenceable(32) %key32, i64 32, i1 false) #19
  %add.ptr.i18 = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 32
  store i8 %conv.i, i8* %add.ptr.i18, align 16
  %msgmod32.sroa.4.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 33
  store i8 %conv5.i, i8* %msgmod32.sroa.4.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.5.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 34
  store i8 %conv10.i, i8* %msgmod32.sroa.5.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.6.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 35
  store i8 %conv15.i, i8* %msgmod32.sroa.6.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.7.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 36
  store i8 %conv20.i, i8* %msgmod32.sroa.7.0.add.ptr.i18.sroa_raw_idx, align 4
  %msgmod32.sroa.8.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 37
  store i8 %conv25.i, i8* %msgmod32.sroa.8.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.9.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 38
  store i8 %conv30.i, i8* %msgmod32.sroa.9.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.10.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 39
  store i8 %conv34.i, i8* %msgmod32.sroa.10.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.11.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 40
  store i8 %conv39.i, i8* %msgmod32.sroa.11.0.add.ptr.i18.sroa_raw_idx, align 8
  %msgmod32.sroa.12.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 41
  store i8 %conv44.i, i8* %msgmod32.sroa.12.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.13.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 42
  store i8 %conv49.i, i8* %msgmod32.sroa.13.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.14.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 43
  store i8 %conv54.i, i8* %msgmod32.sroa.14.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.15.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 44
  store i8 %conv59.i, i8* %msgmod32.sroa.15.0.add.ptr.i18.sroa_raw_idx, align 4
  %msgmod32.sroa.16.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 45
  store i8 %conv64.i, i8* %msgmod32.sroa.16.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.17.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 46
  store i8 %conv69.i, i8* %msgmod32.sroa.17.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.18.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 47
  store i8 %conv73.i, i8* %msgmod32.sroa.18.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.19.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 48
  store i8 %conv78.i, i8* %msgmod32.sroa.19.0.add.ptr.i18.sroa_raw_idx, align 16
  %msgmod32.sroa.20.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 49
  store i8 %conv83.i, i8* %msgmod32.sroa.20.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.21.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 50
  store i8 %conv88.i, i8* %msgmod32.sroa.21.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.22.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 51
  store i8 %conv93.i, i8* %msgmod32.sroa.22.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.23.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 52
  store i8 %conv98.i, i8* %msgmod32.sroa.23.0.add.ptr.i18.sroa_raw_idx, align 4
  %msgmod32.sroa.24.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 53
  store i8 %conv103.i, i8* %msgmod32.sroa.24.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.25.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 54
  store i8 %conv108.i, i8* %msgmod32.sroa.25.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.26.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 55
  store i8 %conv112.i, i8* %msgmod32.sroa.26.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.27.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 56
  store i8 %conv117.i, i8* %msgmod32.sroa.27.0.add.ptr.i18.sroa_raw_idx, align 8
  %msgmod32.sroa.28.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 57
  store i8 %conv122.i, i8* %msgmod32.sroa.28.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.29.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 58
  store i8 %conv127.i, i8* %msgmod32.sroa.29.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.30.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 59
  store i8 %conv132.i, i8* %msgmod32.sroa.30.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.31.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 60
  store i8 %conv137.i, i8* %msgmod32.sroa.31.0.add.ptr.i18.sroa_raw_idx, align 4
  %msgmod32.sroa.32.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 61
  store i8 %conv142.i, i8* %msgmod32.sroa.32.0.add.ptr.i18.sroa_raw_idx, align 1
  %msgmod32.sroa.33.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 62
  store i8 %conv147.i, i8* %msgmod32.sroa.33.0.add.ptr.i18.sroa_raw_idx, align 2
  %msgmod32.sroa.34.0.add.ptr.i18.sroa_raw_idx = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 63
  store i8 %conv151.i, i8* %msgmod32.sroa.34.0.add.ptr.i18.sroa_raw_idx, align 1
  %cmp.not = icmp eq i8* %data, null
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %add.ptr.i21 = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i21, i8* noundef nonnull align 1 dereferenceable(32) %data, i64 32, i1 false) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %offset.0 = phi i32 [ 64, %entry ], [ 96, %if.then ]
  %cmp5.not = icmp eq i8* %algo16, null
  br i1 %cmp5.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end
  %idx.ext.i23 = zext i32 %offset.0 to i64
  %add.ptr.i24 = getelementptr inbounds [112 x i8], [112 x i8]* %keydata, i64 0, i64 %idx.ext.i23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %add.ptr.i24, i8* noundef nonnull align 1 dereferenceable(16) %algo16, i64 16, i1 false) #19
  %add.i25 = or i32 %offset.0, 16
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end
  %offset.1 = phi i32 [ %offset.0, %if.end ], [ %add.i25, %if.then6 ]
  %conv = zext i32 %offset.1 to i64
  call fastcc void @secp256k1_rfc6979_hmac_sha256_initialize(%struct.secp256k1_rfc6979_hmac_sha256* noundef nonnull %rng, i8* noundef nonnull %0, i64 noundef %conv)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(112) %0, i8 0, i64 112, i1 false)
  br label %for.body

for.body:                                         ; preds = %if.end8, %for.body
  %i.035 = phi i32 [ 0, %if.end8 ], [ %inc, %for.body ]
  call fastcc void @secp256k1_rfc6979_hmac_sha256_generate(%struct.secp256k1_rfc6979_hmac_sha256* noundef nonnull %rng, i8* noundef %nonce32)
  %inc = add i32 %i.035, 1
  %cmp11.not = icmp ugt i32 %inc, %counter
  br i1 %cmp11.not, label %for.end, label %for.body, !llvm.loop !66

for.end:                                          ; preds = %for.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0) #19
  ret i32 1
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ecdsa_sign(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_ecdsa_signature* noundef writeonly %signature, i8* noundef %msghash32, i8* noundef %seckey, i32 (i8*, i8*, i8*, i8*, i8*, i32)* noundef readonly %noncefp, i8* noundef %noncedata) local_unnamed_addr #0 {
entry:
  %s.i.i.i = alloca %struct.secp256k1_modinv64_signed62, align 8
  %b.i.i = alloca [32 x i8], align 16
  %rp.i.i = alloca %struct.secp256k1_gej, align 8
  %r.i.i = alloca %struct.secp256k1_ge, align 8
  %n.i.i = alloca %struct.secp256k1_scalar, align 8
  %overflow.i13.i = alloca i32, align 4
  %overflow.i2.i = alloca i32, align 4
  %overflow.i.i = alloca i32, align 4
  %sec.i = alloca %struct.secp256k1_scalar, align 8
  %non.i = alloca %struct.secp256k1_scalar, align 8
  %msg.i = alloca %struct.secp256k1_scalar, align 8
  %nonce32.i = alloca [32 x i8], align 16
  %r = alloca %struct.secp256k1_scalar, align 8
  %s = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_scalar* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_scalar* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %ecmult_gen_ctx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0
  %ecmult_gen_ctx.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 0
  %ecmult_gen_ctx.idx.val = load i32, i32* %ecmult_gen_ctx.idx, align 8, !tbaa !19
  %tobool.not = icmp eq i32 %ecmult_gen_ctx.idx.val, 0
  br i1 %tobool.not, label %if.then, label %do.body6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx61 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx61.val = load i8*, i8** %illegal_callback.idx61, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15, i64 0, i64 0), i8* noundef %illegal_callback.idx61.val) #19
  br label %cleanup

do.body6:                                         ; preds = %entry
  %cmp7.not = icmp eq i8* %msghash32, null
  br i1 %cmp7.not, label %if.then14, label %do.body19, !prof !26

if.then14:                                        ; preds = %do.body6
  %illegal_callback15.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback15.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback15.idx, align 8, !tbaa !27
  %illegal_callback15.idx60 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback15.idx60.val = load i8*, i8** %illegal_callback15.idx60, align 8, !tbaa !28
  tail call void %illegal_callback15.idx.val(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* noundef %illegal_callback15.idx60.val) #19
  br label %cleanup

do.body19:                                        ; preds = %do.body6
  %cmp20.not = icmp eq %struct.secp256k1_ecdsa_signature* %signature, null
  br i1 %cmp20.not, label %if.then27, label %do.body32, !prof !26

if.then27:                                        ; preds = %do.body19
  %illegal_callback28.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback28.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback28.idx, align 8, !tbaa !27
  %illegal_callback28.idx59 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback28.idx59.val = load i8*, i8** %illegal_callback28.idx59, align 8, !tbaa !28
  tail call void %illegal_callback28.idx.val(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* noundef %illegal_callback28.idx59.val) #19
  br label %cleanup

do.body32:                                        ; preds = %do.body19
  %cmp33.not = icmp eq i8* %seckey, null
  br i1 %cmp33.not, label %if.then40, label %do.end44, !prof !26

if.then40:                                        ; preds = %do.body32
  %illegal_callback41.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback41.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback41.idx, align 8, !tbaa !27
  %illegal_callback41.idx58 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback41.idx58.val = load i8*, i8** %illegal_callback41.idx58, align 8, !tbaa !28
  tail call void %illegal_callback41.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* noundef %illegal_callback41.idx58.val) #19
  br label %cleanup

do.end44:                                         ; preds = %do.body32
  %2 = bitcast %struct.secp256k1_scalar* %sec.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #19
  %3 = bitcast %struct.secp256k1_scalar* %non.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #19
  %4 = bitcast %struct.secp256k1_scalar* %msg.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #19
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %0, i8 0, i64 32, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1, i8 0, i64 32, i1 false) #19
  %cmp.i = icmp eq i32 (i8*, i8*, i8*, i8*, i8*, i32)* %noncefp, null
  %spec.store.select.i = select i1 %cmp.i, i32 (i8*, i8*, i8*, i8*, i8*, i32)* @nonce_function_rfc6979, i32 (i8*, i8*, i8*, i8*, i8*, i32)* %noncefp
  %6 = bitcast i32* %overflow.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %sec.i, i8* noundef nonnull %seckey, i32* noundef nonnull %overflow.i.i) #19
  %7 = load i32, i32* %overflow.i.i, align 4, !tbaa !3
  %arrayidx.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec.i, i64 0, i32 0, i64 0
  %8 = load i64, i64* %arrayidx.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec.i, i64 0, i32 0, i64 1
  %9 = load i64, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %or.i.i.i = or i64 %9, %8
  %arrayidx4.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec.i, i64 0, i32 0, i64 2
  %10 = load i64, i64* %arrayidx4.i.i.i, align 8, !tbaa !13
  %or5.i.i.i = or i64 %or.i.i.i, %10
  %arrayidx7.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec.i, i64 0, i32 0, i64 3
  %11 = load i64, i64* %arrayidx7.i.i.i, align 8, !tbaa !13
  %or8.i.i.i = or i64 %or5.i.i.i, %11
  %cmp.i.i.i = icmp eq i64 %or8.i.i.i, 0
  %conv.i.i.i = zext i1 %cmp.i.i.i to i32
  %12 = or i32 %7, %conv.i.i.i
  %13 = icmp eq i32 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19
  %tobool3.not.i = xor i1 %13, true
  %.neg52.i = zext i1 %tobool3.not.i to i64
  %add.i.i = sext i1 %13 to i64
  %and.i1.i = and i64 %8, %add.i.i
  %or.i.i = or i64 %and.i1.i, %.neg52.i
  store i64 %or.i.i, i64* %arrayidx.i.i.i, align 8, !tbaa !13
  %and8.i.i = and i64 %9, %add.i.i
  store i64 %and8.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %and17.i.i = and i64 %10, %add.i.i
  store i64 %and17.i.i, i64* %arrayidx4.i.i.i, align 8, !tbaa !13
  %and26.i.i = and i64 %11, %add.i.i
  store i64 %and26.i.i, i64* %arrayidx7.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %msg.i, i8* noundef nonnull %msghash32, i32* noundef null) #19
  %call453.i = call i32 %spec.store.select.i(i8* noundef nonnull %5, i8* noundef nonnull %msghash32, i8* noundef nonnull %seckey, i8* noundef null, i8* noundef %noncedata, i32 noundef 0) #19
  %tobool5.not54.i = icmp eq i32 %call453.i, 0
  br i1 %tobool5.not54.i, label %secp256k1_ecdsa_sign_inner.exit, label %if.end12.lr.ph.i

if.end12.lr.ph.i:                                 ; preds = %do.end44
  %14 = bitcast i32* %overflow.i2.i to i8*
  %arrayidx.i.i3.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %non.i, i64 0, i32 0, i64 0
  %arrayidx2.i.i4.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %non.i, i64 0, i32 0, i64 1
  %arrayidx4.i.i6.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %non.i, i64 0, i32 0, i64 2
  %arrayidx7.i.i8.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %non.i, i64 0, i32 0, i64 3
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 0
  %16 = bitcast %struct.secp256k1_gej* %rp.i.i to i8*
  %17 = bitcast %struct.secp256k1_ge* %r.i.i to i8*
  %18 = bitcast %struct.secp256k1_scalar* %n.i.i to i8*
  %19 = bitcast i32* %overflow.i13.i to i8*
  %arrayidx.i.i14.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r.i.i, i64 0, i32 0, i32 0, i64 0
  %arrayidx2.i.i15.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r.i.i, i64 0, i32 0, i32 0, i64 1
  %arrayidx4.i.i16.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r.i.i, i64 0, i32 0, i32 0, i64 2
  %arrayidx6.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r.i.i, i64 0, i32 0, i32 0, i64 3
  %arrayidx8.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r.i.i, i64 0, i32 0, i32 0, i64 4
  %arrayidx7.i.i19.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 1
  %arrayidx13.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 2
  %arrayidx19.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 3
  %arrayidx25.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 4
  %arrayidx30.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 5
  %arrayidx36.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 6
  %arrayidx42.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 7
  %arrayidx48.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 8
  %arrayidx54.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 9
  %arrayidx60.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 10
  %arrayidx66.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 11
  %arrayidx75.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 12
  %arrayidx81.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 13
  %arrayidx87.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 14
  %arrayidx93.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 15
  %arrayidx99.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 16
  %arrayidx105.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 17
  %arrayidx110.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 18
  %arrayidx116.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 19
  %arrayidx122.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 20
  %arrayidx128.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 21
  %arrayidx134.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 22
  %arrayidx140.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 23
  %arrayidx146.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 24
  %arrayidx157.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 25
  %arrayidx163.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 26
  %arrayidx169.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 27
  %arrayidx175.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 28
  %arrayidx181.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 29
  %arrayidx187.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 30
  %arrayidx192.i.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %b.i.i, i64 0, i64 31
  %arrayidx.i52.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %n.i.i, i64 0, i32 0, i64 0
  %arrayidx2.i53.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg.i, i64 0, i32 0, i64 0
  %20 = load i64, i64* %arrayidx2.i53.i.i, align 8
  %conv.i6.i.i.i = zext i64 %20 to i128
  %arrayidx6.i55.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %n.i.i, i64 0, i32 0, i64 1
  %arrayidx8.i56.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg.i, i64 0, i32 0, i64 1
  %21 = load i64, i64* %arrayidx8.i56.i.i, align 8
  %conv.i10.i.i.i = zext i64 %21 to i128
  %arrayidx13.i57.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %n.i.i, i64 0, i32 0, i64 2
  %arrayidx15.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg.i, i64 0, i32 0, i64 2
  %22 = load i64, i64* %arrayidx15.i.i.i, align 8
  %conv.i16.i.i.i = zext i64 %22 to i128
  %arrayidx20.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %n.i.i, i64 0, i32 0, i64 3
  %arrayidx22.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %msg.i, i64 0, i32 0, i64 3
  %23 = load i64, i64* %arrayidx22.i.i.i, align 8
  %conv.i22.i.i.i = zext i64 %23 to i128
  %24 = bitcast %struct.secp256k1_modinv64_signed62* %s.i.i.i to i8*
  %arrayidx7.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i.i.i, i64 0, i32 0, i64 0
  %arrayidx10.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i.i.i, i64 0, i32 0, i64 1
  %arrayidx16.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i.i.i, i64 0, i32 0, i64 2
  %arrayidx22.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i.i.i, i64 0, i32 0, i64 3
  %arrayidx25.i.i.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i.i.i, i64 0, i32 0, i64 4
  %arrayidx33.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 0
  %arrayidx38.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 1
  %arrayidx43.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 2
  %arrayidx48.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 3
  %arrayidx.i78.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 0
  %arrayidx2.i79.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 1
  %arrayidx4.i81.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 2
  %arrayidx7.i82.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 3
  br label %if.end12.i

if.end12.i:                                       ; preds = %cleanup.i, %if.end12.lr.ph.i
  %25 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %67, %cleanup.i ]
  %26 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %68, %cleanup.i ]
  %27 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %69, %cleanup.i ]
  %28 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %70, %cleanup.i ]
  %29 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %71, %cleanup.i ]
  %30 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %72, %cleanup.i ]
  %31 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %73, %cleanup.i ]
  %32 = phi i64 [ 0, %if.end12.lr.ph.i ], [ %74, %cleanup.i ]
  %count.055.i = phi i32 [ 0, %if.end12.lr.ph.i ], [ %inc.i, %cleanup.i ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %non.i, i8* noundef nonnull %5, i32* noundef nonnull %overflow.i2.i) #19
  %33 = load i32, i32* %overflow.i2.i, align 4, !tbaa !3
  %34 = load i64, i64* %arrayidx.i.i3.i, align 8, !tbaa !13
  %35 = load i64, i64* %arrayidx2.i.i4.i, align 8, !tbaa !13
  %or.i.i5.i = or i64 %35, %34
  %36 = load i64, i64* %arrayidx4.i.i6.i, align 8, !tbaa !13
  %or5.i.i7.i = or i64 %or.i.i5.i, %36
  %37 = load i64, i64* %arrayidx7.i.i8.i, align 8, !tbaa !13
  %or8.i.i9.i = or i64 %or5.i.i7.i, %37
  %cmp.i.i10.i = icmp eq i64 %or8.i.i9.i, 0
  %conv.i.i11.i = zext i1 %cmp.i.i10.i to i32
  %38 = or i32 %33, %conv.i.i11.i
  %.not.i = icmp eq i32 %38, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #19
  br i1 %.not.i, label %if.then16.i, label %cleanup.i

if.then16.i:                                      ; preds = %if.end12.i
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #19
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #19
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %17) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #19
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #19
  store i32 0, i32* %overflow.i13.i, align 4, !tbaa !3
  call fastcc void @secp256k1_ecmult_gen(%struct.secp256k1_ecmult_gen_context* noundef %ecmult_gen_ctx, %struct.secp256k1_gej* noundef nonnull %rp.i.i, %struct.secp256k1_scalar* noundef nonnull %non.i) #19
  call fastcc void @secp256k1_ge_set_gej(%struct.secp256k1_ge* noundef nonnull %r.i.i, %struct.secp256k1_gej* noundef nonnull %rp.i.i) #19
  %39 = load i64, i64* %arrayidx.i.i14.i, align 8, !tbaa !13
  %40 = load i64, i64* %arrayidx2.i.i15.i, align 8, !tbaa !13
  %41 = load i64, i64* %arrayidx4.i.i16.i, align 8, !tbaa !13
  %42 = load i64, i64* %arrayidx6.i.i.i, align 8, !tbaa !13
  %43 = load i64, i64* %arrayidx8.i.i.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i64 %43, 48
  %and.i.i.i = and i64 %43, 281474976710655
  %mul.i.i.i = mul nuw nsw i64 %shr.i.i.i, 4294968273
  %add.i.i.i = add i64 %mul.i.i.i, %39
  %shr9.i.i.i = lshr i64 %add.i.i.i, 52
  %add10.i.i.i = add i64 %shr9.i.i.i, %40
  %and11.i.i.i = and i64 %add.i.i.i, 4503599627370495
  %shr12.i.i.i = lshr i64 %add10.i.i.i, 52
  %add13.i.i.i = add i64 %shr12.i.i.i, %41
  %and14.i.i.i = and i64 %add10.i.i.i, 4503599627370495
  %shr15.i.i.i = lshr i64 %add13.i.i.i, 52
  %add16.i.i.i = add i64 %shr15.i.i.i, %42
  %and17.i.i.i = and i64 %add13.i.i.i, 4503599627370495
  %and18.i.i.i = and i64 %and17.i.i.i, %add10.i.i.i
  %shr19.i.i.i = lshr i64 %add16.i.i.i, 52
  %add20.i.i.i = add nuw nsw i64 %shr19.i.i.i, %and.i.i.i
  %and21.i.i.i = and i64 %add16.i.i.i, 4503599627370495
  %and22.i.i.i = and i64 %and18.i.i.i, %add16.i.i.i
  %shr24.i.i.i = lshr i64 %add20.i.i.i, 48
  %cmp25.i.i.i = icmp eq i64 %add20.i.i.i, 281474976710655
  %cmp27.i.i.i = icmp eq i64 %and22.i.i.i, 4503599627370495
  %and29122.i.i.i = and i1 %cmp27.i.i.i, %cmp25.i.i.i
  %cmp30.i.i.i = icmp ugt i64 %and11.i.i.i, 4503595332402222
  %and32123.i.i.i = and i1 %cmp30.i.i.i, %and29122.i.i.i
  %44 = zext i1 %and32123.i.i.i to i64
  %or.i.i17.i = or i64 %shr24.i.i.i, %44
  %mul34.i.i.i = mul nuw nsw i64 %or.i.i17.i, 4294968273
  %add35.i.i.i = add nuw nsw i64 %mul34.i.i.i, %and11.i.i.i
  %shr36.i.i.i = lshr i64 %add35.i.i.i, 52
  %add37.i.i.i = add nuw nsw i64 %shr36.i.i.i, %and14.i.i.i
  %shr39.i.i.i = lshr i64 %add37.i.i.i, 52
  %add40.i.i.i = add nuw nsw i64 %shr39.i.i.i, %and17.i.i.i
  %shr42.i.i.i = lshr i64 %add40.i.i.i, 52
  %add43.i.i.i = add nuw nsw i64 %shr42.i.i.i, %and21.i.i.i
  %shr45.i.i.i = lshr i64 %add43.i.i.i, 52
  %add46.i.i.i = add nuw nsw i64 %shr45.i.i.i, %add20.i.i.i
  %shr.i48.i.i = lshr i64 %add46.i.i.i, 40
  %conv.i.i18.i = trunc i64 %shr.i48.i.i to i8
  store i8 %conv.i.i18.i, i8* %15, align 16, !tbaa !10
  %shr4.i.i.i = lshr i64 %add46.i.i.i, 32
  %conv6.i.i.i = trunc i64 %shr4.i.i.i to i8
  store i8 %conv6.i.i.i, i8* %arrayidx7.i.i19.i, align 1, !tbaa !10
  %shr10.i.i.i = lshr i64 %add46.i.i.i, 24
  %conv12.i.i.i = trunc i64 %shr10.i.i.i to i8
  store i8 %conv12.i.i.i, i8* %arrayidx13.i.i.i, align 2, !tbaa !10
  %shr16.i.i.i = lshr i64 %add46.i.i.i, 16
  %conv18.i.i.i = trunc i64 %shr16.i.i.i to i8
  store i8 %conv18.i.i.i, i8* %arrayidx19.i.i.i, align 1, !tbaa !10
  %shr22.i.i.i = lshr i64 %add46.i.i.i, 8
  %conv24.i.i.i = trunc i64 %shr22.i.i.i to i8
  store i8 %conv24.i.i.i, i8* %arrayidx25.i.i.i, align 4, !tbaa !10
  %conv29.i.i.i = trunc i64 %add46.i.i.i to i8
  store i8 %conv29.i.i.i, i8* %arrayidx30.i.i.i, align 1, !tbaa !10
  %shr33.i.i.i = lshr i64 %add43.i.i.i, 44
  %conv35.i.i.i = trunc i64 %shr33.i.i.i to i8
  store i8 %conv35.i.i.i, i8* %arrayidx36.i.i.i, align 2, !tbaa !10
  %shr39.i49.i.i = lshr i64 %add43.i.i.i, 36
  %conv41.i.i.i = trunc i64 %shr39.i49.i.i to i8
  store i8 %conv41.i.i.i, i8* %arrayidx42.i.i.i, align 1, !tbaa !10
  %shr45.i50.i.i = lshr i64 %add43.i.i.i, 28
  %conv47.i.i.i = trunc i64 %shr45.i50.i.i to i8
  store i8 %conv47.i.i.i, i8* %arrayidx48.i.i.i, align 8, !tbaa !10
  %shr51.i.i.i = lshr i64 %add43.i.i.i, 20
  %conv53.i.i.i = trunc i64 %shr51.i.i.i to i8
  store i8 %conv53.i.i.i, i8* %arrayidx54.i.i.i, align 1, !tbaa !10
  %shr57.i.i.i = lshr i64 %add43.i.i.i, 12
  %conv59.i.i.i = trunc i64 %shr57.i.i.i to i8
  store i8 %conv59.i.i.i, i8* %arrayidx60.i.i.i, align 2, !tbaa !10
  %shr63.i.i.i = lshr i64 %add43.i.i.i, 4
  %conv65.i.i.i = trunc i64 %shr63.i.i.i to i8
  store i8 %conv65.i.i.i, i8* %arrayidx66.i.i.i, align 1, !tbaa !10
  %and44.i.i.i = lshr i64 %add40.i.i.i, 48
  %shr69.i.i.i = and i64 %and44.i.i.i, 15
  %and73.i.i.i = shl nuw nsw i64 %add43.i.i.i, 4
  %or.i51.i.i = or i64 %and73.i.i.i, %shr69.i.i.i
  %conv74.i.i.i = trunc i64 %or.i51.i.i to i8
  store i8 %conv74.i.i.i, i8* %arrayidx75.i.i.i, align 4, !tbaa !10
  %shr78.i.i.i = lshr i64 %add40.i.i.i, 40
  %conv80.i.i.i = trunc i64 %shr78.i.i.i to i8
  store i8 %conv80.i.i.i, i8* %arrayidx81.i.i.i, align 1, !tbaa !10
  %shr84.i.i.i = lshr i64 %add40.i.i.i, 32
  %conv86.i.i.i = trunc i64 %shr84.i.i.i to i8
  store i8 %conv86.i.i.i, i8* %arrayidx87.i.i.i, align 2, !tbaa !10
  %shr90.i.i.i = lshr i64 %add40.i.i.i, 24
  %conv92.i.i.i = trunc i64 %shr90.i.i.i to i8
  store i8 %conv92.i.i.i, i8* %arrayidx93.i.i.i, align 1, !tbaa !10
  %shr96.i.i.i = lshr i64 %add40.i.i.i, 16
  %conv98.i.i.i = trunc i64 %shr96.i.i.i to i8
  store i8 %conv98.i.i.i, i8* %arrayidx99.i.i.i, align 16, !tbaa !10
  %shr102.i.i.i = lshr i64 %add40.i.i.i, 8
  %conv104.i.i.i = trunc i64 %shr102.i.i.i to i8
  store i8 %conv104.i.i.i, i8* %arrayidx105.i.i.i, align 1, !tbaa !10
  %conv109.i.i.i = trunc i64 %add40.i.i.i to i8
  store i8 %conv109.i.i.i, i8* %arrayidx110.i.i.i, align 2, !tbaa !10
  %shr113.i.i.i = lshr i64 %add37.i.i.i, 44
  %conv115.i.i.i = trunc i64 %shr113.i.i.i to i8
  store i8 %conv115.i.i.i, i8* %arrayidx116.i.i.i, align 1, !tbaa !10
  %shr119.i.i.i = lshr i64 %add37.i.i.i, 36
  %conv121.i.i.i = trunc i64 %shr119.i.i.i to i8
  store i8 %conv121.i.i.i, i8* %arrayidx122.i.i.i, align 4, !tbaa !10
  %shr125.i.i.i = lshr i64 %add37.i.i.i, 28
  %conv127.i.i.i = trunc i64 %shr125.i.i.i to i8
  store i8 %conv127.i.i.i, i8* %arrayidx128.i.i.i, align 1, !tbaa !10
  %shr131.i.i.i = lshr i64 %add37.i.i.i, 20
  %conv133.i.i.i = trunc i64 %shr131.i.i.i to i8
  store i8 %conv133.i.i.i, i8* %arrayidx134.i.i.i, align 2, !tbaa !10
  %shr137.i.i.i = lshr i64 %add37.i.i.i, 12
  %conv139.i.i.i = trunc i64 %shr137.i.i.i to i8
  store i8 %conv139.i.i.i, i8* %arrayidx140.i.i.i, align 1, !tbaa !10
  %shr143.i.i.i = lshr i64 %add37.i.i.i, 4
  %conv145.i.i.i = trunc i64 %shr143.i.i.i to i8
  store i8 %conv145.i.i.i, i8* %arrayidx146.i.i.i, align 8, !tbaa !10
  %and38.i.i.i = lshr i64 %add35.i.i.i, 48
  %shr149.i.i.i = and i64 %and38.i.i.i, 15
  %and153.i.i.i = shl nuw nsw i64 %add37.i.i.i, 4
  %or155.i.i.i = or i64 %and153.i.i.i, %shr149.i.i.i
  %conv156.i.i.i = trunc i64 %or155.i.i.i to i8
  store i8 %conv156.i.i.i, i8* %arrayidx157.i.i.i, align 1, !tbaa !10
  %shr160.i.i.i = lshr i64 %add35.i.i.i, 40
  %conv162.i.i.i = trunc i64 %shr160.i.i.i to i8
  store i8 %conv162.i.i.i, i8* %arrayidx163.i.i.i, align 2, !tbaa !10
  %shr166.i.i.i = lshr i64 %add35.i.i.i, 32
  %conv168.i.i.i = trunc i64 %shr166.i.i.i to i8
  store i8 %conv168.i.i.i, i8* %arrayidx169.i.i.i, align 1, !tbaa !10
  %shr172.i.i.i = lshr i64 %add35.i.i.i, 24
  %conv174.i.i.i = trunc i64 %shr172.i.i.i to i8
  store i8 %conv174.i.i.i, i8* %arrayidx175.i.i.i, align 4, !tbaa !10
  %shr178.i.i.i = lshr i64 %add35.i.i.i, 16
  %conv180.i.i.i = trunc i64 %shr178.i.i.i to i8
  store i8 %conv180.i.i.i, i8* %arrayidx181.i.i.i, align 1, !tbaa !10
  %shr184.i.i.i = lshr i64 %add35.i.i.i, 8
  %conv186.i.i.i = trunc i64 %shr184.i.i.i to i8
  store i8 %conv186.i.i.i, i8* %arrayidx187.i.i.i, align 2, !tbaa !10
  %conv191.i.i.i = trunc i64 %add35.i.i.i to i8
  store i8 %conv191.i.i.i, i8* %arrayidx192.i.i.i, align 1, !tbaa !10
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %r, i8* noundef nonnull %15, i32* noundef nonnull %overflow.i13.i) #19
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %n.i.i, %struct.secp256k1_scalar* noundef nonnull %r, %struct.secp256k1_scalar* noundef nonnull %sec.i) #19
  %45 = load i64, i64* %arrayidx.i52.i.i, align 8, !tbaa !13
  %conv.i.i.i.i = zext i64 %45 to i128
  %add.i.i.i.i = add nuw nsw i128 %conv.i.i.i.i, %conv.i6.i.i.i
  %conv.i7.i.i.i = trunc i128 %add.i.i.i.i to i64
  %shr.i.i.i.i = lshr i128 %add.i.i.i.i, 64
  %46 = load i64, i64* %arrayidx6.i55.i.i, align 8, !tbaa !13
  %conv.i8.i.i.i = zext i64 %46 to i128
  %add.i9.i.i.i = add nuw nsw i128 %conv.i8.i.i.i, %conv.i10.i.i.i
  %add.i11.i.i.i = add nuw nsw i128 %add.i9.i.i.i, %shr.i.i.i.i
  %conv.i12.i.i.i = trunc i128 %add.i11.i.i.i to i64
  %shr.i13.i.i.i = lshr i128 %add.i11.i.i.i, 64
  %47 = load i64, i64* %arrayidx13.i57.i.i, align 8, !tbaa !13
  %conv.i14.i.i.i = zext i64 %47 to i128
  %add.i15.i.i.i = add nuw nsw i128 %conv.i14.i.i.i, %conv.i16.i.i.i
  %add.i17.i.i.i = add nuw nsw i128 %add.i15.i.i.i, %shr.i13.i.i.i
  %conv.i18.i.i.i = trunc i128 %add.i17.i.i.i to i64
  %shr.i19.i.i.i = lshr i128 %add.i17.i.i.i, 64
  %48 = load i64, i64* %arrayidx20.i.i.i, align 8, !tbaa !13
  %conv.i20.i.i.i = zext i64 %48 to i128
  %add.i21.i.i.i = add nuw nsw i128 %conv.i20.i.i.i, %conv.i22.i.i.i
  %add.i23.i.i.i = add nuw nsw i128 %add.i21.i.i.i, %shr.i19.i.i.i
  %conv.i24.i.i.i = trunc i128 %add.i23.i.i.i to i64
  %shr.i25.i.i.i = lshr i128 %add.i23.i.i.i, 64
  %cmp.i.i.i.i = icmp ne i64 %conv.i24.i.i.i, -1
  %cmp3.i.i.i.i = icmp ult i64 %conv.i18.i.i.i, -2
  %or545.i.i.i.i = or i1 %cmp3.i.i.i.i, %cmp.i.i.i.i
  %or5.i.i.i.i = zext i1 %or545.i.i.i.i to i32
  %cmp8.i.i.i.i = icmp eq i64 %conv.i18.i.i.i, -1
  %conv9.i.i.i.i = zext i1 %cmp8.i.i.i.i to i32
  %neg.i.i.i.i = xor i32 %or5.i.i.i.i, -1
  %and.i.i.i.i = and i32 %neg.i.i.i.i, %conv9.i.i.i.i
  %cmp13.i.i.i.i = icmp ult i64 %conv.i12.i.i.i, -4994812053365940165
  %or1546.i.i.i.i = or i1 %cmp13.i.i.i.i, %or545.i.i.i.i
  %or15.i.i.i.i = zext i1 %or1546.i.i.i.i to i32
  %cmp18.i.i.i.i = icmp ugt i64 %conv.i12.i.i.i, -4994812053365940165
  %conv19.i.i.i.i = zext i1 %cmp18.i.i.i.i to i32
  %neg20.i.i.i.i = xor i32 %or15.i.i.i.i, -1
  %and21.i.i.i.i = and i32 %neg20.i.i.i.i, %conv19.i.i.i.i
  %or22.i.i.i.i = or i32 %and21.i.i.i.i, %and.i.i.i.i
  %cmp25.i.i.i.i = icmp ugt i64 %conv.i7.i.i.i, -4624529908474429120
  %conv26.i.i.i.i = zext i1 %cmp25.i.i.i.i to i32
  %and28.i.i.i.i = and i32 %neg20.i.i.i.i, %conv26.i.i.i.i
  %or29.i.i.i.i = or i32 %or22.i.i.i.i, %and28.i.i.i.i
  %49 = trunc i128 %shr.i25.i.i.i to i32
  %conv28.i.i.i = add nuw nsw i32 %or29.i.i.i.i, %49
  %conv.i.i.i.i.i = and i128 %add.i.i.i.i, 18446744073709551615
  %conv1.i.i.i.i = zext i32 %conv28.i.i.i to i64
  %mul.i.i.i.i = mul i64 %conv1.i.i.i.i, 4624529908474429119
  %conv.i37.i.i.i.i = zext i64 %mul.i.i.i.i to i128
  %add.i.i.i.i.i = add nuw nsw i128 %conv.i.i.i.i.i, %conv.i37.i.i.i.i
  %conv.i38.i.i.i.i = trunc i128 %add.i.i.i.i.i to i64
  store i64 %conv.i38.i.i.i.i, i64* %arrayidx.i52.i.i, align 8, !tbaa !13
  %shr.i.i.i.i.i = lshr i128 %add.i.i.i.i.i, 64
  %conv.i39.i.i.i.i = and i128 %add.i11.i.i.i, 18446744073709551615
  %mul7.i.i.i.i = mul i64 %conv1.i.i.i.i, 4994812053365940164
  %conv.i41.i.i.i.i = zext i64 %mul7.i.i.i.i to i128
  %add.i40.i.i.i.i = add nuw nsw i128 %conv.i39.i.i.i.i, %conv.i41.i.i.i.i
  %add.i42.i.i.i.i = add nuw nsw i128 %add.i40.i.i.i.i, %shr.i.i.i.i.i
  %conv.i43.i.i.i.i = trunc i128 %add.i42.i.i.i.i to i64
  store i64 %conv.i43.i.i.i.i, i64* %arrayidx6.i55.i.i, align 8, !tbaa !13
  %shr.i44.i.i.i.i = lshr i128 %add.i42.i.i.i.i, 64
  %conv.i45.i.i.i.i = and i128 %add.i17.i.i.i, 18446744073709551615
  %conv.i47.i.i.i.i = zext i32 %conv28.i.i.i to i128
  %add.i46.i.i.i.i = add nuw nsw i128 %conv.i45.i.i.i.i, %conv.i47.i.i.i.i
  %add.i48.i.i.i.i = add nuw nsw i128 %add.i46.i.i.i.i, %shr.i44.i.i.i.i
  %conv.i49.i.i.i.i = trunc i128 %add.i48.i.i.i.i to i64
  store i64 %conv.i49.i.i.i.i, i64* %arrayidx13.i57.i.i, align 8, !tbaa !13
  %shr.i50.i.i.i.i = lshr i128 %add.i48.i.i.i.i, 64
  %50 = trunc i128 %shr.i50.i.i.i.i to i64
  %conv.i53.i.i.i.i = add i64 %50, %conv.i24.i.i.i
  store i64 %conv.i53.i.i.i.i, i64* %arrayidx20.i.i.i, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #19
  %and.i.i59.i.i = and i64 %34, 4611686018427387903
  store i64 %and.i.i59.i.i, i64* %arrayidx7.i.i.i.i, align 8, !tbaa !13
  %or.i.i.i.i = call i64 @llvm.fshl.i64(i64 %35, i64 %34, i64 2) #19
  %and8.i.i.i.i = and i64 %or.i.i.i.i, 4611686018427387903
  store i64 %and8.i.i.i.i, i64* %arrayidx10.i.i.i.i, align 8, !tbaa !13
  %or13.i.i.i.i = call i64 @llvm.fshl.i64(i64 %36, i64 %35, i64 4) #19
  %and14.i.i.i.i = and i64 %or13.i.i.i.i, 4611686018427387903
  store i64 %and14.i.i.i.i, i64* %arrayidx16.i.i.i.i, align 8, !tbaa !13
  %or19.i.i.i.i = call i64 @llvm.fshl.i64(i64 %37, i64 %36, i64 6) #19
  %and20.i.i.i.i = and i64 %or19.i.i.i.i, 4611686018427387903
  store i64 %and20.i.i.i.i, i64* %arrayidx22.i.i.i.i, align 8, !tbaa !13
  %shr23.i.i.i.i = lshr i64 %37, 56
  store i64 %shr23.i.i.i.i, i64* %arrayidx25.i.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_modinv64(%struct.secp256k1_modinv64_signed62* noundef nonnull %s.i.i.i, %struct.secp256k1_modinv64_modinfo* noundef nonnull @secp256k1_const_modinfo_scalar) #19
  %51 = load i64, i64* %arrayidx7.i.i.i.i, align 8, !tbaa !13
  %52 = load i64, i64* %arrayidx10.i.i.i.i, align 8, !tbaa !13
  %53 = load i64, i64* %arrayidx16.i.i.i.i, align 8, !tbaa !13
  %54 = load i64, i64* %arrayidx22.i.i.i.i, align 8, !tbaa !13
  %55 = load i64, i64* %arrayidx25.i.i.i.i, align 8, !tbaa !13
  %shl.i.i.i.i = shl i64 %52, 62
  %or.i5.i.i.i = or i64 %shl.i.i.i.i, %51
  store i64 %or.i5.i.i.i, i64* %arrayidx33.i.i.i.i, align 8, !tbaa !13
  %shr34.i.i.i.i = lshr i64 %52, 2
  %shl35.i.i.i.i = shl i64 %53, 60
  %or36.i.i.i.i = or i64 %shl35.i.i.i.i, %shr34.i.i.i.i
  store i64 %or36.i.i.i.i, i64* %arrayidx38.i.i.i.i, align 8, !tbaa !13
  %shr39.i.i.i.i = lshr i64 %53, 4
  %shl40.i.i.i.i = shl i64 %54, 58
  %or41.i.i.i.i = or i64 %shl40.i.i.i.i, %shr39.i.i.i.i
  store i64 %or41.i.i.i.i, i64* %arrayidx43.i.i.i.i, align 8, !tbaa !13
  %shr44.i.i.i.i = lshr i64 %54, 6
  %shl45.i.i.i.i = shl i64 %55, 56
  %or46.i.i.i.i = or i64 %shl45.i.i.i.i, %shr44.i.i.i.i
  store i64 %or46.i.i.i.i, i64* %arrayidx48.i.i.i.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #19
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %s, %struct.secp256k1_scalar* noundef nonnull %s, %struct.secp256k1_scalar* noundef nonnull %n.i.i) #19
  %56 = load i64, i64* %arrayidx48.i.i.i.i, align 8, !tbaa !13
  %cmp.i.i20.i = icmp ult i64 %56, 9223372036854775807
  %conv.i61.i.i = zext i1 %cmp.i.i20.i to i32
  %.lobit.i.i.i = lshr i64 %56, 63
  %57 = trunc i64 %.lobit.i.i.i to i32
  %58 = load i64, i64* %arrayidx43.i.i.i.i, align 8, !tbaa !13
  %cmp8.i.i.i = icmp ne i64 %58, -1
  %conv9.i.i.i = zext i1 %cmp8.i.i.i to i32
  %neg10.i.i.i = xor i32 %57, -1
  %and11.i63.i.i = and i32 %conv9.i.i.i, %neg10.i.i.i
  %or12.i.i.i = or i32 %and11.i63.i.i, %conv.i61.i.i
  %59 = load i64, i64* %arrayidx38.i.i.i.i, align 8, !tbaa !13
  %cmp15.i.i.i = icmp ult i64 %59, 6725966010171805725
  %conv16.i.i.i = zext i1 %cmp15.i.i.i to i32
  %and18.i64.i.i = and i32 %conv16.i.i.i, %neg10.i.i.i
  %or19.i.i.i = or i32 %or12.i.i.i, %and18.i64.i.i
  %cmp22.i.i.i = icmp ugt i64 %59, 6725966010171805725
  %conv23.i.i.i = zext i1 %cmp22.i.i.i to i32
  %neg24.i.i.i = xor i32 %or19.i.i.i, -1
  %and25.i.i.i = and i32 %neg24.i.i.i, %conv23.i.i.i
  %or26.i.i.i = or i32 %and25.i.i.i, %57
  %60 = load i64, i64* %arrayidx33.i.i.i.i, align 8, !tbaa !13
  %cmp29.i.i.i = icmp ugt i64 %60, -2312264954237214560
  %conv30.i.i.i = zext i1 %cmp29.i.i.i to i32
  %and32.i.i.i = and i32 %neg24.i.i.i, %conv30.i.i.i
  %or33.i.i.i = or i32 %or26.i.i.i, %and32.i.i.i
  %tobool.not.i.i.i = icmp ne i32 %or33.i.i.i, 0
  %conv.i65.i.i = sext i1 %tobool.not.i.i.i to i64
  %or.i.i68.i.i = or i64 %58, %56
  %or5.i.i70.i.i = or i64 %or.i.i68.i.i, %59
  %or8.i.i.i.i = or i64 %or5.i.i70.i.i, %60
  %cmp.i.i72.i.i = icmp ne i64 %or8.i.i.i.i, 0
  %conv3.i.i.i = sext i1 %cmp.i.i72.i.i to i64
  %xor.i.i.i = xor i64 %60, %conv.i65.i.i
  %conv.i4.i.i.i = zext i64 %xor.i.i.i to i128
  %conv.i5.i.i.i = select i1 %tobool.not.i.i.i, i128 13822214165235122498, i128 0
  %add.i.i73.i.i = add nuw nsw i128 %conv.i5.i.i.i, %conv.i4.i.i.i
  %conv.i6.i74.i.i = trunc i128 %add.i.i73.i.i to i64
  %and5.i.i.i = and i64 %conv.i6.i74.i.i, %conv3.i.i.i
  store i64 %and5.i.i.i, i64* %arrayidx33.i.i.i.i, align 8, !tbaa !13
  %shr.i.i75.i.i = lshr i128 %add.i.i73.i.i, 64
  %xor10.i.i.i = xor i64 %59, %conv.i65.i.i
  %conv.i7.i76.i.i = zext i64 %xor10.i.i.i to i128
  %conv.i9.i.i.i = select i1 %tobool.not.i.i.i, i128 13451932020343611451, i128 0
  %add.i8.i.i.i = add nuw nsw i128 %conv.i9.i.i.i, %conv.i7.i76.i.i
  %add.i10.i.i.i = add nuw nsw i128 %add.i8.i.i.i, %shr.i.i75.i.i
  %conv.i11.i.i.i = trunc i128 %add.i10.i.i.i to i64
  %and13.i.i.i = and i64 %conv.i11.i.i.i, %conv3.i.i.i
  store i64 %and13.i.i.i, i64* %arrayidx38.i.i.i.i, align 8, !tbaa !13
  %shr.i12.i.i.i = lshr i128 %add.i10.i.i.i, 64
  %xor18.i.i.i = xor i64 %58, %conv.i65.i.i
  %conv.i13.i.i.i = zext i64 %xor18.i.i.i to i128
  %conv.i15.i.i.i = select i1 %tobool.not.i.i.i, i128 18446744073709551614, i128 0
  %add.i14.i.i.i = add nuw nsw i128 %conv.i15.i.i.i, %conv.i13.i.i.i
  %add.i16.i.i.i = add nuw nsw i128 %add.i14.i.i.i, %shr.i12.i.i.i
  %conv.i17.i.i.i = trunc i128 %add.i16.i.i.i to i64
  %and21.i77.i.i = and i64 %conv.i17.i.i.i, %conv3.i.i.i
  store i64 %and21.i77.i.i, i64* %arrayidx43.i.i.i.i, align 8, !tbaa !13
  %shr.i18.i.i.i = lshr i128 %add.i16.i.i.i, 64
  %xor26.i.i.i = xor i64 %56, %conv.i65.i.i
  %61 = trunc i128 %shr.i18.i.i.i to i64
  %62 = add i64 %xor26.i.i.i, %conv.i65.i.i
  %conv.i23.i.i.i = add i64 %62, %61
  %and29.i.i.i = and i64 %conv.i23.i.i.i, %conv3.i.i.i
  store i64 %and29.i.i.i, i64* %arrayidx48.i.i.i.i, align 8, !tbaa !13
  %63 = load i64, i64* %arrayidx.i78.i.i, align 8, !tbaa !13
  %64 = load i64, i64* %arrayidx2.i79.i.i, align 8, !tbaa !13
  %or.i80.i.i = or i64 %64, %63
  %65 = load i64, i64* %arrayidx4.i81.i.i, align 8, !tbaa !13
  %or5.i.i21.i = or i64 %or.i80.i.i, %65
  %66 = load i64, i64* %arrayidx7.i82.i.i, align 8, !tbaa !13
  %or8.i.i22.i = or i64 %or5.i.i21.i, %66
  %cmp.i83.i.i = icmp eq i64 %or8.i.i22.i, 0
  %or.i87.i.i = or i64 %and13.i.i.i, %and5.i.i.i
  %or5.i89.i.i = or i64 %or.i87.i.i, %and21.i77.i.i
  %or8.i91.i.i = or i64 %or5.i89.i.i, %and29.i.i.i
  %cmp.i92.i.i = icmp eq i64 %or8.i91.i.i, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %17) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #19
  %tobool18.not.i = or i1 %cmp.i83.i.i, %cmp.i92.i.i
  br i1 %tobool18.not.i, label %cleanup.i, label %secp256k1_ecdsa_sign_inner.exit

cleanup.i:                                        ; preds = %if.then16.i, %if.end12.i
  %67 = phi i64 [ %and29.i.i.i, %if.then16.i ], [ %25, %if.end12.i ]
  %68 = phi i64 [ %and21.i77.i.i, %if.then16.i ], [ %26, %if.end12.i ]
  %69 = phi i64 [ %and13.i.i.i, %if.then16.i ], [ %27, %if.end12.i ]
  %70 = phi i64 [ %and5.i.i.i, %if.then16.i ], [ %28, %if.end12.i ]
  %71 = phi i64 [ %66, %if.then16.i ], [ %29, %if.end12.i ]
  %72 = phi i64 [ %65, %if.then16.i ], [ %30, %if.end12.i ]
  %73 = phi i64 [ %64, %if.then16.i ], [ %31, %if.end12.i ]
  %74 = phi i64 [ %63, %if.then16.i ], [ %32, %if.end12.i ]
  %inc.i = add i32 %count.055.i, 1
  %call4.i = call i32 %spec.store.select.i(i8* noundef nonnull %5, i8* noundef nonnull %msghash32, i8* noundef nonnull %seckey, i8* noundef null, i8* noundef %noncedata, i32 noundef %inc.i) #19
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %secp256k1_ecdsa_sign_inner.exit, label %if.end12.i

secp256k1_ecdsa_sign_inner.exit:                  ; preds = %if.then16.i, %cleanup.i, %do.end44
  %75 = phi i64 [ 0, %do.end44 ], [ %and29.i.i.i, %if.then16.i ], [ %67, %cleanup.i ]
  %76 = phi i64 [ 0, %do.end44 ], [ %and21.i77.i.i, %if.then16.i ], [ %68, %cleanup.i ]
  %77 = phi i64 [ 0, %do.end44 ], [ %and13.i.i.i, %if.then16.i ], [ %69, %cleanup.i ]
  %78 = phi i64 [ 0, %do.end44 ], [ %and5.i.i.i, %if.then16.i ], [ %70, %cleanup.i ]
  %79 = phi i64 [ 0, %do.end44 ], [ %66, %if.then16.i ], [ %71, %cleanup.i ]
  %80 = phi i64 [ 0, %do.end44 ], [ %65, %if.then16.i ], [ %72, %cleanup.i ]
  %81 = phi i64 [ 0, %do.end44 ], [ %64, %if.then16.i ], [ %73, %cleanup.i ]
  %82 = phi i64 [ 0, %do.end44 ], [ %63, %if.then16.i ], [ %74, %cleanup.i ]
  %ret.1.ph.i = phi i32 [ 0, %do.end44 ], [ 1, %if.then16.i ], [ 0, %cleanup.i ]
  %and.i.i = zext i1 %13 to i32
  %and.i = and i32 %ret.1.ph.i, %and.i.i
  %83 = xor i32 %and.i, 1
  %84 = zext i32 %83 to i64
  %add.i24.i = add nsw i64 %84, -1
  %arrayidx.i26.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 0
  %and.i27.i = and i64 %add.i24.i, %82
  store i64 %and.i27.i, i64* %arrayidx.i26.i, align 8, !tbaa !13
  %arrayidx7.i28.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 1
  %and8.i29.i = and i64 %add.i24.i, %81
  store i64 %and8.i29.i, i64* %arrayidx7.i28.i, align 8, !tbaa !13
  %arrayidx16.i30.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 2
  %and17.i31.i = and i64 %80, %add.i24.i
  store i64 %and17.i31.i, i64* %arrayidx16.i30.i, align 8, !tbaa !13
  %arrayidx25.i32.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 3
  %and26.i33.i = and i64 %79, %add.i24.i
  store i64 %and26.i33.i, i64* %arrayidx25.i32.i, align 8, !tbaa !13
  %arrayidx.i36.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 0
  %and.i37.i = and i64 %78, %add.i24.i
  store i64 %and.i37.i, i64* %arrayidx.i36.i, align 8, !tbaa !13
  %arrayidx7.i38.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 1
  %and8.i39.i = and i64 %77, %add.i24.i
  store i64 %and8.i39.i, i64* %arrayidx7.i38.i, align 8, !tbaa !13
  %arrayidx16.i40.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 2
  %and17.i41.i = and i64 %76, %add.i24.i
  store i64 %and17.i41.i, i64* %arrayidx16.i40.i, align 8, !tbaa !13
  %arrayidx25.i42.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 3
  %and26.i43.i = and i64 %75, %add.i24.i
  store i64 %and26.i43.i, i64* %arrayidx25.i42.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #19
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %signature, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %arrayidx.i, i8* noundef nonnull align 8 dereferenceable(32) %0, i64 32, i1 false) #19
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_ecdsa_signature, %struct.secp256k1_ecdsa_signature* %signature, i64 0, i32 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %arrayidx2.i, i8* noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false) #19
  br label %cleanup

cleanup:                                          ; preds = %secp256k1_ecdsa_sign_inner.exit, %if.then40, %if.then27, %if.then14, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then14 ], [ 0, %if.then27 ], [ 0, %if.then40 ], [ %and.i, %secp256k1_ecdsa_sign_inner.exit ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_seckey_verify(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey) local_unnamed_addr #0 {
entry:
  %overflow.i = alloca i32, align 4
  %sec = alloca <4 x i64>, align 8
  %0 = bitcast <4 x i64>* %sec to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %cmp2.not = icmp eq i8* %seckey, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx11 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx11.val = load i8*, i8** %illegal_callback.idx11, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* noundef %illegal_callback.idx11.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %tmpcast = bitcast <4 x i64>* %sec to %struct.secp256k1_scalar*
  %1 = bitcast i32* %overflow.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %tmpcast, i8* noundef nonnull %seckey, i32* noundef nonnull %overflow.i) #19
  %2 = load i32, i32* %overflow.i, align 4, !tbaa !3
  %3 = load <4 x i64>, <4 x i64>* %sec, align 8, !tbaa !13
  %4 = call i64 @llvm.vector.reduce.or.v4i64(<4 x i64> %3)
  %cmp.i.i = icmp eq i64 %4, 0
  %conv.i.i = zext i1 %cmp.i.i to i32
  %5 = or i32 %2, %conv.i.i
  %6 = icmp eq i32 %5, 0
  %and.i = zext i1 %6 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end6, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %and.i, %do.end6 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_create(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef %pubkey, i8* noundef %seckey) local_unnamed_addr #0 {
entry:
  %vflag.i = alloca i32, align 4
  %overflow.i.i = alloca i32, align 4
  %pj.i = alloca %struct.secp256k1_gej, align 8
  %p = alloca %struct.secp256k1_ge, align 8
  %seckey_scalar = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_ge* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_scalar* %seckey_scalar to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %cmp2.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx52 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx52.val = load i8*, i8** %illegal_callback.idx52, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback.idx52.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %2 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %2, i8 0, i64 64, i1 false)
  %ecmult_gen_ctx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0
  %ecmult_gen_ctx.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 0
  %ecmult_gen_ctx.idx.val = load i32, i32* %ecmult_gen_ctx.idx, align 8, !tbaa !19
  %tobool8.not = icmp eq i32 %ecmult_gen_ctx.idx.val, 0
  br i1 %tobool8.not, label %if.then14, label %do.body19, !prof !26

if.then14:                                        ; preds = %do.end6
  %illegal_callback15.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback15.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback15.idx, align 8, !tbaa !27
  %illegal_callback15.idx51 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback15.idx51.val = load i8*, i8** %illegal_callback15.idx51, align 8, !tbaa !28
  tail call void %illegal_callback15.idx.val(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15, i64 0, i64 0), i8* noundef %illegal_callback15.idx51.val) #19
  br label %cleanup

do.body19:                                        ; preds = %do.end6
  %cmp20.not = icmp eq i8* %seckey, null
  br i1 %cmp20.not, label %if.then27, label %do.end31, !prof !26

if.then27:                                        ; preds = %do.body19
  %illegal_callback28.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback28.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback28.idx, align 8, !tbaa !27
  %illegal_callback28.idx50 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback28.idx50.val = load i8*, i8** %illegal_callback28.idx50, align 8, !tbaa !28
  tail call void %illegal_callback28.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* noundef %illegal_callback28.idx50.val) #19
  br label %cleanup

do.end31:                                         ; preds = %do.body19
  %3 = bitcast %struct.secp256k1_gej* %pj.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #19
  %4 = bitcast i32* %overflow.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %seckey_scalar, i8* noundef nonnull %seckey, i32* noundef nonnull %overflow.i.i) #19
  %5 = load i32, i32* %overflow.i.i, align 4, !tbaa !3
  %arrayidx.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %seckey_scalar, i64 0, i32 0, i64 0
  %6 = load i64, i64* %arrayidx.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %seckey_scalar, i64 0, i32 0, i64 1
  %7 = load i64, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %or.i.i.i = or i64 %7, %6
  %arrayidx4.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %seckey_scalar, i64 0, i32 0, i64 2
  %8 = load i64, i64* %arrayidx4.i.i.i, align 8, !tbaa !13
  %or5.i.i.i = or i64 %or.i.i.i, %8
  %arrayidx7.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %seckey_scalar, i64 0, i32 0, i64 3
  %9 = load i64, i64* %arrayidx7.i.i.i, align 8, !tbaa !13
  %or8.i.i.i = or i64 %or5.i.i.i, %9
  %cmp.i.i.i = icmp eq i64 %or8.i.i.i, 0
  %conv.i.i.i = zext i1 %cmp.i.i.i to i32
  %10 = or i32 %5, %conv.i.i.i
  %11 = icmp eq i32 %10, 0
  %and.i.i = zext i1 %11 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  %tobool.not.i = xor i1 %11, true
  %.neg6.i = zext i1 %tobool.not.i to i64
  %add.i.i = sext i1 %11 to i64
  %and.i5.i = and i64 %6, %add.i.i
  %or.i.i = or i64 %and.i5.i, %.neg6.i
  store i64 %or.i.i, i64* %arrayidx.i.i.i, align 8, !tbaa !13
  %and8.i.i = and i64 %7, %add.i.i
  store i64 %and8.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %and17.i.i = and i64 %8, %add.i.i
  store i64 %and17.i.i, i64* %arrayidx4.i.i.i, align 8, !tbaa !13
  %and26.i.i = and i64 %9, %add.i.i
  store i64 %and26.i.i, i64* %arrayidx7.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_ecmult_gen(%struct.secp256k1_ecmult_gen_context* noundef nonnull %ecmult_gen_ctx, %struct.secp256k1_gej* noundef nonnull %pj.i, %struct.secp256k1_scalar* noundef nonnull %seckey_scalar) #19
  call fastcc void @secp256k1_ge_set_gej(%struct.secp256k1_ge* noundef nonnull %p, %struct.secp256k1_gej* noundef nonnull %pj.i) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #19
  call fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* noundef nonnull %pubkey, %struct.secp256k1_ge* noundef nonnull %p)
  %lnot.ext36 = zext i1 %tobool.not.i to i32
  %vflag.i.0.sroa_cast54 = bitcast i32* %vflag.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %vflag.i.0.sroa_cast54)
  store volatile i32 %lnot.ext36, i32* %vflag.i, align 4, !tbaa !3
  %vflag.i.0.vflag.i.0.vflag.0.vflag.0.vflag.0..i = load volatile i32, i32* %vflag.i, align 4, !tbaa !3
  %12 = trunc i32 %vflag.i.0.vflag.i.0.vflag.0.vflag.0.vflag.0..i to i8
  %13 = add i8 %12, -1
  %14 = bitcast %struct.secp256k1_pubkey* %pubkey to <16 x i8>*
  %15 = load <16 x i8>, <16 x i8>* %14, align 1, !tbaa !10
  %16 = insertelement <16 x i8> poison, i8 %13, i64 0
  %shuffle = shufflevector <16 x i8> %16, <16 x i8> poison, <16 x i32> zeroinitializer
  %17 = and <16 x i8> %shuffle, %15
  %18 = bitcast %struct.secp256k1_pubkey* %pubkey to <16 x i8>*
  store <16 x i8> %17, <16 x i8>* %18, align 1, !tbaa !10
  %incdec.ptr.15.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %19 = bitcast i8* %incdec.ptr.15.i to <16 x i8>*
  %20 = load <16 x i8>, <16 x i8>* %19, align 1, !tbaa !10
  %21 = and <16 x i8> %20, %shuffle
  %22 = bitcast i8* %incdec.ptr.15.i to <16 x i8>*
  store <16 x i8> %21, <16 x i8>* %22, align 1, !tbaa !10
  %incdec.ptr.31.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %23 = bitcast i8* %incdec.ptr.31.i to <16 x i8>*
  %24 = load <16 x i8>, <16 x i8>* %23, align 1, !tbaa !10
  %25 = and <16 x i8> %24, %shuffle
  %26 = bitcast i8* %incdec.ptr.31.i to <16 x i8>*
  store <16 x i8> %25, <16 x i8>* %26, align 1, !tbaa !10
  %incdec.ptr.47.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %27 = bitcast i8* %incdec.ptr.47.i to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1, !tbaa !10
  %29 = and <16 x i8> %28, %shuffle
  %30 = bitcast i8* %incdec.ptr.47.i to <16 x i8>*
  store <16 x i8> %29, <16 x i8>* %30, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %vflag.i.0.sroa_cast54)
  br label %cleanup

cleanup:                                          ; preds = %do.end31, %if.then27, %if.then14, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then14 ], [ 0, %if.then27 ], [ %and.i.i, %do.end31 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_seckey_negate(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey) local_unnamed_addr #0 {
entry:
  %overflow.i = alloca i32, align 4
  %sec = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_scalar* %sec to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %cmp2.not = icmp eq i8* %seckey, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx16 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx16.val = load i8*, i8** %illegal_callback.idx16, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* noundef %illegal_callback.idx16.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %1 = bitcast i32* %overflow.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %sec, i8* noundef nonnull %seckey, i32* noundef nonnull %overflow.i) #19
  %2 = load i32, i32* %overflow.i, align 4, !tbaa !3
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 0
  %3 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 1
  %4 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %or.i.i = or i64 %4, %3
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 2
  %5 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %or5.i.i = or i64 %or.i.i, %5
  %arrayidx7.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 3
  %6 = load i64, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %or8.i.i = or i64 %or5.i.i, %6
  %cmp.i.i = icmp eq i64 %or8.i.i, 0
  %conv.i.i = zext i1 %cmp.i.i to i32
  %7 = or i32 %2, %conv.i.i
  %8 = icmp eq i32 %7, 0
  %and.i = zext i1 %8 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #19
  %add.i = sext i1 %8 to i64
  %and.i17 = and i64 %3, %add.i
  %and8.i = and i64 %4, %add.i
  %and17.i = and i64 %5, %add.i
  %and26.i = and i64 %6, %add.i
  %or.i.i20 = or i64 %and8.i, %and.i17
  %or5.i.i22 = or i64 %or.i.i20, %and17.i
  %or8.i.i24 = or i64 %or5.i.i22, %and26.i
  %cmp.i.i25 = icmp ne i64 %or8.i.i24, 0
  %.neg.i = sext i1 %cmp.i.i25 to i64
  %neg.i26 = xor i64 %and.i17, -1
  %conv.i40.i = zext i64 %neg.i26 to i128
  %add.i.i = add nuw nsw i128 %conv.i40.i, 13822214165235122498
  %conv.i41.i = trunc i128 %add.i.i to i64
  %and.i27 = and i64 %.neg.i, %conv.i41.i
  store i64 %and.i27, i64* %arrayidx.i.i, align 8, !tbaa !13
  %shr.i.i = lshr i128 %add.i.i, 64
  %neg7.i = xor i64 %and8.i, -1
  %conv.i42.i = zext i64 %neg7.i to i128
  %add.i43.i = add nuw nsw i128 %conv.i42.i, 13451932020343611451
  %add.i44.i = add nuw nsw i128 %add.i43.i, %shr.i.i
  %conv.i45.i = trunc i128 %add.i44.i to i64
  %and9.i = and i64 %conv.i45.i, %.neg.i
  store i64 %and9.i, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %shr.i46.i = lshr i128 %add.i44.i, 64
  %neg14.i = xor i64 %and17.i, -1
  %conv.i47.i = zext i64 %neg14.i to i128
  %add.i48.i = add nuw nsw i128 %conv.i47.i, 18446744073709551614
  %add.i49.i = add nuw nsw i128 %add.i48.i, %shr.i46.i
  %conv.i50.i = trunc i128 %add.i49.i to i64
  %and16.i = and i64 %conv.i50.i, %.neg.i
  store i64 %and16.i, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %shr.i51.i = lshr i128 %add.i49.i, 64
  %9 = trunc i128 %shr.i51.i to i64
  %10 = sub i64 -2, %and26.i
  %conv.i55.i = add i64 %10, %9
  %and23.i = and i64 %conv.i55.i, %.neg.i
  store i64 %and23.i, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %shr.i = lshr i64 %and23.i, 56
  %conv.i = trunc i64 %shr.i to i8
  store i8 %conv.i, i8* %seckey, align 1, !tbaa !10
  %shr4.i = lshr i64 %and23.i, 48
  %conv5.i = trunc i64 %shr4.i to i8
  %arrayidx6.i = getelementptr inbounds i8, i8* %seckey, i64 1
  store i8 %conv5.i, i8* %arrayidx6.i, align 1, !tbaa !10
  %shr9.i = lshr i64 %and23.i, 40
  %conv10.i = trunc i64 %shr9.i to i8
  %arrayidx11.i30 = getelementptr inbounds i8, i8* %seckey, i64 2
  store i8 %conv10.i, i8* %arrayidx11.i30, align 1, !tbaa !10
  %shr14.i = lshr i64 %and23.i, 32
  %conv15.i = trunc i64 %shr14.i to i8
  %arrayidx16.i31 = getelementptr inbounds i8, i8* %seckey, i64 3
  store i8 %conv15.i, i8* %arrayidx16.i31, align 1, !tbaa !10
  %shr19.i = lshr i64 %and23.i, 24
  %conv20.i = trunc i64 %shr19.i to i8
  %arrayidx21.i = getelementptr inbounds i8, i8* %seckey, i64 4
  store i8 %conv20.i, i8* %arrayidx21.i, align 1, !tbaa !10
  %shr24.i = lshr i64 %and23.i, 16
  %conv25.i = trunc i64 %shr24.i to i8
  %arrayidx26.i = getelementptr inbounds i8, i8* %seckey, i64 5
  store i8 %conv25.i, i8* %arrayidx26.i, align 1, !tbaa !10
  %shr29.i = lshr i64 %and23.i, 8
  %conv30.i = trunc i64 %shr29.i to i8
  %arrayidx31.i = getelementptr inbounds i8, i8* %seckey, i64 6
  store i8 %conv30.i, i8* %arrayidx31.i, align 1, !tbaa !10
  %conv34.i = trunc i64 %and23.i to i8
  %arrayidx35.i = getelementptr inbounds i8, i8* %seckey, i64 7
  store i8 %conv34.i, i8* %arrayidx35.i, align 1, !tbaa !10
  %shr38.i = lshr i64 %and16.i, 56
  %conv39.i = trunc i64 %shr38.i to i8
  %arrayidx40.i = getelementptr inbounds i8, i8* %seckey, i64 8
  store i8 %conv39.i, i8* %arrayidx40.i, align 1, !tbaa !10
  %shr43.i = lshr i64 %and16.i, 48
  %conv44.i = trunc i64 %shr43.i to i8
  %arrayidx45.i = getelementptr inbounds i8, i8* %seckey, i64 9
  store i8 %conv44.i, i8* %arrayidx45.i, align 1, !tbaa !10
  %shr48.i = lshr i64 %and16.i, 40
  %conv49.i = trunc i64 %shr48.i to i8
  %arrayidx50.i = getelementptr inbounds i8, i8* %seckey, i64 10
  store i8 %conv49.i, i8* %arrayidx50.i, align 1, !tbaa !10
  %shr53.i = lshr i64 %and16.i, 32
  %conv54.i = trunc i64 %shr53.i to i8
  %arrayidx55.i = getelementptr inbounds i8, i8* %seckey, i64 11
  store i8 %conv54.i, i8* %arrayidx55.i, align 1, !tbaa !10
  %shr58.i = lshr i64 %and16.i, 24
  %conv59.i = trunc i64 %shr58.i to i8
  %arrayidx60.i = getelementptr inbounds i8, i8* %seckey, i64 12
  store i8 %conv59.i, i8* %arrayidx60.i, align 1, !tbaa !10
  %shr63.i = lshr i64 %and16.i, 16
  %conv64.i = trunc i64 %shr63.i to i8
  %arrayidx65.i = getelementptr inbounds i8, i8* %seckey, i64 13
  store i8 %conv64.i, i8* %arrayidx65.i, align 1, !tbaa !10
  %shr68.i = lshr i64 %and16.i, 8
  %conv69.i = trunc i64 %shr68.i to i8
  %arrayidx70.i = getelementptr inbounds i8, i8* %seckey, i64 14
  store i8 %conv69.i, i8* %arrayidx70.i, align 1, !tbaa !10
  %conv73.i = trunc i64 %and16.i to i8
  %arrayidx74.i = getelementptr inbounds i8, i8* %seckey, i64 15
  store i8 %conv73.i, i8* %arrayidx74.i, align 1, !tbaa !10
  %shr77.i = lshr i64 %and9.i, 56
  %conv78.i = trunc i64 %shr77.i to i8
  %arrayidx79.i = getelementptr inbounds i8, i8* %seckey, i64 16
  store i8 %conv78.i, i8* %arrayidx79.i, align 1, !tbaa !10
  %shr82.i = lshr i64 %and9.i, 48
  %conv83.i = trunc i64 %shr82.i to i8
  %arrayidx84.i = getelementptr inbounds i8, i8* %seckey, i64 17
  store i8 %conv83.i, i8* %arrayidx84.i, align 1, !tbaa !10
  %shr87.i = lshr i64 %and9.i, 40
  %conv88.i = trunc i64 %shr87.i to i8
  %arrayidx89.i = getelementptr inbounds i8, i8* %seckey, i64 18
  store i8 %conv88.i, i8* %arrayidx89.i, align 1, !tbaa !10
  %shr92.i = lshr i64 %and9.i, 32
  %conv93.i = trunc i64 %shr92.i to i8
  %arrayidx94.i = getelementptr inbounds i8, i8* %seckey, i64 19
  store i8 %conv93.i, i8* %arrayidx94.i, align 1, !tbaa !10
  %shr97.i = lshr i64 %and9.i, 24
  %conv98.i = trunc i64 %shr97.i to i8
  %arrayidx99.i = getelementptr inbounds i8, i8* %seckey, i64 20
  store i8 %conv98.i, i8* %arrayidx99.i, align 1, !tbaa !10
  %shr102.i = lshr i64 %and9.i, 16
  %conv103.i = trunc i64 %shr102.i to i8
  %arrayidx104.i = getelementptr inbounds i8, i8* %seckey, i64 21
  store i8 %conv103.i, i8* %arrayidx104.i, align 1, !tbaa !10
  %shr107.i = lshr i64 %and9.i, 8
  %conv108.i = trunc i64 %shr107.i to i8
  %arrayidx109.i = getelementptr inbounds i8, i8* %seckey, i64 22
  store i8 %conv108.i, i8* %arrayidx109.i, align 1, !tbaa !10
  %conv112.i = trunc i64 %and9.i to i8
  %arrayidx113.i = getelementptr inbounds i8, i8* %seckey, i64 23
  store i8 %conv112.i, i8* %arrayidx113.i, align 1, !tbaa !10
  %shr116.i = lshr i64 %and.i27, 56
  %conv117.i = trunc i64 %shr116.i to i8
  %arrayidx118.i = getelementptr inbounds i8, i8* %seckey, i64 24
  store i8 %conv117.i, i8* %arrayidx118.i, align 1, !tbaa !10
  %shr121.i = lshr i64 %and.i27, 48
  %conv122.i = trunc i64 %shr121.i to i8
  %arrayidx123.i = getelementptr inbounds i8, i8* %seckey, i64 25
  store i8 %conv122.i, i8* %arrayidx123.i, align 1, !tbaa !10
  %shr126.i = lshr i64 %and.i27, 40
  %conv127.i = trunc i64 %shr126.i to i8
  %arrayidx128.i = getelementptr inbounds i8, i8* %seckey, i64 26
  store i8 %conv127.i, i8* %arrayidx128.i, align 1, !tbaa !10
  %shr131.i = lshr i64 %and.i27, 32
  %conv132.i = trunc i64 %shr131.i to i8
  %arrayidx133.i = getelementptr inbounds i8, i8* %seckey, i64 27
  store i8 %conv132.i, i8* %arrayidx133.i, align 1, !tbaa !10
  %shr136.i = lshr i64 %and.i27, 24
  %conv137.i = trunc i64 %shr136.i to i8
  %arrayidx138.i = getelementptr inbounds i8, i8* %seckey, i64 28
  store i8 %conv137.i, i8* %arrayidx138.i, align 1, !tbaa !10
  %shr141.i = lshr i64 %and.i27, 16
  %conv142.i = trunc i64 %shr141.i to i8
  %arrayidx143.i = getelementptr inbounds i8, i8* %seckey, i64 29
  store i8 %conv142.i, i8* %arrayidx143.i, align 1, !tbaa !10
  %shr146.i = lshr i64 %and.i27, 8
  %conv147.i = trunc i64 %shr146.i to i8
  %arrayidx148.i = getelementptr inbounds i8, i8* %seckey, i64 30
  store i8 %conv147.i, i8* %arrayidx148.i, align 1, !tbaa !10
  %conv151.i = trunc i64 %and.i27 to i8
  %arrayidx152.i = getelementptr inbounds i8, i8* %seckey, i64 31
  store i8 %conv151.i, i8* %arrayidx152.i, align 1, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %do.end6, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %and.i, %do.end6 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_privkey_negate(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @secp256k1_ec_seckey_negate(%struct.secp256k1_context_struct* noundef %ctx, i8* noundef %seckey)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_negate(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef %pubkey) local_unnamed_addr #0 {
entry:
  %p = alloca %struct.secp256k1_ge, align 8
  %0 = bitcast %struct.secp256k1_ge* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %0) #19
  %cmp2.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx18 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx18.val = load i8*, i8** %illegal_callback.idx18, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback.idx18.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %s.sroa.0.0.arrayidx.sroa_cast.i = bitcast %struct.secp256k1_pubkey* %pubkey to i64*
  %s.sroa.0.0.copyload.i = load i64, i64* %s.sroa.0.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.5.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 8
  %s.sroa.5.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.5.0.copyload.i = load i64, i64* %s.sroa.5.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.7.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %s.sroa.7.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.7.0.copyload.i = load i64, i64* %s.sroa.7.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.9.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 24
  %s.sroa.9.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.9.0.copyload.i = load i64, i64* %s.sroa.9.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.11.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %s.sroa.11.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.11.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.11.0.copyload.i = load i64, i64* %s.sroa.11.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.13.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 40
  %s.sroa.13.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.13.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.13.0.copyload.i = load i64, i64* %s.sroa.13.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.15.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %s.sroa.15.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.15.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.15.0.copyload.i = load i64, i64* %s.sroa.15.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.17.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 56
  %s.sroa.17.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.17.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.17.0.copyload.i = load i64, i64* %s.sroa.17.0.arrayidx.sroa_cast.i, align 1
  %and.i.i.i = and i64 %s.sroa.0.0.copyload.i, 4503599627370495
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 0
  store i64 %and.i.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i64 %s.sroa.0.0.copyload.i, 52
  %shl.i.i.i = shl i64 %s.sroa.5.0.copyload.i, 12
  %and7.i.i.i = and i64 %shl.i.i.i, 4503599627366400
  %or.i.i.i = or i64 %and7.i.i.i, %shr.i.i.i
  %arrayidx9.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 1
  store i64 %or.i.i.i, i64* %arrayidx9.i.i.i, align 8, !tbaa !13
  %shr12.i.i.i = lshr i64 %s.sroa.5.0.copyload.i, 40
  %shl15.i.i.i = shl i64 %s.sroa.7.0.copyload.i, 24
  %and16.i.i.i = and i64 %shl15.i.i.i, 4503599610593280
  %or17.i.i.i = or i64 %and16.i.i.i, %shr12.i.i.i
  %arrayidx19.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 2
  store i64 %or17.i.i.i, i64* %arrayidx19.i.i.i, align 8, !tbaa !13
  %shr22.i.i.i = lshr i64 %s.sroa.7.0.copyload.i, 28
  %shl25.i.i.i = shl i64 %s.sroa.9.0.copyload.i, 36
  %and26.i.i.i = and i64 %shl25.i.i.i, 4503530907893760
  %or27.i.i.i = or i64 %and26.i.i.i, %shr22.i.i.i
  %arrayidx29.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 3
  store i64 %or27.i.i.i, i64* %arrayidx29.i.i.i, align 8, !tbaa !13
  %shr32.i.i.i = lshr i64 %s.sroa.9.0.copyload.i, 16
  %arrayidx34.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 4
  store i64 %shr32.i.i.i, i64* %arrayidx34.i.i.i, align 8, !tbaa !13
  %infinity.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 2
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !37
  %or.i.i = or i64 %or.i.i.i, %and.i.i.i
  %or3.i.i = or i64 %or.i.i, %shr32.i.i.i
  %or5.i.i = or i64 %or3.i.i, %or17.i.i.i
  %or7.i.i = or i64 %or5.i.i, %or27.i.i.i
  %cmp.i.not.i = icmp eq i64 %or7.i.i, 0
  br i1 %cmp.i.not.i, label %secp256k1_pubkey_load.exit.thread, label %if.then8, !prof !26

secp256k1_pubkey_load.exit.thread:                ; preds = %do.end6
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx4.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx4.val.i = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* noundef %illegal_callback.idx4.val.i) #19
  %1 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %1, i8 0, i64 64, i1 false)
  br label %cleanup

if.then8:                                         ; preds = %do.end6
  %arrayidx34.i28.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 4
  %shr32.i27.i.i = lshr i64 %s.sroa.17.0.copyload.i, 16
  %arrayidx29.i26.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 3
  %shl25.i23.i.i = shl i64 %s.sroa.17.0.copyload.i, 36
  %and26.i24.i.i = and i64 %shl25.i23.i.i, 4503530907893760
  %shr22.i21.i.i = lshr i64 %s.sroa.15.0.copyload.i, 28
  %or27.i25.i.i = or i64 %and26.i24.i.i, %shr22.i21.i.i
  %arrayidx19.i20.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 2
  %shl15.i17.i.i = shl i64 %s.sroa.15.0.copyload.i, 24
  %and16.i18.i.i = and i64 %shl15.i17.i.i, 4503599610593280
  %shr12.i15.i.i = lshr i64 %s.sroa.13.0.copyload.i, 40
  %or17.i19.i.i = or i64 %and16.i18.i.i, %shr12.i15.i.i
  %arrayidx9.i14.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 1
  %shl.i11.i.i = shl i64 %s.sroa.13.0.copyload.i, 12
  %and7.i12.i.i = and i64 %shl.i11.i.i, 4503599627366400
  %shr.i9.i.i = lshr i64 %s.sroa.11.0.copyload.i, 52
  %or.i13.i.i = or i64 %and7.i12.i.i, %shr.i9.i.i
  %arrayidx2.i8.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 0
  %and.i7.i.i = and i64 %s.sroa.11.0.copyload.i, 4503599627370495
  %2 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %2, i8 0, i64 64, i1 false)
  %sub.i.i = sub nuw nsw i64 18014381329608892, %and.i7.i.i
  store i64 %sub.i.i, i64* %arrayidx2.i8.i.i, align 8, !tbaa !13
  %sub8.i.i = sub nuw nsw i64 18014398509481980, %or.i13.i.i
  store i64 %sub8.i.i, i64* %arrayidx9.i14.i.i, align 8, !tbaa !13
  %sub16.i.i = sub nuw nsw i64 18014398509481980, %or17.i19.i.i
  store i64 %sub16.i.i, i64* %arrayidx19.i20.i.i, align 8, !tbaa !13
  %sub24.i.i = sub nuw nsw i64 18014398509481980, %or27.i25.i.i
  store i64 %sub24.i.i, i64* %arrayidx29.i26.i.i, align 8, !tbaa !13
  %sub32.i.i = sub nuw nsw i64 1125899906842620, %shr32.i27.i.i
  store i64 %sub32.i.i, i64* %arrayidx34.i28.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* noundef nonnull %pubkey, %struct.secp256k1_ge* noundef nonnull %p)
  br label %cleanup

cleanup:                                          ; preds = %secp256k1_pubkey_load.exit.thread, %if.then8, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.then8 ], [ 0, %secp256k1_pubkey_load.exit.thread ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_seckey_tweak_add(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey, i8* noundef %tweak32) local_unnamed_addr #0 {
entry:
  %term.i = alloca %struct.secp256k1_scalar, align 8
  %overflow.i35 = alloca i32, align 4
  %overflow.i = alloca i32, align 4
  %sec = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_scalar* %sec to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %cmp2.not = icmp eq i8* %seckey, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx34 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx34.val = load i8*, i8** %illegal_callback.idx34, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* noundef %illegal_callback.idx34.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %tweak32, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx33 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx33.val = load i8*, i8** %illegal_callback16.idx33, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* noundef %illegal_callback16.idx33.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  %1 = bitcast i32* %overflow.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %sec, i8* noundef nonnull %seckey, i32* noundef nonnull %overflow.i) #19
  %2 = load i32, i32* %overflow.i, align 4, !tbaa !3
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 0
  %3 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 1
  %4 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %or.i.i = or i64 %4, %3
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 2
  %5 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %or5.i.i = or i64 %or.i.i, %5
  %arrayidx7.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %sec, i64 0, i32 0, i64 3
  %6 = load i64, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %or8.i.i = or i64 %or5.i.i, %6
  %cmp.i.i = icmp eq i64 %or8.i.i, 0
  %conv.i.i = zext i1 %cmp.i.i to i32
  %7 = or i32 %2, %conv.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #19
  %8 = bitcast %struct.secp256k1_scalar* %term.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #19
  %9 = bitcast i32* %overflow.i35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19
  store i32 0, i32* %overflow.i35, align 4, !tbaa !3
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %term.i, i8* noundef nonnull %tweak32, i32* noundef nonnull %overflow.i35) #19
  %10 = load i32, i32* %overflow.i35, align 4, !tbaa !3
  %conv.i.i.i.i = zext i64 %3 to i128
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %term.i, i64 0, i32 0, i64 0
  %11 = load i64, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %conv.i6.i.i.i = zext i64 %11 to i128
  %add.i.i.i.i = add nuw nsw i128 %conv.i6.i.i.i, %conv.i.i.i.i
  %conv.i7.i.i.i = trunc i128 %add.i.i.i.i to i64
  %shr.i.i.i.i = lshr i128 %add.i.i.i.i, 64
  %conv.i8.i.i.i = zext i64 %4 to i128
  %arrayidx8.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %term.i, i64 0, i32 0, i64 1
  %12 = load i64, i64* %arrayidx8.i.i.i, align 8, !tbaa !13
  %conv.i10.i.i.i = zext i64 %12 to i128
  %add.i9.i.i.i = add nuw nsw i128 %conv.i10.i.i.i, %conv.i8.i.i.i
  %add.i11.i.i.i = add nuw nsw i128 %add.i9.i.i.i, %shr.i.i.i.i
  %conv.i12.i.i.i = trunc i128 %add.i11.i.i.i to i64
  %shr.i13.i.i.i = lshr i128 %add.i11.i.i.i, 64
  %conv.i14.i.i.i = zext i64 %5 to i128
  %arrayidx15.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %term.i, i64 0, i32 0, i64 2
  %13 = load i64, i64* %arrayidx15.i.i.i, align 8, !tbaa !13
  %conv.i16.i.i.i = zext i64 %13 to i128
  %add.i15.i.i.i = add nuw nsw i128 %conv.i16.i.i.i, %conv.i14.i.i.i
  %add.i17.i.i.i = add nuw nsw i128 %add.i15.i.i.i, %shr.i13.i.i.i
  %conv.i18.i.i.i = trunc i128 %add.i17.i.i.i to i64
  %shr.i19.i.i.i = lshr i128 %add.i17.i.i.i, 64
  %conv.i20.i.i.i = zext i64 %6 to i128
  %arrayidx22.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %term.i, i64 0, i32 0, i64 3
  %14 = load i64, i64* %arrayidx22.i.i.i, align 8, !tbaa !13
  %conv.i22.i.i.i = zext i64 %14 to i128
  %add.i21.i.i.i = add nuw nsw i128 %conv.i22.i.i.i, %conv.i20.i.i.i
  %add.i23.i.i.i = add nuw nsw i128 %add.i21.i.i.i, %shr.i19.i.i.i
  %conv.i24.i.i.i = trunc i128 %add.i23.i.i.i to i64
  %shr.i25.i.i.i = lshr i128 %add.i23.i.i.i, 64
  %cmp.i.i.i.i = icmp ne i64 %conv.i24.i.i.i, -1
  %cmp3.i.i.i.i = icmp ult i64 %conv.i18.i.i.i, -2
  %or545.i.i.i.i = or i1 %cmp3.i.i.i.i, %cmp.i.i.i.i
  %or5.i.i.i.i = zext i1 %or545.i.i.i.i to i32
  %cmp8.i.i.i.i = icmp eq i64 %conv.i18.i.i.i, -1
  %conv9.i.i.i.i = zext i1 %cmp8.i.i.i.i to i32
  %neg.i.i.i.i = xor i32 %or5.i.i.i.i, -1
  %and.i.i.i.i = and i32 %neg.i.i.i.i, %conv9.i.i.i.i
  %cmp13.i.i.i.i = icmp ult i64 %conv.i12.i.i.i, -4994812053365940165
  %or1546.i.i.i.i = or i1 %cmp13.i.i.i.i, %or545.i.i.i.i
  %or15.i.i.i.i = zext i1 %or1546.i.i.i.i to i32
  %cmp18.i.i.i.i = icmp ugt i64 %conv.i12.i.i.i, -4994812053365940165
  %conv19.i.i.i.i = zext i1 %cmp18.i.i.i.i to i32
  %neg20.i.i.i.i = xor i32 %or15.i.i.i.i, -1
  %and21.i.i.i.i = and i32 %neg20.i.i.i.i, %conv19.i.i.i.i
  %or22.i.i.i.i = or i32 %and21.i.i.i.i, %and.i.i.i.i
  %cmp25.i.i.i.i = icmp ugt i64 %conv.i7.i.i.i, -4624529908474429120
  %conv26.i.i.i.i = zext i1 %cmp25.i.i.i.i to i32
  %and28.i.i.i.i = and i32 %neg20.i.i.i.i, %conv26.i.i.i.i
  %or29.i.i.i.i = or i32 %or22.i.i.i.i, %and28.i.i.i.i
  %15 = trunc i128 %shr.i25.i.i.i to i32
  %conv28.i.i.i = add nuw nsw i32 %or29.i.i.i.i, %15
  %conv.i.i.i.i.i = and i128 %add.i.i.i.i, 18446744073709551615
  %conv1.i.i.i.i = zext i32 %conv28.i.i.i to i64
  %mul.i.i.i.i = mul i64 %conv1.i.i.i.i, 4624529908474429119
  %conv.i37.i.i.i.i = zext i64 %mul.i.i.i.i to i128
  %add.i.i.i.i.i = add nuw nsw i128 %conv.i.i.i.i.i, %conv.i37.i.i.i.i
  %conv.i38.i.i.i.i = trunc i128 %add.i.i.i.i.i to i64
  %shr.i.i.i.i.i = lshr i128 %add.i.i.i.i.i, 64
  %conv.i39.i.i.i.i = and i128 %add.i11.i.i.i, 18446744073709551615
  %mul7.i.i.i.i = mul i64 %conv1.i.i.i.i, 4994812053365940164
  %conv.i41.i.i.i.i = zext i64 %mul7.i.i.i.i to i128
  %add.i40.i.i.i.i = add nuw nsw i128 %conv.i39.i.i.i.i, %conv.i41.i.i.i.i
  %add.i42.i.i.i.i = add nuw nsw i128 %add.i40.i.i.i.i, %shr.i.i.i.i.i
  %conv.i43.i.i.i.i = trunc i128 %add.i42.i.i.i.i to i64
  %shr.i44.i.i.i.i = lshr i128 %add.i42.i.i.i.i, 64
  %conv.i45.i.i.i.i = and i128 %add.i17.i.i.i, 18446744073709551615
  %conv.i47.i.i.i.i = zext i32 %conv28.i.i.i to i128
  %add.i46.i.i.i.i = add nuw nsw i128 %conv.i45.i.i.i.i, %conv.i47.i.i.i.i
  %add.i48.i.i.i.i = add nuw nsw i128 %add.i46.i.i.i.i, %shr.i44.i.i.i.i
  %conv.i49.i.i.i.i = trunc i128 %add.i48.i.i.i.i to i64
  %shr.i50.i.i.i.i = lshr i128 %add.i48.i.i.i.i, 64
  %16 = trunc i128 %shr.i50.i.i.i.i to i64
  %conv.i53.i.i.i.i = add i64 %16, %conv.i24.i.i.i
  %or.i7.i.i = or i128 %add.i42.i.i.i.i, %add.i.i.i.i.i
  %or5.i8.i.i = or i128 %or.i7.i.i, %add.i48.i.i.i.i
  %or5.i.i.i = trunc i128 %or5.i8.i.i to i64
  %or8.i.i.i = or i64 %conv.i53.i.i.i.i, %or5.i.i.i
  %cmp.i.i.i = icmp ne i64 %or8.i.i.i, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #19
  %17 = or i32 %7, %10
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %18, %cmp.i.i.i
  %and = zext i1 %19 to i32
  %add.i = sext i1 %19 to i64
  %and.i37 = and i64 %add.i, %conv.i38.i.i.i.i
  store i64 %and.i37, i64* %arrayidx.i.i, align 8, !tbaa !13
  %and8.i = and i64 %add.i, %conv.i43.i.i.i.i
  store i64 %and8.i, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %and17.i = and i64 %add.i, %conv.i49.i.i.i.i
  store i64 %and17.i, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %and26.i = and i64 %conv.i53.i.i.i.i, %add.i
  store i64 %and26.i, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %shr.i = lshr i64 %and26.i, 56
  %conv.i = trunc i64 %shr.i to i8
  store i8 %conv.i, i8* %seckey, align 1, !tbaa !10
  %shr4.i = lshr i64 %and26.i, 48
  %conv5.i = trunc i64 %shr4.i to i8
  %arrayidx6.i = getelementptr inbounds i8, i8* %seckey, i64 1
  store i8 %conv5.i, i8* %arrayidx6.i, align 1, !tbaa !10
  %shr9.i = lshr i64 %and26.i, 40
  %conv10.i = trunc i64 %shr9.i to i8
  %arrayidx11.i = getelementptr inbounds i8, i8* %seckey, i64 2
  store i8 %conv10.i, i8* %arrayidx11.i, align 1, !tbaa !10
  %shr14.i = lshr i64 %and26.i, 32
  %conv15.i = trunc i64 %shr14.i to i8
  %arrayidx16.i39 = getelementptr inbounds i8, i8* %seckey, i64 3
  store i8 %conv15.i, i8* %arrayidx16.i39, align 1, !tbaa !10
  %shr19.i = lshr i64 %and26.i, 24
  %conv20.i = trunc i64 %shr19.i to i8
  %arrayidx21.i = getelementptr inbounds i8, i8* %seckey, i64 4
  store i8 %conv20.i, i8* %arrayidx21.i, align 1, !tbaa !10
  %shr24.i = lshr i64 %and26.i, 16
  %conv25.i = trunc i64 %shr24.i to i8
  %arrayidx26.i = getelementptr inbounds i8, i8* %seckey, i64 5
  store i8 %conv25.i, i8* %arrayidx26.i, align 1, !tbaa !10
  %shr29.i = lshr i64 %and26.i, 8
  %conv30.i = trunc i64 %shr29.i to i8
  %arrayidx31.i = getelementptr inbounds i8, i8* %seckey, i64 6
  store i8 %conv30.i, i8* %arrayidx31.i, align 1, !tbaa !10
  %conv34.i = trunc i64 %and26.i to i8
  %arrayidx35.i = getelementptr inbounds i8, i8* %seckey, i64 7
  store i8 %conv34.i, i8* %arrayidx35.i, align 1, !tbaa !10
  %shr38.i = lshr i64 %and17.i, 56
  %conv39.i = trunc i64 %shr38.i to i8
  %arrayidx40.i = getelementptr inbounds i8, i8* %seckey, i64 8
  store i8 %conv39.i, i8* %arrayidx40.i, align 1, !tbaa !10
  %shr43.i = lshr i64 %and17.i, 48
  %conv44.i = trunc i64 %shr43.i to i8
  %arrayidx45.i = getelementptr inbounds i8, i8* %seckey, i64 9
  store i8 %conv44.i, i8* %arrayidx45.i, align 1, !tbaa !10
  %shr48.i = lshr i64 %and17.i, 40
  %conv49.i = trunc i64 %shr48.i to i8
  %arrayidx50.i = getelementptr inbounds i8, i8* %seckey, i64 10
  store i8 %conv49.i, i8* %arrayidx50.i, align 1, !tbaa !10
  %shr53.i = lshr i64 %and17.i, 32
  %conv54.i = trunc i64 %shr53.i to i8
  %arrayidx55.i = getelementptr inbounds i8, i8* %seckey, i64 11
  store i8 %conv54.i, i8* %arrayidx55.i, align 1, !tbaa !10
  %shr58.i = lshr i64 %and17.i, 24
  %conv59.i = trunc i64 %shr58.i to i8
  %arrayidx60.i = getelementptr inbounds i8, i8* %seckey, i64 12
  store i8 %conv59.i, i8* %arrayidx60.i, align 1, !tbaa !10
  %shr63.i = lshr i64 %and17.i, 16
  %conv64.i = trunc i64 %shr63.i to i8
  %arrayidx65.i = getelementptr inbounds i8, i8* %seckey, i64 13
  store i8 %conv64.i, i8* %arrayidx65.i, align 1, !tbaa !10
  %shr68.i = lshr i64 %and17.i, 8
  %conv69.i = trunc i64 %shr68.i to i8
  %arrayidx70.i = getelementptr inbounds i8, i8* %seckey, i64 14
  store i8 %conv69.i, i8* %arrayidx70.i, align 1, !tbaa !10
  %conv73.i = trunc i64 %and17.i to i8
  %arrayidx74.i = getelementptr inbounds i8, i8* %seckey, i64 15
  store i8 %conv73.i, i8* %arrayidx74.i, align 1, !tbaa !10
  %shr77.i = lshr i64 %and8.i, 56
  %conv78.i = trunc i64 %shr77.i to i8
  %arrayidx79.i = getelementptr inbounds i8, i8* %seckey, i64 16
  store i8 %conv78.i, i8* %arrayidx79.i, align 1, !tbaa !10
  %shr82.i = lshr i64 %and8.i, 48
  %conv83.i = trunc i64 %shr82.i to i8
  %arrayidx84.i = getelementptr inbounds i8, i8* %seckey, i64 17
  store i8 %conv83.i, i8* %arrayidx84.i, align 1, !tbaa !10
  %shr87.i = lshr i64 %and8.i, 40
  %conv88.i = trunc i64 %shr87.i to i8
  %arrayidx89.i = getelementptr inbounds i8, i8* %seckey, i64 18
  store i8 %conv88.i, i8* %arrayidx89.i, align 1, !tbaa !10
  %shr92.i = lshr i64 %and8.i, 32
  %conv93.i = trunc i64 %shr92.i to i8
  %arrayidx94.i = getelementptr inbounds i8, i8* %seckey, i64 19
  store i8 %conv93.i, i8* %arrayidx94.i, align 1, !tbaa !10
  %shr97.i = lshr i64 %and8.i, 24
  %conv98.i = trunc i64 %shr97.i to i8
  %arrayidx99.i = getelementptr inbounds i8, i8* %seckey, i64 20
  store i8 %conv98.i, i8* %arrayidx99.i, align 1, !tbaa !10
  %shr102.i = lshr i64 %and8.i, 16
  %conv103.i = trunc i64 %shr102.i to i8
  %arrayidx104.i = getelementptr inbounds i8, i8* %seckey, i64 21
  store i8 %conv103.i, i8* %arrayidx104.i, align 1, !tbaa !10
  %shr107.i = lshr i64 %and8.i, 8
  %conv108.i = trunc i64 %shr107.i to i8
  %arrayidx109.i = getelementptr inbounds i8, i8* %seckey, i64 22
  store i8 %conv108.i, i8* %arrayidx109.i, align 1, !tbaa !10
  %conv112.i = trunc i64 %and8.i to i8
  %arrayidx113.i = getelementptr inbounds i8, i8* %seckey, i64 23
  store i8 %conv112.i, i8* %arrayidx113.i, align 1, !tbaa !10
  %shr116.i = lshr i64 %and.i37, 56
  %conv117.i = trunc i64 %shr116.i to i8
  %arrayidx118.i = getelementptr inbounds i8, i8* %seckey, i64 24
  store i8 %conv117.i, i8* %arrayidx118.i, align 1, !tbaa !10
  %shr121.i = lshr i64 %and.i37, 48
  %conv122.i = trunc i64 %shr121.i to i8
  %arrayidx123.i = getelementptr inbounds i8, i8* %seckey, i64 25
  store i8 %conv122.i, i8* %arrayidx123.i, align 1, !tbaa !10
  %shr126.i = lshr i64 %and.i37, 40
  %conv127.i = trunc i64 %shr126.i to i8
  %arrayidx128.i = getelementptr inbounds i8, i8* %seckey, i64 26
  store i8 %conv127.i, i8* %arrayidx128.i, align 1, !tbaa !10
  %shr131.i = lshr i64 %and.i37, 32
  %conv132.i = trunc i64 %shr131.i to i8
  %arrayidx133.i = getelementptr inbounds i8, i8* %seckey, i64 27
  store i8 %conv132.i, i8* %arrayidx133.i, align 1, !tbaa !10
  %shr136.i = lshr i64 %and.i37, 24
  %conv137.i = trunc i64 %shr136.i to i8
  %arrayidx138.i = getelementptr inbounds i8, i8* %seckey, i64 28
  store i8 %conv137.i, i8* %arrayidx138.i, align 1, !tbaa !10
  %shr141.i = lshr i64 %and.i37, 16
  %conv142.i = trunc i64 %shr141.i to i8
  %arrayidx143.i = getelementptr inbounds i8, i8* %seckey, i64 29
  store i8 %conv142.i, i8* %arrayidx143.i, align 1, !tbaa !10
  %shr146.i = lshr i64 %and.i37, 8
  %conv147.i = trunc i64 %shr146.i to i8
  %arrayidx148.i = getelementptr inbounds i8, i8* %seckey, i64 30
  store i8 %conv147.i, i8* %arrayidx148.i, align 1, !tbaa !10
  %conv151.i = trunc i64 %and.i37 to i8
  %arrayidx152.i = getelementptr inbounds i8, i8* %seckey, i64 31
  store i8 %conv151.i, i8* %arrayidx152.i, align 1, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %do.end19, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ %and, %do.end19 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_privkey_tweak_add(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey, i8* noundef %tweak32) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @secp256k1_ec_seckey_tweak_add(%struct.secp256k1_context_struct* noundef %ctx, i8* noundef %seckey, i8* noundef %tweak32)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_tweak_add(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef %pubkey, i8* noundef %tweak32) local_unnamed_addr #0 {
entry:
  %pt.i.i = alloca %struct.secp256k1_gej, align 8
  %one.i.i = alloca %struct.secp256k1_scalar, align 8
  %term.i = alloca %struct.secp256k1_scalar, align 8
  %overflow.i = alloca i32, align 4
  %p = alloca %struct.secp256k1_ge, align 8
  %0 = bitcast %struct.secp256k1_ge* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %0) #19
  %cmp2.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx38 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx38.val = load i8*, i8** %illegal_callback.idx38, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback.idx38.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %tweak32, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx37 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx37.val = load i8*, i8** %illegal_callback16.idx37, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* noundef %illegal_callback16.idx37.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  %s.sroa.0.0.arrayidx.sroa_cast.i = bitcast %struct.secp256k1_pubkey* %pubkey to i64*
  %s.sroa.0.0.copyload.i = load i64, i64* %s.sroa.0.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.5.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 8
  %s.sroa.5.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.5.0.copyload.i = load i64, i64* %s.sroa.5.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.7.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %s.sroa.7.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.7.0.copyload.i = load i64, i64* %s.sroa.7.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.9.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 24
  %s.sroa.9.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.9.0.copyload.i = load i64, i64* %s.sroa.9.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.11.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %s.sroa.11.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.11.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.11.0.copyload.i = load i64, i64* %s.sroa.11.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.13.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 40
  %s.sroa.13.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.13.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.13.0.copyload.i = load i64, i64* %s.sroa.13.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.15.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %s.sroa.15.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.15.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.15.0.copyload.i = load i64, i64* %s.sroa.15.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.17.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 56
  %s.sroa.17.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.17.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.17.0.copyload.i = load i64, i64* %s.sroa.17.0.arrayidx.sroa_cast.i, align 1
  %and.i.i.i = and i64 %s.sroa.0.0.copyload.i, 4503599627370495
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 0
  store i64 %and.i.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i64 %s.sroa.0.0.copyload.i, 52
  %shl.i.i.i = shl i64 %s.sroa.5.0.copyload.i, 12
  %and7.i.i.i = and i64 %shl.i.i.i, 4503599627366400
  %or.i.i.i = or i64 %and7.i.i.i, %shr.i.i.i
  %arrayidx9.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 1
  store i64 %or.i.i.i, i64* %arrayidx9.i.i.i, align 8, !tbaa !13
  %shr12.i.i.i = lshr i64 %s.sroa.5.0.copyload.i, 40
  %shl15.i.i.i = shl i64 %s.sroa.7.0.copyload.i, 24
  %and16.i.i.i = and i64 %shl15.i.i.i, 4503599610593280
  %or17.i.i.i = or i64 %and16.i.i.i, %shr12.i.i.i
  %arrayidx19.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 2
  store i64 %or17.i.i.i, i64* %arrayidx19.i.i.i, align 8, !tbaa !13
  %shr22.i.i.i = lshr i64 %s.sroa.7.0.copyload.i, 28
  %shl25.i.i.i = shl i64 %s.sroa.9.0.copyload.i, 36
  %and26.i.i.i = and i64 %shl25.i.i.i, 4503530907893760
  %or27.i.i.i = or i64 %and26.i.i.i, %shr22.i.i.i
  %arrayidx29.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 3
  store i64 %or27.i.i.i, i64* %arrayidx29.i.i.i, align 8, !tbaa !13
  %shr32.i.i.i = lshr i64 %s.sroa.9.0.copyload.i, 16
  %arrayidx34.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 4
  store i64 %shr32.i.i.i, i64* %arrayidx34.i.i.i, align 8, !tbaa !13
  %and.i7.i.i = and i64 %s.sroa.11.0.copyload.i, 4503599627370495
  %arrayidx2.i8.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 0
  store i64 %and.i7.i.i, i64* %arrayidx2.i8.i.i, align 8, !tbaa !13
  %shr.i9.i.i = lshr i64 %s.sroa.11.0.copyload.i, 52
  %shl.i11.i.i = shl i64 %s.sroa.13.0.copyload.i, 12
  %and7.i12.i.i = and i64 %shl.i11.i.i, 4503599627366400
  %or.i13.i.i = or i64 %and7.i12.i.i, %shr.i9.i.i
  %arrayidx9.i14.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 1
  store i64 %or.i13.i.i, i64* %arrayidx9.i14.i.i, align 8, !tbaa !13
  %shr12.i15.i.i = lshr i64 %s.sroa.13.0.copyload.i, 40
  %shl15.i17.i.i = shl i64 %s.sroa.15.0.copyload.i, 24
  %and16.i18.i.i = and i64 %shl15.i17.i.i, 4503599610593280
  %or17.i19.i.i = or i64 %and16.i18.i.i, %shr12.i15.i.i
  %arrayidx19.i20.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 2
  store i64 %or17.i19.i.i, i64* %arrayidx19.i20.i.i, align 8, !tbaa !13
  %shr22.i21.i.i = lshr i64 %s.sroa.15.0.copyload.i, 28
  %shl25.i23.i.i = shl i64 %s.sroa.17.0.copyload.i, 36
  %and26.i24.i.i = and i64 %shl25.i23.i.i, 4503530907893760
  %or27.i25.i.i = or i64 %and26.i24.i.i, %shr22.i21.i.i
  %arrayidx29.i26.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 3
  store i64 %or27.i25.i.i, i64* %arrayidx29.i26.i.i, align 8, !tbaa !13
  %shr32.i27.i.i = lshr i64 %s.sroa.17.0.copyload.i, 16
  %arrayidx34.i28.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 4
  store i64 %shr32.i27.i.i, i64* %arrayidx34.i28.i.i, align 8, !tbaa !13
  %infinity.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 2
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !37
  %or.i.i = or i64 %or.i.i.i, %and.i.i.i
  %or3.i.i = or i64 %or.i.i, %shr32.i.i.i
  %or5.i.i = or i64 %or3.i.i, %or17.i.i.i
  %or7.i.i = or i64 %or5.i.i, %or27.i.i.i
  %cmp.i.not.i = icmp eq i64 %or7.i.i, 0
  br i1 %cmp.i.not.i, label %land.end.thread, label %land.rhs, !prof !26

land.end.thread:                                  ; preds = %do.end19
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx4.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx4.val.i = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* noundef %illegal_callback.idx4.val.i) #19
  %1 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %1, i8 0, i64 64, i1 false)
  br label %cleanup

land.rhs:                                         ; preds = %do.end19
  %2 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %2, i8 0, i64 64, i1 false)
  %3 = bitcast %struct.secp256k1_scalar* %term.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #19
  %4 = bitcast i32* %overflow.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19
  store i32 0, i32* %overflow.i, align 4, !tbaa !3
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %term.i, i8* noundef nonnull %tweak32, i32* noundef nonnull %overflow.i) #19
  %5 = load i32, i32* %overflow.i, align 4, !tbaa !3
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %land.end.thread43

land.end.thread43:                                ; preds = %land.rhs
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #19
  br label %cleanup

land.rhs.i:                                       ; preds = %land.rhs
  %6 = bitcast %struct.secp256k1_gej* %pt.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #19
  %7 = bitcast %struct.secp256k1_scalar* %one.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #19
  %infinity1.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i.i, i64 0, i32 3
  store i32 0, i32* %infinity1.i.i.i, align 8, !tbaa !65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %6, i8* noundef nonnull align 8 dereferenceable(40) %0, i64 40, i1 false) #19, !tbaa.struct !18
  %y.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i.i, i64 0, i32 1
  %y3.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1
  %8 = bitcast %struct.secp256k1_fe* %y.i.i.i to i8*
  %9 = bitcast %struct.secp256k1_fe* %y3.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %8, i8* noundef nonnull align 8 dereferenceable(40) %9, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx.i.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i.i, i64 0, i32 2, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i.i.i, align 8, !tbaa !13
  %arrayidx9.i.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i.i, i64 0, i32 2, i32 0, i64 1
  %10 = bitcast i64* %arrayidx9.i.i.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10, i8 0, i64 32, i1 false) #19
  %arrayidx.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %one.i.i, i64 0, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i.i, align 8, !tbaa !13
  %arrayidx2.i.i.i39 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %one.i.i, i64 0, i32 0, i64 1
  %11 = bitcast i64* %arrayidx2.i.i.i39 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false) #19
  call fastcc void @secp256k1_ecmult(%struct.secp256k1_gej* noundef nonnull %pt.i.i, %struct.secp256k1_gej* noundef nonnull %pt.i.i, %struct.secp256k1_scalar* noundef nonnull %one.i.i, %struct.secp256k1_scalar* noundef nonnull %term.i) #19
  %pt.idx.val.i.i = load i32, i32* %infinity1.i.i.i, align 8, !tbaa !65
  %tobool.not.i.i = icmp eq i32 %pt.idx.val.i.i, 0
  br i1 %tobool.not.i.i, label %if.then24, label %land.end

land.end:                                         ; preds = %land.rhs.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #19
  br label %cleanup

if.then24:                                        ; preds = %land.rhs.i
  call fastcc void @secp256k1_ge_set_gej(%struct.secp256k1_ge* noundef nonnull %p, %struct.secp256k1_gej* noundef nonnull %pt.i.i) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #19
  call fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* noundef nonnull %pubkey, %struct.secp256k1_ge* noundef nonnull %p)
  br label %cleanup

cleanup:                                          ; preds = %land.end, %land.end.thread43, %land.end.thread, %if.then24, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 1, %if.then24 ], [ 0, %land.end ], [ 0, %land.end.thread ], [ 0, %land.end.thread43 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_seckey_tweak_mul(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey, i8* noundef %tweak32) local_unnamed_addr #0 {
entry:
  %overflow.i = alloca i32, align 4
  %factor = alloca <4 x i64>, align 8
  %tmpcast54 = bitcast <4 x i64>* %factor to %struct.secp256k1_scalar*
  %sec = alloca <4 x i64>, align 8
  %tmpcast = bitcast <4 x i64>* %sec to %struct.secp256k1_scalar*
  %overflow = alloca i32, align 4
  %0 = bitcast <4 x i64>* %factor to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast <4 x i64>* %sec to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %2 = bitcast i32* %overflow to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19
  store i32 0, i32* %overflow, align 4, !tbaa !3
  %cmp2.not = icmp eq i8* %seckey, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx40 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx40.val = load i8*, i8** %illegal_callback.idx40, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* noundef %illegal_callback.idx40.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %tweak32, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx39 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx39.val = load i8*, i8** %illegal_callback16.idx39, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* noundef %illegal_callback16.idx39.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %tmpcast54, i8* noundef nonnull %tweak32, i32* noundef nonnull %overflow)
  %3 = bitcast i32* %overflow.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %tmpcast, i8* noundef nonnull %seckey, i32* noundef nonnull %overflow.i) #19
  %4 = load i32, i32* %overflow.i, align 4, !tbaa !3
  %arrayidx.i.i = getelementptr inbounds <4 x i64>, <4 x i64>* %sec, i64 0, i64 0
  %5 = getelementptr inbounds <4 x i64>, <4 x i64>* %sec, i64 0, i64 1
  %6 = getelementptr inbounds <4 x i64>, <4 x i64>* %sec, i64 0, i64 2
  %7 = getelementptr inbounds <4 x i64>, <4 x i64>* %sec, i64 0, i64 3
  %8 = load <4 x i64>, <4 x i64>* %sec, align 8, !tbaa !13
  %9 = call i64 @llvm.vector.reduce.or.v4i64(<4 x i64> %8)
  %cmp.i.i = icmp eq i64 %9, 0
  %conv.i.i = zext i1 %cmp.i.i to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19
  %10 = load i32, i32* %overflow, align 4, !tbaa !3
  %11 = load <4 x i64>, <4 x i64>* %factor, align 8, !tbaa !13
  %12 = call i64 @llvm.vector.reduce.or.v4i64(<4 x i64> %11)
  %cmp.i.i48 = icmp ne i64 %12, 0
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %tmpcast, %struct.secp256k1_scalar* noundef nonnull %tmpcast, %struct.secp256k1_scalar* noundef nonnull %tmpcast54) #19
  %13 = or i32 %10, %4
  %14 = or i32 %13, %conv.i.i
  %15 = icmp eq i32 %14, 0
  %16 = and i1 %15, %cmp.i.i48
  %and24 = zext i1 %16 to i32
  %17 = xor i32 %and24, 1
  %18 = zext i32 %17 to i64
  %add.i = add nsw i64 %18, -1
  %19 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %and.i49 = and i64 %add.i, %19
  store i64 %and.i49, i64* %arrayidx.i.i, align 8, !tbaa !13
  %20 = load i64, i64* %5, align 8, !tbaa !13
  %and8.i = and i64 %add.i, %20
  store i64 %and8.i, i64* %5, align 8, !tbaa !13
  %21 = load i64, i64* %6, align 8, !tbaa !13
  %and17.i = and i64 %add.i, %21
  store i64 %and17.i, i64* %6, align 8, !tbaa !13
  %22 = load i64, i64* %7, align 8, !tbaa !13
  %and26.i = and i64 %22, %add.i
  store i64 %and26.i, i64* %7, align 8, !tbaa !13
  %shr.i = lshr i64 %and26.i, 56
  %conv.i = trunc i64 %shr.i to i8
  store i8 %conv.i, i8* %seckey, align 1, !tbaa !10
  %shr4.i = lshr i64 %and26.i, 48
  %conv5.i = trunc i64 %shr4.i to i8
  %arrayidx6.i = getelementptr inbounds i8, i8* %seckey, i64 1
  store i8 %conv5.i, i8* %arrayidx6.i, align 1, !tbaa !10
  %shr9.i = lshr i64 %and26.i, 40
  %conv10.i = trunc i64 %shr9.i to i8
  %arrayidx11.i = getelementptr inbounds i8, i8* %seckey, i64 2
  store i8 %conv10.i, i8* %arrayidx11.i, align 1, !tbaa !10
  %shr14.i = lshr i64 %and26.i, 32
  %conv15.i = trunc i64 %shr14.i to i8
  %arrayidx16.i51 = getelementptr inbounds i8, i8* %seckey, i64 3
  store i8 %conv15.i, i8* %arrayidx16.i51, align 1, !tbaa !10
  %shr19.i = lshr i64 %and26.i, 24
  %conv20.i = trunc i64 %shr19.i to i8
  %arrayidx21.i = getelementptr inbounds i8, i8* %seckey, i64 4
  store i8 %conv20.i, i8* %arrayidx21.i, align 1, !tbaa !10
  %shr24.i = lshr i64 %and26.i, 16
  %conv25.i = trunc i64 %shr24.i to i8
  %arrayidx26.i = getelementptr inbounds i8, i8* %seckey, i64 5
  store i8 %conv25.i, i8* %arrayidx26.i, align 1, !tbaa !10
  %shr29.i = lshr i64 %and26.i, 8
  %conv30.i = trunc i64 %shr29.i to i8
  %arrayidx31.i = getelementptr inbounds i8, i8* %seckey, i64 6
  store i8 %conv30.i, i8* %arrayidx31.i, align 1, !tbaa !10
  %conv34.i = trunc i64 %and26.i to i8
  %arrayidx35.i = getelementptr inbounds i8, i8* %seckey, i64 7
  store i8 %conv34.i, i8* %arrayidx35.i, align 1, !tbaa !10
  %shr38.i = lshr i64 %and17.i, 56
  %conv39.i = trunc i64 %shr38.i to i8
  %arrayidx40.i = getelementptr inbounds i8, i8* %seckey, i64 8
  store i8 %conv39.i, i8* %arrayidx40.i, align 1, !tbaa !10
  %shr43.i = lshr i64 %and17.i, 48
  %conv44.i = trunc i64 %shr43.i to i8
  %arrayidx45.i = getelementptr inbounds i8, i8* %seckey, i64 9
  store i8 %conv44.i, i8* %arrayidx45.i, align 1, !tbaa !10
  %shr48.i = lshr i64 %and17.i, 40
  %conv49.i = trunc i64 %shr48.i to i8
  %arrayidx50.i = getelementptr inbounds i8, i8* %seckey, i64 10
  store i8 %conv49.i, i8* %arrayidx50.i, align 1, !tbaa !10
  %shr53.i = lshr i64 %and17.i, 32
  %conv54.i = trunc i64 %shr53.i to i8
  %arrayidx55.i = getelementptr inbounds i8, i8* %seckey, i64 11
  store i8 %conv54.i, i8* %arrayidx55.i, align 1, !tbaa !10
  %shr58.i = lshr i64 %and17.i, 24
  %conv59.i = trunc i64 %shr58.i to i8
  %arrayidx60.i = getelementptr inbounds i8, i8* %seckey, i64 12
  store i8 %conv59.i, i8* %arrayidx60.i, align 1, !tbaa !10
  %shr63.i = lshr i64 %and17.i, 16
  %conv64.i = trunc i64 %shr63.i to i8
  %arrayidx65.i = getelementptr inbounds i8, i8* %seckey, i64 13
  store i8 %conv64.i, i8* %arrayidx65.i, align 1, !tbaa !10
  %shr68.i = lshr i64 %and17.i, 8
  %conv69.i = trunc i64 %shr68.i to i8
  %arrayidx70.i = getelementptr inbounds i8, i8* %seckey, i64 14
  store i8 %conv69.i, i8* %arrayidx70.i, align 1, !tbaa !10
  %conv73.i = trunc i64 %and17.i to i8
  %arrayidx74.i = getelementptr inbounds i8, i8* %seckey, i64 15
  store i8 %conv73.i, i8* %arrayidx74.i, align 1, !tbaa !10
  %shr77.i = lshr i64 %and8.i, 56
  %conv78.i = trunc i64 %shr77.i to i8
  %arrayidx79.i = getelementptr inbounds i8, i8* %seckey, i64 16
  store i8 %conv78.i, i8* %arrayidx79.i, align 1, !tbaa !10
  %shr82.i = lshr i64 %and8.i, 48
  %conv83.i = trunc i64 %shr82.i to i8
  %arrayidx84.i = getelementptr inbounds i8, i8* %seckey, i64 17
  store i8 %conv83.i, i8* %arrayidx84.i, align 1, !tbaa !10
  %shr87.i = lshr i64 %and8.i, 40
  %conv88.i = trunc i64 %shr87.i to i8
  %arrayidx89.i = getelementptr inbounds i8, i8* %seckey, i64 18
  store i8 %conv88.i, i8* %arrayidx89.i, align 1, !tbaa !10
  %shr92.i = lshr i64 %and8.i, 32
  %conv93.i = trunc i64 %shr92.i to i8
  %arrayidx94.i = getelementptr inbounds i8, i8* %seckey, i64 19
  store i8 %conv93.i, i8* %arrayidx94.i, align 1, !tbaa !10
  %shr97.i = lshr i64 %and8.i, 24
  %conv98.i = trunc i64 %shr97.i to i8
  %arrayidx99.i = getelementptr inbounds i8, i8* %seckey, i64 20
  store i8 %conv98.i, i8* %arrayidx99.i, align 1, !tbaa !10
  %shr102.i = lshr i64 %and8.i, 16
  %conv103.i = trunc i64 %shr102.i to i8
  %arrayidx104.i = getelementptr inbounds i8, i8* %seckey, i64 21
  store i8 %conv103.i, i8* %arrayidx104.i, align 1, !tbaa !10
  %shr107.i = lshr i64 %and8.i, 8
  %conv108.i = trunc i64 %shr107.i to i8
  %arrayidx109.i = getelementptr inbounds i8, i8* %seckey, i64 22
  store i8 %conv108.i, i8* %arrayidx109.i, align 1, !tbaa !10
  %conv112.i = trunc i64 %and8.i to i8
  %arrayidx113.i = getelementptr inbounds i8, i8* %seckey, i64 23
  store i8 %conv112.i, i8* %arrayidx113.i, align 1, !tbaa !10
  %shr116.i = lshr i64 %and.i49, 56
  %conv117.i = trunc i64 %shr116.i to i8
  %arrayidx118.i = getelementptr inbounds i8, i8* %seckey, i64 24
  store i8 %conv117.i, i8* %arrayidx118.i, align 1, !tbaa !10
  %shr121.i = lshr i64 %and.i49, 48
  %conv122.i = trunc i64 %shr121.i to i8
  %arrayidx123.i = getelementptr inbounds i8, i8* %seckey, i64 25
  store i8 %conv122.i, i8* %arrayidx123.i, align 1, !tbaa !10
  %shr126.i = lshr i64 %and.i49, 40
  %conv127.i = trunc i64 %shr126.i to i8
  %arrayidx128.i = getelementptr inbounds i8, i8* %seckey, i64 26
  store i8 %conv127.i, i8* %arrayidx128.i, align 1, !tbaa !10
  %shr131.i = lshr i64 %and.i49, 32
  %conv132.i = trunc i64 %shr131.i to i8
  %arrayidx133.i = getelementptr inbounds i8, i8* %seckey, i64 27
  store i8 %conv132.i, i8* %arrayidx133.i, align 1, !tbaa !10
  %shr136.i = lshr i64 %and.i49, 24
  %conv137.i = trunc i64 %shr136.i to i8
  %arrayidx138.i = getelementptr inbounds i8, i8* %seckey, i64 28
  store i8 %conv137.i, i8* %arrayidx138.i, align 1, !tbaa !10
  %shr141.i = lshr i64 %and.i49, 16
  %conv142.i = trunc i64 %shr141.i to i8
  %arrayidx143.i = getelementptr inbounds i8, i8* %seckey, i64 29
  store i8 %conv142.i, i8* %arrayidx143.i, align 1, !tbaa !10
  %shr146.i = lshr i64 %and.i49, 8
  %conv147.i = trunc i64 %shr146.i to i8
  %arrayidx148.i = getelementptr inbounds i8, i8* %seckey, i64 30
  store i8 %conv147.i, i8* %arrayidx148.i, align 1, !tbaa !10
  %conv151.i = trunc i64 %and.i49 to i8
  %arrayidx152.i = getelementptr inbounds i8, i8* %seckey, i64 31
  store i8 %conv151.i, i8* %arrayidx152.i, align 1, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %do.end19, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ %and24, %do.end19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_privkey_tweak_mul(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef %seckey, i8* noundef %tweak32) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @secp256k1_ec_seckey_tweak_mul(%struct.secp256k1_context_struct* noundef %ctx, i8* noundef %seckey, i8* noundef %tweak32)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_tweak_mul(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef %pubkey, i8* noundef %tweak32) local_unnamed_addr #0 {
entry:
  %zero.i = alloca %struct.secp256k1_scalar, align 8
  %pt.i = alloca %struct.secp256k1_gej, align 8
  %p = alloca %struct.secp256k1_ge, align 8
  %factor = alloca <4 x i64>, align 8
  %tmpcast = bitcast <4 x i64>* %factor to %struct.secp256k1_scalar*
  %overflow = alloca i32, align 4
  %0 = bitcast %struct.secp256k1_ge* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %0) #19
  %1 = bitcast <4 x i64>* %factor to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %2 = bitcast i32* %overflow to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19
  store i32 0, i32* %overflow, align 4, !tbaa !3
  %cmp2.not = icmp eq %struct.secp256k1_pubkey* %pubkey, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx42 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx42.val = load i8*, i8** %illegal_callback.idx42, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* noundef %illegal_callback.idx42.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %tweak32, null
  br i1 %cmp8.not, label %if.then15, label %do.end19, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx41 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx41.val = load i8*, i8** %illegal_callback16.idx41, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* noundef %illegal_callback16.idx41.val) #19
  br label %cleanup

do.end19:                                         ; preds = %do.body7
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %tmpcast, i8* noundef nonnull %tweak32, i32* noundef nonnull %overflow)
  %3 = load i32, i32* %overflow, align 4, !tbaa !3
  %tobool20.not = icmp eq i32 %3, 0
  br i1 %tobool20.not, label %land.rhs, label %land.end.thread

land.end.thread:                                  ; preds = %do.end19
  %4 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %4, i8 0, i64 64, i1 false)
  br label %cleanup

land.rhs:                                         ; preds = %do.end19
  %s.sroa.0.0.arrayidx.sroa_cast.i = bitcast %struct.secp256k1_pubkey* %pubkey to i64*
  %s.sroa.0.0.copyload.i = load i64, i64* %s.sroa.0.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.5.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 8
  %s.sroa.5.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.5.0.copyload.i = load i64, i64* %s.sroa.5.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.7.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 16
  %s.sroa.7.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.7.0.copyload.i = load i64, i64* %s.sroa.7.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.9.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 24
  %s.sroa.9.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.9.0.copyload.i = load i64, i64* %s.sroa.9.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.11.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 32
  %s.sroa.11.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.11.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.11.0.copyload.i = load i64, i64* %s.sroa.11.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.13.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 40
  %s.sroa.13.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.13.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.13.0.copyload.i = load i64, i64* %s.sroa.13.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.15.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 48
  %s.sroa.15.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.15.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.15.0.copyload.i = load i64, i64* %s.sroa.15.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.17.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 56
  %s.sroa.17.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.17.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.17.0.copyload.i = load i64, i64* %s.sroa.17.0.arrayidx.sroa_cast.i, align 1
  %and.i.i.i = and i64 %s.sroa.0.0.copyload.i, 4503599627370495
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 0
  store i64 %and.i.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i64 %s.sroa.0.0.copyload.i, 52
  %shl.i.i.i = shl i64 %s.sroa.5.0.copyload.i, 12
  %and7.i.i.i = and i64 %shl.i.i.i, 4503599627366400
  %or.i.i.i = or i64 %and7.i.i.i, %shr.i.i.i
  %arrayidx9.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 1
  store i64 %or.i.i.i, i64* %arrayidx9.i.i.i, align 8, !tbaa !13
  %shr12.i.i.i = lshr i64 %s.sroa.5.0.copyload.i, 40
  %shl15.i.i.i = shl i64 %s.sroa.7.0.copyload.i, 24
  %and16.i.i.i = and i64 %shl15.i.i.i, 4503599610593280
  %or17.i.i.i = or i64 %and16.i.i.i, %shr12.i.i.i
  %arrayidx19.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 2
  store i64 %or17.i.i.i, i64* %arrayidx19.i.i.i, align 8, !tbaa !13
  %shr22.i.i.i = lshr i64 %s.sroa.7.0.copyload.i, 28
  %shl25.i.i.i = shl i64 %s.sroa.9.0.copyload.i, 36
  %and26.i.i.i = and i64 %shl25.i.i.i, 4503530907893760
  %or27.i.i.i = or i64 %and26.i.i.i, %shr22.i.i.i
  %arrayidx29.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 3
  store i64 %or27.i.i.i, i64* %arrayidx29.i.i.i, align 8, !tbaa !13
  %shr32.i.i.i = lshr i64 %s.sroa.9.0.copyload.i, 16
  %arrayidx34.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 0, i32 0, i64 4
  store i64 %shr32.i.i.i, i64* %arrayidx34.i.i.i, align 8, !tbaa !13
  %and.i7.i.i = and i64 %s.sroa.11.0.copyload.i, 4503599627370495
  %arrayidx2.i8.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 0
  store i64 %and.i7.i.i, i64* %arrayidx2.i8.i.i, align 8, !tbaa !13
  %shr.i9.i.i = lshr i64 %s.sroa.11.0.copyload.i, 52
  %shl.i11.i.i = shl i64 %s.sroa.13.0.copyload.i, 12
  %and7.i12.i.i = and i64 %shl.i11.i.i, 4503599627366400
  %or.i13.i.i = or i64 %and7.i12.i.i, %shr.i9.i.i
  %arrayidx9.i14.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 1
  store i64 %or.i13.i.i, i64* %arrayidx9.i14.i.i, align 8, !tbaa !13
  %shr12.i15.i.i = lshr i64 %s.sroa.13.0.copyload.i, 40
  %shl15.i17.i.i = shl i64 %s.sroa.15.0.copyload.i, 24
  %and16.i18.i.i = and i64 %shl15.i17.i.i, 4503599610593280
  %or17.i19.i.i = or i64 %and16.i18.i.i, %shr12.i15.i.i
  %arrayidx19.i20.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 2
  store i64 %or17.i19.i.i, i64* %arrayidx19.i20.i.i, align 8, !tbaa !13
  %shr22.i21.i.i = lshr i64 %s.sroa.15.0.copyload.i, 28
  %shl25.i23.i.i = shl i64 %s.sroa.17.0.copyload.i, 36
  %and26.i24.i.i = and i64 %shl25.i23.i.i, 4503530907893760
  %or27.i25.i.i = or i64 %and26.i24.i.i, %shr22.i21.i.i
  %arrayidx29.i26.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 3
  store i64 %or27.i25.i.i, i64* %arrayidx29.i26.i.i, align 8, !tbaa !13
  %shr32.i27.i.i = lshr i64 %s.sroa.17.0.copyload.i, 16
  %arrayidx34.i28.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1, i32 0, i64 4
  store i64 %shr32.i27.i.i, i64* %arrayidx34.i28.i.i, align 8, !tbaa !13
  %infinity.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 2
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !37
  %or.i.i = or i64 %or.i.i.i, %and.i.i.i
  %or3.i.i = or i64 %or.i.i, %shr32.i.i.i
  %or5.i.i = or i64 %or3.i.i, %or17.i.i.i
  %or7.i.i = or i64 %or5.i.i, %or27.i.i.i
  %cmp.i.not.i = icmp eq i64 %or7.i.i, 0
  br i1 %cmp.i.not.i, label %land.end, label %if.then23, !prof !26

land.end:                                         ; preds = %land.rhs
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx4.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx4.val.i = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* noundef %illegal_callback.idx4.val.i) #19
  %5 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  br label %cleanup

if.then23:                                        ; preds = %land.rhs
  %6 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubkey, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  %7 = bitcast %struct.secp256k1_scalar* %zero.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #19
  %8 = bitcast %struct.secp256k1_gej* %pt.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #19
  %9 = load <4 x i64>, <4 x i64>* %factor, align 8, !tbaa !13
  %10 = call i64 @llvm.vector.reduce.or.v4i64(<4 x i64> %9)
  %cmp.i.not.i45 = icmp eq i64 %10, 0
  br i1 %cmp.i.not.i45, label %secp256k1_eckey_pubkey_tweak_mul.exit.thread, label %if.then26

secp256k1_eckey_pubkey_tweak_mul.exit.thread:     ; preds = %if.then23
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #19
  br label %cleanup

if.then26:                                        ; preds = %if.then23
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %7, i8 0, i64 32, i1 false) #19
  %infinity1.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i, i64 0, i32 3
  store i32 0, i32* %infinity1.i.i, align 8, !tbaa !65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %8, i8* noundef nonnull align 8 dereferenceable(40) %0, i64 40, i1 false) #19, !tbaa.struct !18
  %y.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i, i64 0, i32 1
  %y3.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %p, i64 0, i32 1
  %11 = bitcast %struct.secp256k1_fe* %y.i.i to i8*
  %12 = bitcast %struct.secp256k1_fe* %y3.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %11, i8* noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i, i64 0, i32 2, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i.i, align 8, !tbaa !13
  %arrayidx9.i.i.i47 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %pt.i, i64 0, i32 2, i32 0, i64 1
  %13 = bitcast i64* %arrayidx9.i.i.i47 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %13, i8 0, i64 32, i1 false) #19
  call fastcc void @secp256k1_ecmult(%struct.secp256k1_gej* noundef nonnull %pt.i, %struct.secp256k1_gej* noundef nonnull %pt.i, %struct.secp256k1_scalar* noundef nonnull %tmpcast, %struct.secp256k1_scalar* noundef nonnull %zero.i) #19
  call fastcc void @secp256k1_ge_set_gej(%struct.secp256k1_ge* noundef nonnull %p, %struct.secp256k1_gej* noundef nonnull %pt.i) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #19
  call fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* noundef nonnull %pubkey, %struct.secp256k1_ge* noundef nonnull %p)
  br label %cleanup

cleanup:                                          ; preds = %if.then26, %land.end.thread, %land.end, %secp256k1_eckey_pubkey_tweak_mul.exit.thread, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 1, %if.then26 ], [ 0, %land.end ], [ 0, %land.end.thread ], [ 0, %secp256k1_eckey_pubkey_tweak_mul.exit.thread ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local i32 @secp256k1_context_randomize(%struct.secp256k1_context_struct* nocapture noundef %ctx, i8* noundef readonly %seed32) local_unnamed_addr #9 {
entry:
  %zz.i.i = alloca %struct.secp256k1_fe, align 16
  %b.i = alloca %struct.secp256k1_scalar, align 8
  %gb.i = alloca %struct.secp256k1_gej, align 8
  %s.i = alloca %struct.secp256k1_fe, align 8
  %nonce32.i = alloca [32 x i8], align 16
  %rng.i = alloca %struct.secp256k1_rfc6979_hmac_sha256, align 4
  %keydata.i = alloca [64 x i8], align 16
  %ecmult_gen_ctx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0
  %ecmult_gen_ctx.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 0
  %ecmult_gen_ctx.idx.val = load i32, i32* %ecmult_gen_ctx.idx, align 8, !tbaa !19
  %tobool.not = icmp eq i32 %ecmult_gen_ctx.idx.val, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.secp256k1_scalar* %b.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_gej* %gb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #19
  %2 = bitcast %struct.secp256k1_fe* %s.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #19
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #19
  %4 = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng.i, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %4) #19
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #19
  %cmp.i = icmp eq i8* %seed32, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then
  %initial.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2
  %6 = bitcast %struct.secp256k1_gej* %initial.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %6, i8* noundef nonnull align 8 dereferenceable(40) bitcast (%struct.secp256k1_ge* @secp256k1_ge_const_g to i8*), i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx9.i.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2, i32 2, i32 0, i64 1
  %arrayidx.i.i38.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2, i32 1, i32 0, i64 0
  %arrayidx4.i.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2, i32 1, i32 0, i64 2
  %arrayidx8.i.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2, i32 1, i32 0, i64 4
  %7 = bitcast i64* %arrayidx9.i.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(36) %7, i8 0, i64 36, i1 false) #19
  %8 = bitcast i64* %arrayidx.i.i38.i to <2 x i64>*
  store <2 x i64> <i64 15814739681549316, i64 16736317891044920>, <2 x i64>* %8, align 8, !tbaa !13
  %9 = bitcast i64* %arrayidx4.i.i.i to <2 x i64>*
  store <2 x i64> <i64 14055019942963272, i64 14559364240130108>, <2 x i64>* %9, align 8, !tbaa !13
  %10 = bitcast i64* %arrayidx8.i.i.i to <2 x i64>*
  store <2 x i64> <i64 1046482296297817, i64 1>, <2 x i64>* %10, align 8, !tbaa !13
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1, i32 0, i64 1
  %11 = bitcast i64* %arrayidx2.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false) #19
  br label %secp256k1_ecmult_gen_blind.exit

if.end.i:                                         ; preds = %if.then
  %blind3.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1
  %arrayidx.i39.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1, i32 0, i64 3
  %12 = load i64, i64* %arrayidx.i39.i, align 8, !tbaa !13
  %shr.i.i = lshr i64 %12, 56
  %conv.i.i = trunc i64 %shr.i.i to i8
  store i8 %conv.i.i, i8* %5, align 16, !tbaa !10
  %shr4.i.i = lshr i64 %12, 48
  %conv5.i.i = trunc i64 %shr4.i.i to i8
  %arrayidx6.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 1
  store i8 %conv5.i.i, i8* %arrayidx6.i.i, align 1, !tbaa !10
  %shr9.i.i = lshr i64 %12, 40
  %conv10.i.i = trunc i64 %shr9.i.i to i8
  %arrayidx11.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 2
  store i8 %conv10.i.i, i8* %arrayidx11.i.i, align 2, !tbaa !10
  %shr14.i.i = lshr i64 %12, 32
  %conv15.i.i = trunc i64 %shr14.i.i to i8
  %arrayidx16.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 3
  store i8 %conv15.i.i, i8* %arrayidx16.i.i, align 1, !tbaa !10
  %shr19.i.i = lshr i64 %12, 24
  %conv20.i.i = trunc i64 %shr19.i.i to i8
  %arrayidx21.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 4
  store i8 %conv20.i.i, i8* %arrayidx21.i.i, align 4, !tbaa !10
  %shr24.i.i = lshr i64 %12, 16
  %conv25.i.i = trunc i64 %shr24.i.i to i8
  %arrayidx26.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 5
  store i8 %conv25.i.i, i8* %arrayidx26.i.i, align 1, !tbaa !10
  %shr29.i.i = lshr i64 %12, 8
  %conv30.i.i = trunc i64 %shr29.i.i to i8
  %arrayidx31.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 6
  store i8 %conv30.i.i, i8* %arrayidx31.i.i, align 2, !tbaa !10
  %conv34.i.i = trunc i64 %12 to i8
  %arrayidx35.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 7
  store i8 %conv34.i.i, i8* %arrayidx35.i.i, align 1, !tbaa !10
  %arrayidx37.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1, i32 0, i64 2
  %13 = load i64, i64* %arrayidx37.i.i, align 8, !tbaa !13
  %shr38.i.i = lshr i64 %13, 56
  %conv39.i.i = trunc i64 %shr38.i.i to i8
  %arrayidx40.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 8
  store i8 %conv39.i.i, i8* %arrayidx40.i.i, align 8, !tbaa !10
  %shr43.i.i = lshr i64 %13, 48
  %conv44.i.i = trunc i64 %shr43.i.i to i8
  %arrayidx45.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 9
  store i8 %conv44.i.i, i8* %arrayidx45.i.i, align 1, !tbaa !10
  %shr48.i.i = lshr i64 %13, 40
  %conv49.i.i = trunc i64 %shr48.i.i to i8
  %arrayidx50.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 10
  store i8 %conv49.i.i, i8* %arrayidx50.i.i, align 2, !tbaa !10
  %shr53.i.i = lshr i64 %13, 32
  %conv54.i.i = trunc i64 %shr53.i.i to i8
  %arrayidx55.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 11
  store i8 %conv54.i.i, i8* %arrayidx55.i.i, align 1, !tbaa !10
  %shr58.i.i = lshr i64 %13, 24
  %conv59.i.i = trunc i64 %shr58.i.i to i8
  %arrayidx60.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 12
  store i8 %conv59.i.i, i8* %arrayidx60.i.i, align 4, !tbaa !10
  %shr63.i.i = lshr i64 %13, 16
  %conv64.i.i = trunc i64 %shr63.i.i to i8
  %arrayidx65.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 13
  store i8 %conv64.i.i, i8* %arrayidx65.i.i, align 1, !tbaa !10
  %shr68.i.i = lshr i64 %13, 8
  %conv69.i.i = trunc i64 %shr68.i.i to i8
  %arrayidx70.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 14
  store i8 %conv69.i.i, i8* %arrayidx70.i.i, align 2, !tbaa !10
  %conv73.i.i = trunc i64 %13 to i8
  %arrayidx74.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 15
  store i8 %conv73.i.i, i8* %arrayidx74.i.i, align 1, !tbaa !10
  %arrayidx76.i.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 1, i32 0, i64 1
  %14 = load i64, i64* %arrayidx76.i.i, align 8, !tbaa !13
  %shr77.i.i = lshr i64 %14, 56
  %conv78.i.i = trunc i64 %shr77.i.i to i8
  %arrayidx79.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 16
  store i8 %conv78.i.i, i8* %arrayidx79.i.i, align 16, !tbaa !10
  %shr82.i.i = lshr i64 %14, 48
  %conv83.i.i = trunc i64 %shr82.i.i to i8
  %arrayidx84.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 17
  store i8 %conv83.i.i, i8* %arrayidx84.i.i, align 1, !tbaa !10
  %shr87.i.i = lshr i64 %14, 40
  %conv88.i.i = trunc i64 %shr87.i.i to i8
  %arrayidx89.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 18
  store i8 %conv88.i.i, i8* %arrayidx89.i.i, align 2, !tbaa !10
  %shr92.i.i = lshr i64 %14, 32
  %conv93.i.i = trunc i64 %shr92.i.i to i8
  %arrayidx94.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 19
  store i8 %conv93.i.i, i8* %arrayidx94.i.i, align 1, !tbaa !10
  %shr97.i.i = lshr i64 %14, 24
  %conv98.i.i = trunc i64 %shr97.i.i to i8
  %arrayidx99.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 20
  store i8 %conv98.i.i, i8* %arrayidx99.i.i, align 4, !tbaa !10
  %shr102.i.i = lshr i64 %14, 16
  %conv103.i.i = trunc i64 %shr102.i.i to i8
  %arrayidx104.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 21
  store i8 %conv103.i.i, i8* %arrayidx104.i.i, align 1, !tbaa !10
  %shr107.i.i = lshr i64 %14, 8
  %conv108.i.i = trunc i64 %shr107.i.i to i8
  %arrayidx109.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 22
  store i8 %conv108.i.i, i8* %arrayidx109.i.i, align 2, !tbaa !10
  %conv112.i.i = trunc i64 %14 to i8
  %arrayidx113.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 23
  store i8 %conv112.i.i, i8* %arrayidx113.i.i, align 1, !tbaa !10
  %arrayidx115.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %blind3.i, i64 0, i32 0, i64 0
  %15 = load i64, i64* %arrayidx115.i.i, align 8, !tbaa !13
  %shr116.i.i = lshr i64 %15, 56
  %conv117.i.i = trunc i64 %shr116.i.i to i8
  %arrayidx118.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 24
  store i8 %conv117.i.i, i8* %arrayidx118.i.i, align 8, !tbaa !10
  %shr121.i.i = lshr i64 %15, 48
  %conv122.i.i = trunc i64 %shr121.i.i to i8
  %arrayidx123.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 25
  store i8 %conv122.i.i, i8* %arrayidx123.i.i, align 1, !tbaa !10
  %shr126.i.i = lshr i64 %15, 40
  %conv127.i.i = trunc i64 %shr126.i.i to i8
  %arrayidx128.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 26
  store i8 %conv127.i.i, i8* %arrayidx128.i.i, align 2, !tbaa !10
  %shr131.i.i = lshr i64 %15, 32
  %conv132.i.i = trunc i64 %shr131.i.i to i8
  %arrayidx133.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 27
  store i8 %conv132.i.i, i8* %arrayidx133.i.i, align 1, !tbaa !10
  %shr136.i.i = lshr i64 %15, 24
  %conv137.i.i = trunc i64 %shr136.i.i to i8
  %arrayidx138.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 28
  store i8 %conv137.i.i, i8* %arrayidx138.i.i, align 4, !tbaa !10
  %shr141.i.i = lshr i64 %15, 16
  %conv142.i.i = trunc i64 %shr141.i.i to i8
  %arrayidx143.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 29
  store i8 %conv142.i.i, i8* %arrayidx143.i.i, align 1, !tbaa !10
  %shr146.i.i = lshr i64 %15, 8
  %conv147.i.i = trunc i64 %shr146.i.i to i8
  %arrayidx148.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 30
  store i8 %conv147.i.i, i8* %arrayidx148.i.i, align 2, !tbaa !10
  %conv151.i.i = trunc i64 %15 to i8
  %arrayidx152.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 31
  store i8 %conv151.i.i, i8* %arrayidx152.i.i, align 1, !tbaa !10
  %add.ptr.i = getelementptr inbounds [64 x i8], [64 x i8]* %keydata.i, i64 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i, i8* noundef nonnull align 1 dereferenceable(32) %seed32, i64 32, i1 false) #19
  call fastcc void @secp256k1_rfc6979_hmac_sha256_initialize(%struct.secp256k1_rfc6979_hmac_sha256* noundef nonnull %rng.i, i8* noundef nonnull %5, i64 noundef 64) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(64) %5, i8 0, i64 64, i1 false) #19
  call fastcc void @secp256k1_rfc6979_hmac_sha256_generate(%struct.secp256k1_rfc6979_hmac_sha256* noundef nonnull %rng.i, i8* noundef nonnull %3) #19
  %arrayidx.i40.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 31
  %16 = load i8, i8* %arrayidx.i40.i, align 1, !tbaa !10
  %conv.i41.i = zext i8 %16 to i64
  %arrayidx1.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 30
  %17 = load i8, i8* %arrayidx1.i.i, align 2, !tbaa !10
  %conv2.i.i = zext i8 %17 to i64
  %shl.i.i = shl nuw nsw i64 %conv2.i.i, 8
  %or.i.i = or i64 %shl.i.i, %conv.i41.i
  %arrayidx3.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 29
  %18 = load i8, i8* %arrayidx3.i.i, align 1, !tbaa !10
  %conv4.i.i = zext i8 %18 to i64
  %shl5.i.i = shl nuw nsw i64 %conv4.i.i, 16
  %or6.i.i = or i64 %or.i.i, %shl5.i.i
  %arrayidx7.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 28
  %19 = load i8, i8* %arrayidx7.i.i, align 4, !tbaa !10
  %conv8.i.i = zext i8 %19 to i64
  %shl9.i.i = shl nuw nsw i64 %conv8.i.i, 24
  %or10.i.i = or i64 %or6.i.i, %shl9.i.i
  %arrayidx11.i42.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 27
  %20 = load i8, i8* %arrayidx11.i42.i, align 1, !tbaa !10
  %conv12.i.i = zext i8 %20 to i64
  %shl13.i.i = shl nuw nsw i64 %conv12.i.i, 32
  %or14.i.i = or i64 %or10.i.i, %shl13.i.i
  %arrayidx15.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 26
  %21 = load i8, i8* %arrayidx15.i.i, align 2, !tbaa !10
  %conv16.i.i = zext i8 %21 to i64
  %shl17.i.i = shl nuw nsw i64 %conv16.i.i, 40
  %or18.i.i = or i64 %or14.i.i, %shl17.i.i
  %arrayidx19.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 25
  %22 = load i8, i8* %arrayidx19.i.i, align 1, !tbaa !10
  %23 = and i8 %22, 15
  %24 = zext i8 %23 to i64
  %shl22.i.i = shl nuw nsw i64 %24, 48
  %or23.i.i = or i64 %or18.i.i, %shl22.i.i
  %arrayidx24.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 0
  %25 = lshr i8 %22, 4
  %26 = zext i8 %25 to i64
  %arrayidx29.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 24
  %27 = load i8, i8* %arrayidx29.i.i, align 8, !tbaa !10
  %conv30.i43.i = zext i8 %27 to i64
  %shl31.i.i = shl nuw nsw i64 %conv30.i43.i, 4
  %or32.i.i = or i64 %shl31.i.i, %26
  %arrayidx33.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 23
  %28 = load i8, i8* %arrayidx33.i.i, align 1, !tbaa !10
  %conv34.i44.i = zext i8 %28 to i64
  %shl35.i.i = shl nuw nsw i64 %conv34.i44.i, 12
  %or36.i.i = or i64 %or32.i.i, %shl35.i.i
  %arrayidx37.i45.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 22
  %29 = load i8, i8* %arrayidx37.i45.i, align 2, !tbaa !10
  %conv38.i.i = zext i8 %29 to i64
  %shl39.i.i = shl nuw nsw i64 %conv38.i.i, 20
  %or40.i.i = or i64 %or36.i.i, %shl39.i.i
  %arrayidx41.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 21
  %30 = load i8, i8* %arrayidx41.i.i, align 1, !tbaa !10
  %conv42.i.i = zext i8 %30 to i64
  %shl43.i.i = shl nuw nsw i64 %conv42.i.i, 28
  %or44.i.i = or i64 %or40.i.i, %shl43.i.i
  %arrayidx45.i46.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 20
  %31 = load i8, i8* %arrayidx45.i46.i, align 4, !tbaa !10
  %conv46.i.i = zext i8 %31 to i64
  %shl47.i.i = shl nuw nsw i64 %conv46.i.i, 36
  %or48.i.i = or i64 %or44.i.i, %shl47.i.i
  %arrayidx49.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 19
  %32 = load i8, i8* %arrayidx49.i.i, align 1, !tbaa !10
  %conv50.i.i = zext i8 %32 to i64
  %shl51.i.i = shl nuw nsw i64 %conv50.i.i, 44
  %or52.i.i = or i64 %or48.i.i, %shl51.i.i
  %arrayidx54.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 1
  %arrayidx55.i47.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 18
  %33 = load i8, i8* %arrayidx55.i47.i, align 2, !tbaa !10
  %conv56.i.i = zext i8 %33 to i64
  %arrayidx57.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 17
  %34 = load i8, i8* %arrayidx57.i.i, align 1, !tbaa !10
  %conv58.i.i = zext i8 %34 to i64
  %shl59.i.i = shl nuw nsw i64 %conv58.i.i, 8
  %or60.i.i = or i64 %shl59.i.i, %conv56.i.i
  %arrayidx61.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 16
  %35 = load i8, i8* %arrayidx61.i.i, align 16, !tbaa !10
  %conv62.i.i = zext i8 %35 to i64
  %shl63.i.i = shl nuw nsw i64 %conv62.i.i, 16
  %or64.i.i = or i64 %or60.i.i, %shl63.i.i
  %arrayidx65.i48.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 15
  %36 = load i8, i8* %arrayidx65.i48.i, align 1, !tbaa !10
  %conv66.i.i = zext i8 %36 to i64
  %shl67.i.i = shl nuw nsw i64 %conv66.i.i, 24
  %or68.i.i = or i64 %or64.i.i, %shl67.i.i
  %arrayidx69.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 14
  %37 = load i8, i8* %arrayidx69.i.i, align 2, !tbaa !10
  %conv70.i.i = zext i8 %37 to i64
  %shl71.i.i = shl nuw nsw i64 %conv70.i.i, 32
  %or72.i.i = or i64 %or68.i.i, %shl71.i.i
  %arrayidx73.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 13
  %38 = load i8, i8* %arrayidx73.i.i, align 1, !tbaa !10
  %conv74.i.i = zext i8 %38 to i64
  %shl75.i.i = shl nuw nsw i64 %conv74.i.i, 40
  %or76.i.i = or i64 %or72.i.i, %shl75.i.i
  %arrayidx77.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 12
  %39 = load i8, i8* %arrayidx77.i.i, align 4, !tbaa !10
  %40 = and i8 %39, 15
  %41 = zext i8 %40 to i64
  %shl81.i.i = shl nuw nsw i64 %41, 48
  %or82.i.i = or i64 %or76.i.i, %shl81.i.i
  %arrayidx84.i49.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 2
  %42 = lshr i8 %39, 4
  %43 = zext i8 %42 to i64
  %arrayidx90.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 11
  %44 = load i8, i8* %arrayidx90.i.i, align 1, !tbaa !10
  %conv91.i.i = zext i8 %44 to i64
  %shl92.i.i = shl nuw nsw i64 %conv91.i.i, 4
  %or93.i.i = or i64 %shl92.i.i, %43
  %arrayidx94.i50.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 10
  %45 = load i8, i8* %arrayidx94.i50.i, align 2, !tbaa !10
  %conv95.i.i = zext i8 %45 to i64
  %shl96.i.i = shl nuw nsw i64 %conv95.i.i, 12
  %or97.i.i = or i64 %or93.i.i, %shl96.i.i
  %arrayidx98.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 9
  %46 = load i8, i8* %arrayidx98.i.i, align 1, !tbaa !10
  %conv99.i.i = zext i8 %46 to i64
  %shl100.i.i = shl nuw nsw i64 %conv99.i.i, 20
  %or101.i.i = or i64 %or97.i.i, %shl100.i.i
  %arrayidx102.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 8
  %47 = load i8, i8* %arrayidx102.i.i, align 8, !tbaa !10
  %conv103.i51.i = zext i8 %47 to i64
  %shl104.i.i = shl nuw nsw i64 %conv103.i51.i, 28
  %or105.i.i = or i64 %or101.i.i, %shl104.i.i
  %arrayidx106.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 7
  %48 = load i8, i8* %arrayidx106.i.i, align 1, !tbaa !10
  %conv107.i.i = zext i8 %48 to i64
  %shl108.i.i = shl nuw nsw i64 %conv107.i.i, 36
  %or109.i.i = or i64 %or105.i.i, %shl108.i.i
  %arrayidx110.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 6
  %49 = load i8, i8* %arrayidx110.i.i, align 2, !tbaa !10
  %conv111.i.i = zext i8 %49 to i64
  %shl112.i.i = shl nuw nsw i64 %conv111.i.i, 44
  %or113.i.i = or i64 %or109.i.i, %shl112.i.i
  %arrayidx115.i52.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 3
  %arrayidx116.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 5
  %50 = load i8, i8* %arrayidx116.i.i, align 1, !tbaa !10
  %conv117.i53.i = zext i8 %50 to i64
  %arrayidx118.i54.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 4
  %51 = load i8, i8* %arrayidx118.i54.i, align 4, !tbaa !10
  %conv119.i.i = zext i8 %51 to i64
  %shl120.i.i = shl nuw nsw i64 %conv119.i.i, 8
  %or121.i.i = or i64 %shl120.i.i, %conv117.i53.i
  %arrayidx122.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 3
  %52 = load i8, i8* %arrayidx122.i.i, align 1, !tbaa !10
  %conv123.i.i = zext i8 %52 to i64
  %shl124.i.i = shl nuw nsw i64 %conv123.i.i, 16
  %or125.i.i = or i64 %or121.i.i, %shl124.i.i
  %arrayidx126.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 2
  %53 = load i8, i8* %arrayidx126.i.i, align 2, !tbaa !10
  %conv127.i55.i = zext i8 %53 to i64
  %shl128.i.i = shl nuw nsw i64 %conv127.i55.i, 24
  %or129.i.i = or i64 %or125.i.i, %shl128.i.i
  %arrayidx130.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %nonce32.i, i64 0, i64 1
  %54 = load i8, i8* %arrayidx130.i.i, align 1, !tbaa !10
  %conv131.i.i = zext i8 %54 to i64
  %shl132.i.i = shl nuw nsw i64 %conv131.i.i, 32
  %or133.i.i = or i64 %or129.i.i, %shl132.i.i
  %55 = load i8, i8* %3, align 16, !tbaa !10
  %conv135.i.i = zext i8 %55 to i64
  %shl136.i.i = shl nuw nsw i64 %conv135.i.i, 40
  %or137.i.i = or i64 %or133.i.i, %shl136.i.i
  %arrayidx139.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 4
  %cmp.i.i = icmp eq i64 %or137.i.i, 281474976710655
  %and147.i.i = and i64 %or82.i.i, %or52.i.i
  %and150.i.i = and i64 %and147.i.i, %or113.i.i
  %cmp151.i.i = icmp eq i64 %and150.i.i, 4503599627370495
  %and153202.i.i = and i1 %cmp151.i.i, %cmp.i.i
  %cmp156.i.i = icmp ugt i64 %or23.i.i, 4503595332402222
  %and158203.i.i = and i1 %cmp156.i.i, %and153202.i.i
  %or.i57.i = or i64 %or52.i.i, %or23.i.i
  %or3.i.i = or i64 %or.i57.i, %or82.i.i
  %or5.i.i = or i64 %or3.i.i, %or113.i.i
  %or7.i.i = or i64 %or5.i.i, %or137.i.i
  %cmp.i60.i = icmp eq i64 %or7.i.i, 0
  %or105.i = or i1 %cmp.i60.i, %and158203.i.i
  %conv.i62.neg106.i = zext i1 %or105.i to i64
  %not.or105.i = xor i1 %or105.i, true
  %add.i.i = sext i1 %not.or105.i to i64
  %and.i.i = and i64 %or23.i.i, %add.i.i
  %or.i64.i = or i64 %and.i.i, %conv.i62.neg106.i
  store i64 %or.i64.i, i64* %arrayidx24.i.i, align 8, !tbaa !13
  %and8.i.i = and i64 %or52.i.i, %add.i.i
  store i64 %and8.i.i, i64* %arrayidx54.i.i, align 8, !tbaa !13
  %and17.i.i = and i64 %or82.i.i, %add.i.i
  store i64 %and17.i.i, i64* %arrayidx84.i49.i, align 8, !tbaa !13
  %and26.i.i = and i64 %or113.i.i, %add.i.i
  store i64 %and26.i.i, i64* %arrayidx115.i52.i, align 8, !tbaa !13
  %and35.i.i = and i64 %or137.i.i, %add.i.i
  store i64 %and35.i.i, i64* %arrayidx139.i.i, align 8, !tbaa !13
  %initial11.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2
  %56 = bitcast %struct.secp256k1_fe* %zz.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #19
  %mul.i.i102.i = shl i64 %or.i64.i, 1
  %conv.i.i.i.i = zext i64 %mul.i.i102.i to i128
  %conv1.i.i.i.i = zext i64 %and26.i.i to i128
  %mul.i.i.i.i = mul nuw i128 %conv.i.i.i.i, %conv1.i.i.i.i
  %mul17.i.i.i = shl i64 %and8.i.i, 1
  %conv.i215.i.i.i = zext i64 %mul17.i.i.i to i128
  %conv1.i216.i.i.i = zext i64 %and17.i.i to i128
  %mul.i217.i.i.i = mul nuw i128 %conv.i215.i.i.i, %conv1.i216.i.i.i
  %add.i.i.i.i = add i128 %mul.i.i.i.i, %mul.i217.i.i.i
  %conv.i218.i.i.i = zext i64 %and35.i.i to i128
  %mul.i220.i.i.i = mul nuw i128 %conv.i218.i.i.i, %conv.i218.i.i.i
  %conv1.i222.i.i.i = and i128 %mul.i220.i.i.i, 18446744073709551615
  %mul.i223.i.i.i = mul nuw nsw i128 %conv1.i222.i.i.i, 68719492368
  %add.i224.i.i.i = add i128 %add.i.i.i.i, %mul.i223.i.i.i
  %shr.i.i.i.i = lshr i128 %mul.i220.i.i.i, 64
  %shr.i226.i.i.i = lshr i128 %add.i224.i.i.i, 52
  %mul37.i.i.i = shl i64 %and35.i.i, 1
  %conv.i227.i.i.i = zext i64 %or.i64.i to i128
  %conv1.i228.i.i.i = zext i64 %mul37.i.i.i to i128
  %mul.i229.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv.i227.i.i.i
  %mul.i233.i.i.i = mul nuw i128 %conv.i215.i.i.i, %conv1.i.i.i.i
  %mul.i237.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv1.i216.i.i.i
  %mul.i241.i.i.i = mul nuw nsw i128 %shr.i.i.i.i, 281475040739328
  %add.i230.i.i.i = add i128 %mul.i233.i.i.i, %mul.i237.i.i.i
  %add.i234.i.i.i = add i128 %add.i230.i.i.i, %mul.i229.i.i.i
  %add.i238.i.i.i = add i128 %add.i234.i.i.i, %mul.i241.i.i.i
  %add.i242.i.i.i = add i128 %add.i238.i.i.i, %shr.i226.i.i.i
  %conv.i243.i.i.i = trunc i128 %add.i242.i.i.i to i64
  %shr.i244.i.i.i = lshr i128 %add.i242.i.i.i, 52
  %and47.i.i.i = lshr i64 %conv.i243.i.i.i, 48
  %57 = and i64 %and47.i.i.i, 15
  %and54.i.i.i = and i64 %conv.i243.i.i.i, 281474976710655
  %mul.i247.i.i.i = mul nuw i128 %conv.i227.i.i.i, %conv.i227.i.i.i
  %conv.i248.i.i.i = zext i64 %and8.i.i to i128
  %mul.i250.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv.i248.i.i.i
  %mul64.i.i.i = shl i64 %and17.i.i, 1
  %conv.i252.i.i.i = zext i64 %mul64.i.i.i to i128
  %mul.i254.i.i.i = mul nuw i128 %conv.i252.i.i.i, %conv1.i.i.i.i
  %add.i251.i.i.i = add i128 %mul.i250.i.i.i, %mul.i254.i.i.i
  %add.i255.i.i.i = add i128 %add.i251.i.i.i, %shr.i244.i.i.i
  %conv.i256.i.i.i = trunc i128 %add.i255.i.i.i to i64
  %shr.i257.i.i.i = lshr i128 %add.i255.i.i.i, 52
  %and69.i.i.i = shl i64 %conv.i256.i.i.i, 4
  %shl.i.i.i = and i64 %and69.i.i.i, 72057594037927920
  %or.i.i103.i = or i64 %shl.i.i.i, %57
  %conv.i258.i.i.i = zext i64 %or.i.i103.i to i128
  %mul.i259.i.i.i = mul nuw nsw i128 %conv.i258.i.i.i, 4294968273
  %add.i260.i.i.i = add i128 %mul.i259.i.i.i, %mul.i247.i.i.i
  %shr.i262.i.i.i = lshr i128 %add.i260.i.i.i, 52
  %mul.i265.i.i.i = mul nuw i128 %conv.i.i.i.i, %conv.i248.i.i.i
  %mul.i269.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv1.i216.i.i.i
  %mul.i273.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv1.i.i.i.i
  %add.i270.i.i.i = add i128 %mul.i269.i.i.i, %mul.i273.i.i.i
  %add.i274.i.i.i = add i128 %add.i270.i.i.i, %shr.i257.i.i.i
  %conv.i276.i.i.i = and i128 %add.i274.i.i.i, 4503599627370495
  %mul.i277.i.i.i = mul nuw nsw i128 %conv.i276.i.i.i, 68719492368
  %add.i266.i.i.i = add i128 %mul.i277.i.i.i, %mul.i265.i.i.i
  %add.i278.i.i.i = add i128 %add.i266.i.i.i, %shr.i262.i.i.i
  %shr.i279.i.i.i = lshr i128 %add.i274.i.i.i, 52
  %58 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i, i64 0
  %59 = insertelement <2 x i128> %58, i128 %add.i278.i.i.i, i64 1
  %60 = trunc <2 x i128> %59 to <2 x i64>
  %61 = and <2 x i64> %60, <i64 4503599627370495, i64 4503599627370495>
  %62 = bitcast %struct.secp256k1_fe* %zz.i.i to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %62, align 16, !tbaa !13
  %shr.i281.i.i.i = lshr i128 %add.i278.i.i.i, 52
  %mul.i284.i.i.i = mul nuw i128 %conv.i.i.i.i, %conv1.i216.i.i.i
  %mul.i288.i.i.i = mul nuw i128 %conv.i248.i.i.i, %conv.i248.i.i.i
  %mul.i292.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv1.i.i.i.i
  %add.i293.i.i.i = add i128 %shr.i279.i.i.i, %mul.i292.i.i.i
  %conv1.i295.i.i.i = and i128 %add.i293.i.i.i, 18446744073709551615
  %mul.i296.i.i.i = mul nuw nsw i128 %conv1.i295.i.i.i, 68719492368
  %add.i285.i.i.i = add i128 %mul.i284.i.i.i, %mul.i288.i.i.i
  %add.i289.i.i.i = add i128 %add.i285.i.i.i, %mul.i296.i.i.i
  %add.i297.i.i.i = add i128 %add.i289.i.i.i, %shr.i281.i.i.i
  %shr.i298.i.i.i = lshr i128 %add.i293.i.i.i, 64
  %arrayidx130.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zz.i.i, i64 0, i32 0, i64 2
  %shr.i300.i.i.i = lshr i128 %add.i297.i.i.i, 52
  %mul.i303.i.i.i = mul nuw nsw i128 %shr.i298.i.i.i, 281475040739328
  %conv.i305.i.i.i = and i128 %add.i224.i.i.i, 4503599627370494
  %add.i304.i.i.i = add nuw nsw i128 %mul.i303.i.i.i, %conv.i305.i.i.i
  %add.i306.i.i.i = add nuw nsw i128 %add.i304.i.i.i, %shr.i300.i.i.i
  %63 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i, i64 0
  %64 = insertelement <2 x i128> %63, i128 %add.i306.i.i.i, i64 1
  %65 = trunc <2 x i128> %64 to <2 x i64>
  %66 = and <2 x i64> %65, <i64 4503599627370495, i64 4503599627370495>
  %67 = bitcast i64* %arrayidx130.i.i.i to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 16, !tbaa !13
  %shr.i308.i.i.i = lshr i128 %add.i306.i.i.i, 52
  %conv.i309.i.i.i = trunc i128 %shr.i308.i.i.i to i64
  %add.i.i104.i = add nuw nsw i64 %and54.i.i.i, %conv.i309.i.i.i
  %arrayidx151.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zz.i.i, i64 0, i32 0, i64 4
  store i64 %add.i.i104.i, i64* %arrayidx151.i.i.i, align 16, !tbaa !13
  %x.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %initial11.i, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x.i.i, %struct.secp256k1_fe* noundef nonnull %x.i.i, %struct.secp256k1_fe* noundef nonnull %zz.i.i) #19
  %y.i67.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y.i67.i, %struct.secp256k1_fe* noundef nonnull %y.i67.i, %struct.secp256k1_fe* noundef nonnull %zz.i.i) #19
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y.i67.i, %struct.secp256k1_fe* noundef nonnull %y.i67.i, %struct.secp256k1_fe* noundef nonnull %s.i) #19
  %z.i68.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 0, i32 2, i32 2
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z.i68.i, %struct.secp256k1_fe* noundef nonnull %z.i68.i, %struct.secp256k1_fe* noundef nonnull %s.i) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %2, i8 0, i64 40, i1 false) #19, !tbaa !13
  call fastcc void @secp256k1_rfc6979_hmac_sha256_generate(%struct.secp256k1_rfc6979_hmac_sha256* noundef nonnull %rng.i, i8* noundef nonnull %3) #19
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef nonnull %b.i, i8* noundef nonnull %3, i32* noundef null) #19
  %arrayidx.i69.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b.i, i64 0, i32 0, i64 0
  %68 = load i64, i64* %arrayidx.i69.i, align 8, !tbaa !13
  %arrayidx2.i70.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b.i, i64 0, i32 0, i64 1
  %69 = load i64, i64* %arrayidx2.i70.i, align 8, !tbaa !13
  %or.i71.i = or i64 %69, %68
  %arrayidx4.i72.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b.i, i64 0, i32 0, i64 2
  %70 = load i64, i64* %arrayidx4.i72.i, align 8, !tbaa !13
  %or5.i73.i = or i64 %or.i71.i, %70
  %arrayidx7.i74.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b.i, i64 0, i32 0, i64 3
  %71 = load i64, i64* %arrayidx7.i74.i, align 8, !tbaa !13
  %or8.i.i = or i64 %or5.i73.i, %71
  %cmp.i75.i = icmp eq i64 %or8.i.i, 0
  %.neg107.i = zext i1 %cmp.i75.i to i64
  %not.cmp.i75.i = xor i1 %cmp.i75.i, true
  %add.i77.i = sext i1 %not.cmp.i75.i to i64
  %and.i80.i = and i64 %68, %add.i77.i
  %or.i82.i = or i64 %and.i80.i, %.neg107.i
  store i64 %or.i82.i, i64* %arrayidx.i69.i, align 8, !tbaa !13
  %and8.i84.i = and i64 %69, %add.i77.i
  store i64 %and8.i84.i, i64* %arrayidx2.i70.i, align 8, !tbaa !13
  %and17.i86.i = and i64 %70, %add.i77.i
  store i64 %and17.i86.i, i64* %arrayidx4.i72.i, align 8, !tbaa !13
  %and26.i88.i = and i64 %71, %add.i77.i
  store i64 %and26.i88.i, i64* %arrayidx7.i74.i, align 8, !tbaa !13
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(68) %4, i8 0, i64 68, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %3, i8 0, i64 32, i1 false) #19
  call fastcc void @secp256k1_ecmult_gen(%struct.secp256k1_ecmult_gen_context* noundef nonnull %ecmult_gen_ctx, %struct.secp256k1_gej* noundef nonnull %gb.i, %struct.secp256k1_scalar* noundef nonnull %b.i) #19
  %or.i.i.i = or i64 %and17.i86.i, %and8.i84.i
  %or5.i.i.i = or i64 %or.i.i.i, %and26.i88.i
  %or8.i.i.i = or i64 %or5.i.i.i, %or.i82.i
  %cmp.i.i.i = icmp ne i64 %or8.i.i.i, 0
  %.neg.i.i = sext i1 %cmp.i.i.i to i64
  %neg.i92.i = xor i64 %or.i82.i, -1
  %conv.i40.i.i = zext i64 %neg.i92.i to i128
  %add.i.i93.i = add nuw nsw i128 %conv.i40.i.i, 13822214165235122498
  %conv.i41.i.i = trunc i128 %add.i.i93.i to i64
  %and.i94.i = and i64 %.neg.i.i, %conv.i41.i.i
  store i64 %and.i94.i, i64* %arrayidx.i69.i, align 8, !tbaa !13
  %shr.i.i96.i = lshr i128 %add.i.i93.i, 64
  %neg7.i.i = xor i64 %and8.i84.i, -1
  %conv.i42.i.i = zext i64 %neg7.i.i to i128
  %add.i43.i.i = add nuw nsw i128 %conv.i42.i.i, 13451932020343611451
  %add.i44.i.i = add nuw nsw i128 %add.i43.i.i, %shr.i.i96.i
  %conv.i45.i.i = trunc i128 %add.i44.i.i to i64
  %and9.i.i = and i64 %conv.i45.i.i, %.neg.i.i
  store i64 %and9.i.i, i64* %arrayidx2.i70.i, align 8, !tbaa !13
  %shr.i46.i.i = lshr i128 %add.i44.i.i, 64
  %neg14.i.i = xor i64 %and17.i86.i, -1
  %conv.i47.i.i = zext i64 %neg14.i.i to i128
  %add.i48.i.i = add nuw nsw i128 %conv.i47.i.i, 18446744073709551614
  %add.i49.i.i = add nuw nsw i128 %add.i48.i.i, %shr.i46.i.i
  %conv.i50.i.i = trunc i128 %add.i49.i.i to i64
  %and16.i.i = and i64 %conv.i50.i.i, %.neg.i.i
  store i64 %and16.i.i, i64* %arrayidx4.i72.i, align 8, !tbaa !13
  %shr.i51.i.i = lshr i128 %add.i49.i.i, 64
  %72 = trunc i128 %shr.i51.i.i to i64
  %73 = sub i64 -2, %and26.i88.i
  %conv.i55.i.i = add i64 %73, %72
  %and23.i.i = and i64 %conv.i55.i.i, %.neg.i.i
  store i64 %and23.i.i, i64* %arrayidx7.i74.i, align 8, !tbaa !13
  %74 = bitcast %struct.secp256k1_scalar* %blind3.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %74, i8* noundef nonnull align 8 dereferenceable(32) %0, i64 32, i1 false) #19, !tbaa.struct !46
  %75 = bitcast %struct.secp256k1_gej* %initial11.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128) %75, i8* noundef nonnull align 8 dereferenceable(128) %1, i64 128, i1 false) #19, !tbaa.struct !67
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %0, i8 0, i64 32, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(124) %1, i8 0, i64 124, i1 false) #19
  br label %secp256k1_ecmult_gen_blind.exit

secp256k1_ecmult_gen_blind.exit:                  ; preds = %if.then.i, %if.end.i
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  br label %if.end

if.end:                                           ; preds = %secp256k1_ecmult_gen_blind.exit, %entry
  ret i32 1
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_ec_pubkey_combine(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, %struct.secp256k1_pubkey* noundef writeonly %pubnonce, %struct.secp256k1_pubkey** noundef readonly %pubnonces, i64 noundef %n) local_unnamed_addr #0 {
entry:
  %Qj = alloca %struct.secp256k1_gej, align 8
  %Q = alloca %struct.secp256k1_ge, align 8
  %0 = bitcast %struct.secp256k1_gej* %Qj to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_ge* %Q to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1) #19
  %cmp2.not = icmp eq %struct.secp256k1_pubkey* %pubnonce, null
  br i1 %cmp2.not, label %if.then, label %do.end6, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx72 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx72.val = load i8*, i8** %illegal_callback.idx72, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* noundef %illegal_callback.idx72.val) #19
  br label %cleanup

do.end6:                                          ; preds = %entry
  %2 = getelementptr %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %pubnonce, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %2, i8 0, i64 64, i1 false)
  %cmp8.not = icmp eq i64 %n, 0
  br i1 %cmp8.not, label %if.then15, label %do.body20, !prof !26

if.then15:                                        ; preds = %do.end6
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx71 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx71.val = load i8*, i8** %illegal_callback16.idx71, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8* noundef %illegal_callback16.idx71.val) #19
  br label %cleanup

do.body20:                                        ; preds = %do.end6
  %cmp21.not = icmp eq %struct.secp256k1_pubkey** %pubnonces, null
  br i1 %cmp21.not, label %if.then28, label %do.body35.lr.ph, !prof !26

if.then28:                                        ; preds = %do.body20
  %illegal_callback29.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback29.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback29.idx, align 8, !tbaa !27
  %illegal_callback29.idx70 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback29.idx70.val = load i8*, i8** %illegal_callback29.idx70, align 8, !tbaa !28
  tail call void %illegal_callback29.idx.val(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* noundef %illegal_callback29.idx70.val) #19
  br label %cleanup

do.body35.lr.ph:                                  ; preds = %do.body20
  %infinity.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %Qj, i64 0, i32 3
  store i32 1, i32* %infinity.i, align 8, !tbaa !65
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(120) %0, i8 0, i64 120, i1 false) #19
  %arrayidx2.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 0
  %arrayidx9.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 1
  %arrayidx19.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 2
  %arrayidx29.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 3
  %arrayidx34.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 0, i32 0, i64 4
  %arrayidx2.i8.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 0
  %arrayidx9.i14.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 1
  %arrayidx19.i20.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 2
  %arrayidx29.i26.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 3
  %arrayidx34.i28.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 1, i32 0, i64 4
  %infinity.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %Q, i64 0, i32 2
  %illegal_callback.idx.i = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx4.i = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  br label %do.body35

do.body35:                                        ; preds = %do.body35.lr.ph, %secp256k1_pubkey_load.exit
  %i.074 = phi i64 [ 0, %do.body35.lr.ph ], [ %inc, %secp256k1_pubkey_load.exit ]
  %arrayidx = getelementptr inbounds %struct.secp256k1_pubkey*, %struct.secp256k1_pubkey** %pubnonces, i64 %i.074
  %3 = load %struct.secp256k1_pubkey*, %struct.secp256k1_pubkey** %arrayidx, align 8, !tbaa !16
  %cmp36.not = icmp eq %struct.secp256k1_pubkey* %3, null
  br i1 %cmp36.not, label %if.then43, label %do.end47, !prof !26

if.then43:                                        ; preds = %do.body35
  %illegal_callback44.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback44.idx69.val = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  tail call void %illegal_callback44.idx.val(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i8* noundef %illegal_callback44.idx69.val) #19
  br label %cleanup

do.end47:                                         ; preds = %do.body35
  %s.sroa.0.0.arrayidx.sroa_cast.i = bitcast %struct.secp256k1_pubkey* %3 to i64*
  %s.sroa.0.0.copyload.i = load i64, i64* %s.sroa.0.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.5.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 8
  %s.sroa.5.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.5.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.5.0.copyload.i = load i64, i64* %s.sroa.5.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.7.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 16
  %s.sroa.7.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.7.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.7.0.copyload.i = load i64, i64* %s.sroa.7.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.9.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 24
  %s.sroa.9.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.9.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.9.0.copyload.i = load i64, i64* %s.sroa.9.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.11.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 32
  %s.sroa.11.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.11.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.11.0.copyload.i = load i64, i64* %s.sroa.11.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.13.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 40
  %s.sroa.13.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.13.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.13.0.copyload.i = load i64, i64* %s.sroa.13.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.15.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 48
  %s.sroa.15.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.15.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.15.0.copyload.i = load i64, i64* %s.sroa.15.0.arrayidx.sroa_cast.i, align 1
  %s.sroa.17.0.arrayidx.sroa_idx.i = getelementptr inbounds %struct.secp256k1_pubkey, %struct.secp256k1_pubkey* %3, i64 0, i32 0, i64 56
  %s.sroa.17.0.arrayidx.sroa_cast.i = bitcast i8* %s.sroa.17.0.arrayidx.sroa_idx.i to i64*
  %s.sroa.17.0.copyload.i = load i64, i64* %s.sroa.17.0.arrayidx.sroa_cast.i, align 1
  %and.i.i.i = and i64 %s.sroa.0.0.copyload.i, 4503599627370495
  store i64 %and.i.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i64 %s.sroa.0.0.copyload.i, 52
  %shl.i.i.i = shl i64 %s.sroa.5.0.copyload.i, 12
  %and7.i.i.i = and i64 %shl.i.i.i, 4503599627366400
  %or.i.i.i = or i64 %and7.i.i.i, %shr.i.i.i
  store i64 %or.i.i.i, i64* %arrayidx9.i.i.i, align 8, !tbaa !13
  %shr12.i.i.i = lshr i64 %s.sroa.5.0.copyload.i, 40
  %shl15.i.i.i = shl i64 %s.sroa.7.0.copyload.i, 24
  %and16.i.i.i = and i64 %shl15.i.i.i, 4503599610593280
  %or17.i.i.i = or i64 %and16.i.i.i, %shr12.i.i.i
  store i64 %or17.i.i.i, i64* %arrayidx19.i.i.i, align 8, !tbaa !13
  %shr22.i.i.i = lshr i64 %s.sroa.7.0.copyload.i, 28
  %shl25.i.i.i = shl i64 %s.sroa.9.0.copyload.i, 36
  %and26.i.i.i = and i64 %shl25.i.i.i, 4503530907893760
  %or27.i.i.i = or i64 %and26.i.i.i, %shr22.i.i.i
  store i64 %or27.i.i.i, i64* %arrayidx29.i.i.i, align 8, !tbaa !13
  %shr32.i.i.i = lshr i64 %s.sroa.9.0.copyload.i, 16
  store i64 %shr32.i.i.i, i64* %arrayidx34.i.i.i, align 8, !tbaa !13
  %and.i7.i.i = and i64 %s.sroa.11.0.copyload.i, 4503599627370495
  store i64 %and.i7.i.i, i64* %arrayidx2.i8.i.i, align 8, !tbaa !13
  %shr.i9.i.i = lshr i64 %s.sroa.11.0.copyload.i, 52
  %shl.i11.i.i = shl i64 %s.sroa.13.0.copyload.i, 12
  %and7.i12.i.i = and i64 %shl.i11.i.i, 4503599627366400
  %or.i13.i.i = or i64 %and7.i12.i.i, %shr.i9.i.i
  store i64 %or.i13.i.i, i64* %arrayidx9.i14.i.i, align 8, !tbaa !13
  %shr12.i15.i.i = lshr i64 %s.sroa.13.0.copyload.i, 40
  %shl15.i17.i.i = shl i64 %s.sroa.15.0.copyload.i, 24
  %and16.i18.i.i = and i64 %shl15.i17.i.i, 4503599610593280
  %or17.i19.i.i = or i64 %and16.i18.i.i, %shr12.i15.i.i
  store i64 %or17.i19.i.i, i64* %arrayidx19.i20.i.i, align 8, !tbaa !13
  %shr22.i21.i.i = lshr i64 %s.sroa.15.0.copyload.i, 28
  %shl25.i23.i.i = shl i64 %s.sroa.17.0.copyload.i, 36
  %and26.i24.i.i = and i64 %shl25.i23.i.i, 4503530907893760
  %or27.i25.i.i = or i64 %and26.i24.i.i, %shr22.i21.i.i
  store i64 %or27.i25.i.i, i64* %arrayidx29.i26.i.i, align 8, !tbaa !13
  %shr32.i27.i.i = lshr i64 %s.sroa.17.0.copyload.i, 16
  store i64 %shr32.i27.i.i, i64* %arrayidx34.i28.i.i, align 8, !tbaa !13
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !37
  %or.i.i = or i64 %or.i.i.i, %and.i.i.i
  %or3.i.i = or i64 %or.i.i, %shr32.i.i.i
  %or5.i.i = or i64 %or3.i.i, %or17.i.i.i
  %or7.i.i = or i64 %or5.i.i, %or27.i.i.i
  %cmp.i.not.i = icmp eq i64 %or7.i.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %secp256k1_pubkey_load.exit, !prof !26

if.then.i:                                        ; preds = %do.end47
  %illegal_callback.idx.val.i = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx.i, align 8, !tbaa !27
  %illegal_callback.idx4.val.i = load i8*, i8** %illegal_callback.idx4.i, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val.i(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* noundef %illegal_callback.idx4.val.i) #19
  br label %secp256k1_pubkey_load.exit

secp256k1_pubkey_load.exit:                       ; preds = %do.end47, %if.then.i
  call fastcc void @secp256k1_gej_add_ge(%struct.secp256k1_gej* noundef nonnull %Qj, %struct.secp256k1_gej* noundef nonnull %Qj, %struct.secp256k1_ge* noundef nonnull %Q)
  %inc = add nuw i64 %i.074, 1
  %exitcond.not = icmp eq i64 %inc, %n
  br i1 %exitcond.not, label %for.end, label %do.body35, !llvm.loop !68

for.end:                                          ; preds = %secp256k1_pubkey_load.exit
  %Qj.idx.val.pre = load i32, i32* %infinity.i, align 8, !tbaa !65
  %phi.cmp = icmp eq i32 %Qj.idx.val.pre, 0
  br i1 %phi.cmp, label %if.end52, label %cleanup

if.end52:                                         ; preds = %for.end
  call fastcc void @secp256k1_ge_set_gej(%struct.secp256k1_ge* noundef nonnull %Q, %struct.secp256k1_gej* noundef nonnull %Qj)
  call fastcc void @secp256k1_pubkey_save(%struct.secp256k1_pubkey* noundef nonnull %pubnonce, %struct.secp256k1_ge* noundef nonnull %Q)
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end52, %if.then43, %if.then28, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 0, %if.then28 ], [ 0, %if.then43 ], [ 1, %if.end52 ], [ 0, %for.end ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_gej_add_ge(%struct.secp256k1_gej* nocapture noundef %r, %struct.secp256k1_gej* nocapture noundef readonly %a, %struct.secp256k1_ge* nocapture noundef readonly %b) unnamed_addr #1 {
entry:
  %zz = alloca %struct.secp256k1_fe, align 8
  %u1 = alloca %struct.secp256k1_fe, align 8
  %u2 = alloca %struct.secp256k1_fe, align 8
  %s2 = alloca %struct.secp256k1_fe, align 8
  %t = alloca %struct.secp256k1_fe, align 16
  %tt = alloca %struct.secp256k1_fe, align 8
  %n = alloca %struct.secp256k1_fe, align 8
  %q = alloca %struct.secp256k1_fe, align 16
  %m_alt = alloca %struct.secp256k1_fe, align 8
  %rr_alt = alloca %struct.secp256k1_fe, align 8
  %0 = bitcast %struct.secp256k1_fe* %zz to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_fe* %u1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #19
  %2 = bitcast %struct.secp256k1_fe* %u2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #19
  %3 = bitcast %struct.secp256k1_fe* %s2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #19
  %4 = bitcast %struct.secp256k1_fe* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  %5 = bitcast %struct.secp256k1_fe* %tt to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #19
  %6 = bitcast %struct.secp256k1_fe* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #19
  %7 = bitcast %struct.secp256k1_fe* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #19
  %8 = bitcast %struct.secp256k1_fe* %m_alt to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #19
  %9 = bitcast %struct.secp256k1_fe* %rr_alt to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #19
  %infinity3 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 3
  %z = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %zz, %struct.secp256k1_fe* noundef nonnull %z)
  %10 = bitcast %struct.secp256k1_gej* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %1, i8* noundef nonnull align 8 dereferenceable(40) %10, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 0
  %11 = load i64, i64* %arrayidx.i, align 8, !tbaa !13
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 1
  %12 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 2
  %13 = load i64, i64* %arrayidx4.i, align 8, !tbaa !13
  %arrayidx6.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 3
  %14 = load i64, i64* %arrayidx6.i, align 8, !tbaa !13
  %arrayidx8.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 4
  %15 = load i64, i64* %arrayidx8.i, align 8, !tbaa !13
  %shr.i = lshr i64 %15, 48
  %and.i = and i64 %15, 281474976710655
  %mul.i = mul nuw nsw i64 %shr.i, 4294968273
  %add.i = add i64 %mul.i, %11
  %shr9.i = lshr i64 %add.i, 52
  %add10.i = add i64 %shr9.i, %12
  %and11.i = and i64 %add.i, 4503599627370495
  %shr12.i = lshr i64 %add10.i, 52
  %add13.i = add i64 %shr12.i, %13
  %and14.i = and i64 %add10.i, 4503599627370495
  %shr15.i = lshr i64 %add13.i, 52
  %add16.i = add i64 %shr15.i, %14
  %and17.i = and i64 %add13.i, 4503599627370495
  %shr18.i = lshr i64 %add16.i, 52
  %add19.i = add nuw nsw i64 %shr18.i, %and.i
  %and20.i = and i64 %add16.i, 4503599627370495
  store i64 %and11.i, i64* %arrayidx.i, align 8, !tbaa !13
  store i64 %and14.i, i64* %arrayidx2.i, align 8, !tbaa !13
  store i64 %and17.i, i64* %arrayidx4.i, align 8, !tbaa !13
  store i64 %and20.i, i64* %arrayidx6.i, align 8, !tbaa !13
  store i64 %add19.i, i64* %arrayidx8.i, align 8, !tbaa !13
  %x8 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %u2, %struct.secp256k1_fe* noundef %x8, %struct.secp256k1_fe* noundef nonnull %zz)
  %s1.sroa.0.0..sroa_idx = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1, i32 0, i64 0
  %s1.sroa.0.0.copyload = load i64, i64* %s1.sroa.0.0..sroa_idx, align 8, !tbaa.struct !18
  %s1.sroa.7.0..sroa_idx786 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1, i32 0, i64 1
  %s1.sroa.7.0.copyload = load i64, i64* %s1.sroa.7.0..sroa_idx786, align 8, !tbaa.struct !46
  %s1.sroa.10.0..sroa_idx790 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1, i32 0, i64 2
  %s1.sroa.10.0.copyload = load i64, i64* %s1.sroa.10.0..sroa_idx790, align 8, !tbaa.struct !47
  %s1.sroa.13.0..sroa_idx794 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1, i32 0, i64 3
  %s1.sroa.13.0.copyload = load i64, i64* %s1.sroa.13.0..sroa_idx794, align 8, !tbaa.struct !48
  %s1.sroa.16.0..sroa_idx798 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1, i32 0, i64 4
  %s1.sroa.16.0.copyload = load i64, i64* %s1.sroa.16.0..sroa_idx798, align 8, !tbaa.struct !49
  %shr.i67 = lshr i64 %s1.sroa.16.0.copyload, 48
  %and.i68 = and i64 %s1.sroa.16.0.copyload, 281474976710655
  %mul.i69 = mul nuw nsw i64 %shr.i67, 4294968273
  %add.i70 = add i64 %mul.i69, %s1.sroa.0.0.copyload
  %shr9.i71 = lshr i64 %add.i70, 52
  %add10.i72 = add i64 %shr9.i71, %s1.sroa.7.0.copyload
  %and11.i73 = and i64 %add.i70, 4503599627370495
  %shr12.i74 = lshr i64 %add10.i72, 52
  %add13.i75 = add i64 %shr12.i74, %s1.sroa.10.0.copyload
  %and14.i76 = and i64 %add10.i72, 4503599627370495
  %shr15.i77 = lshr i64 %add13.i75, 52
  %add16.i78 = add i64 %shr15.i77, %s1.sroa.13.0.copyload
  %and17.i79 = and i64 %add13.i75, 4503599627370495
  %shr18.i80 = lshr i64 %add16.i78, 52
  %add19.i81 = add nuw nsw i64 %shr18.i80, %and.i68
  %and20.i82 = and i64 %add16.i78, 4503599627370495
  %y9 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %y9, %struct.secp256k1_fe* noundef nonnull %zz)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %z)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %4, i8* noundef nonnull align 8 dereferenceable(40) %1, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i83 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 0
  %16 = load i64, i64* %arrayidx.i83, align 8, !tbaa !13
  %arrayidx2.i84 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 0
  %17 = load i64, i64* %arrayidx2.i84, align 16, !tbaa !13
  %add.i85 = add i64 %17, %16
  store i64 %add.i85, i64* %arrayidx2.i84, align 16, !tbaa !13
  %arrayidx4.i86 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 1
  %18 = load i64, i64* %arrayidx4.i86, align 8, !tbaa !13
  %arrayidx6.i87 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 1
  %19 = load i64, i64* %arrayidx6.i87, align 8, !tbaa !13
  %add7.i = add i64 %19, %18
  store i64 %add7.i, i64* %arrayidx6.i87, align 8, !tbaa !13
  %arrayidx9.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 2
  %20 = load i64, i64* %arrayidx9.i, align 8, !tbaa !13
  %arrayidx11.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 2
  %21 = load i64, i64* %arrayidx11.i, align 16, !tbaa !13
  %add12.i = add i64 %21, %20
  store i64 %add12.i, i64* %arrayidx11.i, align 16, !tbaa !13
  %arrayidx14.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 3
  %22 = load i64, i64* %arrayidx14.i, align 8, !tbaa !13
  %arrayidx16.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 3
  %23 = load i64, i64* %arrayidx16.i, align 8, !tbaa !13
  %add17.i = add i64 %23, %22
  store i64 %add17.i, i64* %arrayidx16.i, align 8, !tbaa !13
  %arrayidx19.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 4
  %24 = load i64, i64* %arrayidx19.i, align 8, !tbaa !13
  %arrayidx21.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 4
  %25 = load i64, i64* %arrayidx21.i, align 16, !tbaa !13
  %add22.i = add i64 %25, %24
  store i64 %add22.i, i64* %arrayidx21.i, align 16, !tbaa !13
  %arrayidx.i88 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 0
  %26 = load i64, i64* %arrayidx.i88, align 8, !tbaa !13
  %add.i90 = add i64 %26, %and11.i73
  %arrayidx4.i91 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 1
  %27 = load i64, i64* %arrayidx4.i91, align 8, !tbaa !13
  %add7.i93 = add i64 %27, %and14.i76
  %arrayidx9.i94 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 2
  %28 = load i64, i64* %arrayidx9.i94, align 8, !tbaa !13
  %add12.i96 = add i64 %28, %and17.i79
  %arrayidx14.i97 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 3
  %29 = load i64, i64* %arrayidx14.i97, align 8, !tbaa !13
  %add17.i99 = add i64 %29, %and20.i82
  %arrayidx19.i100 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 4
  %30 = load i64, i64* %arrayidx19.i100, align 8, !tbaa !13
  %add22.i102 = add i64 %30, %add19.i81
  %mul.i.i = shl i64 %add.i85, 1
  %conv.i.i.i = zext i64 %mul.i.i to i128
  %conv1.i.i.i = zext i64 %add17.i to i128
  %mul.i.i.i = mul nuw i128 %conv1.i.i.i, %conv.i.i.i
  %mul17.i.i = shl i64 %add7.i, 1
  %conv.i215.i.i = zext i64 %mul17.i.i to i128
  %conv1.i216.i.i = zext i64 %add12.i to i128
  %mul.i217.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i215.i.i
  %add.i.i.i = add i128 %mul.i.i.i, %mul.i217.i.i
  %conv.i218.i.i = zext i64 %add22.i to i128
  %mul.i220.i.i = mul nuw i128 %conv.i218.i.i, %conv.i218.i.i
  %conv1.i222.i.i = and i128 %mul.i220.i.i, 18446744073709551615
  %mul.i223.i.i = mul nuw nsw i128 %conv1.i222.i.i, 68719492368
  %add.i224.i.i = add i128 %add.i.i.i, %mul.i223.i.i
  %shr.i.i.i = lshr i128 %mul.i220.i.i, 64
  %shr.i226.i.i = lshr i128 %add.i224.i.i, 52
  %mul37.i.i = shl i64 %add22.i, 1
  %conv.i227.i.i = zext i64 %add.i85 to i128
  %conv1.i228.i.i = zext i64 %mul37.i.i to i128
  %mul.i229.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i227.i.i
  %mul.i233.i.i = mul nuw i128 %conv1.i.i.i, %conv.i215.i.i
  %mul.i237.i.i = mul nuw i128 %conv1.i216.i.i, %conv1.i216.i.i
  %mul.i241.i.i = mul nuw nsw i128 %shr.i.i.i, 281475040739328
  %add.i230.i.i = add i128 %mul.i233.i.i, %mul.i237.i.i
  %add.i234.i.i = add i128 %add.i230.i.i, %mul.i229.i.i
  %add.i238.i.i = add i128 %add.i234.i.i, %mul.i241.i.i
  %add.i242.i.i = add i128 %add.i238.i.i, %shr.i226.i.i
  %conv.i243.i.i = trunc i128 %add.i242.i.i to i64
  %shr.i244.i.i = lshr i128 %add.i242.i.i, 52
  %and47.i.i = lshr i64 %conv.i243.i.i, 48
  %31 = and i64 %and47.i.i, 15
  %and54.i.i = and i64 %conv.i243.i.i, 281474976710655
  %mul.i247.i.i = mul nuw i128 %conv.i227.i.i, %conv.i227.i.i
  %conv.i248.i.i = zext i64 %add7.i to i128
  %mul.i250.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i248.i.i
  %mul64.i.i = shl i64 %add12.i, 1
  %conv.i252.i.i = zext i64 %mul64.i.i to i128
  %mul.i254.i.i = mul nuw i128 %conv1.i.i.i, %conv.i252.i.i
  %add.i251.i.i = add i128 %mul.i250.i.i, %mul.i254.i.i
  %add.i255.i.i = add i128 %add.i251.i.i, %shr.i244.i.i
  %conv.i256.i.i = trunc i128 %add.i255.i.i to i64
  %shr.i257.i.i = lshr i128 %add.i255.i.i, 52
  %and69.i.i = shl i64 %conv.i256.i.i, 4
  %shl.i.i = and i64 %and69.i.i, 72057594037927920
  %or.i.i = or i64 %shl.i.i, %31
  %conv.i258.i.i = zext i64 %or.i.i to i128
  %mul.i259.i.i = mul nuw nsw i128 %conv.i258.i.i, 4294968273
  %add.i260.i.i = add i128 %mul.i259.i.i, %mul.i247.i.i
  %conv.i261.i.i = trunc i128 %add.i260.i.i to i64
  %and83.i.i = and i64 %conv.i261.i.i, 4503599627370495
  %shr.i262.i.i = lshr i128 %add.i260.i.i, 52
  %mul.i265.i.i = mul nuw i128 %conv.i248.i.i, %conv.i.i.i
  %mul.i269.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i216.i.i
  %mul.i273.i.i = mul nuw i128 %conv1.i.i.i, %conv1.i.i.i
  %add.i270.i.i = add i128 %mul.i269.i.i, %mul.i273.i.i
  %add.i274.i.i = add i128 %add.i270.i.i, %shr.i257.i.i
  %conv.i276.i.i = and i128 %add.i274.i.i, 4503599627370495
  %mul.i277.i.i = mul nuw nsw i128 %conv.i276.i.i, 68719492368
  %add.i266.i.i = add i128 %mul.i277.i.i, %mul.i265.i.i
  %add.i278.i.i = add i128 %add.i266.i.i, %shr.i262.i.i
  %shr.i279.i.i = lshr i128 %add.i274.i.i, 52
  %conv.i280.i.i = trunc i128 %add.i278.i.i to i64
  %and107.i.i = and i64 %conv.i280.i.i, 4503599627370495
  %shr.i281.i.i = lshr i128 %add.i278.i.i, 52
  %mul.i284.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i.i.i
  %mul.i288.i.i = mul nuw i128 %conv.i248.i.i, %conv.i248.i.i
  %mul.i292.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i.i.i
  %add.i293.i.i = add i128 %shr.i279.i.i, %mul.i292.i.i
  %conv1.i295.i.i = and i128 %add.i293.i.i, 18446744073709551615
  %mul.i296.i.i = mul nuw nsw i128 %conv1.i295.i.i, 68719492368
  %add.i285.i.i = add i128 %mul.i284.i.i, %mul.i288.i.i
  %add.i289.i.i = add i128 %add.i285.i.i, %mul.i296.i.i
  %add.i297.i.i = add i128 %add.i289.i.i, %shr.i281.i.i
  %shr.i298.i.i = lshr i128 %add.i293.i.i, 64
  %conv.i299.i.i = trunc i128 %add.i297.i.i to i64
  %and129.i.i = and i64 %conv.i299.i.i, 4503599627370495
  %shr.i300.i.i = lshr i128 %add.i297.i.i, 52
  %mul.i303.i.i = mul nuw nsw i128 %shr.i298.i.i, 281475040739328
  %conv.i305.i.i = and i128 %add.i224.i.i, 4503599627370494
  %add.i304.i.i = add nuw nsw i128 %mul.i303.i.i, %conv.i305.i.i
  %add.i306.i.i = add nuw nsw i128 %add.i304.i.i, %shr.i300.i.i
  %conv.i307.i.i = trunc i128 %add.i306.i.i to i64
  %and142.i.i = and i64 %conv.i307.i.i, 4503599627370495
  %shr.i308.i.i = lshr i128 %add.i306.i.i, 52
  %conv.i309.i.i = trunc i128 %shr.i308.i.i to i64
  %sub.i = sub i64 18014381329608892, %16
  %arrayidx2.i104 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %m_alt, i64 0, i32 0, i64 0
  store i64 %sub.i, i64* %arrayidx2.i104, align 8, !tbaa !13
  %sub8.i = sub i64 18014398509481980, %18
  %arrayidx10.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %m_alt, i64 0, i32 0, i64 1
  store i64 %sub8.i, i64* %arrayidx10.i, align 8, !tbaa !13
  %sub16.i = sub i64 18014398509481980, %20
  %arrayidx18.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %m_alt, i64 0, i32 0, i64 2
  store i64 %sub16.i, i64* %arrayidx18.i, align 8, !tbaa !13
  %sub24.i = sub i64 18014398509481980, %22
  %arrayidx26.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %m_alt, i64 0, i32 0, i64 3
  store i64 %sub24.i, i64* %arrayidx26.i, align 8, !tbaa !13
  %sub32.i = sub i64 1125899906842620, %24
  %arrayidx34.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %m_alt, i64 0, i32 0, i64 4
  store i64 %sub32.i, i64* %arrayidx34.i, align 8, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %tt, %struct.secp256k1_fe* noundef nonnull %u1, %struct.secp256k1_fe* noundef nonnull %m_alt)
  %arrayidx.i105 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %tt, i64 0, i32 0, i64 0
  %32 = load i64, i64* %arrayidx.i105, align 8, !tbaa !13
  %add.i107 = add i64 %and83.i.i, %32
  %arrayidx4.i108 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %tt, i64 0, i32 0, i64 1
  %33 = load i64, i64* %arrayidx4.i108, align 8, !tbaa !13
  %add7.i110 = add i64 %and107.i.i, %33
  %arrayidx9.i111 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %tt, i64 0, i32 0, i64 2
  %34 = load i64, i64* %arrayidx9.i111, align 8, !tbaa !13
  %add12.i113 = add i64 %and129.i.i, %34
  %arrayidx14.i114 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %tt, i64 0, i32 0, i64 3
  %35 = load i64, i64* %arrayidx14.i114, align 8, !tbaa !13
  %add17.i116 = add i64 %and142.i.i, %35
  %arrayidx19.i117 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %tt, i64 0, i32 0, i64 4
  %36 = load i64, i64* %arrayidx19.i117, align 8, !tbaa !13
  %add.i.i = add i64 %36, %and54.i.i
  %add22.i119 = add i64 %add.i.i, %conv.i309.i.i
  %shr.i125 = lshr i64 %add22.i102, 48
  %and.i126 = and i64 %add22.i102, 281474976710655
  %mul.i127 = mul nuw nsw i64 %shr.i125, 4294968273
  %add.i128 = add i64 %mul.i127, %add.i90
  %shr9.i129 = lshr i64 %add.i128, 52
  %add10.i130 = add i64 %shr9.i129, %add7.i93
  %xor.i = xor i64 %add.i128, 4294968272
  %shr12.i131 = lshr i64 %add10.i130, 52
  %add13.i132 = add i64 %shr12.i131, %add12.i96
  %and1177.i = or i64 %add10.i130, %add.i128
  %and15.i = and i64 %add10.i130, %xor.i
  %shr16.i = lshr i64 %add13.i132, 52
  %add17.i133 = add i64 %shr16.i, %add17.i99
  %or78.i = or i64 %and1177.i, %add13.i132
  %and20.i134 = and i64 %and15.i, %add13.i132
  %shr21.i = lshr i64 %add17.i133, 52
  %add22.i135 = add nuw nsw i64 %shr21.i, %and.i126
  %or1979.i = or i64 %or78.i, %add17.i133
  %or24.i = and i64 %or1979.i, 4503599627370495
  %and25.i = and i64 %and20.i134, %add17.i133
  %or26.i = or i64 %or24.i, %add22.i135
  %xor27.i = xor i64 %add22.i135, 4222124650659840
  %and28.i = and i64 %and25.i, %xor27.i
  %cmp30.i = icmp eq i64 %or26.i, 0
  %cmp32.i = icmp eq i64 %and28.i, 4503599627370495
  %or3476.i = or i1 %cmp30.i, %cmp32.i
  %shr.i141 = lshr i64 %add22.i119, 48
  %and.i142 = and i64 %add22.i119, 281474976710655
  %mul.i143 = mul nuw nsw i64 %shr.i141, 4294968273
  %add.i144 = add i64 %mul.i143, %add.i107
  %shr9.i145 = lshr i64 %add.i144, 52
  %add10.i146 = add i64 %shr9.i145, %add7.i110
  %xor.i147 = xor i64 %add.i144, 4294968272
  %shr12.i148 = lshr i64 %add10.i146, 52
  %add13.i149 = add i64 %shr12.i148, %add12.i113
  %and1177.i150 = or i64 %add10.i146, %add.i144
  %and15.i151 = and i64 %add10.i146, %xor.i147
  %shr16.i152 = lshr i64 %add13.i149, 52
  %add17.i153 = add i64 %shr16.i152, %add17.i116
  %or78.i154 = or i64 %and1177.i150, %add13.i149
  %and20.i155 = and i64 %and15.i151, %add13.i149
  %shr21.i156 = lshr i64 %add17.i153, 52
  %add22.i157 = add nuw nsw i64 %shr21.i156, %and.i142
  %or1979.i158 = or i64 %or78.i154, %add17.i153
  %or24.i159 = and i64 %or1979.i158, 4503599627370495
  %and25.i160 = and i64 %and20.i155, %add17.i153
  %or26.i161 = or i64 %or24.i159, %add22.i157
  %xor27.i162 = xor i64 %add22.i157, 4222124650659840
  %and28.i163 = and i64 %and25.i160, %xor27.i162
  %cmp30.i164 = icmp eq i64 %or26.i161, 0
  %cmp32.i165 = icmp eq i64 %and28.i163, 4503599627370495
  %or3476.i166 = or i1 %cmp30.i164, %cmp32.i165
  %and805 = and i1 %or3476.i, %or3476.i166
  %s1.sroa.0.0..sroa_idx783 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rr_alt, i64 0, i32 0, i64 0
  %s1.sroa.7.0..sroa_idx787 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rr_alt, i64 0, i32 0, i64 1
  %s1.sroa.10.0..sroa_idx791 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rr_alt, i64 0, i32 0, i64 2
  %s1.sroa.13.0..sroa_idx795 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rr_alt, i64 0, i32 0, i64 3
  %s1.sroa.16.0..sroa_idx799 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rr_alt, i64 0, i32 0, i64 4
  %mul.i169 = shl nuw nsw i64 %and11.i73, 1
  %mul4.i = shl nuw nsw i64 %and14.i76, 1
  %mul8.i = shl nuw nsw i64 %and17.i79, 1
  %mul12.i = shl nuw nsw i64 %and20.i82, 1
  %mul16.i = shl nuw nsw i64 %add19.i81, 1
  %37 = load i64, i64* %arrayidx2.i104, align 8, !tbaa !13
  %add.i175 = add i64 %37, %and11.i
  %38 = load i64, i64* %arrayidx10.i, align 8, !tbaa !13
  %add7.i178 = add i64 %38, %and14.i
  %39 = load i64, i64* %arrayidx18.i, align 8, !tbaa !13
  %add12.i181 = add i64 %39, %and17.i
  %40 = load i64, i64* %arrayidx26.i, align 8, !tbaa !13
  %add17.i184 = add i64 %40, %and20.i
  %41 = load i64, i64* %arrayidx34.i, align 8, !tbaa !13
  %add22.i187 = add i64 %41, %add19.i
  %42 = select i1 %and805, i64 %mul.i169, i64 %add.i107
  store i64 %42, i64* %s1.sroa.0.0..sroa_idx783, align 8, !tbaa !13
  %43 = select i1 %and805, i64 %mul4.i, i64 %add7.i110
  store i64 %43, i64* %s1.sroa.7.0..sroa_idx787, align 8, !tbaa !13
  %44 = select i1 %and805, i64 %mul8.i, i64 %add12.i113
  store i64 %44, i64* %s1.sroa.10.0..sroa_idx791, align 8, !tbaa !13
  %45 = select i1 %and805, i64 %mul12.i, i64 %add17.i116
  store i64 %45, i64* %s1.sroa.13.0..sroa_idx795, align 8, !tbaa !13
  %46 = select i1 %and805, i64 %mul16.i, i64 %add22.i119
  store i64 %46, i64* %s1.sroa.16.0..sroa_idx799, align 8, !tbaa !13
  %47 = select i1 %and805, i64 %add.i175, i64 %add.i90
  store i64 %47, i64* %arrayidx2.i104, align 8, !tbaa !13
  %48 = select i1 %and805, i64 %add7.i178, i64 %add7.i93
  store i64 %48, i64* %arrayidx10.i, align 8, !tbaa !13
  %49 = select i1 %and805, i64 %add12.i181, i64 %add12.i96
  store i64 %49, i64* %arrayidx18.i, align 8, !tbaa !13
  %50 = select i1 %and805, i64 %add17.i184, i64 %add17.i99
  store i64 %50, i64* %arrayidx26.i, align 8, !tbaa !13
  %or39.i227 = select i1 %and805, i64 %add22.i187, i64 %add22.i102
  store i64 %or39.i227, i64* %arrayidx34.i, align 8, !tbaa !13
  %arraydecay.i228 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %n, i64 0, i32 0, i64 0
  %mul.i.i234 = shl i64 %47, 1
  %conv.i.i.i235 = zext i64 %mul.i.i234 to i128
  %conv1.i.i.i236 = zext i64 %50 to i128
  %mul.i.i.i237 = mul nuw i128 %conv.i.i.i235, %conv1.i.i.i236
  %mul17.i.i238 = shl i64 %48, 1
  %conv.i215.i.i239 = zext i64 %mul17.i.i238 to i128
  %conv1.i216.i.i240 = zext i64 %49 to i128
  %mul.i217.i.i241 = mul nuw i128 %conv.i215.i.i239, %conv1.i216.i.i240
  %add.i.i.i242 = add i128 %mul.i.i.i237, %mul.i217.i.i241
  %conv.i218.i.i243 = zext i64 %or39.i227 to i128
  %mul.i220.i.i244 = mul nuw i128 %conv.i218.i.i243, %conv.i218.i.i243
  %conv1.i222.i.i245 = and i128 %mul.i220.i.i244, 18446744073709551615
  %mul.i223.i.i246 = mul nuw nsw i128 %conv1.i222.i.i245, 68719492368
  %add.i224.i.i247 = add i128 %add.i.i.i242, %mul.i223.i.i246
  %shr.i.i.i248 = lshr i128 %mul.i220.i.i244, 64
  %shr.i226.i.i249 = lshr i128 %add.i224.i.i247, 52
  %mul37.i.i250 = shl i64 %or39.i227, 1
  %conv.i227.i.i251 = zext i64 %47 to i128
  %conv1.i228.i.i252 = zext i64 %mul37.i.i250 to i128
  %mul.i229.i.i253 = mul nuw i128 %conv1.i228.i.i252, %conv.i227.i.i251
  %mul.i233.i.i254 = mul nuw i128 %conv.i215.i.i239, %conv1.i.i.i236
  %mul.i237.i.i255 = mul nuw i128 %conv1.i216.i.i240, %conv1.i216.i.i240
  %mul.i241.i.i256 = mul nuw nsw i128 %shr.i.i.i248, 281475040739328
  %add.i230.i.i257 = add i128 %mul.i233.i.i254, %mul.i237.i.i255
  %add.i234.i.i258 = add i128 %add.i230.i.i257, %mul.i229.i.i253
  %add.i238.i.i259 = add i128 %add.i234.i.i258, %mul.i241.i.i256
  %add.i242.i.i260 = add i128 %add.i238.i.i259, %shr.i226.i.i249
  %conv.i243.i.i261 = trunc i128 %add.i242.i.i260 to i64
  %shr.i244.i.i262 = lshr i128 %add.i242.i.i260, 52
  %and47.i.i263 = lshr i64 %conv.i243.i.i261, 48
  %51 = and i64 %and47.i.i263, 15
  %and54.i.i264 = and i64 %conv.i243.i.i261, 281474976710655
  %mul.i247.i.i265 = mul nuw i128 %conv.i227.i.i251, %conv.i227.i.i251
  %conv.i248.i.i266 = zext i64 %48 to i128
  %mul.i250.i.i267 = mul nuw i128 %conv1.i228.i.i252, %conv.i248.i.i266
  %mul64.i.i268 = shl i64 %49, 1
  %conv.i252.i.i269 = zext i64 %mul64.i.i268 to i128
  %mul.i254.i.i270 = mul nuw i128 %conv.i252.i.i269, %conv1.i.i.i236
  %add.i251.i.i271 = add i128 %mul.i250.i.i267, %mul.i254.i.i270
  %add.i255.i.i272 = add i128 %add.i251.i.i271, %shr.i244.i.i262
  %conv.i256.i.i273 = trunc i128 %add.i255.i.i272 to i64
  %shr.i257.i.i274 = lshr i128 %add.i255.i.i272, 52
  %and69.i.i275 = shl i64 %conv.i256.i.i273, 4
  %shl.i.i276 = and i64 %and69.i.i275, 72057594037927920
  %or.i.i277 = or i64 %shl.i.i276, %51
  %conv.i258.i.i278 = zext i64 %or.i.i277 to i128
  %mul.i259.i.i279 = mul nuw nsw i128 %conv.i258.i.i278, 4294968273
  %add.i260.i.i280 = add i128 %mul.i259.i.i279, %mul.i247.i.i265
  %conv.i261.i.i281 = trunc i128 %add.i260.i.i280 to i64
  %and83.i.i282 = and i64 %conv.i261.i.i281, 4503599627370495
  store i64 %and83.i.i282, i64* %arraydecay.i228, align 8, !tbaa !13
  %shr.i262.i.i283 = lshr i128 %add.i260.i.i280, 52
  %mul.i265.i.i284 = mul nuw i128 %conv.i.i.i235, %conv.i248.i.i266
  %mul.i269.i.i285 = mul nuw i128 %conv1.i228.i.i252, %conv1.i216.i.i240
  %mul.i273.i.i286 = mul nuw i128 %conv1.i.i.i236, %conv1.i.i.i236
  %add.i270.i.i287 = add i128 %mul.i269.i.i285, %mul.i273.i.i286
  %add.i274.i.i288 = add i128 %add.i270.i.i287, %shr.i257.i.i274
  %conv.i276.i.i289 = and i128 %add.i274.i.i288, 4503599627370495
  %mul.i277.i.i290 = mul nuw nsw i128 %conv.i276.i.i289, 68719492368
  %add.i266.i.i291 = add i128 %mul.i277.i.i290, %mul.i265.i.i284
  %add.i278.i.i292 = add i128 %add.i266.i.i291, %shr.i262.i.i283
  %shr.i279.i.i293 = lshr i128 %add.i274.i.i288, 52
  %conv.i280.i.i294 = trunc i128 %add.i278.i.i292 to i64
  %and107.i.i295 = and i64 %conv.i280.i.i294, 4503599627370495
  %arrayidx108.i.i296 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %n, i64 0, i32 0, i64 1
  store i64 %and107.i.i295, i64* %arrayidx108.i.i296, align 8, !tbaa !13
  %shr.i281.i.i297 = lshr i128 %add.i278.i.i292, 52
  %mul.i284.i.i298 = mul nuw i128 %conv.i.i.i235, %conv1.i216.i.i240
  %mul.i288.i.i299 = mul nuw i128 %conv.i248.i.i266, %conv.i248.i.i266
  %mul.i292.i.i300 = mul nuw i128 %conv1.i228.i.i252, %conv1.i.i.i236
  %add.i293.i.i301 = add i128 %shr.i279.i.i293, %mul.i292.i.i300
  %conv1.i295.i.i302 = and i128 %add.i293.i.i301, 18446744073709551615
  %mul.i296.i.i303 = mul nuw nsw i128 %conv1.i295.i.i302, 68719492368
  %add.i285.i.i304 = add i128 %mul.i284.i.i298, %mul.i288.i.i299
  %add.i289.i.i305 = add i128 %add.i285.i.i304, %mul.i296.i.i303
  %add.i297.i.i306 = add i128 %add.i289.i.i305, %shr.i281.i.i297
  %shr.i298.i.i307 = lshr i128 %add.i293.i.i301, 64
  %conv.i299.i.i308 = trunc i128 %add.i297.i.i306 to i64
  %and129.i.i309 = and i64 %conv.i299.i.i308, 4503599627370495
  %arrayidx130.i.i310 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %n, i64 0, i32 0, i64 2
  store i64 %and129.i.i309, i64* %arrayidx130.i.i310, align 8, !tbaa !13
  %shr.i300.i.i311 = lshr i128 %add.i297.i.i306, 52
  %mul.i303.i.i312 = mul nuw nsw i128 %shr.i298.i.i307, 281475040739328
  %conv.i305.i.i313 = and i128 %add.i224.i.i247, 4503599627370494
  %add.i304.i.i314 = add nuw nsw i128 %mul.i303.i.i312, %conv.i305.i.i313
  %add.i306.i.i315 = add nuw nsw i128 %add.i304.i.i314, %shr.i300.i.i311
  %conv.i307.i.i316 = trunc i128 %add.i306.i.i315 to i64
  %and142.i.i317 = and i64 %conv.i307.i.i316, 4503599627370495
  %arrayidx143.i.i318 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %n, i64 0, i32 0, i64 3
  store i64 %and142.i.i317, i64* %arrayidx143.i.i318, align 8, !tbaa !13
  %shr.i308.i.i319 = lshr i128 %add.i306.i.i315, 52
  %conv.i309.i.i320 = trunc i128 %shr.i308.i.i319 to i64
  %add.i.i321 = add nuw nsw i64 %and54.i.i264, %conv.i309.i.i320
  %arrayidx151.i.i322 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %n, i64 0, i32 0, i64 4
  store i64 %add.i.i321, i64* %arrayidx151.i.i322, align 8, !tbaa !13
  %52 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 16, !tbaa !13
  %54 = sub <2 x i64> <i64 27021571994413338, i64 27021597764222970>, %53
  %55 = bitcast %struct.secp256k1_fe* %q to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %55, align 16, !tbaa !13
  %arrayidx18.i331 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %q, i64 0, i32 0, i64 2
  %56 = bitcast i64* %arrayidx11.i to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 16, !tbaa !13
  %58 = sub <2 x i64> <i64 27021597764222970, i64 27021597764222970>, %57
  %59 = bitcast i64* %arrayidx18.i331 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %59, align 16, !tbaa !13
  %60 = load i64, i64* %arrayidx21.i, align 16, !tbaa !13
  %sub32.i336 = sub i64 1688849860263930, %60
  %arrayidx34.i337 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %q, i64 0, i32 0, i64 4
  store i64 %sub32.i336, i64* %arrayidx34.i337, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %q, %struct.secp256k1_fe* noundef nonnull %q, %struct.secp256k1_fe* noundef nonnull %n)
  %mul.i.i344 = shl nuw nsw i64 %and83.i.i282, 1
  %conv.i.i.i345 = zext i64 %mul.i.i344 to i128
  %conv1.i.i.i346 = zext i64 %and142.i.i317 to i128
  %mul.i.i.i347 = mul nuw nsw i128 %conv1.i.i.i346, %conv.i.i.i345
  %mul17.i.i348 = shl nuw nsw i64 %and107.i.i295, 1
  %conv.i215.i.i349 = zext i64 %mul17.i.i348 to i128
  %conv1.i216.i.i350 = zext i64 %and129.i.i309 to i128
  %mul.i217.i.i351 = mul nuw nsw i128 %conv1.i216.i.i350, %conv.i215.i.i349
  %add.i.i.i352 = add nuw nsw i128 %mul.i.i.i347, %mul.i217.i.i351
  %conv.i218.i.i353 = zext i64 %add.i.i321 to i128
  %mul.i220.i.i354 = mul nuw nsw i128 %conv.i218.i.i353, %conv.i218.i.i353
  %conv1.i222.i.i355 = and i128 %mul.i220.i.i354, 18446744073709551615
  %mul.i223.i.i356 = mul nuw nsw i128 %conv1.i222.i.i355, 68719492368
  %add.i224.i.i357 = add nuw nsw i128 %add.i.i.i352, %mul.i223.i.i356
  %shr.i.i.i358 = lshr i128 %mul.i220.i.i354, 64
  %shr.i226.i.i359 = lshr i128 %add.i224.i.i357, 52
  %mul37.i.i360 = shl nuw nsw i64 %add.i.i321, 1
  %conv.i227.i.i361 = zext i64 %and83.i.i282 to i128
  %conv1.i228.i.i362 = zext i64 %mul37.i.i360 to i128
  %mul.i229.i.i363 = mul nuw nsw i128 %conv1.i228.i.i362, %conv.i227.i.i361
  %mul.i233.i.i364 = mul nuw nsw i128 %conv1.i.i.i346, %conv.i215.i.i349
  %mul.i237.i.i365 = mul nuw nsw i128 %conv1.i216.i.i350, %conv1.i216.i.i350
  %mul.i241.i.i366 = mul nuw nsw i128 %shr.i.i.i358, 281475040739328
  %add.i230.i.i367 = add nuw nsw i128 %mul.i233.i.i364, %mul.i237.i.i365
  %add.i234.i.i368 = add nuw nsw i128 %add.i230.i.i367, %mul.i229.i.i363
  %add.i238.i.i369 = add nuw nsw i128 %add.i234.i.i368, %mul.i241.i.i366
  %add.i242.i.i370 = add nuw nsw i128 %add.i238.i.i369, %shr.i226.i.i359
  %conv.i243.i.i371 = trunc i128 %add.i242.i.i370 to i64
  %shr.i244.i.i372 = lshr i128 %add.i242.i.i370, 52
  %and47.i.i373 = lshr i64 %conv.i243.i.i371, 48
  %61 = and i64 %and47.i.i373, 15
  %and54.i.i374 = and i64 %conv.i243.i.i371, 281474976710655
  %mul.i247.i.i375 = mul nuw nsw i128 %conv.i227.i.i361, %conv.i227.i.i361
  %conv.i248.i.i376 = zext i64 %and107.i.i295 to i128
  %mul.i250.i.i377 = mul nuw nsw i128 %conv1.i228.i.i362, %conv.i248.i.i376
  %mul64.i.i378 = shl nuw nsw i64 %and129.i.i309, 1
  %conv.i252.i.i379 = zext i64 %mul64.i.i378 to i128
  %mul.i254.i.i380 = mul nuw nsw i128 %conv1.i.i.i346, %conv.i252.i.i379
  %add.i251.i.i381 = add nuw nsw i128 %mul.i250.i.i377, %mul.i254.i.i380
  %add.i255.i.i382 = add nuw nsw i128 %add.i251.i.i381, %shr.i244.i.i372
  %conv.i256.i.i383 = trunc i128 %add.i255.i.i382 to i64
  %shr.i257.i.i384 = lshr i128 %add.i255.i.i382, 52
  %and69.i.i385 = shl i64 %conv.i256.i.i383, 4
  %shl.i.i386 = and i64 %and69.i.i385, 72057594037927920
  %or.i.i387 = or i64 %shl.i.i386, %61
  %conv.i258.i.i388 = zext i64 %or.i.i387 to i128
  %mul.i259.i.i389 = mul nuw nsw i128 %conv.i258.i.i388, 4294968273
  %add.i260.i.i390 = add nuw nsw i128 %mul.i259.i.i389, %mul.i247.i.i375
  %conv.i261.i.i391 = trunc i128 %add.i260.i.i390 to i64
  %and83.i.i392 = and i64 %conv.i261.i.i391, 4503599627370495
  %shr.i262.i.i393 = lshr i128 %add.i260.i.i390, 52
  %mul.i265.i.i394 = mul nuw nsw i128 %conv.i248.i.i376, %conv.i.i.i345
  %mul.i269.i.i395 = mul nuw nsw i128 %conv1.i228.i.i362, %conv1.i216.i.i350
  %mul.i273.i.i396 = mul nuw nsw i128 %conv1.i.i.i346, %conv1.i.i.i346
  %add.i270.i.i397 = add nuw nsw i128 %mul.i269.i.i395, %mul.i273.i.i396
  %add.i274.i.i398 = add nuw nsw i128 %add.i270.i.i397, %shr.i257.i.i384
  %conv.i276.i.i399 = and i128 %add.i274.i.i398, 4503599627370495
  %mul.i277.i.i400 = mul nuw nsw i128 %conv.i276.i.i399, 68719492368
  %add.i266.i.i401 = add nuw nsw i128 %mul.i277.i.i400, %mul.i265.i.i394
  %add.i278.i.i402 = add nuw nsw i128 %add.i266.i.i401, %shr.i262.i.i393
  %shr.i279.i.i403 = lshr i128 %add.i274.i.i398, 52
  %conv.i280.i.i404 = trunc i128 %add.i278.i.i402 to i64
  %and107.i.i405 = and i64 %conv.i280.i.i404, 4503599627370495
  %shr.i281.i.i407 = lshr i128 %add.i278.i.i402, 52
  %mul.i284.i.i408 = mul nuw nsw i128 %conv1.i216.i.i350, %conv.i.i.i345
  %mul.i288.i.i409 = mul nuw nsw i128 %conv.i248.i.i376, %conv.i248.i.i376
  %mul.i292.i.i410 = mul nuw nsw i128 %conv1.i228.i.i362, %conv1.i.i.i346
  %add.i293.i.i411 = add nuw nsw i128 %shr.i279.i.i403, %mul.i292.i.i410
  %conv1.i295.i.i412 = and i128 %add.i293.i.i411, 18446744073709551615
  %mul.i296.i.i413 = mul nuw nsw i128 %conv1.i295.i.i412, 68719492368
  %add.i285.i.i414 = add nuw nsw i128 %mul.i284.i.i408, %mul.i288.i.i409
  %add.i289.i.i415 = add nuw nsw i128 %add.i285.i.i414, %mul.i296.i.i413
  %add.i297.i.i416 = add nuw nsw i128 %add.i289.i.i415, %shr.i281.i.i407
  %shr.i298.i.i417 = lshr i128 %add.i293.i.i411, 64
  %conv.i299.i.i418 = trunc i128 %add.i297.i.i416 to i64
  %and129.i.i419 = and i64 %conv.i299.i.i418, 4503599627370495
  %shr.i300.i.i421 = lshr i128 %add.i297.i.i416, 52
  %mul.i303.i.i422 = mul nuw nsw i128 %shr.i298.i.i417, 281475040739328
  %conv.i305.i.i423 = and i128 %add.i224.i.i357, 4503599627370494
  %add.i304.i.i424 = add nuw nsw i128 %mul.i303.i.i422, %conv.i305.i.i423
  %add.i306.i.i425 = add nuw nsw i128 %add.i304.i.i424, %shr.i300.i.i421
  %conv.i307.i.i426 = trunc i128 %add.i306.i.i425 to i64
  %and142.i.i427 = and i64 %conv.i307.i.i426, 4503599627370495
  %shr.i308.i.i429 = lshr i128 %add.i306.i.i425, 52
  %conv.i309.i.i430 = trunc i128 %shr.i308.i.i429 to i64
  %add.i.i431 = add nuw nsw i64 %and54.i.i374, %conv.i309.i.i430
  %62 = select i1 %and805, i64 %add.i90, i64 %and83.i.i392
  %63 = select i1 %and805, i64 %add7.i93, i64 %and107.i.i405
  %64 = select i1 %and805, i64 %add12.i96, i64 %and129.i.i419
  %65 = select i1 %and805, i64 %add17.i99, i64 %and142.i.i427
  %or39.i460 = select i1 %and805, i64 %add22.i102, i64 %add.i.i431
  %66 = load i64, i64* %s1.sroa.0.0..sroa_idx783, align 8, !tbaa !13
  %67 = load i64, i64* %s1.sroa.7.0..sroa_idx787, align 8, !tbaa !13
  %68 = load i64, i64* %s1.sroa.10.0..sroa_idx791, align 8, !tbaa !13
  %69 = load i64, i64* %s1.sroa.13.0..sroa_idx795, align 8, !tbaa !13
  %70 = load i64, i64* %s1.sroa.16.0..sroa_idx799, align 8, !tbaa !13
  %mul.i.i467 = shl i64 %66, 1
  %conv.i.i.i468 = zext i64 %mul.i.i467 to i128
  %conv1.i.i.i469 = zext i64 %69 to i128
  %mul.i.i.i470 = mul nuw i128 %conv1.i.i.i469, %conv.i.i.i468
  %mul17.i.i471 = shl i64 %67, 1
  %conv.i215.i.i472 = zext i64 %mul17.i.i471 to i128
  %conv1.i216.i.i473 = zext i64 %68 to i128
  %mul.i217.i.i474 = mul nuw i128 %conv1.i216.i.i473, %conv.i215.i.i472
  %add.i.i.i475 = add i128 %mul.i.i.i470, %mul.i217.i.i474
  %conv.i218.i.i476 = zext i64 %70 to i128
  %mul.i220.i.i477 = mul nuw i128 %conv.i218.i.i476, %conv.i218.i.i476
  %conv1.i222.i.i478 = and i128 %mul.i220.i.i477, 18446744073709551615
  %mul.i223.i.i479 = mul nuw nsw i128 %conv1.i222.i.i478, 68719492368
  %add.i224.i.i480 = add i128 %add.i.i.i475, %mul.i223.i.i479
  %shr.i.i.i481 = lshr i128 %mul.i220.i.i477, 64
  %shr.i226.i.i482 = lshr i128 %add.i224.i.i480, 52
  %mul37.i.i483 = shl i64 %70, 1
  %conv.i227.i.i484 = zext i64 %66 to i128
  %conv1.i228.i.i485 = zext i64 %mul37.i.i483 to i128
  %mul.i229.i.i486 = mul nuw i128 %conv1.i228.i.i485, %conv.i227.i.i484
  %mul.i233.i.i487 = mul nuw i128 %conv1.i.i.i469, %conv.i215.i.i472
  %mul.i237.i.i488 = mul nuw i128 %conv1.i216.i.i473, %conv1.i216.i.i473
  %mul.i241.i.i489 = mul nuw nsw i128 %shr.i.i.i481, 281475040739328
  %add.i230.i.i490 = add i128 %mul.i233.i.i487, %mul.i237.i.i488
  %add.i234.i.i491 = add i128 %add.i230.i.i490, %mul.i229.i.i486
  %add.i238.i.i492 = add i128 %add.i234.i.i491, %mul.i241.i.i489
  %add.i242.i.i493 = add i128 %add.i238.i.i492, %shr.i226.i.i482
  %conv.i243.i.i494 = trunc i128 %add.i242.i.i493 to i64
  %shr.i244.i.i495 = lshr i128 %add.i242.i.i493, 52
  %and47.i.i496 = lshr i64 %conv.i243.i.i494, 48
  %71 = and i64 %and47.i.i496, 15
  %and54.i.i497 = and i64 %conv.i243.i.i494, 281474976710655
  %mul.i247.i.i498 = mul nuw i128 %conv.i227.i.i484, %conv.i227.i.i484
  %conv.i248.i.i499 = zext i64 %67 to i128
  %mul.i250.i.i500 = mul nuw i128 %conv1.i228.i.i485, %conv.i248.i.i499
  %mul64.i.i501 = shl i64 %68, 1
  %conv.i252.i.i502 = zext i64 %mul64.i.i501 to i128
  %mul.i254.i.i503 = mul nuw i128 %conv1.i.i.i469, %conv.i252.i.i502
  %add.i251.i.i504 = add i128 %mul.i250.i.i500, %mul.i254.i.i503
  %add.i255.i.i505 = add i128 %add.i251.i.i504, %shr.i244.i.i495
  %conv.i256.i.i506 = trunc i128 %add.i255.i.i505 to i64
  %shr.i257.i.i507 = lshr i128 %add.i255.i.i505, 52
  %and69.i.i508 = shl i64 %conv.i256.i.i506, 4
  %shl.i.i509 = and i64 %and69.i.i508, 72057594037927920
  %or.i.i510 = or i64 %shl.i.i509, %71
  %conv.i258.i.i511 = zext i64 %or.i.i510 to i128
  %mul.i259.i.i512 = mul nuw nsw i128 %conv.i258.i.i511, 4294968273
  %add.i260.i.i513 = add i128 %mul.i259.i.i512, %mul.i247.i.i498
  %shr.i262.i.i516 = lshr i128 %add.i260.i.i513, 52
  %mul.i265.i.i517 = mul nuw i128 %conv.i248.i.i499, %conv.i.i.i468
  %mul.i269.i.i518 = mul nuw i128 %conv1.i228.i.i485, %conv1.i216.i.i473
  %mul.i273.i.i519 = mul nuw i128 %conv1.i.i.i469, %conv1.i.i.i469
  %add.i270.i.i520 = add i128 %mul.i269.i.i518, %mul.i273.i.i519
  %add.i274.i.i521 = add i128 %add.i270.i.i520, %shr.i257.i.i507
  %conv.i276.i.i522 = and i128 %add.i274.i.i521, 4503599627370495
  %mul.i277.i.i523 = mul nuw nsw i128 %conv.i276.i.i522, 68719492368
  %add.i266.i.i524 = add i128 %mul.i277.i.i523, %mul.i265.i.i517
  %add.i278.i.i525 = add i128 %add.i266.i.i524, %shr.i262.i.i516
  %shr.i279.i.i526 = lshr i128 %add.i274.i.i521, 52
  %72 = insertelement <2 x i128> poison, i128 %add.i260.i.i513, i64 0
  %73 = insertelement <2 x i128> %72, i128 %add.i278.i.i525, i64 1
  %74 = trunc <2 x i128> %73 to <2 x i64>
  %75 = and <2 x i64> %74, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i530 = lshr i128 %add.i278.i.i525, 52
  %mul.i284.i.i531 = mul nuw i128 %conv1.i216.i.i473, %conv.i.i.i468
  %mul.i288.i.i532 = mul nuw i128 %conv.i248.i.i499, %conv.i248.i.i499
  %mul.i292.i.i533 = mul nuw i128 %conv1.i228.i.i485, %conv1.i.i.i469
  %add.i293.i.i534 = add i128 %shr.i279.i.i526, %mul.i292.i.i533
  %conv1.i295.i.i535 = and i128 %add.i293.i.i534, 18446744073709551615
  %mul.i296.i.i536 = mul nuw nsw i128 %conv1.i295.i.i535, 68719492368
  %add.i285.i.i537 = add i128 %mul.i284.i.i531, %mul.i288.i.i532
  %add.i289.i.i538 = add i128 %add.i285.i.i537, %mul.i296.i.i536
  %add.i297.i.i539 = add i128 %add.i289.i.i538, %shr.i281.i.i530
  %shr.i298.i.i540 = lshr i128 %add.i293.i.i534, 64
  %shr.i300.i.i544 = lshr i128 %add.i297.i.i539, 52
  %mul.i303.i.i545 = mul nuw nsw i128 %shr.i298.i.i540, 281475040739328
  %conv.i305.i.i546 = and i128 %add.i224.i.i480, 4503599627370494
  %add.i304.i.i547 = add nuw nsw i128 %mul.i303.i.i545, %conv.i305.i.i546
  %add.i306.i.i548 = add nuw nsw i128 %add.i304.i.i547, %shr.i300.i.i544
  %76 = insertelement <2 x i128> poison, i128 %add.i297.i.i539, i64 0
  %77 = insertelement <2 x i128> %76, i128 %add.i306.i.i548, i64 1
  %78 = trunc <2 x i128> %77 to <2 x i64>
  %79 = and <2 x i64> %78, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i552 = lshr i128 %add.i306.i.i548, 52
  %conv.i309.i.i553 = trunc i128 %shr.i308.i.i552 to i64
  %add.i.i554 = add nuw nsw i64 %and54.i.i497, %conv.i309.i.i553
  %z18 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z18, %struct.secp256k1_fe* noundef nonnull %z, %struct.secp256k1_fe* noundef nonnull %m_alt)
  %arrayidx.i556 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %z18, i64 0, i32 0, i64 0
  %80 = load i64, i64* %arrayidx.i556, align 8, !tbaa !13
  %arrayidx2.i557 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 1
  %81 = load i64, i64* %arrayidx2.i557, align 8, !tbaa !13
  %arrayidx4.i558 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 2
  %82 = load i64, i64* %arrayidx4.i558, align 8, !tbaa !13
  %arrayidx6.i559 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 3
  %83 = load i64, i64* %arrayidx6.i559, align 8, !tbaa !13
  %arrayidx8.i560 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 4
  %84 = load i64, i64* %arrayidx8.i560, align 8, !tbaa !13
  %shr.i561 = lshr i64 %84, 48
  %and.i562 = and i64 %84, 281474976710655
  %mul.i563 = mul nuw nsw i64 %shr.i561, 4294968273
  %add.i564 = add i64 %mul.i563, %80
  %shr9.i565 = lshr i64 %add.i564, 52
  %add10.i566 = add i64 %shr9.i565, %81
  %xor.i567 = xor i64 %add.i564, 4294968272
  %shr12.i568 = lshr i64 %add10.i566, 52
  %add13.i569 = add i64 %shr12.i568, %82
  %and1177.i570 = or i64 %add10.i566, %add.i564
  %and15.i571 = and i64 %add10.i566, %xor.i567
  %shr16.i572 = lshr i64 %add13.i569, 52
  %add17.i573 = add i64 %shr16.i572, %83
  %or78.i574 = or i64 %and1177.i570, %add13.i569
  %and20.i575 = and i64 %and15.i571, %add13.i569
  %shr21.i576 = lshr i64 %add17.i573, 52
  %add22.i577 = add nuw nsw i64 %shr21.i576, %and.i562
  %or1979.i578 = or i64 %or78.i574, %add17.i573
  %or24.i579 = and i64 %or1979.i578, 4503599627370495
  %and25.i580 = and i64 %and20.i575, %add17.i573
  %or26.i581 = or i64 %or24.i579, %add22.i577
  %xor27.i582 = xor i64 %add22.i577, 4222124650659840
  %and28.i583 = and i64 %and25.i580, %xor27.i582
  %cmp30.i584 = icmp eq i64 %or26.i581, 0
  %cmp32.i585 = icmp eq i64 %and28.i583, 4503599627370495
  %or3476.i586 = or i1 %cmp30.i584, %cmp32.i585
  %or34.i587 = zext i1 %or3476.i586 to i32
  %85 = load i32, i32* %infinity3, align 8, !tbaa !65
  %neg = xor i32 %85, -1
  %and23 = and i32 %or34.i587, %neg
  %86 = bitcast %struct.secp256k1_fe* %q to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 16, !tbaa !13
  %88 = add <2 x i64> %75, %87
  %89 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %89, align 16, !tbaa !13
  %90 = bitcast i64* %arrayidx18.i331 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 16, !tbaa !13
  %92 = add <2 x i64> %79, %91
  %93 = bitcast i64* %arrayidx11.i to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %93, align 16, !tbaa !13
  %94 = load i64, i64* %arrayidx34.i337, align 16, !tbaa !13
  %add22.i602 = add i64 %add.i.i554, %94
  store i64 %add22.i602, i64* %arrayidx21.i, align 16, !tbaa !13
  %95 = bitcast %struct.secp256k1_gej* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %95, i8* noundef nonnull align 16 dereferenceable(40) %4, i64 40, i1 false), !tbaa.struct !18
  %96 = shl <2 x i64> %88, <i64 1, i64 1>
  %97 = shl <2 x i64> %92, <i64 1, i64 1>
  %mul16.i612 = shl i64 %add22.i602, 1
  %98 = add <2 x i64> %96, %87
  %99 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %99, align 16, !tbaa !13
  %100 = add <2 x i64> %97, %91
  %101 = bitcast i64* %arrayidx11.i to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %101, align 16, !tbaa !13
  %add22.i627 = add i64 %mul16.i612, %94
  store i64 %add22.i627, i64* %arrayidx21.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %t, %struct.secp256k1_fe* noundef nonnull %t, %struct.secp256k1_fe* noundef nonnull %rr_alt)
  %102 = load i64, i64* %arrayidx2.i84, align 16, !tbaa !13
  %add.i630 = add i64 %102, %62
  %103 = load i64, i64* %arrayidx6.i87, align 8, !tbaa !13
  %add7.i633 = add i64 %103, %63
  %104 = load i64, i64* %arrayidx11.i, align 16, !tbaa !13
  %add12.i636 = add i64 %104, %64
  %105 = load i64, i64* %arrayidx16.i, align 8, !tbaa !13
  %add17.i639 = add i64 %105, %65
  %106 = load i64, i64* %arrayidx21.i, align 16, !tbaa !13
  %add22.i642 = add i64 %106, %or39.i460
  %sub.i644 = sub i64 36028762659217784, %add.i630
  %arrayidx2.i645 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 0
  %sub8.i647 = sub i64 36028797018963960, %add7.i633
  %arrayidx10.i648 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 1
  %sub16.i650 = sub i64 36028797018963960, %add12.i636
  %arrayidx18.i651 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 2
  %sub24.i653 = sub i64 36028797018963960, %add17.i639
  %arrayidx26.i654 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 3
  %sub32.i656 = sub i64 2251799813685240, %add22.i642
  %arrayidx34.i657 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 4
  %and.i663 = and i64 %sub.i644, 1
  %sub.i664 = sub nsw i64 0, %and.i663
  %shr.i665 = lshr i64 %sub.i664, 12
  %and9.i = and i64 %shr.i665, 4503595332402223
  %add.i666 = add i64 %and9.i, %sub.i644
  %add10.i667 = add i64 %shr.i665, %sub8.i647
  %add11.i = add i64 %sub16.i650, %shr.i665
  %add12.i668 = add i64 %sub24.i653, %shr.i665
  %shr13.i = lshr i64 %sub.i664, 16
  %add14.i = add i64 %sub32.i656, %shr13.i
  %shr16.i669 = lshr i64 %add.i666, 1
  %and17.i670 = shl i64 %add10.i667, 51
  %shl.i = and i64 %and17.i670, 2251799813685248
  %add18.i = add nuw i64 %shr16.i669, %shl.i
  store i64 %add18.i, i64* %arrayidx2.i645, align 8, !tbaa !13
  %shr21.i671 = lshr i64 %add10.i667, 1
  %and22.i = shl i64 %add11.i, 51
  %shl23.i = and i64 %and22.i, 2251799813685248
  %add24.i = add nuw i64 %shl23.i, %shr21.i671
  store i64 %add24.i, i64* %arrayidx10.i648, align 8, !tbaa !13
  %shr27.i = lshr i64 %add11.i, 1
  %and28.i672 = shl i64 %add12.i668, 51
  %shl29.i = and i64 %and28.i672, 2251799813685248
  %add30.i = add nuw i64 %shl29.i, %shr27.i
  store i64 %add30.i, i64* %arrayidx18.i651, align 8, !tbaa !13
  %shr33.i = lshr i64 %add12.i668, 1
  %and34.i = shl i64 %add14.i, 51
  %shl35.i = and i64 %and34.i, 2251799813685248
  %add36.i = add nuw i64 %shl35.i, %shr33.i
  store i64 %add36.i, i64* %arrayidx26.i654, align 8, !tbaa !13
  %shr39.i = lshr i64 %add14.i, 1
  store i64 %shr39.i, i64* %arrayidx34.i657, align 8, !tbaa !13
  %107 = load i32, i32* %infinity3, align 8, !tbaa !65
  %conv.i673 = sext i32 %107 to i64
  %add.i674 = add nsw i64 %conv.i673, -1
  %neg.i675 = sub nsw i64 0, %conv.i673
  %arrayidx.i676 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 0
  %108 = load i64, i64* %arrayidx.i676, align 8, !tbaa !13
  %and.i677 = and i64 %add.i674, %108
  %arrayidx2.i678 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0, i32 0, i64 0
  %109 = load i64, i64* %arrayidx2.i678, align 8, !tbaa !13
  %and3.i679 = and i64 %109, %neg.i675
  %or.i680 = or i64 %and3.i679, %and.i677
  store i64 %or.i680, i64* %arrayidx.i676, align 8, !tbaa !13
  %arrayidx7.i681 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 1
  %110 = load i64, i64* %arrayidx7.i681, align 8, !tbaa !13
  %and8.i682 = and i64 %110, %add.i674
  %arrayidx10.i683 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0, i32 0, i64 1
  %111 = load i64, i64* %arrayidx10.i683, align 8, !tbaa !13
  %and11.i684 = and i64 %111, %neg.i675
  %or12.i685 = or i64 %and11.i684, %and8.i682
  store i64 %or12.i685, i64* %arrayidx7.i681, align 8, !tbaa !13
  %arrayidx16.i686 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 2
  %112 = load i64, i64* %arrayidx16.i686, align 8, !tbaa !13
  %and17.i687 = and i64 %112, %add.i674
  %arrayidx19.i688 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0, i32 0, i64 2
  %113 = load i64, i64* %arrayidx19.i688, align 8, !tbaa !13
  %and20.i689 = and i64 %113, %neg.i675
  %or21.i690 = or i64 %and20.i689, %and17.i687
  store i64 %or21.i690, i64* %arrayidx16.i686, align 8, !tbaa !13
  %arrayidx25.i691 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 3
  %114 = load i64, i64* %arrayidx25.i691, align 8, !tbaa !13
  %and26.i692 = and i64 %114, %add.i674
  %arrayidx28.i693 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0, i32 0, i64 3
  %115 = load i64, i64* %arrayidx28.i693, align 8, !tbaa !13
  %and29.i694 = and i64 %115, %neg.i675
  %or30.i695 = or i64 %and29.i694, %and26.i692
  store i64 %or30.i695, i64* %arrayidx25.i691, align 8, !tbaa !13
  %arrayidx34.i696 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 4
  %116 = load i64, i64* %arrayidx34.i696, align 8, !tbaa !13
  %and35.i697 = and i64 %116, %add.i674
  %arrayidx37.i698 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0, i32 0, i64 4
  %117 = load i64, i64* %arrayidx37.i698, align 8, !tbaa !13
  %and38.i699 = and i64 %117, %neg.i675
  %or39.i700 = or i64 %and38.i699, %and35.i697
  store i64 %or39.i700, i64* %arrayidx34.i696, align 8, !tbaa !13
  %and.i705 = and i64 %add.i674, %add18.i
  %arrayidx2.i706 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %y9, i64 0, i32 0, i64 0
  %118 = load i64, i64* %arrayidx2.i706, align 8, !tbaa !13
  %and3.i707 = and i64 %118, %neg.i675
  %or.i708 = or i64 %and3.i707, %and.i705
  store i64 %or.i708, i64* %arrayidx2.i645, align 8, !tbaa !13
  %and8.i710 = and i64 %add.i674, %add24.i
  %arrayidx10.i711 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1, i32 0, i64 1
  %119 = load i64, i64* %arrayidx10.i711, align 8, !tbaa !13
  %and11.i712 = and i64 %119, %neg.i675
  %or12.i713 = or i64 %and11.i712, %and8.i710
  store i64 %or12.i713, i64* %arrayidx10.i648, align 8, !tbaa !13
  %and17.i715 = and i64 %add.i674, %add30.i
  %arrayidx19.i716 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1, i32 0, i64 2
  %120 = load i64, i64* %arrayidx19.i716, align 8, !tbaa !13
  %and20.i717 = and i64 %120, %neg.i675
  %or21.i718 = or i64 %and20.i717, %and17.i715
  store i64 %or21.i718, i64* %arrayidx18.i651, align 8, !tbaa !13
  %and26.i720 = and i64 %add.i674, %add36.i
  %arrayidx28.i721 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1, i32 0, i64 3
  %121 = load i64, i64* %arrayidx28.i721, align 8, !tbaa !13
  %and29.i722 = and i64 %121, %neg.i675
  %or30.i723 = or i64 %and29.i722, %and26.i720
  store i64 %or30.i723, i64* %arrayidx26.i654, align 8, !tbaa !13
  %and35.i725 = and i64 %add.i674, %shr39.i
  %arrayidx37.i726 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1, i32 0, i64 4
  %122 = load i64, i64* %arrayidx37.i726, align 8, !tbaa !13
  %and38.i727 = and i64 %122, %neg.i675
  %or39.i728 = or i64 %and38.i727, %and35.i725
  store i64 %or39.i728, i64* %arrayidx34.i657, align 8, !tbaa !13
  %123 = load i64, i64* %arrayidx.i556, align 8, !tbaa !13
  %and.i733 = and i64 %123, %add.i674
  %and3.i734 = and i64 %neg.i675, 1
  %or.i735 = or i64 %and.i733, %and3.i734
  store i64 %or.i735, i64* %arrayidx.i556, align 8, !tbaa !13
  %124 = bitcast i64* %arrayidx2.i557 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !tbaa !13
  %126 = insertelement <2 x i64> poison, i64 %add.i674, i64 0
  %127 = shufflevector <2 x i64> %126, <2 x i64> poison, <2 x i32> zeroinitializer
  %128 = and <2 x i64> %125, %127
  %129 = bitcast i64* %arrayidx2.i557 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %129, align 8, !tbaa !13
  %130 = bitcast i64* %arrayidx6.i559 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !tbaa !13
  %132 = and <2 x i64> %131, %127
  %133 = bitcast i64* %arrayidx6.i559 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %133, align 8, !tbaa !13
  %infinity35 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 %and23, i32* %infinity35, align 8, !tbaa !65
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_ge_set_gej(%struct.secp256k1_ge* nocapture noundef writeonly %r, %struct.secp256k1_gej* nocapture noundef %a) unnamed_addr #9 {
entry:
  %s.i = alloca %struct.secp256k1_modinv64_signed62, align 8
  %z2 = alloca %struct.secp256k1_fe, align 8
  %z3 = alloca %struct.secp256k1_fe, align 8
  %0 = bitcast %struct.secp256k1_fe* %z2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_fe* %z3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #19
  %infinity = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 3
  %2 = load i32, i32* %infinity, align 8, !tbaa !65
  %infinity1 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 2
  store i32 %2, i32* %infinity1, align 8, !tbaa !37
  %z = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2
  %3 = bitcast %struct.secp256k1_modinv64_signed62* %s.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #19
  %tmp.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %z, i64 0, i32 0, i64 0
  %tmp.sroa.0.0.copyload.i = load i64, i64* %tmp.sroa.0.0..sroa_idx.i, align 8, !tbaa.struct !18
  %tmp.sroa.6.0..sroa_idx22.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2, i32 0, i64 1
  %tmp.sroa.6.0.copyload.i = load i64, i64* %tmp.sroa.6.0..sroa_idx22.i, align 8, !tbaa.struct !46
  %tmp.sroa.9.0..sroa_idx25.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2, i32 0, i64 2
  %tmp.sroa.9.0.copyload.i = load i64, i64* %tmp.sroa.9.0..sroa_idx25.i, align 8, !tbaa.struct !47
  %tmp.sroa.12.0..sroa_idx28.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2, i32 0, i64 3
  %tmp.sroa.12.0.copyload.i = load i64, i64* %tmp.sroa.12.0..sroa_idx28.i, align 8, !tbaa.struct !48
  %tmp.sroa.15.0..sroa_idx31.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2, i32 0, i64 4
  %tmp.sroa.15.0.copyload.i = load i64, i64* %tmp.sroa.15.0..sroa_idx31.i, align 8, !tbaa.struct !49
  %shr.i.i = lshr i64 %tmp.sroa.15.0.copyload.i, 48
  %and.i.i = and i64 %tmp.sroa.15.0.copyload.i, 281474976710655
  %mul.i.i = mul nuw nsw i64 %shr.i.i, 4294968273
  %add.i.i = add i64 %mul.i.i, %tmp.sroa.0.0.copyload.i
  %shr9.i.i = lshr i64 %add.i.i, 52
  %add10.i.i = add i64 %shr9.i.i, %tmp.sroa.6.0.copyload.i
  %and11.i.i = and i64 %add.i.i, 4503599627370495
  %shr12.i.i = lshr i64 %add10.i.i, 52
  %add13.i.i = add i64 %shr12.i.i, %tmp.sroa.9.0.copyload.i
  %and14.i.i = and i64 %add10.i.i, 4503599627370495
  %shr15.i.i = lshr i64 %add13.i.i, 52
  %add16.i.i = add i64 %shr15.i.i, %tmp.sroa.12.0.copyload.i
  %and17.i.i = and i64 %add13.i.i, 4503599627370495
  %and18.i.i = and i64 %and17.i.i, %add10.i.i
  %shr19.i.i = lshr i64 %add16.i.i, 52
  %add20.i.i = add nuw nsw i64 %shr19.i.i, %and.i.i
  %and21.i.i = and i64 %add16.i.i, 4503599627370495
  %and22.i.i = and i64 %and18.i.i, %add16.i.i
  %shr24.i.i = lshr i64 %add20.i.i, 48
  %cmp25.i.i = icmp eq i64 %add20.i.i, 281474976710655
  %cmp27.i.i = icmp eq i64 %and22.i.i, 4503599627370495
  %and29122.i.i = and i1 %cmp27.i.i, %cmp25.i.i
  %cmp30.i.i = icmp ugt i64 %and11.i.i, 4503595332402222
  %and32123.i.i = and i1 %cmp30.i.i, %and29122.i.i
  %4 = zext i1 %and32123.i.i to i64
  %or.i.i = or i64 %shr24.i.i, %4
  %mul34.i.i = mul nuw nsw i64 %or.i.i, 4294968273
  %add35.i.i = add nuw nsw i64 %mul34.i.i, %and11.i.i
  %shr36.i.i = lshr i64 %add35.i.i, 52
  %add37.i.i = add nuw nsw i64 %shr36.i.i, %and14.i.i
  %and38.i.i = and i64 %add35.i.i, 4503599627370495
  %shr39.i.i = lshr i64 %add37.i.i, 52
  %add40.i.i = add nuw nsw i64 %shr39.i.i, %and17.i.i
  %shr42.i.i = lshr i64 %add40.i.i, 52
  %add43.i.i = add nuw nsw i64 %shr42.i.i, %and21.i.i
  %shr45.i.i = lshr i64 %add43.i.i, 52
  %add46.i.i = add nuw nsw i64 %shr45.i.i, %add20.i.i
  %shl.i.i = shl i64 %add37.i.i, 52
  %shl.i.masked.i = and i64 %shl.i.i, 4607182418800017408
  %and.i7.i = or i64 %shl.i.masked.i, %and38.i.i
  %arrayidx9.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i, i64 0, i32 0, i64 0
  store i64 %and.i7.i, i64* %arrayidx9.i.i, align 8, !tbaa !13
  %and41.i.i = lshr i64 %add37.i.i, 10
  %shr.i8.i = and i64 %and41.i.i, 4398046511103
  %shl10.i.i = shl i64 %add40.i.i, 42
  %shl10.masked.i.i = and i64 %shl10.i.i, 4611681620380876800
  %and12.i.i = or i64 %shl10.masked.i.i, %shr.i8.i
  %arrayidx14.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i, i64 0, i32 0, i64 1
  store i64 %and12.i.i, i64* %arrayidx14.i.i, align 8, !tbaa !13
  %and44.i.i = lshr i64 %add40.i.i, 20
  %shr15.i9.i = and i64 %and44.i.i, 4294967295
  %shl16.i.i = shl i64 %add43.i.i, 32
  %shl16.masked.i.i = and i64 %shl16.i.i, 4611686014132420608
  %and18.i10.i = or i64 %shl16.masked.i.i, %shr15.i9.i
  %arrayidx20.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i, i64 0, i32 0, i64 2
  store i64 %and18.i10.i, i64* %arrayidx20.i.i, align 8, !tbaa !13
  %and47.i.i = lshr i64 %add43.i.i, 30
  %shr21.i.i = and i64 %and47.i.i, 4194303
  %shl22.i.i = shl i64 %add46.i.i, 22
  %shl22.masked.i.i = and i64 %shl22.i.i, 4611686018423193600
  %and24.i.i = or i64 %shl22.masked.i.i, %shr21.i.i
  %arrayidx26.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i, i64 0, i32 0, i64 3
  store i64 %and24.i.i, i64* %arrayidx26.i.i, align 8, !tbaa !13
  %and54.i.i = lshr i64 %add46.i.i, 40
  %shr27.i.i = and i64 %and54.i.i, 255
  %arrayidx29.i.i = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %s.i, i64 0, i32 0, i64 4
  store i64 %shr27.i.i, i64* %arrayidx29.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_modinv64(%struct.secp256k1_modinv64_signed62* noundef nonnull %s.i, %struct.secp256k1_modinv64_modinfo* noundef nonnull @secp256k1_const_modinfo_fe) #19
  %5 = load i64, i64* %arrayidx9.i.i, align 8, !tbaa !13
  %6 = load i64, i64* %arrayidx14.i.i, align 8, !tbaa !13
  %7 = load i64, i64* %arrayidx20.i.i, align 8, !tbaa !13
  %8 = load i64, i64* %arrayidx26.i.i, align 8, !tbaa !13
  %9 = load i64, i64* %arrayidx29.i.i, align 8, !tbaa !13
  %and.i16.i = and i64 %5, 4503599627370495
  store i64 %and.i16.i, i64* %tmp.sroa.0.0..sroa_idx.i, align 8, !tbaa !13
  %shr34.i.i = lshr i64 %5, 52
  %shl.i17.i = shl i64 %6, 10
  %shl.masked.i.i = and i64 %shl.i17.i, 4503599627369472
  %and35.i.i = or i64 %shl.masked.i.i, %shr34.i.i
  store i64 %and35.i.i, i64* %tmp.sroa.6.0..sroa_idx22.i, align 8, !tbaa !13
  %shr38.i.i = lshr i64 %6, 42
  %shl39.i.i = shl i64 %7, 20
  %shl39.masked.i.i = and i64 %shl39.i.i, 4503599626321920
  %and41.i18.i = or i64 %shl39.masked.i.i, %shr38.i.i
  store i64 %and41.i18.i, i64* %tmp.sroa.9.0..sroa_idx25.i, align 8, !tbaa !13
  %shr44.i.i = lshr i64 %7, 32
  %shl45.i.i = shl i64 %8, 30
  %shl45.masked.i.i = and i64 %shl45.i.i, 4503598553628672
  %and47.i19.i = or i64 %shl45.masked.i.i, %shr44.i.i
  store i64 %and47.i19.i, i64* %tmp.sroa.12.0..sroa_idx28.i, align 8, !tbaa !13
  %shr50.i.i = lshr i64 %8, 22
  %shl51.i.i = shl i64 %9, 40
  %or52.i.i = or i64 %shl51.i.i, %shr50.i.i
  store i64 %or52.i.i, i64* %tmp.sroa.15.0..sroa_idx31.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #19
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %z2, %struct.secp256k1_fe* noundef nonnull %z)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z3, %struct.secp256k1_fe* noundef nonnull %z, %struct.secp256k1_fe* noundef nonnull %z2)
  %x = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef %x, %struct.secp256k1_fe* noundef %x, %struct.secp256k1_fe* noundef nonnull %z2)
  %y = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y, %struct.secp256k1_fe* noundef nonnull %y, %struct.secp256k1_fe* noundef nonnull %z3)
  store i64 1, i64* %tmp.sroa.0.0..sroa_idx.i, align 8, !tbaa !13
  %10 = bitcast i64* %tmp.sroa.6.0..sroa_idx22.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10, i8 0, i64 32, i1 false) #19
  %11 = bitcast %struct.secp256k1_ge* %r to i8*
  %12 = bitcast %struct.secp256k1_gej* %a to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %11, i8* noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false), !tbaa.struct !18
  %y12 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1
  %13 = bitcast %struct.secp256k1_fe* %y12 to i8*
  %14 = bitcast %struct.secp256k1_fe* %y to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %13, i8* noundef nonnull align 8 dereferenceable(40) %14, i64 40, i1 false), !tbaa.struct !18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @secp256k1_tagged_sha256(%struct.secp256k1_context_struct* nocapture noundef readonly %ctx, i8* noundef writeonly %hash32, i8* noundef readonly %tag, i64 noundef %taglen, i8* noundef readonly %msg, i64 noundef %msglen) local_unnamed_addr #0 {
entry:
  %sizedesc.i.i = alloca [8 x i8], align 1
  %buf.i = alloca [32 x i8], align 16
  %sha = alloca %struct.secp256k1_sha256, align 16
  %0 = bitcast %struct.secp256k1_sha256* %sha to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %0) #19
  %cmp2.not = icmp eq i8* %hash32, null
  br i1 %cmp2.not, label %if.then, label %do.body7, !prof !26

if.then:                                          ; preds = %entry
  %illegal_callback.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback.idx, align 8, !tbaa !27
  %illegal_callback.idx41 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback.idx41.val = load i8*, i8** %illegal_callback.idx41, align 8, !tbaa !28
  tail call void %illegal_callback.idx.val(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0), i8* noundef %illegal_callback.idx41.val) #19
  br label %cleanup

do.body7:                                         ; preds = %entry
  %cmp8.not = icmp eq i8* %tag, null
  br i1 %cmp8.not, label %if.then15, label %do.body20, !prof !26

if.then15:                                        ; preds = %do.body7
  %illegal_callback16.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback16.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback16.idx, align 8, !tbaa !27
  %illegal_callback16.idx40 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback16.idx40.val = load i8*, i8** %illegal_callback16.idx40, align 8, !tbaa !28
  tail call void %illegal_callback16.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i8* noundef %illegal_callback16.idx40.val) #19
  br label %cleanup

do.body20:                                        ; preds = %do.body7
  %cmp21.not = icmp eq i8* %msg, null
  br i1 %cmp21.not, label %if.then28, label %do.end32, !prof !26

if.then28:                                        ; preds = %do.body20
  %illegal_callback29.idx = getelementptr inbounds %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 0
  %illegal_callback29.idx.val = load void (i8*, i8*)*, void (i8*, i8*)** %illegal_callback29.idx, align 8, !tbaa !27
  %illegal_callback29.idx39 = getelementptr %struct.secp256k1_context_struct, %struct.secp256k1_context_struct* %ctx, i64 0, i32 1, i32 1
  %illegal_callback29.idx39.val = load i8*, i8** %illegal_callback29.idx39, align 8, !tbaa !28
  tail call void %illegal_callback29.idx.val(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* noundef %illegal_callback29.idx39.val) #19
  br label %cleanup

do.end32:                                         ; preds = %do.body20
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 0
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 1
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 2
  %arrayidx6.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 3
  %2 = bitcast %struct.secp256k1_sha256* %sha to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %2, align 16, !tbaa !3
  %arrayidx8.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 4
  %arrayidx10.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 5
  %arrayidx12.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 6
  %arrayidx14.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 0, i64 7
  %3 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %3, align 16, !tbaa !3
  %bytes.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %sha, i64 0, i32 2
  store i64 0, i64* %bytes.i.i, align 16, !tbaa !7
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef nonnull %tag, i64 noundef %taglen) #19
  %4 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  %5 = load i64, i64* %bytes.i.i, align 16, !tbaa !7
  %shr.i.i = lshr i64 %5, 29
  %conv.i.i.i = trunc i64 %shr.i.i to i8
  %arrayidx.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 3
  store i8 %conv.i.i.i, i8* %arrayidx.i.i.i, align 1, !tbaa !10
  %shr.i48.i.i = lshr i64 %5, 37
  %conv1.i.i.i = trunc i64 %shr.i48.i.i to i8
  %arrayidx2.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 2
  store i8 %conv1.i.i.i, i8* %arrayidx2.i.i.i, align 1, !tbaa !10
  %shr3.i49.i.i = lshr i64 %5, 45
  %conv4.i.i.i = trunc i64 %shr3.i49.i.i to i8
  %arrayidx5.i.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 1
  store i8 %conv4.i.i.i, i8* %arrayidx5.i.i.i, align 1, !tbaa !10
  %shr6.i50.i.i = lshr i64 %5, 53
  %conv7.i.i.i = trunc i64 %shr6.i50.i.i to i8
  store i8 %conv7.i.i.i, i8* %4, align 1, !tbaa !10
  %arrayidx3.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 4
  %.tr.i.i = trunc i64 %5 to i32
  %conv5.i.i = shl i32 %.tr.i.i, 3
  %conv.i28.i.i = trunc i32 %conv5.i.i to i8
  %arrayidx.i29.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 7
  store i8 %conv.i28.i.i, i8* %arrayidx.i29.i.i, align 1, !tbaa !10
  %shr.i30.i.i = lshr i32 %conv5.i.i, 8
  %conv1.i31.i.i = trunc i32 %shr.i30.i.i to i8
  %arrayidx2.i32.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 6
  store i8 %conv1.i31.i.i, i8* %arrayidx2.i32.i.i, align 1, !tbaa !10
  %shr3.i33.i.i = lshr i32 %conv5.i.i, 16
  %conv4.i34.i.i = trunc i32 %shr3.i33.i.i to i8
  %arrayidx5.i35.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i.i, i64 0, i64 5
  store i8 %conv4.i34.i.i, i8* %arrayidx5.i35.i.i, align 1, !tbaa !10
  %shr6.i36.i.i = lshr i32 %conv5.i.i, 24
  %conv7.i37.i.i = trunc i32 %shr6.i36.i.i to i8
  store i8 %conv7.i37.i.i, i8* %arrayidx3.i.i, align 1, !tbaa !10
  %sub.i.i = sub i64 55, %5
  %rem7.i.i = and i64 %sub.i.i, 63
  %add.i.i = add nuw nsw i64 %rem7.i.i, 1
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef getelementptr inbounds (<{ i8, [63 x i8] }>, <{ i8, [63 x i8] }>* @secp256k1_sha256_finalize.pad, i64 0, i32 0), i64 noundef %add.i.i) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef nonnull %4, i64 noundef 8) #19
  %6 = load i32, i32* %arrayidx.i.i, align 16, !tbaa !3
  %conv.i38.i.i = trunc i32 %6 to i8
  %arrayidx.i39.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 3
  store i8 %conv.i38.i.i, i8* %arrayidx.i39.i.i, align 1, !tbaa !10
  %shr.i40.i.i = lshr i32 %6, 8
  %conv1.i41.i.i = trunc i32 %shr.i40.i.i to i8
  %arrayidx2.i42.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 2
  store i8 %conv1.i41.i.i, i8* %arrayidx2.i42.i.i, align 2, !tbaa !10
  %shr3.i43.i.i = lshr i32 %6, 16
  %conv4.i44.i.i = trunc i32 %shr3.i43.i.i to i8
  %arrayidx5.i45.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 1
  store i8 %conv4.i44.i.i, i8* %arrayidx5.i45.i.i, align 1, !tbaa !10
  %shr6.i46.i.i = lshr i32 %6, 24
  %conv7.i47.i.i = trunc i32 %shr6.i46.i.i to i8
  store i8 %conv7.i47.i.i, i8* %1, align 16, !tbaa !10
  %arrayidx10.1.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 4
  %7 = load i32, i32* %arrayidx2.i.i, align 4, !tbaa !3
  %conv.i38.1.i.i = trunc i32 %7 to i8
  %arrayidx.i39.1.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 7
  store i8 %conv.i38.1.i.i, i8* %arrayidx.i39.1.i.i, align 1, !tbaa !10
  %shr.i40.1.i.i = lshr i32 %7, 8
  %conv1.i41.1.i.i = trunc i32 %shr.i40.1.i.i to i8
  %arrayidx2.i42.1.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 6
  store i8 %conv1.i41.1.i.i, i8* %arrayidx2.i42.1.i.i, align 2, !tbaa !10
  %shr3.i43.1.i.i = lshr i32 %7, 16
  %conv4.i44.1.i.i = trunc i32 %shr3.i43.1.i.i to i8
  %arrayidx5.i45.1.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 5
  store i8 %conv4.i44.1.i.i, i8* %arrayidx5.i45.1.i.i, align 1, !tbaa !10
  %shr6.i46.1.i.i = lshr i32 %7, 24
  %conv7.i47.1.i.i = trunc i32 %shr6.i46.1.i.i to i8
  store i8 %conv7.i47.1.i.i, i8* %arrayidx10.1.i.i, align 4, !tbaa !10
  %arrayidx10.2.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 8
  %8 = load i32, i32* %arrayidx4.i.i, align 8, !tbaa !3
  %conv.i38.2.i.i = trunc i32 %8 to i8
  %arrayidx.i39.2.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 11
  store i8 %conv.i38.2.i.i, i8* %arrayidx.i39.2.i.i, align 1, !tbaa !10
  %shr.i40.2.i.i = lshr i32 %8, 8
  %conv1.i41.2.i.i = trunc i32 %shr.i40.2.i.i to i8
  %arrayidx2.i42.2.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 10
  store i8 %conv1.i41.2.i.i, i8* %arrayidx2.i42.2.i.i, align 2, !tbaa !10
  %shr3.i43.2.i.i = lshr i32 %8, 16
  %conv4.i44.2.i.i = trunc i32 %shr3.i43.2.i.i to i8
  %arrayidx5.i45.2.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 9
  store i8 %conv4.i44.2.i.i, i8* %arrayidx5.i45.2.i.i, align 1, !tbaa !10
  %shr6.i46.2.i.i = lshr i32 %8, 24
  %conv7.i47.2.i.i = trunc i32 %shr6.i46.2.i.i to i8
  store i8 %conv7.i47.2.i.i, i8* %arrayidx10.2.i.i, align 8, !tbaa !10
  %arrayidx10.3.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 12
  %9 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !3
  %conv.i38.3.i.i = trunc i32 %9 to i8
  %arrayidx.i39.3.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 15
  store i8 %conv.i38.3.i.i, i8* %arrayidx.i39.3.i.i, align 1, !tbaa !10
  %shr.i40.3.i.i = lshr i32 %9, 8
  %conv1.i41.3.i.i = trunc i32 %shr.i40.3.i.i to i8
  %arrayidx2.i42.3.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 14
  store i8 %conv1.i41.3.i.i, i8* %arrayidx2.i42.3.i.i, align 2, !tbaa !10
  %shr3.i43.3.i.i = lshr i32 %9, 16
  %conv4.i44.3.i.i = trunc i32 %shr3.i43.3.i.i to i8
  %arrayidx5.i45.3.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 13
  store i8 %conv4.i44.3.i.i, i8* %arrayidx5.i45.3.i.i, align 1, !tbaa !10
  %shr6.i46.3.i.i = lshr i32 %9, 24
  %conv7.i47.3.i.i = trunc i32 %shr6.i46.3.i.i to i8
  store i8 %conv7.i47.3.i.i, i8* %arrayidx10.3.i.i, align 4, !tbaa !10
  %arrayidx10.4.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 16
  %10 = load i32, i32* %arrayidx8.i.i, align 16, !tbaa !3
  %conv.i38.4.i.i = trunc i32 %10 to i8
  %arrayidx.i39.4.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 19
  store i8 %conv.i38.4.i.i, i8* %arrayidx.i39.4.i.i, align 1, !tbaa !10
  %shr.i40.4.i.i = lshr i32 %10, 8
  %conv1.i41.4.i.i = trunc i32 %shr.i40.4.i.i to i8
  %arrayidx2.i42.4.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 18
  store i8 %conv1.i41.4.i.i, i8* %arrayidx2.i42.4.i.i, align 2, !tbaa !10
  %shr3.i43.4.i.i = lshr i32 %10, 16
  %conv4.i44.4.i.i = trunc i32 %shr3.i43.4.i.i to i8
  %arrayidx5.i45.4.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 17
  store i8 %conv4.i44.4.i.i, i8* %arrayidx5.i45.4.i.i, align 1, !tbaa !10
  %shr6.i46.4.i.i = lshr i32 %10, 24
  %conv7.i47.4.i.i = trunc i32 %shr6.i46.4.i.i to i8
  store i8 %conv7.i47.4.i.i, i8* %arrayidx10.4.i.i, align 16, !tbaa !10
  %arrayidx10.5.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 20
  %11 = load i32, i32* %arrayidx10.i.i, align 4, !tbaa !3
  %conv.i38.5.i.i = trunc i32 %11 to i8
  %arrayidx.i39.5.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 23
  store i8 %conv.i38.5.i.i, i8* %arrayidx.i39.5.i.i, align 1, !tbaa !10
  %shr.i40.5.i.i = lshr i32 %11, 8
  %conv1.i41.5.i.i = trunc i32 %shr.i40.5.i.i to i8
  %arrayidx2.i42.5.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 22
  store i8 %conv1.i41.5.i.i, i8* %arrayidx2.i42.5.i.i, align 2, !tbaa !10
  %shr3.i43.5.i.i = lshr i32 %11, 16
  %conv4.i44.5.i.i = trunc i32 %shr3.i43.5.i.i to i8
  %arrayidx5.i45.5.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 21
  store i8 %conv4.i44.5.i.i, i8* %arrayidx5.i45.5.i.i, align 1, !tbaa !10
  %shr6.i46.5.i.i = lshr i32 %11, 24
  %conv7.i47.5.i.i = trunc i32 %shr6.i46.5.i.i to i8
  store i8 %conv7.i47.5.i.i, i8* %arrayidx10.5.i.i, align 4, !tbaa !10
  %arrayidx10.6.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 24
  %12 = load i32, i32* %arrayidx12.i.i, align 8, !tbaa !3
  %conv.i38.6.i.i = trunc i32 %12 to i8
  %arrayidx.i39.6.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 27
  store i8 %conv.i38.6.i.i, i8* %arrayidx.i39.6.i.i, align 1, !tbaa !10
  %shr.i40.6.i.i = lshr i32 %12, 8
  %conv1.i41.6.i.i = trunc i32 %shr.i40.6.i.i to i8
  %arrayidx2.i42.6.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 26
  store i8 %conv1.i41.6.i.i, i8* %arrayidx2.i42.6.i.i, align 2, !tbaa !10
  %shr3.i43.6.i.i = lshr i32 %12, 16
  %conv4.i44.6.i.i = trunc i32 %shr3.i43.6.i.i to i8
  %arrayidx5.i45.6.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 25
  store i8 %conv4.i44.6.i.i, i8* %arrayidx5.i45.6.i.i, align 1, !tbaa !10
  %shr6.i46.6.i.i = lshr i32 %12, 24
  %conv7.i47.6.i.i = trunc i32 %shr6.i46.6.i.i to i8
  store i8 %conv7.i47.6.i.i, i8* %arrayidx10.6.i.i, align 8, !tbaa !10
  %arrayidx10.7.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 28
  %13 = load i32, i32* %arrayidx14.i.i, align 4, !tbaa !3
  %conv.i38.7.i.i = trunc i32 %13 to i8
  %arrayidx.i39.7.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 31
  store i8 %conv.i38.7.i.i, i8* %arrayidx.i39.7.i.i, align 1, !tbaa !10
  %shr.i40.7.i.i = lshr i32 %13, 8
  %conv1.i41.7.i.i = trunc i32 %shr.i40.7.i.i to i8
  %arrayidx2.i42.7.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 30
  store i8 %conv1.i41.7.i.i, i8* %arrayidx2.i42.7.i.i, align 2, !tbaa !10
  %shr3.i43.7.i.i = lshr i32 %13, 16
  %conv4.i44.7.i.i = trunc i32 %shr3.i43.7.i.i to i8
  %arrayidx5.i45.7.i.i = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i, i64 0, i64 29
  store i8 %conv4.i44.7.i.i, i8* %arrayidx5.i45.7.i.i, align 1, !tbaa !10
  %shr6.i46.7.i.i = lshr i32 %13, 24
  %conv7.i47.7.i.i = trunc i32 %shr6.i46.7.i.i to i8
  store i8 %conv7.i47.7.i.i, i8* %arrayidx10.7.i.i, align 4, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  %14 = bitcast %struct.secp256k1_sha256* %sha to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %14, align 16, !tbaa !3
  %15 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %15, align 16, !tbaa !3
  store i64 0, i64* %bytes.i.i, align 16, !tbaa !7
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef nonnull %1, i64 noundef 32) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef nonnull %1, i64 noundef 32) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef nonnull %msg, i64 noundef %msglen)
  call fastcc void @secp256k1_sha256_finalize(%struct.secp256k1_sha256* noundef nonnull %sha, i8* noundef nonnull %hash32)
  br label %cleanup

cleanup:                                          ; preds = %do.end32, %if.then28, %if.then15, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then15 ], [ 0, %if.then28 ], [ 1, %do.end32 ]
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef %hash, i8* nocapture noundef readonly %data, i64 noundef %len) unnamed_addr #9 {
entry:
  %bytes = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 2
  %0 = load i64, i64* %bytes, align 8, !tbaa !7
  %and = and i64 %0, 63
  %add = add i64 %0, %len
  store i64 %add, i64* %bytes, align 8, !tbaa !7
  %sub34 = sub nuw nsw i64 64, %and
  %cmp3.not35 = icmp ugt i64 %sub34, %len
  br i1 %cmp3.not35, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %arraydecay = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 0
  %arraydecay8 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 0
  %arrayidx1.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 1
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 2
  %arrayidx3.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 3
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 4
  %arrayidx5.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 5
  %arrayidx6.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 6
  %arrayidx7.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 7
  %arrayidx1.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 1
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 2
  %arrayidx8.i.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 3
  %arrayidx58.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 4
  %arrayidx1.i5956.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 5
  %arrayidx4.i5960.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 6
  %arrayidx8.i5964.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 7
  %arrayidx101.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 8
  %arrayidx1.i5969.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 9
  %arrayidx4.i5973.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 10
  %arrayidx8.i5977.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 11
  %arrayidx144.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 12
  %arrayidx1.i5982.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 13
  %arrayidx4.i5986.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 14
  %arrayidx8.i5990.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 15
  %arrayidx187.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 16
  %arrayidx1.i5995.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 17
  %arrayidx4.i5999.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 18
  %arrayidx8.i6003.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 19
  %arrayidx230.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 20
  %arrayidx1.i6008.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 21
  %arrayidx4.i6012.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 22
  %arrayidx8.i6016.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 23
  %arrayidx273.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 24
  %arrayidx1.i6021.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 25
  %arrayidx4.i6025.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 26
  %arrayidx8.i6029.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 27
  %arrayidx316.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 28
  %arrayidx1.i6034.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 29
  %arrayidx4.i6038.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 30
  %arrayidx8.i6042.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 31
  %arrayidx359.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 32
  %arrayidx1.i6047.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 33
  %arrayidx4.i6051.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 34
  %arrayidx8.i6055.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 35
  %arrayidx402.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 36
  %arrayidx1.i6060.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 37
  %arrayidx4.i6064.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 38
  %arrayidx8.i6068.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 39
  %arrayidx445.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 40
  %arrayidx1.i6073.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 41
  %arrayidx4.i6077.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 42
  %arrayidx8.i6081.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 43
  %arrayidx488.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 44
  %arrayidx1.i6086.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 45
  %arrayidx4.i6090.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 46
  %arrayidx8.i6094.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 47
  %arrayidx531.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 48
  %arrayidx1.i6099.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 49
  %arrayidx4.i6103.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 50
  %arrayidx8.i6107.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 51
  %arrayidx574.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 52
  %arrayidx1.i6112.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 53
  %arrayidx4.i6116.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 54
  %arrayidx8.i6120.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 55
  %arrayidx617.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 56
  %arrayidx1.i6125.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 57
  %arrayidx4.i6129.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 58
  %arrayidx8.i6133.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 59
  %arrayidx660.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 60
  %arrayidx1.i6138.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 61
  %arrayidx4.i6142.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 62
  %arrayidx8.i6146.i = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 63
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %sub39 = phi i64 [ %sub34, %while.body.lr.ph ], [ 64, %while.body ]
  %data.addr.038 = phi i8* [ %data, %while.body.lr.ph ], [ %add.ptr6, %while.body ]
  %bufsize.037 = phi i64 [ %and, %while.body.lr.ph ], [ 0, %while.body ]
  %len.addr.036 = phi i64 [ %len, %while.body.lr.ph ], [ %sub7, %while.body ]
  %add.ptr = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 %bufsize.037
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %add.ptr, i8* align 1 %data.addr.038, i64 %sub39, i1 false)
  %add.ptr6 = getelementptr inbounds i8, i8* %data.addr.038, i64 %sub39
  %sub7 = sub i64 %len.addr.036, %sub39
  %1 = load i32, i32* %arraydecay8, align 4, !tbaa !3
  %2 = load i32, i32* %arrayidx1.i, align 4, !tbaa !3
  %3 = load i32, i32* %arrayidx2.i, align 4, !tbaa !3
  %4 = load i32, i32* %arrayidx3.i, align 4, !tbaa !3
  %5 = load i32, i32* %arrayidx4.i, align 4, !tbaa !3
  %6 = load i32, i32* %arrayidx5.i, align 4, !tbaa !3
  %7 = load i32, i32* %arrayidx6.i, align 4, !tbaa !3
  %8 = load i32, i32* %arrayidx7.i, align 4, !tbaa !3
  %or.i = tail call i32 @llvm.fshl.i32(i32 %5, i32 %5, i32 26) #19
  %or10.i = tail call i32 @llvm.fshl.i32(i32 %5, i32 %5, i32 21) #19
  %xor.i = xor i32 %or.i, %or10.i
  %or13.i = tail call i32 @llvm.fshl.i32(i32 %5, i32 %5, i32 7) #19
  %xor14.i = xor i32 %xor.i, %or13.i
  %xor15.i = xor i32 %7, %6
  %and.i = and i32 %xor15.i, %5
  %xor16.i = xor i32 %and.i, %7
  %9 = load i8, i8* %arraydecay, align 1, !tbaa !10
  %conv.i.i = zext i8 %9 to i32
  %shl.i.i = shl nuw i32 %conv.i.i, 24
  %10 = load i8, i8* %arrayidx1.i.i, align 1, !tbaa !10
  %conv2.i.i = zext i8 %10 to i32
  %shl3.i.i = shl nuw nsw i32 %conv2.i.i, 16
  %or.i.i = or i32 %shl3.i.i, %shl.i.i
  %11 = load i8, i8* %arrayidx4.i.i, align 1, !tbaa !10
  %conv5.i.i = zext i8 %11 to i32
  %shl6.i.i = shl nuw nsw i32 %conv5.i.i, 8
  %or7.i.i = or i32 %or.i.i, %shl6.i.i
  %12 = load i8, i8* %arrayidx8.i.i, align 1, !tbaa !10
  %conv9.i.i = zext i8 %12 to i32
  %or10.i.i = or i32 %or7.i.i, %conv9.i.i
  %add.i = add i32 %xor14.i, 1116352408
  %add17.i = add i32 %add.i, %8
  %add18.i = add i32 %add17.i, %xor16.i
  %add20.i = add i32 %add18.i, %or10.i.i
  %or23.i = tail call i32 @llvm.fshl.i32(i32 %1, i32 %1, i32 30) #19
  %or26.i = tail call i32 @llvm.fshl.i32(i32 %1, i32 %1, i32 19) #19
  %xor27.i = xor i32 %or23.i, %or26.i
  %or30.i = tail call i32 @llvm.fshl.i32(i32 %1, i32 %1, i32 10) #19
  %xor31.i = xor i32 %xor27.i, %or30.i
  %and32.i = and i32 %2, %1
  %or33.i = or i32 %2, %1
  %and34.i = and i32 %3, %or33.i
  %or35.i = or i32 %and34.i, %and32.i
  %add36.i = add i32 %or35.i, %xor31.i
  %add37.i = add i32 %add20.i, %4
  %add38.i = add i32 %add36.i, %add20.i
  %or43.i = tail call i32 @llvm.fshl.i32(i32 %add37.i, i32 %add37.i, i32 26) #19
  %or46.i = tail call i32 @llvm.fshl.i32(i32 %add37.i, i32 %add37.i, i32 21) #19
  %xor47.i = xor i32 %or43.i, %or46.i
  %or50.i = tail call i32 @llvm.fshl.i32(i32 %add37.i, i32 %add37.i, i32 7) #19
  %xor51.i = xor i32 %xor47.i, %or50.i
  %xor53.i = xor i32 %6, %5
  %and54.i = and i32 %add37.i, %xor53.i
  %xor55.i = xor i32 %and54.i, %6
  %13 = load i8, i8* %arrayidx58.i, align 1, !tbaa !10
  %conv.i5954.i = zext i8 %13 to i32
  %shl.i5955.i = shl nuw i32 %conv.i5954.i, 24
  %14 = load i8, i8* %arrayidx1.i5956.i, align 1, !tbaa !10
  %conv2.i5957.i = zext i8 %14 to i32
  %shl3.i5958.i = shl nuw nsw i32 %conv2.i5957.i, 16
  %or.i5959.i = or i32 %shl3.i5958.i, %shl.i5955.i
  %15 = load i8, i8* %arrayidx4.i5960.i, align 1, !tbaa !10
  %conv5.i5961.i = zext i8 %15 to i32
  %shl6.i5962.i = shl nuw nsw i32 %conv5.i5961.i, 8
  %or7.i5963.i = or i32 %or.i5959.i, %shl6.i5962.i
  %16 = load i8, i8* %arrayidx8.i5964.i, align 1, !tbaa !10
  %conv9.i5965.i = zext i8 %16 to i32
  %or10.i5966.i = or i32 %or7.i5963.i, %conv9.i5965.i
  %add52.i = add i32 %7, 1899447441
  %add56.i = add i32 %add52.i, %xor55.i
  %add57.i = add i32 %add56.i, %or10.i5966.i
  %add60.i = add i32 %add57.i, %xor51.i
  %or64.i = tail call i32 @llvm.fshl.i32(i32 %add38.i, i32 %add38.i, i32 30) #19
  %or67.i = tail call i32 @llvm.fshl.i32(i32 %add38.i, i32 %add38.i, i32 19) #19
  %xor68.i = xor i32 %or64.i, %or67.i
  %or71.i = tail call i32 @llvm.fshl.i32(i32 %add38.i, i32 %add38.i, i32 10) #19
  %xor72.i = xor i32 %xor68.i, %or71.i
  %and73.i = and i32 %add38.i, %1
  %or74.i = or i32 %add38.i, %1
  %and75.i = and i32 %or74.i, %2
  %or76.i = or i32 %and75.i, %and73.i
  %add77.i = add i32 %xor72.i, %or76.i
  %add78.i = add i32 %add60.i, %3
  %add79.i = add i32 %add77.i, %add60.i
  %or86.i = tail call i32 @llvm.fshl.i32(i32 %add78.i, i32 %add78.i, i32 26) #19
  %or89.i = tail call i32 @llvm.fshl.i32(i32 %add78.i, i32 %add78.i, i32 21) #19
  %xor90.i = xor i32 %or86.i, %or89.i
  %or93.i = tail call i32 @llvm.fshl.i32(i32 %add78.i, i32 %add78.i, i32 7) #19
  %xor94.i = xor i32 %xor90.i, %or93.i
  %xor96.i = xor i32 %add37.i, %5
  %and97.i = and i32 %add78.i, %xor96.i
  %xor98.i = xor i32 %and97.i, %5
  %17 = load i8, i8* %arrayidx101.i, align 1, !tbaa !10
  %conv.i5967.i = zext i8 %17 to i32
  %shl.i5968.i = shl nuw i32 %conv.i5967.i, 24
  %18 = load i8, i8* %arrayidx1.i5969.i, align 1, !tbaa !10
  %conv2.i5970.i = zext i8 %18 to i32
  %shl3.i5971.i = shl nuw nsw i32 %conv2.i5970.i, 16
  %or.i5972.i = or i32 %shl3.i5971.i, %shl.i5968.i
  %19 = load i8, i8* %arrayidx4.i5973.i, align 1, !tbaa !10
  %conv5.i5974.i = zext i8 %19 to i32
  %shl6.i5975.i = shl nuw nsw i32 %conv5.i5974.i, 8
  %or7.i5976.i = or i32 %or.i5972.i, %shl6.i5975.i
  %20 = load i8, i8* %arrayidx8.i5977.i, align 1, !tbaa !10
  %conv9.i5978.i = zext i8 %20 to i32
  %or10.i5979.i = or i32 %or7.i5976.i, %conv9.i5978.i
  %add95.i = add i32 %6, -1245643825
  %add99.i = add i32 %add95.i, %or10.i5979.i
  %add100.i = add i32 %add99.i, %xor98.i
  %add103.i = add i32 %add100.i, %xor94.i
  %or107.i = tail call i32 @llvm.fshl.i32(i32 %add79.i, i32 %add79.i, i32 30) #19
  %or110.i = tail call i32 @llvm.fshl.i32(i32 %add79.i, i32 %add79.i, i32 19) #19
  %xor111.i = xor i32 %or107.i, %or110.i
  %or114.i = tail call i32 @llvm.fshl.i32(i32 %add79.i, i32 %add79.i, i32 10) #19
  %xor115.i = xor i32 %xor111.i, %or114.i
  %and116.i = and i32 %add79.i, %add38.i
  %or117.i = or i32 %add79.i, %add38.i
  %and118.i = and i32 %or117.i, %1
  %or119.i = or i32 %and118.i, %and116.i
  %add120.i = add i32 %xor115.i, %or119.i
  %add121.i = add i32 %add103.i, %2
  %add122.i = add i32 %add120.i, %add103.i
  %or129.i = tail call i32 @llvm.fshl.i32(i32 %add121.i, i32 %add121.i, i32 26) #19
  %or132.i = tail call i32 @llvm.fshl.i32(i32 %add121.i, i32 %add121.i, i32 21) #19
  %xor133.i = xor i32 %or129.i, %or132.i
  %or136.i = tail call i32 @llvm.fshl.i32(i32 %add121.i, i32 %add121.i, i32 7) #19
  %xor137.i = xor i32 %xor133.i, %or136.i
  %xor139.i = xor i32 %add78.i, %add37.i
  %and140.i = and i32 %add121.i, %xor139.i
  %xor141.i = xor i32 %and140.i, %add37.i
  %21 = load i8, i8* %arrayidx144.i, align 1, !tbaa !10
  %conv.i5980.i = zext i8 %21 to i32
  %shl.i5981.i = shl nuw i32 %conv.i5980.i, 24
  %22 = load i8, i8* %arrayidx1.i5982.i, align 1, !tbaa !10
  %conv2.i5983.i = zext i8 %22 to i32
  %shl3.i5984.i = shl nuw nsw i32 %conv2.i5983.i, 16
  %or.i5985.i = or i32 %shl3.i5984.i, %shl.i5981.i
  %23 = load i8, i8* %arrayidx4.i5986.i, align 1, !tbaa !10
  %conv5.i5987.i = zext i8 %23 to i32
  %shl6.i5988.i = shl nuw nsw i32 %conv5.i5987.i, 8
  %or7.i5989.i = or i32 %or.i5985.i, %shl6.i5988.i
  %24 = load i8, i8* %arrayidx8.i5990.i, align 1, !tbaa !10
  %conv9.i5991.i = zext i8 %24 to i32
  %or10.i5992.i = or i32 %or7.i5989.i, %conv9.i5991.i
  %add138.i = add i32 %5, -373957723
  %add142.i = add i32 %add138.i, %or10.i5992.i
  %add143.i = add i32 %add142.i, %xor141.i
  %add146.i = add i32 %add143.i, %xor137.i
  %or150.i = tail call i32 @llvm.fshl.i32(i32 %add122.i, i32 %add122.i, i32 30) #19
  %or153.i = tail call i32 @llvm.fshl.i32(i32 %add122.i, i32 %add122.i, i32 19) #19
  %xor154.i = xor i32 %or150.i, %or153.i
  %or157.i = tail call i32 @llvm.fshl.i32(i32 %add122.i, i32 %add122.i, i32 10) #19
  %xor158.i = xor i32 %xor154.i, %or157.i
  %and159.i = and i32 %add122.i, %add79.i
  %or160.i = or i32 %add122.i, %add79.i
  %and161.i = and i32 %or160.i, %add38.i
  %or162.i = or i32 %and161.i, %and159.i
  %add163.i = add i32 %xor158.i, %or162.i
  %add164.i = add i32 %add146.i, %1
  %add165.i = add i32 %add163.i, %add146.i
  %or172.i = tail call i32 @llvm.fshl.i32(i32 %add164.i, i32 %add164.i, i32 26) #19
  %or175.i = tail call i32 @llvm.fshl.i32(i32 %add164.i, i32 %add164.i, i32 21) #19
  %xor176.i = xor i32 %or172.i, %or175.i
  %or179.i = tail call i32 @llvm.fshl.i32(i32 %add164.i, i32 %add164.i, i32 7) #19
  %xor180.i = xor i32 %xor176.i, %or179.i
  %xor182.i = xor i32 %add121.i, %add78.i
  %and183.i = and i32 %add164.i, %xor182.i
  %xor184.i = xor i32 %and183.i, %add78.i
  %25 = load i8, i8* %arrayidx187.i, align 1, !tbaa !10
  %conv.i5993.i = zext i8 %25 to i32
  %shl.i5994.i = shl nuw i32 %conv.i5993.i, 24
  %26 = load i8, i8* %arrayidx1.i5995.i, align 1, !tbaa !10
  %conv2.i5996.i = zext i8 %26 to i32
  %shl3.i5997.i = shl nuw nsw i32 %conv2.i5996.i, 16
  %or.i5998.i = or i32 %shl3.i5997.i, %shl.i5994.i
  %27 = load i8, i8* %arrayidx4.i5999.i, align 1, !tbaa !10
  %conv5.i6000.i = zext i8 %27 to i32
  %shl6.i6001.i = shl nuw nsw i32 %conv5.i6000.i, 8
  %or7.i6002.i = or i32 %or.i5998.i, %shl6.i6001.i
  %28 = load i8, i8* %arrayidx8.i6003.i, align 1, !tbaa !10
  %conv9.i6004.i = zext i8 %28 to i32
  %or10.i6005.i = or i32 %or7.i6002.i, %conv9.i6004.i
  %add181.i = add i32 %add37.i, 961987163
  %add185.i = add i32 %add181.i, %or10.i6005.i
  %add186.i = add i32 %add185.i, %xor184.i
  %add189.i = add i32 %add186.i, %xor180.i
  %or193.i = tail call i32 @llvm.fshl.i32(i32 %add165.i, i32 %add165.i, i32 30) #19
  %or196.i = tail call i32 @llvm.fshl.i32(i32 %add165.i, i32 %add165.i, i32 19) #19
  %xor197.i = xor i32 %or193.i, %or196.i
  %or200.i = tail call i32 @llvm.fshl.i32(i32 %add165.i, i32 %add165.i, i32 10) #19
  %xor201.i = xor i32 %xor197.i, %or200.i
  %and202.i = and i32 %add165.i, %add122.i
  %or203.i = or i32 %add165.i, %add122.i
  %and204.i = and i32 %or203.i, %add79.i
  %or205.i = or i32 %and204.i, %and202.i
  %add206.i = add i32 %xor201.i, %or205.i
  %add207.i = add i32 %add189.i, %add38.i
  %add208.i = add i32 %add206.i, %add189.i
  %or215.i = tail call i32 @llvm.fshl.i32(i32 %add207.i, i32 %add207.i, i32 26) #19
  %or218.i = tail call i32 @llvm.fshl.i32(i32 %add207.i, i32 %add207.i, i32 21) #19
  %xor219.i = xor i32 %or215.i, %or218.i
  %or222.i = tail call i32 @llvm.fshl.i32(i32 %add207.i, i32 %add207.i, i32 7) #19
  %xor223.i = xor i32 %xor219.i, %or222.i
  %xor225.i = xor i32 %add164.i, %add121.i
  %and226.i = and i32 %add207.i, %xor225.i
  %xor227.i = xor i32 %and226.i, %add121.i
  %29 = load i8, i8* %arrayidx230.i, align 1, !tbaa !10
  %conv.i6006.i = zext i8 %29 to i32
  %shl.i6007.i = shl nuw i32 %conv.i6006.i, 24
  %30 = load i8, i8* %arrayidx1.i6008.i, align 1, !tbaa !10
  %conv2.i6009.i = zext i8 %30 to i32
  %shl3.i6010.i = shl nuw nsw i32 %conv2.i6009.i, 16
  %or.i6011.i = or i32 %shl3.i6010.i, %shl.i6007.i
  %31 = load i8, i8* %arrayidx4.i6012.i, align 1, !tbaa !10
  %conv5.i6013.i = zext i8 %31 to i32
  %shl6.i6014.i = shl nuw nsw i32 %conv5.i6013.i, 8
  %or7.i6015.i = or i32 %or.i6011.i, %shl6.i6014.i
  %32 = load i8, i8* %arrayidx8.i6016.i, align 1, !tbaa !10
  %conv9.i6017.i = zext i8 %32 to i32
  %or10.i6018.i = or i32 %or7.i6015.i, %conv9.i6017.i
  %add224.i = add i32 %add78.i, 1508970993
  %add228.i = add i32 %add224.i, %or10.i6018.i
  %add229.i = add i32 %add228.i, %xor227.i
  %add232.i = add i32 %add229.i, %xor223.i
  %or236.i = tail call i32 @llvm.fshl.i32(i32 %add208.i, i32 %add208.i, i32 30) #19
  %or239.i = tail call i32 @llvm.fshl.i32(i32 %add208.i, i32 %add208.i, i32 19) #19
  %xor240.i = xor i32 %or236.i, %or239.i
  %or243.i = tail call i32 @llvm.fshl.i32(i32 %add208.i, i32 %add208.i, i32 10) #19
  %xor244.i = xor i32 %xor240.i, %or243.i
  %and245.i = and i32 %add208.i, %add165.i
  %or246.i = or i32 %add208.i, %add165.i
  %and247.i = and i32 %or246.i, %add122.i
  %or248.i = or i32 %and247.i, %and245.i
  %add249.i = add i32 %xor244.i, %or248.i
  %add250.i = add i32 %add232.i, %add79.i
  %add251.i = add i32 %add249.i, %add232.i
  %or258.i = tail call i32 @llvm.fshl.i32(i32 %add250.i, i32 %add250.i, i32 26) #19
  %or261.i = tail call i32 @llvm.fshl.i32(i32 %add250.i, i32 %add250.i, i32 21) #19
  %xor262.i = xor i32 %or258.i, %or261.i
  %or265.i = tail call i32 @llvm.fshl.i32(i32 %add250.i, i32 %add250.i, i32 7) #19
  %xor266.i = xor i32 %xor262.i, %or265.i
  %xor268.i = xor i32 %add207.i, %add164.i
  %and269.i = and i32 %add250.i, %xor268.i
  %xor270.i = xor i32 %and269.i, %add164.i
  %33 = load i8, i8* %arrayidx273.i, align 1, !tbaa !10
  %conv.i6019.i = zext i8 %33 to i32
  %shl.i6020.i = shl nuw i32 %conv.i6019.i, 24
  %34 = load i8, i8* %arrayidx1.i6021.i, align 1, !tbaa !10
  %conv2.i6022.i = zext i8 %34 to i32
  %shl3.i6023.i = shl nuw nsw i32 %conv2.i6022.i, 16
  %or.i6024.i = or i32 %shl3.i6023.i, %shl.i6020.i
  %35 = load i8, i8* %arrayidx4.i6025.i, align 1, !tbaa !10
  %conv5.i6026.i = zext i8 %35 to i32
  %shl6.i6027.i = shl nuw nsw i32 %conv5.i6026.i, 8
  %or7.i6028.i = or i32 %or.i6024.i, %shl6.i6027.i
  %36 = load i8, i8* %arrayidx8.i6029.i, align 1, !tbaa !10
  %conv9.i6030.i = zext i8 %36 to i32
  %or10.i6031.i = or i32 %or7.i6028.i, %conv9.i6030.i
  %add267.i = add i32 %add121.i, -1841331548
  %add271.i = add i32 %add267.i, %or10.i6031.i
  %add272.i = add i32 %add271.i, %xor270.i
  %add275.i = add i32 %add272.i, %xor266.i
  %or279.i = tail call i32 @llvm.fshl.i32(i32 %add251.i, i32 %add251.i, i32 30) #19
  %or282.i = tail call i32 @llvm.fshl.i32(i32 %add251.i, i32 %add251.i, i32 19) #19
  %xor283.i = xor i32 %or279.i, %or282.i
  %or286.i = tail call i32 @llvm.fshl.i32(i32 %add251.i, i32 %add251.i, i32 10) #19
  %xor287.i = xor i32 %xor283.i, %or286.i
  %and288.i = and i32 %add251.i, %add208.i
  %or289.i = or i32 %add251.i, %add208.i
  %and290.i = and i32 %or289.i, %add165.i
  %or291.i = or i32 %and290.i, %and288.i
  %add292.i = add i32 %xor287.i, %or291.i
  %add293.i = add i32 %add275.i, %add122.i
  %add294.i = add i32 %add292.i, %add275.i
  %or301.i = tail call i32 @llvm.fshl.i32(i32 %add293.i, i32 %add293.i, i32 26) #19
  %or304.i = tail call i32 @llvm.fshl.i32(i32 %add293.i, i32 %add293.i, i32 21) #19
  %xor305.i = xor i32 %or301.i, %or304.i
  %or308.i = tail call i32 @llvm.fshl.i32(i32 %add293.i, i32 %add293.i, i32 7) #19
  %xor309.i = xor i32 %xor305.i, %or308.i
  %xor311.i = xor i32 %add250.i, %add207.i
  %and312.i = and i32 %add293.i, %xor311.i
  %xor313.i = xor i32 %and312.i, %add207.i
  %37 = load i8, i8* %arrayidx316.i, align 1, !tbaa !10
  %conv.i6032.i = zext i8 %37 to i32
  %shl.i6033.i = shl nuw i32 %conv.i6032.i, 24
  %38 = load i8, i8* %arrayidx1.i6034.i, align 1, !tbaa !10
  %conv2.i6035.i = zext i8 %38 to i32
  %shl3.i6036.i = shl nuw nsw i32 %conv2.i6035.i, 16
  %or.i6037.i = or i32 %shl3.i6036.i, %shl.i6033.i
  %39 = load i8, i8* %arrayidx4.i6038.i, align 1, !tbaa !10
  %conv5.i6039.i = zext i8 %39 to i32
  %shl6.i6040.i = shl nuw nsw i32 %conv5.i6039.i, 8
  %or7.i6041.i = or i32 %or.i6037.i, %shl6.i6040.i
  %40 = load i8, i8* %arrayidx8.i6042.i, align 1, !tbaa !10
  %conv9.i6043.i = zext i8 %40 to i32
  %or10.i6044.i = or i32 %or7.i6041.i, %conv9.i6043.i
  %add310.i = add i32 %add164.i, -1424204075
  %add314.i = add i32 %add310.i, %or10.i6044.i
  %add315.i = add i32 %add314.i, %xor313.i
  %add318.i = add i32 %add315.i, %xor309.i
  %or322.i = tail call i32 @llvm.fshl.i32(i32 %add294.i, i32 %add294.i, i32 30) #19
  %or325.i = tail call i32 @llvm.fshl.i32(i32 %add294.i, i32 %add294.i, i32 19) #19
  %xor326.i = xor i32 %or322.i, %or325.i
  %or329.i = tail call i32 @llvm.fshl.i32(i32 %add294.i, i32 %add294.i, i32 10) #19
  %xor330.i = xor i32 %xor326.i, %or329.i
  %and331.i = and i32 %add294.i, %add251.i
  %or332.i = or i32 %add294.i, %add251.i
  %and333.i = and i32 %or332.i, %add208.i
  %or334.i = or i32 %and333.i, %and331.i
  %add335.i = add i32 %xor330.i, %or334.i
  %add336.i = add i32 %add318.i, %add165.i
  %add337.i = add i32 %add335.i, %add318.i
  %or344.i = tail call i32 @llvm.fshl.i32(i32 %add336.i, i32 %add336.i, i32 26) #19
  %or347.i = tail call i32 @llvm.fshl.i32(i32 %add336.i, i32 %add336.i, i32 21) #19
  %xor348.i = xor i32 %or344.i, %or347.i
  %or351.i = tail call i32 @llvm.fshl.i32(i32 %add336.i, i32 %add336.i, i32 7) #19
  %xor352.i = xor i32 %xor348.i, %or351.i
  %xor354.i = xor i32 %add293.i, %add250.i
  %and355.i = and i32 %add336.i, %xor354.i
  %xor356.i = xor i32 %and355.i, %add250.i
  %41 = load i8, i8* %arrayidx359.i, align 1, !tbaa !10
  %conv.i6045.i = zext i8 %41 to i32
  %shl.i6046.i = shl nuw i32 %conv.i6045.i, 24
  %42 = load i8, i8* %arrayidx1.i6047.i, align 1, !tbaa !10
  %conv2.i6048.i = zext i8 %42 to i32
  %shl3.i6049.i = shl nuw nsw i32 %conv2.i6048.i, 16
  %or.i6050.i = or i32 %shl3.i6049.i, %shl.i6046.i
  %43 = load i8, i8* %arrayidx4.i6051.i, align 1, !tbaa !10
  %conv5.i6052.i = zext i8 %43 to i32
  %shl6.i6053.i = shl nuw nsw i32 %conv5.i6052.i, 8
  %or7.i6054.i = or i32 %or.i6050.i, %shl6.i6053.i
  %44 = load i8, i8* %arrayidx8.i6055.i, align 1, !tbaa !10
  %conv9.i6056.i = zext i8 %44 to i32
  %or10.i6057.i = or i32 %or7.i6054.i, %conv9.i6056.i
  %add353.i = add i32 %add207.i, -670586216
  %add357.i = add i32 %add353.i, %or10.i6057.i
  %add358.i = add i32 %add357.i, %xor356.i
  %add361.i = add i32 %add358.i, %xor352.i
  %or365.i = tail call i32 @llvm.fshl.i32(i32 %add337.i, i32 %add337.i, i32 30) #19
  %or368.i = tail call i32 @llvm.fshl.i32(i32 %add337.i, i32 %add337.i, i32 19) #19
  %xor369.i = xor i32 %or365.i, %or368.i
  %or372.i = tail call i32 @llvm.fshl.i32(i32 %add337.i, i32 %add337.i, i32 10) #19
  %xor373.i = xor i32 %xor369.i, %or372.i
  %and374.i = and i32 %add337.i, %add294.i
  %or375.i = or i32 %add337.i, %add294.i
  %and376.i = and i32 %or375.i, %add251.i
  %or377.i = or i32 %and376.i, %and374.i
  %add378.i = add i32 %xor373.i, %or377.i
  %add379.i = add i32 %add361.i, %add208.i
  %add380.i = add i32 %add378.i, %add361.i
  %or387.i = tail call i32 @llvm.fshl.i32(i32 %add379.i, i32 %add379.i, i32 26) #19
  %or390.i = tail call i32 @llvm.fshl.i32(i32 %add379.i, i32 %add379.i, i32 21) #19
  %xor391.i = xor i32 %or387.i, %or390.i
  %or394.i = tail call i32 @llvm.fshl.i32(i32 %add379.i, i32 %add379.i, i32 7) #19
  %xor395.i = xor i32 %xor391.i, %or394.i
  %xor397.i = xor i32 %add336.i, %add293.i
  %and398.i = and i32 %add379.i, %xor397.i
  %xor399.i = xor i32 %and398.i, %add293.i
  %45 = load i8, i8* %arrayidx402.i, align 1, !tbaa !10
  %conv.i6058.i = zext i8 %45 to i32
  %shl.i6059.i = shl nuw i32 %conv.i6058.i, 24
  %46 = load i8, i8* %arrayidx1.i6060.i, align 1, !tbaa !10
  %conv2.i6061.i = zext i8 %46 to i32
  %shl3.i6062.i = shl nuw nsw i32 %conv2.i6061.i, 16
  %or.i6063.i = or i32 %shl3.i6062.i, %shl.i6059.i
  %47 = load i8, i8* %arrayidx4.i6064.i, align 1, !tbaa !10
  %conv5.i6065.i = zext i8 %47 to i32
  %shl6.i6066.i = shl nuw nsw i32 %conv5.i6065.i, 8
  %or7.i6067.i = or i32 %or.i6063.i, %shl6.i6066.i
  %48 = load i8, i8* %arrayidx8.i6068.i, align 1, !tbaa !10
  %conv9.i6069.i = zext i8 %48 to i32
  %or10.i6070.i = or i32 %or7.i6067.i, %conv9.i6069.i
  %add396.i = add i32 %add250.i, 310598401
  %add400.i = add i32 %add396.i, %or10.i6070.i
  %add401.i = add i32 %add400.i, %xor399.i
  %add404.i = add i32 %add401.i, %xor395.i
  %or408.i = tail call i32 @llvm.fshl.i32(i32 %add380.i, i32 %add380.i, i32 30) #19
  %or411.i = tail call i32 @llvm.fshl.i32(i32 %add380.i, i32 %add380.i, i32 19) #19
  %xor412.i = xor i32 %or408.i, %or411.i
  %or415.i = tail call i32 @llvm.fshl.i32(i32 %add380.i, i32 %add380.i, i32 10) #19
  %xor416.i = xor i32 %xor412.i, %or415.i
  %and417.i = and i32 %add380.i, %add337.i
  %or418.i = or i32 %add380.i, %add337.i
  %and419.i = and i32 %or418.i, %add294.i
  %or420.i = or i32 %and419.i, %and417.i
  %add421.i = add i32 %xor416.i, %or420.i
  %add422.i = add i32 %add404.i, %add251.i
  %add423.i = add i32 %add421.i, %add404.i
  %or430.i = tail call i32 @llvm.fshl.i32(i32 %add422.i, i32 %add422.i, i32 26) #19
  %or433.i = tail call i32 @llvm.fshl.i32(i32 %add422.i, i32 %add422.i, i32 21) #19
  %xor434.i = xor i32 %or430.i, %or433.i
  %or437.i = tail call i32 @llvm.fshl.i32(i32 %add422.i, i32 %add422.i, i32 7) #19
  %xor438.i = xor i32 %xor434.i, %or437.i
  %xor440.i = xor i32 %add379.i, %add336.i
  %and441.i = and i32 %add422.i, %xor440.i
  %xor442.i = xor i32 %and441.i, %add336.i
  %49 = load i8, i8* %arrayidx445.i, align 1, !tbaa !10
  %conv.i6071.i = zext i8 %49 to i32
  %shl.i6072.i = shl nuw i32 %conv.i6071.i, 24
  %50 = load i8, i8* %arrayidx1.i6073.i, align 1, !tbaa !10
  %conv2.i6074.i = zext i8 %50 to i32
  %shl3.i6075.i = shl nuw nsw i32 %conv2.i6074.i, 16
  %or.i6076.i = or i32 %shl3.i6075.i, %shl.i6072.i
  %51 = load i8, i8* %arrayidx4.i6077.i, align 1, !tbaa !10
  %conv5.i6078.i = zext i8 %51 to i32
  %shl6.i6079.i = shl nuw nsw i32 %conv5.i6078.i, 8
  %or7.i6080.i = or i32 %or.i6076.i, %shl6.i6079.i
  %52 = load i8, i8* %arrayidx8.i6081.i, align 1, !tbaa !10
  %conv9.i6082.i = zext i8 %52 to i32
  %or10.i6083.i = or i32 %or7.i6080.i, %conv9.i6082.i
  %add439.i = add i32 %add293.i, 607225278
  %add443.i = add i32 %add439.i, %or10.i6083.i
  %add444.i = add i32 %add443.i, %xor442.i
  %add447.i = add i32 %add444.i, %xor438.i
  %or451.i = tail call i32 @llvm.fshl.i32(i32 %add423.i, i32 %add423.i, i32 30) #19
  %or454.i = tail call i32 @llvm.fshl.i32(i32 %add423.i, i32 %add423.i, i32 19) #19
  %xor455.i = xor i32 %or451.i, %or454.i
  %or458.i = tail call i32 @llvm.fshl.i32(i32 %add423.i, i32 %add423.i, i32 10) #19
  %xor459.i = xor i32 %xor455.i, %or458.i
  %and460.i = and i32 %add423.i, %add380.i
  %or461.i = or i32 %add423.i, %add380.i
  %and462.i = and i32 %or461.i, %add337.i
  %or463.i = or i32 %and462.i, %and460.i
  %add464.i = add i32 %xor459.i, %or463.i
  %add465.i = add i32 %add447.i, %add294.i
  %add466.i = add i32 %add464.i, %add447.i
  %or473.i = tail call i32 @llvm.fshl.i32(i32 %add465.i, i32 %add465.i, i32 26) #19
  %or476.i = tail call i32 @llvm.fshl.i32(i32 %add465.i, i32 %add465.i, i32 21) #19
  %xor477.i = xor i32 %or473.i, %or476.i
  %or480.i = tail call i32 @llvm.fshl.i32(i32 %add465.i, i32 %add465.i, i32 7) #19
  %xor481.i = xor i32 %xor477.i, %or480.i
  %xor483.i = xor i32 %add422.i, %add379.i
  %and484.i = and i32 %add465.i, %xor483.i
  %xor485.i = xor i32 %and484.i, %add379.i
  %53 = load i8, i8* %arrayidx488.i, align 1, !tbaa !10
  %conv.i6084.i = zext i8 %53 to i32
  %shl.i6085.i = shl nuw i32 %conv.i6084.i, 24
  %54 = load i8, i8* %arrayidx1.i6086.i, align 1, !tbaa !10
  %conv2.i6087.i = zext i8 %54 to i32
  %shl3.i6088.i = shl nuw nsw i32 %conv2.i6087.i, 16
  %or.i6089.i = or i32 %shl3.i6088.i, %shl.i6085.i
  %55 = load i8, i8* %arrayidx4.i6090.i, align 1, !tbaa !10
  %conv5.i6091.i = zext i8 %55 to i32
  %shl6.i6092.i = shl nuw nsw i32 %conv5.i6091.i, 8
  %or7.i6093.i = or i32 %or.i6089.i, %shl6.i6092.i
  %56 = load i8, i8* %arrayidx8.i6094.i, align 1, !tbaa !10
  %conv9.i6095.i = zext i8 %56 to i32
  %or10.i6096.i = or i32 %or7.i6093.i, %conv9.i6095.i
  %add482.i = add i32 %add336.i, 1426881987
  %add486.i = add i32 %add482.i, %or10.i6096.i
  %add487.i = add i32 %add486.i, %xor485.i
  %add490.i = add i32 %add487.i, %xor481.i
  %or494.i = tail call i32 @llvm.fshl.i32(i32 %add466.i, i32 %add466.i, i32 30) #19
  %or497.i = tail call i32 @llvm.fshl.i32(i32 %add466.i, i32 %add466.i, i32 19) #19
  %xor498.i = xor i32 %or494.i, %or497.i
  %or501.i = tail call i32 @llvm.fshl.i32(i32 %add466.i, i32 %add466.i, i32 10) #19
  %xor502.i = xor i32 %xor498.i, %or501.i
  %and503.i = and i32 %add466.i, %add423.i
  %or504.i = or i32 %add466.i, %add423.i
  %and505.i = and i32 %or504.i, %add380.i
  %or506.i = or i32 %and505.i, %and503.i
  %add507.i = add i32 %xor502.i, %or506.i
  %add508.i = add i32 %add490.i, %add337.i
  %add509.i = add i32 %add507.i, %add490.i
  %or516.i = tail call i32 @llvm.fshl.i32(i32 %add508.i, i32 %add508.i, i32 26) #19
  %or519.i = tail call i32 @llvm.fshl.i32(i32 %add508.i, i32 %add508.i, i32 21) #19
  %xor520.i = xor i32 %or516.i, %or519.i
  %or523.i = tail call i32 @llvm.fshl.i32(i32 %add508.i, i32 %add508.i, i32 7) #19
  %xor524.i = xor i32 %xor520.i, %or523.i
  %xor526.i = xor i32 %add465.i, %add422.i
  %and527.i = and i32 %add508.i, %xor526.i
  %xor528.i = xor i32 %and527.i, %add422.i
  %57 = load i8, i8* %arrayidx531.i, align 1, !tbaa !10
  %conv.i6097.i = zext i8 %57 to i32
  %shl.i6098.i = shl nuw i32 %conv.i6097.i, 24
  %58 = load i8, i8* %arrayidx1.i6099.i, align 1, !tbaa !10
  %conv2.i6100.i = zext i8 %58 to i32
  %shl3.i6101.i = shl nuw nsw i32 %conv2.i6100.i, 16
  %or.i6102.i = or i32 %shl3.i6101.i, %shl.i6098.i
  %59 = load i8, i8* %arrayidx4.i6103.i, align 1, !tbaa !10
  %conv5.i6104.i = zext i8 %59 to i32
  %shl6.i6105.i = shl nuw nsw i32 %conv5.i6104.i, 8
  %or7.i6106.i = or i32 %or.i6102.i, %shl6.i6105.i
  %60 = load i8, i8* %arrayidx8.i6107.i, align 1, !tbaa !10
  %conv9.i6108.i = zext i8 %60 to i32
  %or10.i6109.i = or i32 %or7.i6106.i, %conv9.i6108.i
  %add525.i = add i32 %add379.i, 1925078388
  %add529.i = add i32 %add525.i, %or10.i6109.i
  %add530.i = add i32 %add529.i, %xor528.i
  %add533.i = add i32 %add530.i, %xor524.i
  %or537.i = tail call i32 @llvm.fshl.i32(i32 %add509.i, i32 %add509.i, i32 30) #19
  %or540.i = tail call i32 @llvm.fshl.i32(i32 %add509.i, i32 %add509.i, i32 19) #19
  %xor541.i = xor i32 %or537.i, %or540.i
  %or544.i = tail call i32 @llvm.fshl.i32(i32 %add509.i, i32 %add509.i, i32 10) #19
  %xor545.i = xor i32 %xor541.i, %or544.i
  %and546.i = and i32 %add509.i, %add466.i
  %or547.i = or i32 %add509.i, %add466.i
  %and548.i = and i32 %or547.i, %add423.i
  %or549.i = or i32 %and548.i, %and546.i
  %add550.i = add i32 %xor545.i, %or549.i
  %add551.i = add i32 %add533.i, %add380.i
  %add552.i = add i32 %add550.i, %add533.i
  %or559.i = tail call i32 @llvm.fshl.i32(i32 %add551.i, i32 %add551.i, i32 26) #19
  %or562.i = tail call i32 @llvm.fshl.i32(i32 %add551.i, i32 %add551.i, i32 21) #19
  %xor563.i = xor i32 %or559.i, %or562.i
  %or566.i = tail call i32 @llvm.fshl.i32(i32 %add551.i, i32 %add551.i, i32 7) #19
  %xor567.i = xor i32 %xor563.i, %or566.i
  %xor569.i = xor i32 %add508.i, %add465.i
  %and570.i = and i32 %add551.i, %xor569.i
  %xor571.i = xor i32 %and570.i, %add465.i
  %61 = load i8, i8* %arrayidx574.i, align 1, !tbaa !10
  %conv.i6110.i = zext i8 %61 to i32
  %shl.i6111.i = shl nuw i32 %conv.i6110.i, 24
  %62 = load i8, i8* %arrayidx1.i6112.i, align 1, !tbaa !10
  %conv2.i6113.i = zext i8 %62 to i32
  %shl3.i6114.i = shl nuw nsw i32 %conv2.i6113.i, 16
  %or.i6115.i = or i32 %shl3.i6114.i, %shl.i6111.i
  %63 = load i8, i8* %arrayidx4.i6116.i, align 1, !tbaa !10
  %conv5.i6117.i = zext i8 %63 to i32
  %shl6.i6118.i = shl nuw nsw i32 %conv5.i6117.i, 8
  %or7.i6119.i = or i32 %or.i6115.i, %shl6.i6118.i
  %64 = load i8, i8* %arrayidx8.i6120.i, align 1, !tbaa !10
  %conv9.i6121.i = zext i8 %64 to i32
  %or10.i6122.i = or i32 %or7.i6119.i, %conv9.i6121.i
  %add568.i = add i32 %add422.i, -2132889090
  %add572.i = add i32 %add568.i, %or10.i6122.i
  %add573.i = add i32 %add572.i, %xor571.i
  %add576.i = add i32 %add573.i, %xor567.i
  %or580.i = tail call i32 @llvm.fshl.i32(i32 %add552.i, i32 %add552.i, i32 30) #19
  %or583.i = tail call i32 @llvm.fshl.i32(i32 %add552.i, i32 %add552.i, i32 19) #19
  %xor584.i = xor i32 %or580.i, %or583.i
  %or587.i = tail call i32 @llvm.fshl.i32(i32 %add552.i, i32 %add552.i, i32 10) #19
  %xor588.i = xor i32 %xor584.i, %or587.i
  %and589.i = and i32 %add552.i, %add509.i
  %or590.i = or i32 %add552.i, %add509.i
  %and591.i = and i32 %or590.i, %add466.i
  %or592.i = or i32 %and591.i, %and589.i
  %add593.i = add i32 %xor588.i, %or592.i
  %add594.i = add i32 %add576.i, %add423.i
  %add595.i = add i32 %add593.i, %add576.i
  %or602.i = tail call i32 @llvm.fshl.i32(i32 %add594.i, i32 %add594.i, i32 26) #19
  %or605.i = tail call i32 @llvm.fshl.i32(i32 %add594.i, i32 %add594.i, i32 21) #19
  %xor606.i = xor i32 %or602.i, %or605.i
  %or609.i = tail call i32 @llvm.fshl.i32(i32 %add594.i, i32 %add594.i, i32 7) #19
  %xor610.i = xor i32 %xor606.i, %or609.i
  %xor612.i = xor i32 %add551.i, %add508.i
  %and613.i = and i32 %add594.i, %xor612.i
  %xor614.i = xor i32 %and613.i, %add508.i
  %65 = load i8, i8* %arrayidx617.i, align 1, !tbaa !10
  %conv.i6123.i = zext i8 %65 to i32
  %shl.i6124.i = shl nuw i32 %conv.i6123.i, 24
  %66 = load i8, i8* %arrayidx1.i6125.i, align 1, !tbaa !10
  %conv2.i6126.i = zext i8 %66 to i32
  %shl3.i6127.i = shl nuw nsw i32 %conv2.i6126.i, 16
  %or.i6128.i = or i32 %shl3.i6127.i, %shl.i6124.i
  %67 = load i8, i8* %arrayidx4.i6129.i, align 1, !tbaa !10
  %conv5.i6130.i = zext i8 %67 to i32
  %shl6.i6131.i = shl nuw nsw i32 %conv5.i6130.i, 8
  %or7.i6132.i = or i32 %or.i6128.i, %shl6.i6131.i
  %68 = load i8, i8* %arrayidx8.i6133.i, align 1, !tbaa !10
  %conv9.i6134.i = zext i8 %68 to i32
  %or10.i6135.i = or i32 %or7.i6132.i, %conv9.i6134.i
  %add611.i = add i32 %add465.i, -1680079193
  %add615.i = add i32 %add611.i, %or10.i6135.i
  %add616.i = add i32 %add615.i, %xor614.i
  %add619.i = add i32 %add616.i, %xor610.i
  %or623.i = tail call i32 @llvm.fshl.i32(i32 %add595.i, i32 %add595.i, i32 30) #19
  %or626.i = tail call i32 @llvm.fshl.i32(i32 %add595.i, i32 %add595.i, i32 19) #19
  %xor627.i = xor i32 %or623.i, %or626.i
  %or630.i = tail call i32 @llvm.fshl.i32(i32 %add595.i, i32 %add595.i, i32 10) #19
  %xor631.i = xor i32 %xor627.i, %or630.i
  %and632.i = and i32 %add595.i, %add552.i
  %or633.i = or i32 %add595.i, %add552.i
  %and634.i = and i32 %or633.i, %add509.i
  %or635.i = or i32 %and634.i, %and632.i
  %add636.i = add i32 %xor631.i, %or635.i
  %add637.i = add i32 %add619.i, %add466.i
  %add638.i = add i32 %add636.i, %add619.i
  %or645.i = tail call i32 @llvm.fshl.i32(i32 %add637.i, i32 %add637.i, i32 26) #19
  %or648.i = tail call i32 @llvm.fshl.i32(i32 %add637.i, i32 %add637.i, i32 21) #19
  %xor649.i = xor i32 %or645.i, %or648.i
  %or652.i = tail call i32 @llvm.fshl.i32(i32 %add637.i, i32 %add637.i, i32 7) #19
  %xor653.i = xor i32 %xor649.i, %or652.i
  %xor655.i = xor i32 %add594.i, %add551.i
  %and656.i = and i32 %add637.i, %xor655.i
  %xor657.i = xor i32 %and656.i, %add551.i
  %69 = load i8, i8* %arrayidx660.i, align 1, !tbaa !10
  %conv.i6136.i = zext i8 %69 to i32
  %shl.i6137.i = shl nuw i32 %conv.i6136.i, 24
  %70 = load i8, i8* %arrayidx1.i6138.i, align 1, !tbaa !10
  %conv2.i6139.i = zext i8 %70 to i32
  %shl3.i6140.i = shl nuw nsw i32 %conv2.i6139.i, 16
  %or.i6141.i = or i32 %shl3.i6140.i, %shl.i6137.i
  %71 = load i8, i8* %arrayidx4.i6142.i, align 1, !tbaa !10
  %conv5.i6143.i = zext i8 %71 to i32
  %shl6.i6144.i = shl nuw nsw i32 %conv5.i6143.i, 8
  %or7.i6145.i = or i32 %or.i6141.i, %shl6.i6144.i
  %72 = load i8, i8* %arrayidx8.i6146.i, align 1, !tbaa !10
  %conv9.i6147.i = zext i8 %72 to i32
  %or10.i6148.i = or i32 %or7.i6145.i, %conv9.i6147.i
  %add654.i = add i32 %add508.i, -1046744716
  %add658.i = add i32 %add654.i, %or10.i6148.i
  %add659.i = add i32 %add658.i, %xor657.i
  %add662.i = add i32 %add659.i, %xor653.i
  %or666.i = tail call i32 @llvm.fshl.i32(i32 %add638.i, i32 %add638.i, i32 30) #19
  %or669.i = tail call i32 @llvm.fshl.i32(i32 %add638.i, i32 %add638.i, i32 19) #19
  %xor670.i = xor i32 %or666.i, %or669.i
  %or673.i = tail call i32 @llvm.fshl.i32(i32 %add638.i, i32 %add638.i, i32 10) #19
  %xor674.i = xor i32 %xor670.i, %or673.i
  %and675.i = and i32 %add638.i, %add595.i
  %or676.i = or i32 %add638.i, %add595.i
  %and677.i = and i32 %or676.i, %add552.i
  %or678.i = or i32 %and677.i, %and675.i
  %add679.i = add i32 %xor674.i, %or678.i
  %add680.i = add i32 %add662.i, %add509.i
  %add681.i = add i32 %add679.i, %add662.i
  %or688.i = tail call i32 @llvm.fshl.i32(i32 %add680.i, i32 %add680.i, i32 26) #19
  %or691.i = tail call i32 @llvm.fshl.i32(i32 %add680.i, i32 %add680.i, i32 21) #19
  %xor692.i = xor i32 %or688.i, %or691.i
  %or695.i = tail call i32 @llvm.fshl.i32(i32 %add680.i, i32 %add680.i, i32 7) #19
  %xor696.i = xor i32 %xor692.i, %or695.i
  %xor698.i = xor i32 %add637.i, %add594.i
  %and699.i = and i32 %add680.i, %xor698.i
  %xor700.i = xor i32 %and699.i, %add594.i
  %or705.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6135.i, i32 %or.i6128.i, i32 15) #19
  %or708.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6135.i, i32 %or.i6128.i, i32 13) #19
  %shr710.i = lshr i32 %or7.i6132.i, 10
  %xor709.i = xor i32 %or708.i, %shr710.i
  %xor711.i = xor i32 %xor709.i, %or705.i
  %or715.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i5965.i, i32 %or10.i5966.i, i32 25) #19
  %or718.i = tail call i32 @llvm.fshl.i32(i32 %or10.i5966.i, i32 %or.i5959.i, i32 14) #19
  %xor719.i = xor i32 %or715.i, %or718.i
  %shr720.i = lshr i32 %or10.i5966.i, 3
  %xor721.i = xor i32 %xor719.i, %shr720.i
  %add712.i = add i32 %xor721.i, %or10.i.i
  %add722.i = add i32 %add712.i, %or10.i6070.i
  %add723.i = add i32 %add722.i, %xor711.i
  %add697.i = add i32 %add723.i, -459576895
  %add701.i = add i32 %add697.i, %add551.i
  %add702.i = add i32 %add701.i, %xor700.i
  %add724.i = add i32 %add702.i, %xor696.i
  %or728.i = tail call i32 @llvm.fshl.i32(i32 %add681.i, i32 %add681.i, i32 30) #19
  %or731.i = tail call i32 @llvm.fshl.i32(i32 %add681.i, i32 %add681.i, i32 19) #19
  %xor732.i = xor i32 %or728.i, %or731.i
  %or735.i = tail call i32 @llvm.fshl.i32(i32 %add681.i, i32 %add681.i, i32 10) #19
  %xor736.i = xor i32 %xor732.i, %or735.i
  %and737.i = and i32 %add681.i, %add638.i
  %or738.i = or i32 %add681.i, %add638.i
  %and739.i = and i32 %or738.i, %add595.i
  %or740.i = or i32 %and739.i, %and737.i
  %add741.i = add i32 %xor736.i, %or740.i
  %add742.i = add i32 %add724.i, %add552.i
  %add743.i = add i32 %add741.i, %add724.i
  %or750.i = tail call i32 @llvm.fshl.i32(i32 %add742.i, i32 %add742.i, i32 26) #19
  %or753.i = tail call i32 @llvm.fshl.i32(i32 %add742.i, i32 %add742.i, i32 21) #19
  %xor754.i = xor i32 %or750.i, %or753.i
  %or757.i = tail call i32 @llvm.fshl.i32(i32 %add742.i, i32 %add742.i, i32 7) #19
  %xor758.i = xor i32 %xor754.i, %or757.i
  %xor760.i = xor i32 %add680.i, %add637.i
  %and761.i = and i32 %add742.i, %xor760.i
  %xor762.i = xor i32 %and761.i, %add637.i
  %or767.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6148.i, i32 %or.i6141.i, i32 15) #19
  %or770.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6148.i, i32 %or.i6141.i, i32 13) #19
  %shr772.i = lshr i32 %or7.i6145.i, 10
  %xor771.i = xor i32 %or770.i, %shr772.i
  %xor773.i = xor i32 %xor771.i, %or767.i
  %or777.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i5978.i, i32 %or10.i5979.i, i32 25) #19
  %or780.i = tail call i32 @llvm.fshl.i32(i32 %or10.i5979.i, i32 %or.i5972.i, i32 14) #19
  %xor781.i = xor i32 %or777.i, %or780.i
  %shr782.i = lshr i32 %or10.i5979.i, 3
  %xor783.i = xor i32 %xor781.i, %shr782.i
  %add774.i = add i32 %xor783.i, %or10.i5966.i
  %add784.i = add i32 %add774.i, %or10.i6083.i
  %add785.i = add i32 %add784.i, %xor773.i
  %add759.i = add i32 %add785.i, -272742522
  %add763.i = add i32 %add759.i, %add594.i
  %add764.i = add i32 %add763.i, %xor762.i
  %add786.i = add i32 %add764.i, %xor758.i
  %or790.i = tail call i32 @llvm.fshl.i32(i32 %add743.i, i32 %add743.i, i32 30) #19
  %or793.i = tail call i32 @llvm.fshl.i32(i32 %add743.i, i32 %add743.i, i32 19) #19
  %xor794.i = xor i32 %or790.i, %or793.i
  %or797.i = tail call i32 @llvm.fshl.i32(i32 %add743.i, i32 %add743.i, i32 10) #19
  %xor798.i = xor i32 %xor794.i, %or797.i
  %and799.i = and i32 %add743.i, %add681.i
  %or800.i = or i32 %add743.i, %add681.i
  %and801.i = and i32 %or800.i, %add638.i
  %or802.i = or i32 %and801.i, %and799.i
  %add803.i = add i32 %xor798.i, %or802.i
  %add804.i = add i32 %add786.i, %add595.i
  %add805.i = add i32 %add803.i, %add786.i
  %or812.i = tail call i32 @llvm.fshl.i32(i32 %add804.i, i32 %add804.i, i32 26) #19
  %or815.i = tail call i32 @llvm.fshl.i32(i32 %add804.i, i32 %add804.i, i32 21) #19
  %xor816.i = xor i32 %or812.i, %or815.i
  %or819.i = tail call i32 @llvm.fshl.i32(i32 %add804.i, i32 %add804.i, i32 7) #19
  %xor820.i = xor i32 %xor816.i, %or819.i
  %xor822.i = xor i32 %add742.i, %add680.i
  %and823.i = and i32 %add804.i, %xor822.i
  %xor824.i = xor i32 %and823.i, %add680.i
  %or829.i = tail call i32 @llvm.fshl.i32(i32 %add723.i, i32 %add723.i, i32 15) #19
  %or832.i = tail call i32 @llvm.fshl.i32(i32 %add723.i, i32 %add723.i, i32 13) #19
  %xor833.i = xor i32 %or829.i, %or832.i
  %shr834.i = lshr i32 %add723.i, 10
  %xor835.i = xor i32 %xor833.i, %shr834.i
  %or839.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i5991.i, i32 %or10.i5992.i, i32 25) #19
  %or842.i = tail call i32 @llvm.fshl.i32(i32 %or10.i5992.i, i32 %or.i5985.i, i32 14) #19
  %xor843.i = xor i32 %or839.i, %or842.i
  %shr844.i = lshr i32 %or10.i5992.i, 3
  %xor845.i = xor i32 %xor843.i, %shr844.i
  %add836.i = add i32 %xor845.i, %or10.i5979.i
  %add846.i = add i32 %add836.i, %or10.i6096.i
  %add847.i = add i32 %add846.i, %xor835.i
  %add821.i = add i32 %add847.i, 264347078
  %add825.i = add i32 %add821.i, %add637.i
  %add826.i = add i32 %add825.i, %xor824.i
  %add848.i = add i32 %add826.i, %xor820.i
  %or852.i = tail call i32 @llvm.fshl.i32(i32 %add805.i, i32 %add805.i, i32 30) #19
  %or855.i = tail call i32 @llvm.fshl.i32(i32 %add805.i, i32 %add805.i, i32 19) #19
  %xor856.i = xor i32 %or852.i, %or855.i
  %or859.i = tail call i32 @llvm.fshl.i32(i32 %add805.i, i32 %add805.i, i32 10) #19
  %xor860.i = xor i32 %xor856.i, %or859.i
  %and861.i = and i32 %add805.i, %add743.i
  %or862.i = or i32 %add805.i, %add743.i
  %and863.i = and i32 %or862.i, %add681.i
  %or864.i = or i32 %and863.i, %and861.i
  %add865.i = add i32 %xor860.i, %or864.i
  %add866.i = add i32 %add848.i, %add638.i
  %add867.i = add i32 %add865.i, %add848.i
  %or874.i = tail call i32 @llvm.fshl.i32(i32 %add866.i, i32 %add866.i, i32 26) #19
  %or877.i = tail call i32 @llvm.fshl.i32(i32 %add866.i, i32 %add866.i, i32 21) #19
  %xor878.i = xor i32 %or874.i, %or877.i
  %or881.i = tail call i32 @llvm.fshl.i32(i32 %add866.i, i32 %add866.i, i32 7) #19
  %xor882.i = xor i32 %xor878.i, %or881.i
  %xor884.i = xor i32 %add804.i, %add742.i
  %and885.i = and i32 %add866.i, %xor884.i
  %xor886.i = xor i32 %and885.i, %add742.i
  %or891.i = tail call i32 @llvm.fshl.i32(i32 %add785.i, i32 %add785.i, i32 15) #19
  %or894.i = tail call i32 @llvm.fshl.i32(i32 %add785.i, i32 %add785.i, i32 13) #19
  %xor895.i = xor i32 %or891.i, %or894.i
  %shr896.i = lshr i32 %add785.i, 10
  %xor897.i = xor i32 %xor895.i, %shr896.i
  %or901.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6004.i, i32 %or10.i6005.i, i32 25) #19
  %or904.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6005.i, i32 %or.i5998.i, i32 14) #19
  %xor905.i = xor i32 %or901.i, %or904.i
  %shr906.i = lshr i32 %or10.i6005.i, 3
  %xor907.i = xor i32 %xor905.i, %shr906.i
  %add898.i = add i32 %xor907.i, %or10.i5992.i
  %add908.i = add i32 %add898.i, %or10.i6109.i
  %add909.i = add i32 %add908.i, %xor897.i
  %add883.i = add i32 %add909.i, 604807628
  %add887.i = add i32 %add883.i, %add680.i
  %add888.i = add i32 %add887.i, %xor886.i
  %add910.i = add i32 %add888.i, %xor882.i
  %or914.i = tail call i32 @llvm.fshl.i32(i32 %add867.i, i32 %add867.i, i32 30) #19
  %or917.i = tail call i32 @llvm.fshl.i32(i32 %add867.i, i32 %add867.i, i32 19) #19
  %xor918.i = xor i32 %or914.i, %or917.i
  %or921.i = tail call i32 @llvm.fshl.i32(i32 %add867.i, i32 %add867.i, i32 10) #19
  %xor922.i = xor i32 %xor918.i, %or921.i
  %and923.i = and i32 %add867.i, %add805.i
  %or924.i = or i32 %add867.i, %add805.i
  %and925.i = and i32 %or924.i, %add743.i
  %or926.i = or i32 %and925.i, %and923.i
  %add927.i = add i32 %xor922.i, %or926.i
  %add928.i = add i32 %add910.i, %add681.i
  %add929.i = add i32 %add927.i, %add910.i
  %or936.i = tail call i32 @llvm.fshl.i32(i32 %add928.i, i32 %add928.i, i32 26) #19
  %or939.i = tail call i32 @llvm.fshl.i32(i32 %add928.i, i32 %add928.i, i32 21) #19
  %xor940.i = xor i32 %or936.i, %or939.i
  %or943.i = tail call i32 @llvm.fshl.i32(i32 %add928.i, i32 %add928.i, i32 7) #19
  %xor944.i = xor i32 %xor940.i, %or943.i
  %xor946.i = xor i32 %add866.i, %add804.i
  %and947.i = and i32 %add928.i, %xor946.i
  %xor948.i = xor i32 %and947.i, %add804.i
  %or953.i = tail call i32 @llvm.fshl.i32(i32 %add847.i, i32 %add847.i, i32 15) #19
  %or956.i = tail call i32 @llvm.fshl.i32(i32 %add847.i, i32 %add847.i, i32 13) #19
  %xor957.i = xor i32 %or953.i, %or956.i
  %shr958.i = lshr i32 %add847.i, 10
  %xor959.i = xor i32 %xor957.i, %shr958.i
  %or963.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6017.i, i32 %or10.i6018.i, i32 25) #19
  %or966.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6018.i, i32 %or.i6011.i, i32 14) #19
  %xor967.i = xor i32 %or963.i, %or966.i
  %shr968.i = lshr i32 %or10.i6018.i, 3
  %xor969.i = xor i32 %xor967.i, %shr968.i
  %add960.i = add i32 %xor969.i, %or10.i6005.i
  %add970.i = add i32 %add960.i, %or10.i6122.i
  %add971.i = add i32 %add970.i, %xor959.i
  %add945.i = add i32 %add971.i, 770255983
  %add949.i = add i32 %add945.i, %add742.i
  %add950.i = add i32 %add949.i, %xor948.i
  %add972.i = add i32 %add950.i, %xor944.i
  %or976.i = tail call i32 @llvm.fshl.i32(i32 %add929.i, i32 %add929.i, i32 30) #19
  %or979.i = tail call i32 @llvm.fshl.i32(i32 %add929.i, i32 %add929.i, i32 19) #19
  %xor980.i = xor i32 %or976.i, %or979.i
  %or983.i = tail call i32 @llvm.fshl.i32(i32 %add929.i, i32 %add929.i, i32 10) #19
  %xor984.i = xor i32 %xor980.i, %or983.i
  %and985.i = and i32 %add929.i, %add867.i
  %or986.i = or i32 %add929.i, %add867.i
  %and987.i = and i32 %or986.i, %add805.i
  %or988.i = or i32 %and987.i, %and985.i
  %add989.i = add i32 %xor984.i, %or988.i
  %add990.i = add i32 %add972.i, %add743.i
  %add991.i = add i32 %add989.i, %add972.i
  %or998.i = tail call i32 @llvm.fshl.i32(i32 %add990.i, i32 %add990.i, i32 26) #19
  %or1001.i = tail call i32 @llvm.fshl.i32(i32 %add990.i, i32 %add990.i, i32 21) #19
  %xor1002.i = xor i32 %or998.i, %or1001.i
  %or1005.i = tail call i32 @llvm.fshl.i32(i32 %add990.i, i32 %add990.i, i32 7) #19
  %xor1006.i = xor i32 %xor1002.i, %or1005.i
  %xor1008.i = xor i32 %add928.i, %add866.i
  %and1009.i = and i32 %add990.i, %xor1008.i
  %xor1010.i = xor i32 %and1009.i, %add866.i
  %or1015.i = tail call i32 @llvm.fshl.i32(i32 %add909.i, i32 %add909.i, i32 15) #19
  %or1018.i = tail call i32 @llvm.fshl.i32(i32 %add909.i, i32 %add909.i, i32 13) #19
  %xor1019.i = xor i32 %or1015.i, %or1018.i
  %shr1020.i = lshr i32 %add909.i, 10
  %xor1021.i = xor i32 %xor1019.i, %shr1020.i
  %or1025.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6030.i, i32 %or10.i6031.i, i32 25) #19
  %or1028.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6031.i, i32 %or.i6024.i, i32 14) #19
  %xor1029.i = xor i32 %or1025.i, %or1028.i
  %shr1030.i = lshr i32 %or10.i6031.i, 3
  %xor1031.i = xor i32 %xor1029.i, %shr1030.i
  %add1022.i = add i32 %xor1031.i, %or10.i6018.i
  %add1032.i = add i32 %add1022.i, %or10.i6135.i
  %add1033.i = add i32 %add1032.i, %xor1021.i
  %add1007.i = add i32 %add1033.i, 1249150122
  %add1011.i = add i32 %add1007.i, %add804.i
  %add1012.i = add i32 %add1011.i, %xor1010.i
  %add1034.i = add i32 %add1012.i, %xor1006.i
  %or1038.i = tail call i32 @llvm.fshl.i32(i32 %add991.i, i32 %add991.i, i32 30) #19
  %or1041.i = tail call i32 @llvm.fshl.i32(i32 %add991.i, i32 %add991.i, i32 19) #19
  %xor1042.i = xor i32 %or1038.i, %or1041.i
  %or1045.i = tail call i32 @llvm.fshl.i32(i32 %add991.i, i32 %add991.i, i32 10) #19
  %xor1046.i = xor i32 %xor1042.i, %or1045.i
  %and1047.i = and i32 %add991.i, %add929.i
  %or1048.i = or i32 %add991.i, %add929.i
  %and1049.i = and i32 %or1048.i, %add867.i
  %or1050.i = or i32 %and1049.i, %and1047.i
  %add1051.i = add i32 %xor1046.i, %or1050.i
  %add1052.i = add i32 %add1034.i, %add805.i
  %add1053.i = add i32 %add1051.i, %add1034.i
  %or1060.i = tail call i32 @llvm.fshl.i32(i32 %add1052.i, i32 %add1052.i, i32 26) #19
  %or1063.i = tail call i32 @llvm.fshl.i32(i32 %add1052.i, i32 %add1052.i, i32 21) #19
  %xor1064.i = xor i32 %or1060.i, %or1063.i
  %or1067.i = tail call i32 @llvm.fshl.i32(i32 %add1052.i, i32 %add1052.i, i32 7) #19
  %xor1068.i = xor i32 %xor1064.i, %or1067.i
  %xor1070.i = xor i32 %add990.i, %add928.i
  %and1071.i = and i32 %add1052.i, %xor1070.i
  %xor1072.i = xor i32 %and1071.i, %add928.i
  %or1077.i = tail call i32 @llvm.fshl.i32(i32 %add971.i, i32 %add971.i, i32 15) #19
  %or1080.i = tail call i32 @llvm.fshl.i32(i32 %add971.i, i32 %add971.i, i32 13) #19
  %xor1081.i = xor i32 %or1077.i, %or1080.i
  %shr1082.i = lshr i32 %add971.i, 10
  %xor1083.i = xor i32 %xor1081.i, %shr1082.i
  %or1087.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6043.i, i32 %or10.i6044.i, i32 25) #19
  %or1090.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6044.i, i32 %or.i6037.i, i32 14) #19
  %xor1091.i = xor i32 %or1087.i, %or1090.i
  %shr1092.i = lshr i32 %or10.i6044.i, 3
  %xor1093.i = xor i32 %xor1091.i, %shr1092.i
  %add1084.i = add i32 %xor1093.i, %or10.i6031.i
  %add1094.i = add i32 %add1084.i, %or10.i6148.i
  %add1095.i = add i32 %add1094.i, %xor1083.i
  %add1069.i = add i32 %add1095.i, 1555081692
  %add1073.i = add i32 %add1069.i, %add866.i
  %add1074.i = add i32 %add1073.i, %xor1072.i
  %add1096.i = add i32 %add1074.i, %xor1068.i
  %or1100.i = tail call i32 @llvm.fshl.i32(i32 %add1053.i, i32 %add1053.i, i32 30) #19
  %or1103.i = tail call i32 @llvm.fshl.i32(i32 %add1053.i, i32 %add1053.i, i32 19) #19
  %xor1104.i = xor i32 %or1100.i, %or1103.i
  %or1107.i = tail call i32 @llvm.fshl.i32(i32 %add1053.i, i32 %add1053.i, i32 10) #19
  %xor1108.i = xor i32 %xor1104.i, %or1107.i
  %and1109.i = and i32 %add1053.i, %add991.i
  %or1110.i = or i32 %add1053.i, %add991.i
  %and1111.i = and i32 %or1110.i, %add929.i
  %or1112.i = or i32 %and1111.i, %and1109.i
  %add1113.i = add i32 %xor1108.i, %or1112.i
  %add1114.i = add i32 %add1096.i, %add867.i
  %add1115.i = add i32 %add1113.i, %add1096.i
  %or1122.i = tail call i32 @llvm.fshl.i32(i32 %add1114.i, i32 %add1114.i, i32 26) #19
  %or1125.i = tail call i32 @llvm.fshl.i32(i32 %add1114.i, i32 %add1114.i, i32 21) #19
  %xor1126.i = xor i32 %or1122.i, %or1125.i
  %or1129.i = tail call i32 @llvm.fshl.i32(i32 %add1114.i, i32 %add1114.i, i32 7) #19
  %xor1130.i = xor i32 %xor1126.i, %or1129.i
  %xor1132.i = xor i32 %add1052.i, %add990.i
  %and1133.i = and i32 %add1114.i, %xor1132.i
  %xor1134.i = xor i32 %and1133.i, %add990.i
  %or1139.i = tail call i32 @llvm.fshl.i32(i32 %add1033.i, i32 %add1033.i, i32 15) #19
  %or1142.i = tail call i32 @llvm.fshl.i32(i32 %add1033.i, i32 %add1033.i, i32 13) #19
  %xor1143.i = xor i32 %or1139.i, %or1142.i
  %shr1144.i = lshr i32 %add1033.i, 10
  %xor1145.i = xor i32 %xor1143.i, %shr1144.i
  %or1149.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6056.i, i32 %or10.i6057.i, i32 25) #19
  %or1152.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6057.i, i32 %or.i6050.i, i32 14) #19
  %xor1153.i = xor i32 %or1149.i, %or1152.i
  %shr1154.i = lshr i32 %or10.i6057.i, 3
  %xor1155.i = xor i32 %xor1153.i, %shr1154.i
  %add1146.i = add i32 %xor1155.i, %or10.i6044.i
  %add1156.i = add i32 %add1146.i, %add723.i
  %add1157.i = add i32 %add1156.i, %xor1145.i
  %add1131.i = add i32 %add1157.i, 1996064986
  %add1135.i = add i32 %add1131.i, %add928.i
  %add1136.i = add i32 %add1135.i, %xor1134.i
  %add1158.i = add i32 %add1136.i, %xor1130.i
  %or1162.i = tail call i32 @llvm.fshl.i32(i32 %add1115.i, i32 %add1115.i, i32 30) #19
  %or1165.i = tail call i32 @llvm.fshl.i32(i32 %add1115.i, i32 %add1115.i, i32 19) #19
  %xor1166.i = xor i32 %or1162.i, %or1165.i
  %or1169.i = tail call i32 @llvm.fshl.i32(i32 %add1115.i, i32 %add1115.i, i32 10) #19
  %xor1170.i = xor i32 %xor1166.i, %or1169.i
  %and1171.i = and i32 %add1115.i, %add1053.i
  %or1172.i = or i32 %add1115.i, %add1053.i
  %and1173.i = and i32 %or1172.i, %add991.i
  %or1174.i = or i32 %and1173.i, %and1171.i
  %add1175.i = add i32 %xor1170.i, %or1174.i
  %add1176.i = add i32 %add1158.i, %add929.i
  %add1177.i = add i32 %add1175.i, %add1158.i
  %or1184.i = tail call i32 @llvm.fshl.i32(i32 %add1176.i, i32 %add1176.i, i32 26) #19
  %or1187.i = tail call i32 @llvm.fshl.i32(i32 %add1176.i, i32 %add1176.i, i32 21) #19
  %xor1188.i = xor i32 %or1184.i, %or1187.i
  %or1191.i = tail call i32 @llvm.fshl.i32(i32 %add1176.i, i32 %add1176.i, i32 7) #19
  %xor1192.i = xor i32 %xor1188.i, %or1191.i
  %xor1194.i = xor i32 %add1114.i, %add1052.i
  %and1195.i = and i32 %add1176.i, %xor1194.i
  %xor1196.i = xor i32 %and1195.i, %add1052.i
  %or1201.i = tail call i32 @llvm.fshl.i32(i32 %add1095.i, i32 %add1095.i, i32 15) #19
  %or1204.i = tail call i32 @llvm.fshl.i32(i32 %add1095.i, i32 %add1095.i, i32 13) #19
  %xor1205.i = xor i32 %or1201.i, %or1204.i
  %shr1206.i = lshr i32 %add1095.i, 10
  %xor1207.i = xor i32 %xor1205.i, %shr1206.i
  %or1211.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6069.i, i32 %or10.i6070.i, i32 25) #19
  %or1214.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6070.i, i32 %or.i6063.i, i32 14) #19
  %xor1215.i = xor i32 %or1211.i, %or1214.i
  %shr1216.i = lshr i32 %or10.i6070.i, 3
  %xor1217.i = xor i32 %xor1215.i, %shr1216.i
  %add1208.i = add i32 %xor1217.i, %or10.i6057.i
  %add1218.i = add i32 %add1208.i, %add785.i
  %add1219.i = add i32 %add1218.i, %xor1207.i
  %add1193.i = add i32 %add1219.i, -1740746414
  %add1197.i = add i32 %add1193.i, %add990.i
  %add1198.i = add i32 %add1197.i, %xor1196.i
  %add1220.i = add i32 %add1198.i, %xor1192.i
  %or1224.i = tail call i32 @llvm.fshl.i32(i32 %add1177.i, i32 %add1177.i, i32 30) #19
  %or1227.i = tail call i32 @llvm.fshl.i32(i32 %add1177.i, i32 %add1177.i, i32 19) #19
  %xor1228.i = xor i32 %or1224.i, %or1227.i
  %or1231.i = tail call i32 @llvm.fshl.i32(i32 %add1177.i, i32 %add1177.i, i32 10) #19
  %xor1232.i = xor i32 %xor1228.i, %or1231.i
  %and1233.i = and i32 %add1177.i, %add1115.i
  %or1234.i = or i32 %add1177.i, %add1115.i
  %and1235.i = and i32 %or1234.i, %add1053.i
  %or1236.i = or i32 %and1235.i, %and1233.i
  %add1237.i = add i32 %xor1232.i, %or1236.i
  %add1238.i = add i32 %add1220.i, %add991.i
  %add1239.i = add i32 %add1237.i, %add1220.i
  %or1246.i = tail call i32 @llvm.fshl.i32(i32 %add1238.i, i32 %add1238.i, i32 26) #19
  %or1249.i = tail call i32 @llvm.fshl.i32(i32 %add1238.i, i32 %add1238.i, i32 21) #19
  %xor1250.i = xor i32 %or1246.i, %or1249.i
  %or1253.i = tail call i32 @llvm.fshl.i32(i32 %add1238.i, i32 %add1238.i, i32 7) #19
  %xor1254.i = xor i32 %xor1250.i, %or1253.i
  %xor1256.i = xor i32 %add1176.i, %add1114.i
  %and1257.i = and i32 %add1238.i, %xor1256.i
  %xor1258.i = xor i32 %and1257.i, %add1114.i
  %or1263.i = tail call i32 @llvm.fshl.i32(i32 %add1157.i, i32 %add1157.i, i32 15) #19
  %or1266.i = tail call i32 @llvm.fshl.i32(i32 %add1157.i, i32 %add1157.i, i32 13) #19
  %xor1267.i = xor i32 %or1263.i, %or1266.i
  %shr1268.i = lshr i32 %add1157.i, 10
  %xor1269.i = xor i32 %xor1267.i, %shr1268.i
  %or1273.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6082.i, i32 %or10.i6083.i, i32 25) #19
  %or1276.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6083.i, i32 %or.i6076.i, i32 14) #19
  %xor1277.i = xor i32 %or1273.i, %or1276.i
  %shr1278.i = lshr i32 %or10.i6083.i, 3
  %xor1279.i = xor i32 %xor1277.i, %shr1278.i
  %add1270.i = add i32 %xor1279.i, %or10.i6070.i
  %add1280.i = add i32 %add1270.i, %add847.i
  %add1281.i = add i32 %add1280.i, %xor1269.i
  %add1255.i = add i32 %add1281.i, -1473132947
  %add1259.i = add i32 %add1255.i, %add1052.i
  %add1260.i = add i32 %add1259.i, %xor1258.i
  %add1282.i = add i32 %add1260.i, %xor1254.i
  %or1286.i = tail call i32 @llvm.fshl.i32(i32 %add1239.i, i32 %add1239.i, i32 30) #19
  %or1289.i = tail call i32 @llvm.fshl.i32(i32 %add1239.i, i32 %add1239.i, i32 19) #19
  %xor1290.i = xor i32 %or1286.i, %or1289.i
  %or1293.i = tail call i32 @llvm.fshl.i32(i32 %add1239.i, i32 %add1239.i, i32 10) #19
  %xor1294.i = xor i32 %xor1290.i, %or1293.i
  %and1295.i = and i32 %add1239.i, %add1177.i
  %or1296.i = or i32 %add1239.i, %add1177.i
  %and1297.i = and i32 %or1296.i, %add1115.i
  %or1298.i = or i32 %and1297.i, %and1295.i
  %add1299.i = add i32 %xor1294.i, %or1298.i
  %add1300.i = add i32 %add1282.i, %add1053.i
  %add1301.i = add i32 %add1299.i, %add1282.i
  %or1308.i = tail call i32 @llvm.fshl.i32(i32 %add1300.i, i32 %add1300.i, i32 26) #19
  %or1311.i = tail call i32 @llvm.fshl.i32(i32 %add1300.i, i32 %add1300.i, i32 21) #19
  %xor1312.i = xor i32 %or1308.i, %or1311.i
  %or1315.i = tail call i32 @llvm.fshl.i32(i32 %add1300.i, i32 %add1300.i, i32 7) #19
  %xor1316.i = xor i32 %xor1312.i, %or1315.i
  %xor1318.i = xor i32 %add1238.i, %add1176.i
  %and1319.i = and i32 %add1300.i, %xor1318.i
  %xor1320.i = xor i32 %and1319.i, %add1176.i
  %or1325.i = tail call i32 @llvm.fshl.i32(i32 %add1219.i, i32 %add1219.i, i32 15) #19
  %or1328.i = tail call i32 @llvm.fshl.i32(i32 %add1219.i, i32 %add1219.i, i32 13) #19
  %xor1329.i = xor i32 %or1325.i, %or1328.i
  %shr1330.i = lshr i32 %add1219.i, 10
  %xor1331.i = xor i32 %xor1329.i, %shr1330.i
  %or1335.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6095.i, i32 %or10.i6096.i, i32 25) #19
  %or1338.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6096.i, i32 %or.i6089.i, i32 14) #19
  %xor1339.i = xor i32 %or1335.i, %or1338.i
  %shr1340.i = lshr i32 %or10.i6096.i, 3
  %xor1341.i = xor i32 %xor1339.i, %shr1340.i
  %add1332.i = add i32 %xor1341.i, %or10.i6083.i
  %add1342.i = add i32 %add1332.i, %add909.i
  %add1343.i = add i32 %add1342.i, %xor1331.i
  %add1317.i = add i32 %add1343.i, -1341970488
  %add1321.i = add i32 %add1317.i, %add1114.i
  %add1322.i = add i32 %add1321.i, %xor1320.i
  %add1344.i = add i32 %add1322.i, %xor1316.i
  %or1348.i = tail call i32 @llvm.fshl.i32(i32 %add1301.i, i32 %add1301.i, i32 30) #19
  %or1351.i = tail call i32 @llvm.fshl.i32(i32 %add1301.i, i32 %add1301.i, i32 19) #19
  %xor1352.i = xor i32 %or1348.i, %or1351.i
  %or1355.i = tail call i32 @llvm.fshl.i32(i32 %add1301.i, i32 %add1301.i, i32 10) #19
  %xor1356.i = xor i32 %xor1352.i, %or1355.i
  %and1357.i = and i32 %add1301.i, %add1239.i
  %or1358.i = or i32 %add1301.i, %add1239.i
  %and1359.i = and i32 %or1358.i, %add1177.i
  %or1360.i = or i32 %and1359.i, %and1357.i
  %add1361.i = add i32 %xor1356.i, %or1360.i
  %add1362.i = add i32 %add1344.i, %add1115.i
  %add1363.i = add i32 %add1361.i, %add1344.i
  %or1370.i = tail call i32 @llvm.fshl.i32(i32 %add1362.i, i32 %add1362.i, i32 26) #19
  %or1373.i = tail call i32 @llvm.fshl.i32(i32 %add1362.i, i32 %add1362.i, i32 21) #19
  %xor1374.i = xor i32 %or1370.i, %or1373.i
  %or1377.i = tail call i32 @llvm.fshl.i32(i32 %add1362.i, i32 %add1362.i, i32 7) #19
  %xor1378.i = xor i32 %xor1374.i, %or1377.i
  %xor1380.i = xor i32 %add1300.i, %add1238.i
  %and1381.i = and i32 %add1362.i, %xor1380.i
  %xor1382.i = xor i32 %and1381.i, %add1238.i
  %or1387.i = tail call i32 @llvm.fshl.i32(i32 %add1281.i, i32 %add1281.i, i32 15) #19
  %or1390.i = tail call i32 @llvm.fshl.i32(i32 %add1281.i, i32 %add1281.i, i32 13) #19
  %xor1391.i = xor i32 %or1387.i, %or1390.i
  %shr1392.i = lshr i32 %add1281.i, 10
  %xor1393.i = xor i32 %xor1391.i, %shr1392.i
  %or1397.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6108.i, i32 %or10.i6109.i, i32 25) #19
  %or1400.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6109.i, i32 %or.i6102.i, i32 14) #19
  %xor1401.i = xor i32 %or1397.i, %or1400.i
  %shr1402.i = lshr i32 %or10.i6109.i, 3
  %xor1403.i = xor i32 %xor1401.i, %shr1402.i
  %add1394.i = add i32 %xor1403.i, %or10.i6096.i
  %add1404.i = add i32 %add1394.i, %add971.i
  %add1405.i = add i32 %add1404.i, %xor1393.i
  %add1379.i = add i32 %add1405.i, -1084653625
  %add1383.i = add i32 %add1379.i, %add1176.i
  %add1384.i = add i32 %add1383.i, %xor1382.i
  %add1406.i = add i32 %add1384.i, %xor1378.i
  %or1410.i = tail call i32 @llvm.fshl.i32(i32 %add1363.i, i32 %add1363.i, i32 30) #19
  %or1413.i = tail call i32 @llvm.fshl.i32(i32 %add1363.i, i32 %add1363.i, i32 19) #19
  %xor1414.i = xor i32 %or1410.i, %or1413.i
  %or1417.i = tail call i32 @llvm.fshl.i32(i32 %add1363.i, i32 %add1363.i, i32 10) #19
  %xor1418.i = xor i32 %xor1414.i, %or1417.i
  %and1419.i = and i32 %add1363.i, %add1301.i
  %or1420.i = or i32 %add1363.i, %add1301.i
  %and1421.i = and i32 %or1420.i, %add1239.i
  %or1422.i = or i32 %and1421.i, %and1419.i
  %add1423.i = add i32 %xor1418.i, %or1422.i
  %add1424.i = add i32 %add1406.i, %add1177.i
  %add1425.i = add i32 %add1423.i, %add1406.i
  %or1432.i = tail call i32 @llvm.fshl.i32(i32 %add1424.i, i32 %add1424.i, i32 26) #19
  %or1435.i = tail call i32 @llvm.fshl.i32(i32 %add1424.i, i32 %add1424.i, i32 21) #19
  %xor1436.i = xor i32 %or1432.i, %or1435.i
  %or1439.i = tail call i32 @llvm.fshl.i32(i32 %add1424.i, i32 %add1424.i, i32 7) #19
  %xor1440.i = xor i32 %xor1436.i, %or1439.i
  %xor1442.i = xor i32 %add1362.i, %add1300.i
  %and1443.i = and i32 %add1424.i, %xor1442.i
  %xor1444.i = xor i32 %and1443.i, %add1300.i
  %or1449.i = tail call i32 @llvm.fshl.i32(i32 %add1343.i, i32 %add1343.i, i32 15) #19
  %or1452.i = tail call i32 @llvm.fshl.i32(i32 %add1343.i, i32 %add1343.i, i32 13) #19
  %xor1453.i = xor i32 %or1449.i, %or1452.i
  %shr1454.i = lshr i32 %add1343.i, 10
  %xor1455.i = xor i32 %xor1453.i, %shr1454.i
  %or1459.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6121.i, i32 %or10.i6122.i, i32 25) #19
  %or1462.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6122.i, i32 %or.i6115.i, i32 14) #19
  %xor1463.i = xor i32 %or1459.i, %or1462.i
  %shr1464.i = lshr i32 %or10.i6122.i, 3
  %xor1465.i = xor i32 %xor1463.i, %shr1464.i
  %add1456.i = add i32 %xor1465.i, %or10.i6109.i
  %add1466.i = add i32 %add1456.i, %add1033.i
  %add1467.i = add i32 %add1466.i, %xor1455.i
  %add1441.i = add i32 %add1467.i, -958395405
  %add1445.i = add i32 %add1441.i, %add1238.i
  %add1446.i = add i32 %add1445.i, %xor1444.i
  %add1468.i = add i32 %add1446.i, %xor1440.i
  %or1472.i = tail call i32 @llvm.fshl.i32(i32 %add1425.i, i32 %add1425.i, i32 30) #19
  %or1475.i = tail call i32 @llvm.fshl.i32(i32 %add1425.i, i32 %add1425.i, i32 19) #19
  %xor1476.i = xor i32 %or1472.i, %or1475.i
  %or1479.i = tail call i32 @llvm.fshl.i32(i32 %add1425.i, i32 %add1425.i, i32 10) #19
  %xor1480.i = xor i32 %xor1476.i, %or1479.i
  %and1481.i = and i32 %add1425.i, %add1363.i
  %or1482.i = or i32 %add1425.i, %add1363.i
  %and1483.i = and i32 %or1482.i, %add1301.i
  %or1484.i = or i32 %and1483.i, %and1481.i
  %add1485.i = add i32 %xor1480.i, %or1484.i
  %add1486.i = add i32 %add1468.i, %add1239.i
  %add1487.i = add i32 %add1485.i, %add1468.i
  %or1494.i = tail call i32 @llvm.fshl.i32(i32 %add1486.i, i32 %add1486.i, i32 26) #19
  %or1497.i = tail call i32 @llvm.fshl.i32(i32 %add1486.i, i32 %add1486.i, i32 21) #19
  %xor1498.i = xor i32 %or1494.i, %or1497.i
  %or1501.i = tail call i32 @llvm.fshl.i32(i32 %add1486.i, i32 %add1486.i, i32 7) #19
  %xor1502.i = xor i32 %xor1498.i, %or1501.i
  %xor1504.i = xor i32 %add1424.i, %add1362.i
  %and1505.i = and i32 %add1486.i, %xor1504.i
  %xor1506.i = xor i32 %and1505.i, %add1362.i
  %or1511.i = tail call i32 @llvm.fshl.i32(i32 %add1405.i, i32 %add1405.i, i32 15) #19
  %or1514.i = tail call i32 @llvm.fshl.i32(i32 %add1405.i, i32 %add1405.i, i32 13) #19
  %xor1515.i = xor i32 %or1511.i, %or1514.i
  %shr1516.i = lshr i32 %add1405.i, 10
  %xor1517.i = xor i32 %xor1515.i, %shr1516.i
  %or1521.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6134.i, i32 %or10.i6135.i, i32 25) #19
  %or1524.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6135.i, i32 %or.i6128.i, i32 14) #19
  %xor1525.i = xor i32 %or1521.i, %or1524.i
  %shr1526.i = lshr i32 %or10.i6135.i, 3
  %xor1527.i = xor i32 %xor1525.i, %shr1526.i
  %add1518.i = add i32 %xor1527.i, %or10.i6122.i
  %add1528.i = add i32 %add1518.i, %add1095.i
  %add1529.i = add i32 %add1528.i, %xor1517.i
  %add1503.i = add i32 %add1529.i, -710438585
  %add1507.i = add i32 %add1503.i, %add1300.i
  %add1508.i = add i32 %add1507.i, %xor1506.i
  %add1530.i = add i32 %add1508.i, %xor1502.i
  %or1534.i = tail call i32 @llvm.fshl.i32(i32 %add1487.i, i32 %add1487.i, i32 30) #19
  %or1537.i = tail call i32 @llvm.fshl.i32(i32 %add1487.i, i32 %add1487.i, i32 19) #19
  %xor1538.i = xor i32 %or1534.i, %or1537.i
  %or1541.i = tail call i32 @llvm.fshl.i32(i32 %add1487.i, i32 %add1487.i, i32 10) #19
  %xor1542.i = xor i32 %xor1538.i, %or1541.i
  %and1543.i = and i32 %add1487.i, %add1425.i
  %or1544.i = or i32 %add1487.i, %add1425.i
  %and1545.i = and i32 %or1544.i, %add1363.i
  %or1546.i = or i32 %and1545.i, %and1543.i
  %add1547.i = add i32 %xor1542.i, %or1546.i
  %add1548.i = add i32 %add1530.i, %add1301.i
  %add1549.i = add i32 %add1547.i, %add1530.i
  %or1556.i = tail call i32 @llvm.fshl.i32(i32 %add1548.i, i32 %add1548.i, i32 26) #19
  %or1559.i = tail call i32 @llvm.fshl.i32(i32 %add1548.i, i32 %add1548.i, i32 21) #19
  %xor1560.i = xor i32 %or1556.i, %or1559.i
  %or1563.i = tail call i32 @llvm.fshl.i32(i32 %add1548.i, i32 %add1548.i, i32 7) #19
  %xor1564.i = xor i32 %xor1560.i, %or1563.i
  %xor1566.i = xor i32 %add1486.i, %add1424.i
  %and1567.i = and i32 %add1548.i, %xor1566.i
  %xor1568.i = xor i32 %and1567.i, %add1424.i
  %or1573.i = tail call i32 @llvm.fshl.i32(i32 %add1467.i, i32 %add1467.i, i32 15) #19
  %or1576.i = tail call i32 @llvm.fshl.i32(i32 %add1467.i, i32 %add1467.i, i32 13) #19
  %xor1577.i = xor i32 %or1573.i, %or1576.i
  %shr1578.i = lshr i32 %add1467.i, 10
  %xor1579.i = xor i32 %xor1577.i, %shr1578.i
  %or1583.i = tail call i32 @llvm.fshl.i32(i32 %conv9.i6147.i, i32 %or10.i6148.i, i32 25) #19
  %or1586.i = tail call i32 @llvm.fshl.i32(i32 %or10.i6148.i, i32 %or.i6141.i, i32 14) #19
  %xor1587.i = xor i32 %or1583.i, %or1586.i
  %shr1588.i = lshr i32 %or10.i6148.i, 3
  %xor1589.i = xor i32 %xor1587.i, %shr1588.i
  %add1580.i = add i32 %xor1589.i, %or10.i6135.i
  %add1590.i = add i32 %add1580.i, %add1157.i
  %add1591.i = add i32 %add1590.i, %xor1579.i
  %add1565.i = add i32 %add1591.i, 113926993
  %add1569.i = add i32 %add1565.i, %add1362.i
  %add1570.i = add i32 %add1569.i, %xor1568.i
  %add1592.i = add i32 %add1570.i, %xor1564.i
  %or1596.i = tail call i32 @llvm.fshl.i32(i32 %add1549.i, i32 %add1549.i, i32 30) #19
  %or1599.i = tail call i32 @llvm.fshl.i32(i32 %add1549.i, i32 %add1549.i, i32 19) #19
  %xor1600.i = xor i32 %or1596.i, %or1599.i
  %or1603.i = tail call i32 @llvm.fshl.i32(i32 %add1549.i, i32 %add1549.i, i32 10) #19
  %xor1604.i = xor i32 %xor1600.i, %or1603.i
  %and1605.i = and i32 %add1549.i, %add1487.i
  %or1606.i = or i32 %add1549.i, %add1487.i
  %and1607.i = and i32 %or1606.i, %add1425.i
  %or1608.i = or i32 %and1607.i, %and1605.i
  %add1609.i = add i32 %xor1604.i, %or1608.i
  %add1610.i = add i32 %add1592.i, %add1363.i
  %add1611.i = add i32 %add1609.i, %add1592.i
  %or1618.i = tail call i32 @llvm.fshl.i32(i32 %add1610.i, i32 %add1610.i, i32 26) #19
  %or1621.i = tail call i32 @llvm.fshl.i32(i32 %add1610.i, i32 %add1610.i, i32 21) #19
  %xor1622.i = xor i32 %or1618.i, %or1621.i
  %or1625.i = tail call i32 @llvm.fshl.i32(i32 %add1610.i, i32 %add1610.i, i32 7) #19
  %xor1626.i = xor i32 %xor1622.i, %or1625.i
  %xor1628.i = xor i32 %add1548.i, %add1486.i
  %and1629.i = and i32 %add1610.i, %xor1628.i
  %xor1630.i = xor i32 %and1629.i, %add1486.i
  %or1635.i = tail call i32 @llvm.fshl.i32(i32 %add1529.i, i32 %add1529.i, i32 15) #19
  %or1638.i = tail call i32 @llvm.fshl.i32(i32 %add1529.i, i32 %add1529.i, i32 13) #19
  %xor1639.i = xor i32 %or1635.i, %or1638.i
  %shr1640.i = lshr i32 %add1529.i, 10
  %xor1641.i = xor i32 %xor1639.i, %shr1640.i
  %or1645.i = tail call i32 @llvm.fshl.i32(i32 %add723.i, i32 %add723.i, i32 25) #19
  %or1648.i = tail call i32 @llvm.fshl.i32(i32 %add723.i, i32 %add723.i, i32 14) #19
  %xor1649.i = xor i32 %or1645.i, %or1648.i
  %shr1650.i = lshr i32 %add723.i, 3
  %xor1651.i = xor i32 %xor1649.i, %shr1650.i
  %add1642.i = add i32 %xor1651.i, %or10.i6148.i
  %add1652.i = add i32 %add1642.i, %add1219.i
  %add1653.i = add i32 %add1652.i, %xor1641.i
  %add1627.i = add i32 %add1653.i, 338241895
  %add1631.i = add i32 %add1627.i, %add1424.i
  %add1632.i = add i32 %add1631.i, %xor1630.i
  %add1654.i = add i32 %add1632.i, %xor1626.i
  %or1658.i = tail call i32 @llvm.fshl.i32(i32 %add1611.i, i32 %add1611.i, i32 30) #19
  %or1661.i = tail call i32 @llvm.fshl.i32(i32 %add1611.i, i32 %add1611.i, i32 19) #19
  %xor1662.i = xor i32 %or1658.i, %or1661.i
  %or1665.i = tail call i32 @llvm.fshl.i32(i32 %add1611.i, i32 %add1611.i, i32 10) #19
  %xor1666.i = xor i32 %xor1662.i, %or1665.i
  %and1667.i = and i32 %add1611.i, %add1549.i
  %or1668.i = or i32 %add1611.i, %add1549.i
  %and1669.i = and i32 %or1668.i, %add1487.i
  %or1670.i = or i32 %and1669.i, %and1667.i
  %add1671.i = add i32 %xor1666.i, %or1670.i
  %add1672.i = add i32 %add1654.i, %add1425.i
  %add1673.i = add i32 %add1671.i, %add1654.i
  %or1680.i = tail call i32 @llvm.fshl.i32(i32 %add1672.i, i32 %add1672.i, i32 26) #19
  %or1683.i = tail call i32 @llvm.fshl.i32(i32 %add1672.i, i32 %add1672.i, i32 21) #19
  %xor1684.i = xor i32 %or1680.i, %or1683.i
  %or1687.i = tail call i32 @llvm.fshl.i32(i32 %add1672.i, i32 %add1672.i, i32 7) #19
  %xor1688.i = xor i32 %xor1684.i, %or1687.i
  %xor1690.i = xor i32 %add1610.i, %add1548.i
  %and1691.i = and i32 %add1672.i, %xor1690.i
  %xor1692.i = xor i32 %and1691.i, %add1548.i
  %or1697.i = tail call i32 @llvm.fshl.i32(i32 %add1591.i, i32 %add1591.i, i32 15) #19
  %or1700.i = tail call i32 @llvm.fshl.i32(i32 %add1591.i, i32 %add1591.i, i32 13) #19
  %xor1701.i = xor i32 %or1697.i, %or1700.i
  %shr1702.i = lshr i32 %add1591.i, 10
  %xor1703.i = xor i32 %xor1701.i, %shr1702.i
  %or1707.i = tail call i32 @llvm.fshl.i32(i32 %add785.i, i32 %add785.i, i32 25) #19
  %or1710.i = tail call i32 @llvm.fshl.i32(i32 %add785.i, i32 %add785.i, i32 14) #19
  %xor1711.i = xor i32 %or1707.i, %or1710.i
  %shr1712.i = lshr i32 %add785.i, 3
  %xor1713.i = xor i32 %xor1711.i, %shr1712.i
  %add1704.i = add i32 %xor1713.i, %add723.i
  %add1714.i = add i32 %add1704.i, %add1281.i
  %add1715.i = add i32 %add1714.i, %xor1703.i
  %add1689.i = add i32 %add1715.i, 666307205
  %add1693.i = add i32 %add1689.i, %add1486.i
  %add1694.i = add i32 %add1693.i, %xor1692.i
  %add1716.i = add i32 %add1694.i, %xor1688.i
  %or1720.i = tail call i32 @llvm.fshl.i32(i32 %add1673.i, i32 %add1673.i, i32 30) #19
  %or1723.i = tail call i32 @llvm.fshl.i32(i32 %add1673.i, i32 %add1673.i, i32 19) #19
  %xor1724.i = xor i32 %or1720.i, %or1723.i
  %or1727.i = tail call i32 @llvm.fshl.i32(i32 %add1673.i, i32 %add1673.i, i32 10) #19
  %xor1728.i = xor i32 %xor1724.i, %or1727.i
  %and1729.i = and i32 %add1673.i, %add1611.i
  %or1730.i = or i32 %add1673.i, %add1611.i
  %and1731.i = and i32 %or1730.i, %add1549.i
  %or1732.i = or i32 %and1731.i, %and1729.i
  %add1733.i = add i32 %xor1728.i, %or1732.i
  %add1734.i = add i32 %add1716.i, %add1487.i
  %add1735.i = add i32 %add1733.i, %add1716.i
  %or1742.i = tail call i32 @llvm.fshl.i32(i32 %add1734.i, i32 %add1734.i, i32 26) #19
  %or1745.i = tail call i32 @llvm.fshl.i32(i32 %add1734.i, i32 %add1734.i, i32 21) #19
  %xor1746.i = xor i32 %or1742.i, %or1745.i
  %or1749.i = tail call i32 @llvm.fshl.i32(i32 %add1734.i, i32 %add1734.i, i32 7) #19
  %xor1750.i = xor i32 %xor1746.i, %or1749.i
  %xor1752.i = xor i32 %add1672.i, %add1610.i
  %and1753.i = and i32 %add1734.i, %xor1752.i
  %xor1754.i = xor i32 %and1753.i, %add1610.i
  %or1759.i = tail call i32 @llvm.fshl.i32(i32 %add1653.i, i32 %add1653.i, i32 15) #19
  %or1762.i = tail call i32 @llvm.fshl.i32(i32 %add1653.i, i32 %add1653.i, i32 13) #19
  %xor1763.i = xor i32 %or1759.i, %or1762.i
  %shr1764.i = lshr i32 %add1653.i, 10
  %xor1765.i = xor i32 %xor1763.i, %shr1764.i
  %or1769.i = tail call i32 @llvm.fshl.i32(i32 %add847.i, i32 %add847.i, i32 25) #19
  %or1772.i = tail call i32 @llvm.fshl.i32(i32 %add847.i, i32 %add847.i, i32 14) #19
  %xor1773.i = xor i32 %or1769.i, %or1772.i
  %shr1774.i = lshr i32 %add847.i, 3
  %xor1775.i = xor i32 %xor1773.i, %shr1774.i
  %add1766.i = add i32 %xor1775.i, %add785.i
  %add1776.i = add i32 %add1766.i, %add1343.i
  %add1777.i = add i32 %add1776.i, %xor1765.i
  %add1751.i = add i32 %add1777.i, 773529912
  %add1755.i = add i32 %add1751.i, %add1548.i
  %add1756.i = add i32 %add1755.i, %xor1754.i
  %add1778.i = add i32 %add1756.i, %xor1750.i
  %or1782.i = tail call i32 @llvm.fshl.i32(i32 %add1735.i, i32 %add1735.i, i32 30) #19
  %or1785.i = tail call i32 @llvm.fshl.i32(i32 %add1735.i, i32 %add1735.i, i32 19) #19
  %xor1786.i = xor i32 %or1782.i, %or1785.i
  %or1789.i = tail call i32 @llvm.fshl.i32(i32 %add1735.i, i32 %add1735.i, i32 10) #19
  %xor1790.i = xor i32 %xor1786.i, %or1789.i
  %and1791.i = and i32 %add1735.i, %add1673.i
  %or1792.i = or i32 %add1735.i, %add1673.i
  %and1793.i = and i32 %or1792.i, %add1611.i
  %or1794.i = or i32 %and1793.i, %and1791.i
  %add1795.i = add i32 %xor1790.i, %or1794.i
  %add1796.i = add i32 %add1778.i, %add1549.i
  %add1797.i = add i32 %add1795.i, %add1778.i
  %or1804.i = tail call i32 @llvm.fshl.i32(i32 %add1796.i, i32 %add1796.i, i32 26) #19
  %or1807.i = tail call i32 @llvm.fshl.i32(i32 %add1796.i, i32 %add1796.i, i32 21) #19
  %xor1808.i = xor i32 %or1804.i, %or1807.i
  %or1811.i = tail call i32 @llvm.fshl.i32(i32 %add1796.i, i32 %add1796.i, i32 7) #19
  %xor1812.i = xor i32 %xor1808.i, %or1811.i
  %xor1814.i = xor i32 %add1734.i, %add1672.i
  %and1815.i = and i32 %add1796.i, %xor1814.i
  %xor1816.i = xor i32 %and1815.i, %add1672.i
  %or1821.i = tail call i32 @llvm.fshl.i32(i32 %add1715.i, i32 %add1715.i, i32 15) #19
  %or1824.i = tail call i32 @llvm.fshl.i32(i32 %add1715.i, i32 %add1715.i, i32 13) #19
  %xor1825.i = xor i32 %or1821.i, %or1824.i
  %shr1826.i = lshr i32 %add1715.i, 10
  %xor1827.i = xor i32 %xor1825.i, %shr1826.i
  %or1831.i = tail call i32 @llvm.fshl.i32(i32 %add909.i, i32 %add909.i, i32 25) #19
  %or1834.i = tail call i32 @llvm.fshl.i32(i32 %add909.i, i32 %add909.i, i32 14) #19
  %xor1835.i = xor i32 %or1831.i, %or1834.i
  %shr1836.i = lshr i32 %add909.i, 3
  %xor1837.i = xor i32 %xor1835.i, %shr1836.i
  %add1828.i = add i32 %xor1837.i, %add847.i
  %add1838.i = add i32 %add1828.i, %add1405.i
  %add1839.i = add i32 %add1838.i, %xor1827.i
  %add1813.i = add i32 %add1839.i, 1294757372
  %add1817.i = add i32 %add1813.i, %add1610.i
  %add1818.i = add i32 %add1817.i, %xor1816.i
  %add1840.i = add i32 %add1818.i, %xor1812.i
  %or1844.i = tail call i32 @llvm.fshl.i32(i32 %add1797.i, i32 %add1797.i, i32 30) #19
  %or1847.i = tail call i32 @llvm.fshl.i32(i32 %add1797.i, i32 %add1797.i, i32 19) #19
  %xor1848.i = xor i32 %or1844.i, %or1847.i
  %or1851.i = tail call i32 @llvm.fshl.i32(i32 %add1797.i, i32 %add1797.i, i32 10) #19
  %xor1852.i = xor i32 %xor1848.i, %or1851.i
  %and1853.i = and i32 %add1797.i, %add1735.i
  %or1854.i = or i32 %add1797.i, %add1735.i
  %and1855.i = and i32 %or1854.i, %add1673.i
  %or1856.i = or i32 %and1855.i, %and1853.i
  %add1857.i = add i32 %xor1852.i, %or1856.i
  %add1858.i = add i32 %add1840.i, %add1611.i
  %add1859.i = add i32 %add1857.i, %add1840.i
  %or1866.i = tail call i32 @llvm.fshl.i32(i32 %add1858.i, i32 %add1858.i, i32 26) #19
  %or1869.i = tail call i32 @llvm.fshl.i32(i32 %add1858.i, i32 %add1858.i, i32 21) #19
  %xor1870.i = xor i32 %or1866.i, %or1869.i
  %or1873.i = tail call i32 @llvm.fshl.i32(i32 %add1858.i, i32 %add1858.i, i32 7) #19
  %xor1874.i = xor i32 %xor1870.i, %or1873.i
  %xor1876.i = xor i32 %add1796.i, %add1734.i
  %and1877.i = and i32 %add1858.i, %xor1876.i
  %xor1878.i = xor i32 %and1877.i, %add1734.i
  %or1883.i = tail call i32 @llvm.fshl.i32(i32 %add1777.i, i32 %add1777.i, i32 15) #19
  %or1886.i = tail call i32 @llvm.fshl.i32(i32 %add1777.i, i32 %add1777.i, i32 13) #19
  %xor1887.i = xor i32 %or1883.i, %or1886.i
  %shr1888.i = lshr i32 %add1777.i, 10
  %xor1889.i = xor i32 %xor1887.i, %shr1888.i
  %or1893.i = tail call i32 @llvm.fshl.i32(i32 %add971.i, i32 %add971.i, i32 25) #19
  %or1896.i = tail call i32 @llvm.fshl.i32(i32 %add971.i, i32 %add971.i, i32 14) #19
  %xor1897.i = xor i32 %or1893.i, %or1896.i
  %shr1898.i = lshr i32 %add971.i, 3
  %xor1899.i = xor i32 %xor1897.i, %shr1898.i
  %add1890.i = add i32 %xor1899.i, %add909.i
  %add1900.i = add i32 %add1890.i, %add1467.i
  %add1901.i = add i32 %add1900.i, %xor1889.i
  %add1875.i = add i32 %add1901.i, 1396182291
  %add1879.i = add i32 %add1875.i, %add1672.i
  %add1880.i = add i32 %add1879.i, %xor1878.i
  %add1902.i = add i32 %add1880.i, %xor1874.i
  %or1906.i = tail call i32 @llvm.fshl.i32(i32 %add1859.i, i32 %add1859.i, i32 30) #19
  %or1909.i = tail call i32 @llvm.fshl.i32(i32 %add1859.i, i32 %add1859.i, i32 19) #19
  %xor1910.i = xor i32 %or1906.i, %or1909.i
  %or1913.i = tail call i32 @llvm.fshl.i32(i32 %add1859.i, i32 %add1859.i, i32 10) #19
  %xor1914.i = xor i32 %xor1910.i, %or1913.i
  %and1915.i = and i32 %add1859.i, %add1797.i
  %or1916.i = or i32 %add1859.i, %add1797.i
  %and1917.i = and i32 %or1916.i, %add1735.i
  %or1918.i = or i32 %and1917.i, %and1915.i
  %add1919.i = add i32 %xor1914.i, %or1918.i
  %add1920.i = add i32 %add1902.i, %add1673.i
  %add1921.i = add i32 %add1919.i, %add1902.i
  %or1928.i = tail call i32 @llvm.fshl.i32(i32 %add1920.i, i32 %add1920.i, i32 26) #19
  %or1931.i = tail call i32 @llvm.fshl.i32(i32 %add1920.i, i32 %add1920.i, i32 21) #19
  %xor1932.i = xor i32 %or1928.i, %or1931.i
  %or1935.i = tail call i32 @llvm.fshl.i32(i32 %add1920.i, i32 %add1920.i, i32 7) #19
  %xor1936.i = xor i32 %xor1932.i, %or1935.i
  %xor1938.i = xor i32 %add1858.i, %add1796.i
  %and1939.i = and i32 %add1920.i, %xor1938.i
  %xor1940.i = xor i32 %and1939.i, %add1796.i
  %or1945.i = tail call i32 @llvm.fshl.i32(i32 %add1839.i, i32 %add1839.i, i32 15) #19
  %or1948.i = tail call i32 @llvm.fshl.i32(i32 %add1839.i, i32 %add1839.i, i32 13) #19
  %xor1949.i = xor i32 %or1945.i, %or1948.i
  %shr1950.i = lshr i32 %add1839.i, 10
  %xor1951.i = xor i32 %xor1949.i, %shr1950.i
  %or1955.i = tail call i32 @llvm.fshl.i32(i32 %add1033.i, i32 %add1033.i, i32 25) #19
  %or1958.i = tail call i32 @llvm.fshl.i32(i32 %add1033.i, i32 %add1033.i, i32 14) #19
  %xor1959.i = xor i32 %or1955.i, %or1958.i
  %shr1960.i = lshr i32 %add1033.i, 3
  %xor1961.i = xor i32 %xor1959.i, %shr1960.i
  %add1952.i = add i32 %xor1961.i, %add971.i
  %add1962.i = add i32 %add1952.i, %add1529.i
  %add1963.i = add i32 %add1962.i, %xor1951.i
  %add1937.i = add i32 %add1963.i, 1695183700
  %add1941.i = add i32 %add1937.i, %add1734.i
  %add1942.i = add i32 %add1941.i, %xor1940.i
  %add1964.i = add i32 %add1942.i, %xor1936.i
  %or1968.i = tail call i32 @llvm.fshl.i32(i32 %add1921.i, i32 %add1921.i, i32 30) #19
  %or1971.i = tail call i32 @llvm.fshl.i32(i32 %add1921.i, i32 %add1921.i, i32 19) #19
  %xor1972.i = xor i32 %or1968.i, %or1971.i
  %or1975.i = tail call i32 @llvm.fshl.i32(i32 %add1921.i, i32 %add1921.i, i32 10) #19
  %xor1976.i = xor i32 %xor1972.i, %or1975.i
  %and1977.i = and i32 %add1921.i, %add1859.i
  %or1978.i = or i32 %add1921.i, %add1859.i
  %and1979.i = and i32 %or1978.i, %add1797.i
  %or1980.i = or i32 %and1979.i, %and1977.i
  %add1981.i = add i32 %xor1976.i, %or1980.i
  %add1982.i = add i32 %add1964.i, %add1735.i
  %add1983.i = add i32 %add1981.i, %add1964.i
  %or1990.i = tail call i32 @llvm.fshl.i32(i32 %add1982.i, i32 %add1982.i, i32 26) #19
  %or1993.i = tail call i32 @llvm.fshl.i32(i32 %add1982.i, i32 %add1982.i, i32 21) #19
  %xor1994.i = xor i32 %or1990.i, %or1993.i
  %or1997.i = tail call i32 @llvm.fshl.i32(i32 %add1982.i, i32 %add1982.i, i32 7) #19
  %xor1998.i = xor i32 %xor1994.i, %or1997.i
  %xor2000.i = xor i32 %add1920.i, %add1858.i
  %and2001.i = and i32 %add1982.i, %xor2000.i
  %xor2002.i = xor i32 %and2001.i, %add1858.i
  %or2007.i = tail call i32 @llvm.fshl.i32(i32 %add1901.i, i32 %add1901.i, i32 15) #19
  %or2010.i = tail call i32 @llvm.fshl.i32(i32 %add1901.i, i32 %add1901.i, i32 13) #19
  %xor2011.i = xor i32 %or2007.i, %or2010.i
  %shr2012.i = lshr i32 %add1901.i, 10
  %xor2013.i = xor i32 %xor2011.i, %shr2012.i
  %or2017.i = tail call i32 @llvm.fshl.i32(i32 %add1095.i, i32 %add1095.i, i32 25) #19
  %or2020.i = tail call i32 @llvm.fshl.i32(i32 %add1095.i, i32 %add1095.i, i32 14) #19
  %xor2021.i = xor i32 %or2017.i, %or2020.i
  %shr2022.i = lshr i32 %add1095.i, 3
  %xor2023.i = xor i32 %xor2021.i, %shr2022.i
  %add2014.i = add i32 %xor2023.i, %add1033.i
  %add2024.i = add i32 %add2014.i, %add1591.i
  %add2025.i = add i32 %add2024.i, %xor2013.i
  %add1999.i = add i32 %add2025.i, 1986661051
  %add2003.i = add i32 %add1999.i, %add1796.i
  %add2004.i = add i32 %add2003.i, %xor2002.i
  %add2026.i = add i32 %add2004.i, %xor1998.i
  %or2030.i = tail call i32 @llvm.fshl.i32(i32 %add1983.i, i32 %add1983.i, i32 30) #19
  %or2033.i = tail call i32 @llvm.fshl.i32(i32 %add1983.i, i32 %add1983.i, i32 19) #19
  %xor2034.i = xor i32 %or2030.i, %or2033.i
  %or2037.i = tail call i32 @llvm.fshl.i32(i32 %add1983.i, i32 %add1983.i, i32 10) #19
  %xor2038.i = xor i32 %xor2034.i, %or2037.i
  %and2039.i = and i32 %add1983.i, %add1921.i
  %or2040.i = or i32 %add1983.i, %add1921.i
  %and2041.i = and i32 %or2040.i, %add1859.i
  %or2042.i = or i32 %and2041.i, %and2039.i
  %add2043.i = add i32 %xor2038.i, %or2042.i
  %add2044.i = add i32 %add2026.i, %add1797.i
  %add2045.i = add i32 %add2043.i, %add2026.i
  %or2052.i = tail call i32 @llvm.fshl.i32(i32 %add2044.i, i32 %add2044.i, i32 26) #19
  %or2055.i = tail call i32 @llvm.fshl.i32(i32 %add2044.i, i32 %add2044.i, i32 21) #19
  %xor2056.i = xor i32 %or2052.i, %or2055.i
  %or2059.i = tail call i32 @llvm.fshl.i32(i32 %add2044.i, i32 %add2044.i, i32 7) #19
  %xor2060.i = xor i32 %xor2056.i, %or2059.i
  %xor2062.i = xor i32 %add1982.i, %add1920.i
  %and2063.i = and i32 %add2044.i, %xor2062.i
  %xor2064.i = xor i32 %and2063.i, %add1920.i
  %or2069.i = tail call i32 @llvm.fshl.i32(i32 %add1963.i, i32 %add1963.i, i32 15) #19
  %or2072.i = tail call i32 @llvm.fshl.i32(i32 %add1963.i, i32 %add1963.i, i32 13) #19
  %xor2073.i = xor i32 %or2069.i, %or2072.i
  %shr2074.i = lshr i32 %add1963.i, 10
  %xor2075.i = xor i32 %xor2073.i, %shr2074.i
  %or2079.i = tail call i32 @llvm.fshl.i32(i32 %add1157.i, i32 %add1157.i, i32 25) #19
  %or2082.i = tail call i32 @llvm.fshl.i32(i32 %add1157.i, i32 %add1157.i, i32 14) #19
  %xor2083.i = xor i32 %or2079.i, %or2082.i
  %shr2084.i = lshr i32 %add1157.i, 3
  %xor2085.i = xor i32 %xor2083.i, %shr2084.i
  %add2076.i = add i32 %xor2085.i, %add1095.i
  %add2086.i = add i32 %add2076.i, %add1653.i
  %add2087.i = add i32 %add2086.i, %xor2075.i
  %add2061.i = add i32 %add2087.i, -2117940946
  %add2065.i = add i32 %add2061.i, %add1858.i
  %add2066.i = add i32 %add2065.i, %xor2064.i
  %add2088.i = add i32 %add2066.i, %xor2060.i
  %or2092.i = tail call i32 @llvm.fshl.i32(i32 %add2045.i, i32 %add2045.i, i32 30) #19
  %or2095.i = tail call i32 @llvm.fshl.i32(i32 %add2045.i, i32 %add2045.i, i32 19) #19
  %xor2096.i = xor i32 %or2092.i, %or2095.i
  %or2099.i = tail call i32 @llvm.fshl.i32(i32 %add2045.i, i32 %add2045.i, i32 10) #19
  %xor2100.i = xor i32 %xor2096.i, %or2099.i
  %and2101.i = and i32 %add2045.i, %add1983.i
  %or2102.i = or i32 %add2045.i, %add1983.i
  %and2103.i = and i32 %or2102.i, %add1921.i
  %or2104.i = or i32 %and2103.i, %and2101.i
  %add2105.i = add i32 %xor2100.i, %or2104.i
  %add2106.i = add i32 %add2088.i, %add1859.i
  %add2107.i = add i32 %add2105.i, %add2088.i
  %or2114.i = tail call i32 @llvm.fshl.i32(i32 %add2106.i, i32 %add2106.i, i32 26) #19
  %or2117.i = tail call i32 @llvm.fshl.i32(i32 %add2106.i, i32 %add2106.i, i32 21) #19
  %xor2118.i = xor i32 %or2114.i, %or2117.i
  %or2121.i = tail call i32 @llvm.fshl.i32(i32 %add2106.i, i32 %add2106.i, i32 7) #19
  %xor2122.i = xor i32 %xor2118.i, %or2121.i
  %xor2124.i = xor i32 %add2044.i, %add1982.i
  %and2125.i = and i32 %add2106.i, %xor2124.i
  %xor2126.i = xor i32 %and2125.i, %add1982.i
  %or2131.i = tail call i32 @llvm.fshl.i32(i32 %add2025.i, i32 %add2025.i, i32 15) #19
  %or2134.i = tail call i32 @llvm.fshl.i32(i32 %add2025.i, i32 %add2025.i, i32 13) #19
  %xor2135.i = xor i32 %or2131.i, %or2134.i
  %shr2136.i = lshr i32 %add2025.i, 10
  %xor2137.i = xor i32 %xor2135.i, %shr2136.i
  %or2141.i = tail call i32 @llvm.fshl.i32(i32 %add1219.i, i32 %add1219.i, i32 25) #19
  %or2144.i = tail call i32 @llvm.fshl.i32(i32 %add1219.i, i32 %add1219.i, i32 14) #19
  %xor2145.i = xor i32 %or2141.i, %or2144.i
  %shr2146.i = lshr i32 %add1219.i, 3
  %xor2147.i = xor i32 %xor2145.i, %shr2146.i
  %add2138.i = add i32 %xor2147.i, %add1157.i
  %add2148.i = add i32 %add2138.i, %add1715.i
  %add2149.i = add i32 %add2148.i, %xor2137.i
  %add2123.i = add i32 %add2149.i, -1838011259
  %add2127.i = add i32 %add2123.i, %add1920.i
  %add2128.i = add i32 %add2127.i, %xor2126.i
  %add2150.i = add i32 %add2128.i, %xor2122.i
  %or2154.i = tail call i32 @llvm.fshl.i32(i32 %add2107.i, i32 %add2107.i, i32 30) #19
  %or2157.i = tail call i32 @llvm.fshl.i32(i32 %add2107.i, i32 %add2107.i, i32 19) #19
  %xor2158.i = xor i32 %or2154.i, %or2157.i
  %or2161.i = tail call i32 @llvm.fshl.i32(i32 %add2107.i, i32 %add2107.i, i32 10) #19
  %xor2162.i = xor i32 %xor2158.i, %or2161.i
  %and2163.i = and i32 %add2107.i, %add2045.i
  %or2164.i = or i32 %add2107.i, %add2045.i
  %and2165.i = and i32 %or2164.i, %add1983.i
  %or2166.i = or i32 %and2165.i, %and2163.i
  %add2167.i = add i32 %xor2162.i, %or2166.i
  %add2168.i = add i32 %add2150.i, %add1921.i
  %add2169.i = add i32 %add2167.i, %add2150.i
  %or2176.i = tail call i32 @llvm.fshl.i32(i32 %add2168.i, i32 %add2168.i, i32 26) #19
  %or2179.i = tail call i32 @llvm.fshl.i32(i32 %add2168.i, i32 %add2168.i, i32 21) #19
  %xor2180.i = xor i32 %or2176.i, %or2179.i
  %or2183.i = tail call i32 @llvm.fshl.i32(i32 %add2168.i, i32 %add2168.i, i32 7) #19
  %xor2184.i = xor i32 %xor2180.i, %or2183.i
  %xor2186.i = xor i32 %add2106.i, %add2044.i
  %and2187.i = and i32 %add2168.i, %xor2186.i
  %xor2188.i = xor i32 %and2187.i, %add2044.i
  %or2193.i = tail call i32 @llvm.fshl.i32(i32 %add2087.i, i32 %add2087.i, i32 15) #19
  %or2196.i = tail call i32 @llvm.fshl.i32(i32 %add2087.i, i32 %add2087.i, i32 13) #19
  %xor2197.i = xor i32 %or2193.i, %or2196.i
  %shr2198.i = lshr i32 %add2087.i, 10
  %xor2199.i = xor i32 %xor2197.i, %shr2198.i
  %or2203.i = tail call i32 @llvm.fshl.i32(i32 %add1281.i, i32 %add1281.i, i32 25) #19
  %or2206.i = tail call i32 @llvm.fshl.i32(i32 %add1281.i, i32 %add1281.i, i32 14) #19
  %xor2207.i = xor i32 %or2203.i, %or2206.i
  %shr2208.i = lshr i32 %add1281.i, 3
  %xor2209.i = xor i32 %xor2207.i, %shr2208.i
  %add2200.i = add i32 %xor2209.i, %add1219.i
  %add2210.i = add i32 %add2200.i, %add1777.i
  %add2211.i = add i32 %add2210.i, %xor2199.i
  %add2185.i = add i32 %add2211.i, -1564481375
  %add2189.i = add i32 %add2185.i, %add1982.i
  %add2190.i = add i32 %add2189.i, %xor2188.i
  %add2212.i = add i32 %add2190.i, %xor2184.i
  %or2216.i = tail call i32 @llvm.fshl.i32(i32 %add2169.i, i32 %add2169.i, i32 30) #19
  %or2219.i = tail call i32 @llvm.fshl.i32(i32 %add2169.i, i32 %add2169.i, i32 19) #19
  %xor2220.i = xor i32 %or2216.i, %or2219.i
  %or2223.i = tail call i32 @llvm.fshl.i32(i32 %add2169.i, i32 %add2169.i, i32 10) #19
  %xor2224.i = xor i32 %xor2220.i, %or2223.i
  %and2225.i = and i32 %add2169.i, %add2107.i
  %or2226.i = or i32 %add2169.i, %add2107.i
  %and2227.i = and i32 %or2226.i, %add2045.i
  %or2228.i = or i32 %and2227.i, %and2225.i
  %add2229.i = add i32 %xor2224.i, %or2228.i
  %add2230.i = add i32 %add2212.i, %add1983.i
  %add2231.i = add i32 %add2229.i, %add2212.i
  %or2238.i = tail call i32 @llvm.fshl.i32(i32 %add2230.i, i32 %add2230.i, i32 26) #19
  %or2241.i = tail call i32 @llvm.fshl.i32(i32 %add2230.i, i32 %add2230.i, i32 21) #19
  %xor2242.i = xor i32 %or2238.i, %or2241.i
  %or2245.i = tail call i32 @llvm.fshl.i32(i32 %add2230.i, i32 %add2230.i, i32 7) #19
  %xor2246.i = xor i32 %xor2242.i, %or2245.i
  %xor2248.i = xor i32 %add2168.i, %add2106.i
  %and2249.i = and i32 %add2230.i, %xor2248.i
  %xor2250.i = xor i32 %and2249.i, %add2106.i
  %or2255.i = tail call i32 @llvm.fshl.i32(i32 %add2149.i, i32 %add2149.i, i32 15) #19
  %or2258.i = tail call i32 @llvm.fshl.i32(i32 %add2149.i, i32 %add2149.i, i32 13) #19
  %xor2259.i = xor i32 %or2255.i, %or2258.i
  %shr2260.i = lshr i32 %add2149.i, 10
  %xor2261.i = xor i32 %xor2259.i, %shr2260.i
  %or2265.i = tail call i32 @llvm.fshl.i32(i32 %add1343.i, i32 %add1343.i, i32 25) #19
  %or2268.i = tail call i32 @llvm.fshl.i32(i32 %add1343.i, i32 %add1343.i, i32 14) #19
  %xor2269.i = xor i32 %or2265.i, %or2268.i
  %shr2270.i = lshr i32 %add1343.i, 3
  %xor2271.i = xor i32 %xor2269.i, %shr2270.i
  %add2262.i = add i32 %xor2271.i, %add1281.i
  %add2272.i = add i32 %add2262.i, %add1839.i
  %add2273.i = add i32 %add2272.i, %xor2261.i
  %add2247.i = add i32 %add2273.i, -1474664885
  %add2251.i = add i32 %add2247.i, %add2044.i
  %add2252.i = add i32 %add2251.i, %xor2250.i
  %add2274.i = add i32 %add2252.i, %xor2246.i
  %or2278.i = tail call i32 @llvm.fshl.i32(i32 %add2231.i, i32 %add2231.i, i32 30) #19
  %or2281.i = tail call i32 @llvm.fshl.i32(i32 %add2231.i, i32 %add2231.i, i32 19) #19
  %xor2282.i = xor i32 %or2278.i, %or2281.i
  %or2285.i = tail call i32 @llvm.fshl.i32(i32 %add2231.i, i32 %add2231.i, i32 10) #19
  %xor2286.i = xor i32 %xor2282.i, %or2285.i
  %and2287.i = and i32 %add2231.i, %add2169.i
  %or2288.i = or i32 %add2231.i, %add2169.i
  %and2289.i = and i32 %or2288.i, %add2107.i
  %or2290.i = or i32 %and2289.i, %and2287.i
  %add2291.i = add i32 %xor2286.i, %or2290.i
  %add2292.i = add i32 %add2274.i, %add2045.i
  %add2293.i = add i32 %add2291.i, %add2274.i
  %or2300.i = tail call i32 @llvm.fshl.i32(i32 %add2292.i, i32 %add2292.i, i32 26) #19
  %or2303.i = tail call i32 @llvm.fshl.i32(i32 %add2292.i, i32 %add2292.i, i32 21) #19
  %xor2304.i = xor i32 %or2300.i, %or2303.i
  %or2307.i = tail call i32 @llvm.fshl.i32(i32 %add2292.i, i32 %add2292.i, i32 7) #19
  %xor2308.i = xor i32 %xor2304.i, %or2307.i
  %xor2310.i = xor i32 %add2230.i, %add2168.i
  %and2311.i = and i32 %add2292.i, %xor2310.i
  %xor2312.i = xor i32 %and2311.i, %add2168.i
  %or2317.i = tail call i32 @llvm.fshl.i32(i32 %add2211.i, i32 %add2211.i, i32 15) #19
  %or2320.i = tail call i32 @llvm.fshl.i32(i32 %add2211.i, i32 %add2211.i, i32 13) #19
  %xor2321.i = xor i32 %or2317.i, %or2320.i
  %shr2322.i = lshr i32 %add2211.i, 10
  %xor2323.i = xor i32 %xor2321.i, %shr2322.i
  %or2327.i = tail call i32 @llvm.fshl.i32(i32 %add1405.i, i32 %add1405.i, i32 25) #19
  %or2330.i = tail call i32 @llvm.fshl.i32(i32 %add1405.i, i32 %add1405.i, i32 14) #19
  %xor2331.i = xor i32 %or2327.i, %or2330.i
  %shr2332.i = lshr i32 %add1405.i, 3
  %xor2333.i = xor i32 %xor2331.i, %shr2332.i
  %add2324.i = add i32 %xor2333.i, %add1343.i
  %add2334.i = add i32 %add2324.i, %add1901.i
  %add2335.i = add i32 %add2334.i, %xor2323.i
  %add2309.i = add i32 %add2335.i, -1035236496
  %add2313.i = add i32 %add2309.i, %add2106.i
  %add2314.i = add i32 %add2313.i, %xor2312.i
  %add2336.i = add i32 %add2314.i, %xor2308.i
  %or2340.i = tail call i32 @llvm.fshl.i32(i32 %add2293.i, i32 %add2293.i, i32 30) #19
  %or2343.i = tail call i32 @llvm.fshl.i32(i32 %add2293.i, i32 %add2293.i, i32 19) #19
  %xor2344.i = xor i32 %or2340.i, %or2343.i
  %or2347.i = tail call i32 @llvm.fshl.i32(i32 %add2293.i, i32 %add2293.i, i32 10) #19
  %xor2348.i = xor i32 %xor2344.i, %or2347.i
  %and2349.i = and i32 %add2293.i, %add2231.i
  %or2350.i = or i32 %add2293.i, %add2231.i
  %and2351.i = and i32 %or2350.i, %add2169.i
  %or2352.i = or i32 %and2351.i, %and2349.i
  %add2353.i = add i32 %xor2348.i, %or2352.i
  %add2354.i = add i32 %add2336.i, %add2107.i
  %add2355.i = add i32 %add2353.i, %add2336.i
  %or2362.i = tail call i32 @llvm.fshl.i32(i32 %add2354.i, i32 %add2354.i, i32 26) #19
  %or2365.i = tail call i32 @llvm.fshl.i32(i32 %add2354.i, i32 %add2354.i, i32 21) #19
  %xor2366.i = xor i32 %or2362.i, %or2365.i
  %or2369.i = tail call i32 @llvm.fshl.i32(i32 %add2354.i, i32 %add2354.i, i32 7) #19
  %xor2370.i = xor i32 %xor2366.i, %or2369.i
  %xor2372.i = xor i32 %add2292.i, %add2230.i
  %and2373.i = and i32 %add2354.i, %xor2372.i
  %xor2374.i = xor i32 %and2373.i, %add2230.i
  %or2379.i = tail call i32 @llvm.fshl.i32(i32 %add2273.i, i32 %add2273.i, i32 15) #19
  %or2382.i = tail call i32 @llvm.fshl.i32(i32 %add2273.i, i32 %add2273.i, i32 13) #19
  %xor2383.i = xor i32 %or2379.i, %or2382.i
  %shr2384.i = lshr i32 %add2273.i, 10
  %xor2385.i = xor i32 %xor2383.i, %shr2384.i
  %or2389.i = tail call i32 @llvm.fshl.i32(i32 %add1467.i, i32 %add1467.i, i32 25) #19
  %or2392.i = tail call i32 @llvm.fshl.i32(i32 %add1467.i, i32 %add1467.i, i32 14) #19
  %xor2393.i = xor i32 %or2389.i, %or2392.i
  %shr2394.i = lshr i32 %add1467.i, 3
  %xor2395.i = xor i32 %xor2393.i, %shr2394.i
  %add2386.i = add i32 %xor2395.i, %add1405.i
  %add2396.i = add i32 %add2386.i, %add1963.i
  %add2397.i = add i32 %add2396.i, %xor2385.i
  %add2371.i = add i32 %add2397.i, -949202525
  %add2375.i = add i32 %add2371.i, %add2168.i
  %add2376.i = add i32 %add2375.i, %xor2374.i
  %add2398.i = add i32 %add2376.i, %xor2370.i
  %or2402.i = tail call i32 @llvm.fshl.i32(i32 %add2355.i, i32 %add2355.i, i32 30) #19
  %or2405.i = tail call i32 @llvm.fshl.i32(i32 %add2355.i, i32 %add2355.i, i32 19) #19
  %xor2406.i = xor i32 %or2402.i, %or2405.i
  %or2409.i = tail call i32 @llvm.fshl.i32(i32 %add2355.i, i32 %add2355.i, i32 10) #19
  %xor2410.i = xor i32 %xor2406.i, %or2409.i
  %and2411.i = and i32 %add2355.i, %add2293.i
  %or2412.i = or i32 %add2355.i, %add2293.i
  %and2413.i = and i32 %or2412.i, %add2231.i
  %or2414.i = or i32 %and2413.i, %and2411.i
  %add2415.i = add i32 %xor2410.i, %or2414.i
  %add2416.i = add i32 %add2398.i, %add2169.i
  %add2417.i = add i32 %add2415.i, %add2398.i
  %or2424.i = tail call i32 @llvm.fshl.i32(i32 %add2416.i, i32 %add2416.i, i32 26) #19
  %or2427.i = tail call i32 @llvm.fshl.i32(i32 %add2416.i, i32 %add2416.i, i32 21) #19
  %xor2428.i = xor i32 %or2424.i, %or2427.i
  %or2431.i = tail call i32 @llvm.fshl.i32(i32 %add2416.i, i32 %add2416.i, i32 7) #19
  %xor2432.i = xor i32 %xor2428.i, %or2431.i
  %xor2434.i = xor i32 %add2354.i, %add2292.i
  %and2435.i = and i32 %add2416.i, %xor2434.i
  %xor2436.i = xor i32 %and2435.i, %add2292.i
  %or2441.i = tail call i32 @llvm.fshl.i32(i32 %add2335.i, i32 %add2335.i, i32 15) #19
  %or2444.i = tail call i32 @llvm.fshl.i32(i32 %add2335.i, i32 %add2335.i, i32 13) #19
  %xor2445.i = xor i32 %or2441.i, %or2444.i
  %shr2446.i = lshr i32 %add2335.i, 10
  %xor2447.i = xor i32 %xor2445.i, %shr2446.i
  %or2451.i = tail call i32 @llvm.fshl.i32(i32 %add1529.i, i32 %add1529.i, i32 25) #19
  %or2454.i = tail call i32 @llvm.fshl.i32(i32 %add1529.i, i32 %add1529.i, i32 14) #19
  %xor2455.i = xor i32 %or2451.i, %or2454.i
  %shr2456.i = lshr i32 %add1529.i, 3
  %xor2457.i = xor i32 %xor2455.i, %shr2456.i
  %add2448.i = add i32 %xor2457.i, %add1467.i
  %add2458.i = add i32 %add2448.i, %add2025.i
  %add2459.i = add i32 %add2458.i, %xor2447.i
  %add2433.i = add i32 %add2459.i, -778901479
  %add2437.i = add i32 %add2433.i, %add2230.i
  %add2438.i = add i32 %add2437.i, %xor2436.i
  %add2460.i = add i32 %add2438.i, %xor2432.i
  %or2464.i = tail call i32 @llvm.fshl.i32(i32 %add2417.i, i32 %add2417.i, i32 30) #19
  %or2467.i = tail call i32 @llvm.fshl.i32(i32 %add2417.i, i32 %add2417.i, i32 19) #19
  %xor2468.i = xor i32 %or2464.i, %or2467.i
  %or2471.i = tail call i32 @llvm.fshl.i32(i32 %add2417.i, i32 %add2417.i, i32 10) #19
  %xor2472.i = xor i32 %xor2468.i, %or2471.i
  %and2473.i = and i32 %add2417.i, %add2355.i
  %or2474.i = or i32 %add2417.i, %add2355.i
  %and2475.i = and i32 %or2474.i, %add2293.i
  %or2476.i = or i32 %and2475.i, %and2473.i
  %add2477.i = add i32 %xor2472.i, %or2476.i
  %add2478.i = add i32 %add2460.i, %add2231.i
  %add2479.i = add i32 %add2477.i, %add2460.i
  %or2486.i = tail call i32 @llvm.fshl.i32(i32 %add2478.i, i32 %add2478.i, i32 26) #19
  %or2489.i = tail call i32 @llvm.fshl.i32(i32 %add2478.i, i32 %add2478.i, i32 21) #19
  %xor2490.i = xor i32 %or2486.i, %or2489.i
  %or2493.i = tail call i32 @llvm.fshl.i32(i32 %add2478.i, i32 %add2478.i, i32 7) #19
  %xor2494.i = xor i32 %xor2490.i, %or2493.i
  %xor2496.i = xor i32 %add2416.i, %add2354.i
  %and2497.i = and i32 %add2478.i, %xor2496.i
  %xor2498.i = xor i32 %and2497.i, %add2354.i
  %or2503.i = tail call i32 @llvm.fshl.i32(i32 %add2397.i, i32 %add2397.i, i32 15) #19
  %or2506.i = tail call i32 @llvm.fshl.i32(i32 %add2397.i, i32 %add2397.i, i32 13) #19
  %xor2507.i = xor i32 %or2503.i, %or2506.i
  %shr2508.i = lshr i32 %add2397.i, 10
  %xor2509.i = xor i32 %xor2507.i, %shr2508.i
  %or2513.i = tail call i32 @llvm.fshl.i32(i32 %add1591.i, i32 %add1591.i, i32 25) #19
  %or2516.i = tail call i32 @llvm.fshl.i32(i32 %add1591.i, i32 %add1591.i, i32 14) #19
  %xor2517.i = xor i32 %or2513.i, %or2516.i
  %shr2518.i = lshr i32 %add1591.i, 3
  %xor2519.i = xor i32 %xor2517.i, %shr2518.i
  %add2510.i = add i32 %xor2519.i, %add1529.i
  %add2520.i = add i32 %add2510.i, %add2087.i
  %add2521.i = add i32 %add2520.i, %xor2509.i
  %add2495.i = add i32 %add2521.i, -694614492
  %add2499.i = add i32 %add2495.i, %add2292.i
  %add2500.i = add i32 %add2499.i, %xor2498.i
  %add2522.i = add i32 %add2500.i, %xor2494.i
  %or2526.i = tail call i32 @llvm.fshl.i32(i32 %add2479.i, i32 %add2479.i, i32 30) #19
  %or2529.i = tail call i32 @llvm.fshl.i32(i32 %add2479.i, i32 %add2479.i, i32 19) #19
  %xor2530.i = xor i32 %or2526.i, %or2529.i
  %or2533.i = tail call i32 @llvm.fshl.i32(i32 %add2479.i, i32 %add2479.i, i32 10) #19
  %xor2534.i = xor i32 %xor2530.i, %or2533.i
  %and2535.i = and i32 %add2479.i, %add2417.i
  %or2536.i = or i32 %add2479.i, %add2417.i
  %and2537.i = and i32 %or2536.i, %add2355.i
  %or2538.i = or i32 %and2537.i, %and2535.i
  %add2539.i = add i32 %xor2534.i, %or2538.i
  %add2540.i = add i32 %add2522.i, %add2293.i
  %add2541.i = add i32 %add2539.i, %add2522.i
  %or2548.i = tail call i32 @llvm.fshl.i32(i32 %add2540.i, i32 %add2540.i, i32 26) #19
  %or2551.i = tail call i32 @llvm.fshl.i32(i32 %add2540.i, i32 %add2540.i, i32 21) #19
  %xor2552.i = xor i32 %or2548.i, %or2551.i
  %or2555.i = tail call i32 @llvm.fshl.i32(i32 %add2540.i, i32 %add2540.i, i32 7) #19
  %xor2556.i = xor i32 %xor2552.i, %or2555.i
  %xor2558.i = xor i32 %add2478.i, %add2416.i
  %and2559.i = and i32 %add2540.i, %xor2558.i
  %xor2560.i = xor i32 %and2559.i, %add2416.i
  %or2565.i = tail call i32 @llvm.fshl.i32(i32 %add2459.i, i32 %add2459.i, i32 15) #19
  %or2568.i = tail call i32 @llvm.fshl.i32(i32 %add2459.i, i32 %add2459.i, i32 13) #19
  %xor2569.i = xor i32 %or2565.i, %or2568.i
  %shr2570.i = lshr i32 %add2459.i, 10
  %xor2571.i = xor i32 %xor2569.i, %shr2570.i
  %or2575.i = tail call i32 @llvm.fshl.i32(i32 %add1653.i, i32 %add1653.i, i32 25) #19
  %or2578.i = tail call i32 @llvm.fshl.i32(i32 %add1653.i, i32 %add1653.i, i32 14) #19
  %xor2579.i = xor i32 %or2575.i, %or2578.i
  %shr2580.i = lshr i32 %add1653.i, 3
  %xor2581.i = xor i32 %xor2579.i, %shr2580.i
  %add2572.i = add i32 %xor2581.i, %add1591.i
  %add2582.i = add i32 %add2572.i, %add2149.i
  %add2583.i = add i32 %add2582.i, %xor2571.i
  %add2557.i = add i32 %add2583.i, -200395387
  %add2561.i = add i32 %add2557.i, %add2354.i
  %add2562.i = add i32 %add2561.i, %xor2560.i
  %add2584.i = add i32 %add2562.i, %xor2556.i
  %or2588.i = tail call i32 @llvm.fshl.i32(i32 %add2541.i, i32 %add2541.i, i32 30) #19
  %or2591.i = tail call i32 @llvm.fshl.i32(i32 %add2541.i, i32 %add2541.i, i32 19) #19
  %xor2592.i = xor i32 %or2588.i, %or2591.i
  %or2595.i = tail call i32 @llvm.fshl.i32(i32 %add2541.i, i32 %add2541.i, i32 10) #19
  %xor2596.i = xor i32 %xor2592.i, %or2595.i
  %and2597.i = and i32 %add2541.i, %add2479.i
  %or2598.i = or i32 %add2541.i, %add2479.i
  %and2599.i = and i32 %or2598.i, %add2417.i
  %or2600.i = or i32 %and2599.i, %and2597.i
  %add2601.i = add i32 %xor2596.i, %or2600.i
  %add2602.i = add i32 %add2584.i, %add2355.i
  %add2603.i = add i32 %add2601.i, %add2584.i
  %or2610.i = tail call i32 @llvm.fshl.i32(i32 %add2602.i, i32 %add2602.i, i32 26) #19
  %or2613.i = tail call i32 @llvm.fshl.i32(i32 %add2602.i, i32 %add2602.i, i32 21) #19
  %xor2614.i = xor i32 %or2610.i, %or2613.i
  %or2617.i = tail call i32 @llvm.fshl.i32(i32 %add2602.i, i32 %add2602.i, i32 7) #19
  %xor2618.i = xor i32 %xor2614.i, %or2617.i
  %xor2620.i = xor i32 %add2540.i, %add2478.i
  %and2621.i = and i32 %add2602.i, %xor2620.i
  %xor2622.i = xor i32 %and2621.i, %add2478.i
  %or2627.i = tail call i32 @llvm.fshl.i32(i32 %add2521.i, i32 %add2521.i, i32 15) #19
  %or2630.i = tail call i32 @llvm.fshl.i32(i32 %add2521.i, i32 %add2521.i, i32 13) #19
  %xor2631.i = xor i32 %or2627.i, %or2630.i
  %shr2632.i = lshr i32 %add2521.i, 10
  %xor2633.i = xor i32 %xor2631.i, %shr2632.i
  %or2637.i = tail call i32 @llvm.fshl.i32(i32 %add1715.i, i32 %add1715.i, i32 25) #19
  %or2640.i = tail call i32 @llvm.fshl.i32(i32 %add1715.i, i32 %add1715.i, i32 14) #19
  %xor2641.i = xor i32 %or2637.i, %or2640.i
  %shr2642.i = lshr i32 %add1715.i, 3
  %xor2643.i = xor i32 %xor2641.i, %shr2642.i
  %add2634.i = add i32 %xor2643.i, %add1653.i
  %add2644.i = add i32 %add2634.i, %add2211.i
  %add2645.i = add i32 %add2644.i, %xor2633.i
  %add2619.i = add i32 %add2645.i, 275423344
  %add2623.i = add i32 %add2619.i, %add2416.i
  %add2624.i = add i32 %add2623.i, %xor2622.i
  %add2646.i = add i32 %add2624.i, %xor2618.i
  %or2650.i = tail call i32 @llvm.fshl.i32(i32 %add2603.i, i32 %add2603.i, i32 30) #19
  %or2653.i = tail call i32 @llvm.fshl.i32(i32 %add2603.i, i32 %add2603.i, i32 19) #19
  %xor2654.i = xor i32 %or2650.i, %or2653.i
  %or2657.i = tail call i32 @llvm.fshl.i32(i32 %add2603.i, i32 %add2603.i, i32 10) #19
  %xor2658.i = xor i32 %xor2654.i, %or2657.i
  %and2659.i = and i32 %add2603.i, %add2541.i
  %or2660.i = or i32 %add2603.i, %add2541.i
  %and2661.i = and i32 %or2660.i, %add2479.i
  %or2662.i = or i32 %and2661.i, %and2659.i
  %add2663.i = add i32 %xor2658.i, %or2662.i
  %add2664.i = add i32 %add2646.i, %add2417.i
  %add2665.i = add i32 %add2663.i, %add2646.i
  %or2672.i = tail call i32 @llvm.fshl.i32(i32 %add2664.i, i32 %add2664.i, i32 26) #19
  %or2675.i = tail call i32 @llvm.fshl.i32(i32 %add2664.i, i32 %add2664.i, i32 21) #19
  %xor2676.i = xor i32 %or2672.i, %or2675.i
  %or2679.i = tail call i32 @llvm.fshl.i32(i32 %add2664.i, i32 %add2664.i, i32 7) #19
  %xor2680.i = xor i32 %xor2676.i, %or2679.i
  %xor2682.i = xor i32 %add2602.i, %add2540.i
  %and2683.i = and i32 %add2664.i, %xor2682.i
  %xor2684.i = xor i32 %and2683.i, %add2540.i
  %or2689.i = tail call i32 @llvm.fshl.i32(i32 %add2583.i, i32 %add2583.i, i32 15) #19
  %or2692.i = tail call i32 @llvm.fshl.i32(i32 %add2583.i, i32 %add2583.i, i32 13) #19
  %xor2693.i = xor i32 %or2689.i, %or2692.i
  %shr2694.i = lshr i32 %add2583.i, 10
  %xor2695.i = xor i32 %xor2693.i, %shr2694.i
  %or2699.i = tail call i32 @llvm.fshl.i32(i32 %add1777.i, i32 %add1777.i, i32 25) #19
  %or2702.i = tail call i32 @llvm.fshl.i32(i32 %add1777.i, i32 %add1777.i, i32 14) #19
  %xor2703.i = xor i32 %or2699.i, %or2702.i
  %shr2704.i = lshr i32 %add1777.i, 3
  %xor2705.i = xor i32 %xor2703.i, %shr2704.i
  %add2696.i = add i32 %xor2705.i, %add1715.i
  %add2706.i = add i32 %add2696.i, %add2273.i
  %add2707.i = add i32 %add2706.i, %xor2695.i
  %add2681.i = add i32 %add2707.i, 430227734
  %add2685.i = add i32 %add2681.i, %add2478.i
  %add2686.i = add i32 %add2685.i, %xor2684.i
  %add2708.i = add i32 %add2686.i, %xor2680.i
  %or2712.i = tail call i32 @llvm.fshl.i32(i32 %add2665.i, i32 %add2665.i, i32 30) #19
  %or2715.i = tail call i32 @llvm.fshl.i32(i32 %add2665.i, i32 %add2665.i, i32 19) #19
  %xor2716.i = xor i32 %or2712.i, %or2715.i
  %or2719.i = tail call i32 @llvm.fshl.i32(i32 %add2665.i, i32 %add2665.i, i32 10) #19
  %xor2720.i = xor i32 %xor2716.i, %or2719.i
  %and2721.i = and i32 %add2665.i, %add2603.i
  %or2722.i = or i32 %add2665.i, %add2603.i
  %and2723.i = and i32 %or2722.i, %add2541.i
  %or2724.i = or i32 %and2723.i, %and2721.i
  %add2725.i = add i32 %xor2720.i, %or2724.i
  %add2726.i = add i32 %add2708.i, %add2479.i
  %add2727.i = add i32 %add2725.i, %add2708.i
  %or2734.i = tail call i32 @llvm.fshl.i32(i32 %add2726.i, i32 %add2726.i, i32 26) #19
  %or2737.i = tail call i32 @llvm.fshl.i32(i32 %add2726.i, i32 %add2726.i, i32 21) #19
  %xor2738.i = xor i32 %or2734.i, %or2737.i
  %or2741.i = tail call i32 @llvm.fshl.i32(i32 %add2726.i, i32 %add2726.i, i32 7) #19
  %xor2742.i = xor i32 %xor2738.i, %or2741.i
  %xor2744.i = xor i32 %add2664.i, %add2602.i
  %and2745.i = and i32 %add2726.i, %xor2744.i
  %xor2746.i = xor i32 %and2745.i, %add2602.i
  %or2751.i = tail call i32 @llvm.fshl.i32(i32 %add2645.i, i32 %add2645.i, i32 15) #19
  %or2754.i = tail call i32 @llvm.fshl.i32(i32 %add2645.i, i32 %add2645.i, i32 13) #19
  %xor2755.i = xor i32 %or2751.i, %or2754.i
  %shr2756.i = lshr i32 %add2645.i, 10
  %xor2757.i = xor i32 %xor2755.i, %shr2756.i
  %or2761.i = tail call i32 @llvm.fshl.i32(i32 %add1839.i, i32 %add1839.i, i32 25) #19
  %or2764.i = tail call i32 @llvm.fshl.i32(i32 %add1839.i, i32 %add1839.i, i32 14) #19
  %xor2765.i = xor i32 %or2761.i, %or2764.i
  %shr2766.i = lshr i32 %add1839.i, 3
  %xor2767.i = xor i32 %xor2765.i, %shr2766.i
  %add2758.i = add i32 %xor2767.i, %add1777.i
  %add2768.i = add i32 %add2758.i, %add2335.i
  %add2769.i = add i32 %add2768.i, %xor2757.i
  %add2743.i = add i32 %add2769.i, 506948616
  %add2747.i = add i32 %add2743.i, %add2540.i
  %add2748.i = add i32 %add2747.i, %xor2746.i
  %add2770.i = add i32 %add2748.i, %xor2742.i
  %or2774.i = tail call i32 @llvm.fshl.i32(i32 %add2727.i, i32 %add2727.i, i32 30) #19
  %or2777.i = tail call i32 @llvm.fshl.i32(i32 %add2727.i, i32 %add2727.i, i32 19) #19
  %xor2778.i = xor i32 %or2774.i, %or2777.i
  %or2781.i = tail call i32 @llvm.fshl.i32(i32 %add2727.i, i32 %add2727.i, i32 10) #19
  %xor2782.i = xor i32 %xor2778.i, %or2781.i
  %and2783.i = and i32 %add2727.i, %add2665.i
  %or2784.i = or i32 %add2727.i, %add2665.i
  %and2785.i = and i32 %or2784.i, %add2603.i
  %or2786.i = or i32 %and2785.i, %and2783.i
  %add2787.i = add i32 %xor2782.i, %or2786.i
  %add2788.i = add i32 %add2770.i, %add2541.i
  %add2789.i = add i32 %add2787.i, %add2770.i
  %or2796.i = tail call i32 @llvm.fshl.i32(i32 %add2788.i, i32 %add2788.i, i32 26) #19
  %or2799.i = tail call i32 @llvm.fshl.i32(i32 %add2788.i, i32 %add2788.i, i32 21) #19
  %xor2800.i = xor i32 %or2796.i, %or2799.i
  %or2803.i = tail call i32 @llvm.fshl.i32(i32 %add2788.i, i32 %add2788.i, i32 7) #19
  %xor2804.i = xor i32 %xor2800.i, %or2803.i
  %xor2806.i = xor i32 %add2726.i, %add2664.i
  %and2807.i = and i32 %add2788.i, %xor2806.i
  %xor2808.i = xor i32 %and2807.i, %add2664.i
  %or2813.i = tail call i32 @llvm.fshl.i32(i32 %add2707.i, i32 %add2707.i, i32 15) #19
  %or2816.i = tail call i32 @llvm.fshl.i32(i32 %add2707.i, i32 %add2707.i, i32 13) #19
  %xor2817.i = xor i32 %or2813.i, %or2816.i
  %shr2818.i = lshr i32 %add2707.i, 10
  %xor2819.i = xor i32 %xor2817.i, %shr2818.i
  %or2823.i = tail call i32 @llvm.fshl.i32(i32 %add1901.i, i32 %add1901.i, i32 25) #19
  %or2826.i = tail call i32 @llvm.fshl.i32(i32 %add1901.i, i32 %add1901.i, i32 14) #19
  %xor2827.i = xor i32 %or2823.i, %or2826.i
  %shr2828.i = lshr i32 %add1901.i, 3
  %xor2829.i = xor i32 %xor2827.i, %shr2828.i
  %add2820.i = add i32 %xor2829.i, %add1839.i
  %add2830.i = add i32 %add2820.i, %add2397.i
  %add2831.i = add i32 %add2830.i, %xor2819.i
  %add2805.i = add i32 %add2831.i, 659060556
  %add2809.i = add i32 %add2805.i, %add2602.i
  %add2810.i = add i32 %add2809.i, %xor2808.i
  %add2832.i = add i32 %add2810.i, %xor2804.i
  %or2836.i = tail call i32 @llvm.fshl.i32(i32 %add2789.i, i32 %add2789.i, i32 30) #19
  %or2839.i = tail call i32 @llvm.fshl.i32(i32 %add2789.i, i32 %add2789.i, i32 19) #19
  %xor2840.i = xor i32 %or2836.i, %or2839.i
  %or2843.i = tail call i32 @llvm.fshl.i32(i32 %add2789.i, i32 %add2789.i, i32 10) #19
  %xor2844.i = xor i32 %xor2840.i, %or2843.i
  %and2845.i = and i32 %add2789.i, %add2727.i
  %or2846.i = or i32 %add2789.i, %add2727.i
  %and2847.i = and i32 %or2846.i, %add2665.i
  %or2848.i = or i32 %and2847.i, %and2845.i
  %add2849.i = add i32 %xor2844.i, %or2848.i
  %add2850.i = add i32 %add2832.i, %add2603.i
  %add2851.i = add i32 %add2849.i, %add2832.i
  %or2858.i = tail call i32 @llvm.fshl.i32(i32 %add2850.i, i32 %add2850.i, i32 26) #19
  %or2861.i = tail call i32 @llvm.fshl.i32(i32 %add2850.i, i32 %add2850.i, i32 21) #19
  %xor2862.i = xor i32 %or2858.i, %or2861.i
  %or2865.i = tail call i32 @llvm.fshl.i32(i32 %add2850.i, i32 %add2850.i, i32 7) #19
  %xor2866.i = xor i32 %xor2862.i, %or2865.i
  %xor2868.i = xor i32 %add2788.i, %add2726.i
  %and2869.i = and i32 %add2850.i, %xor2868.i
  %xor2870.i = xor i32 %and2869.i, %add2726.i
  %or2875.i = tail call i32 @llvm.fshl.i32(i32 %add2769.i, i32 %add2769.i, i32 15) #19
  %or2878.i = tail call i32 @llvm.fshl.i32(i32 %add2769.i, i32 %add2769.i, i32 13) #19
  %xor2879.i = xor i32 %or2875.i, %or2878.i
  %shr2880.i = lshr i32 %add2769.i, 10
  %xor2881.i = xor i32 %xor2879.i, %shr2880.i
  %or2885.i = tail call i32 @llvm.fshl.i32(i32 %add1963.i, i32 %add1963.i, i32 25) #19
  %or2888.i = tail call i32 @llvm.fshl.i32(i32 %add1963.i, i32 %add1963.i, i32 14) #19
  %xor2889.i = xor i32 %or2885.i, %or2888.i
  %shr2890.i = lshr i32 %add1963.i, 3
  %xor2891.i = xor i32 %xor2889.i, %shr2890.i
  %add2882.i = add i32 %xor2891.i, %add1901.i
  %add2892.i = add i32 %add2882.i, %add2459.i
  %add2893.i = add i32 %add2892.i, %xor2881.i
  %add2867.i = add i32 %add2893.i, 883997877
  %add2871.i = add i32 %add2867.i, %add2664.i
  %add2872.i = add i32 %add2871.i, %xor2870.i
  %add2894.i = add i32 %add2872.i, %xor2866.i
  %or2898.i = tail call i32 @llvm.fshl.i32(i32 %add2851.i, i32 %add2851.i, i32 30) #19
  %or2901.i = tail call i32 @llvm.fshl.i32(i32 %add2851.i, i32 %add2851.i, i32 19) #19
  %xor2902.i = xor i32 %or2898.i, %or2901.i
  %or2905.i = tail call i32 @llvm.fshl.i32(i32 %add2851.i, i32 %add2851.i, i32 10) #19
  %xor2906.i = xor i32 %xor2902.i, %or2905.i
  %and2907.i = and i32 %add2851.i, %add2789.i
  %or2908.i = or i32 %add2851.i, %add2789.i
  %and2909.i = and i32 %or2908.i, %add2727.i
  %or2910.i = or i32 %and2909.i, %and2907.i
  %add2911.i = add i32 %xor2906.i, %or2910.i
  %add2912.i = add i32 %add2894.i, %add2665.i
  %add2913.i = add i32 %add2911.i, %add2894.i
  %or2920.i = tail call i32 @llvm.fshl.i32(i32 %add2912.i, i32 %add2912.i, i32 26) #19
  %or2923.i = tail call i32 @llvm.fshl.i32(i32 %add2912.i, i32 %add2912.i, i32 21) #19
  %xor2924.i = xor i32 %or2920.i, %or2923.i
  %or2927.i = tail call i32 @llvm.fshl.i32(i32 %add2912.i, i32 %add2912.i, i32 7) #19
  %xor2928.i = xor i32 %xor2924.i, %or2927.i
  %xor2930.i = xor i32 %add2850.i, %add2788.i
  %and2931.i = and i32 %add2912.i, %xor2930.i
  %xor2932.i = xor i32 %and2931.i, %add2788.i
  %or2937.i = tail call i32 @llvm.fshl.i32(i32 %add2831.i, i32 %add2831.i, i32 15) #19
  %or2940.i = tail call i32 @llvm.fshl.i32(i32 %add2831.i, i32 %add2831.i, i32 13) #19
  %xor2941.i = xor i32 %or2937.i, %or2940.i
  %shr2942.i = lshr i32 %add2831.i, 10
  %xor2943.i = xor i32 %xor2941.i, %shr2942.i
  %or2947.i = tail call i32 @llvm.fshl.i32(i32 %add2025.i, i32 %add2025.i, i32 25) #19
  %or2950.i = tail call i32 @llvm.fshl.i32(i32 %add2025.i, i32 %add2025.i, i32 14) #19
  %xor2951.i = xor i32 %or2947.i, %or2950.i
  %shr2952.i = lshr i32 %add2025.i, 3
  %xor2953.i = xor i32 %xor2951.i, %shr2952.i
  %add2944.i = add i32 %xor2953.i, %add1963.i
  %add2954.i = add i32 %add2944.i, %add2521.i
  %add2955.i = add i32 %add2954.i, %xor2943.i
  %add2929.i = add i32 %add2955.i, 958139571
  %add2933.i = add i32 %add2929.i, %add2726.i
  %add2934.i = add i32 %add2933.i, %xor2932.i
  %add2956.i = add i32 %add2934.i, %xor2928.i
  %or2960.i = tail call i32 @llvm.fshl.i32(i32 %add2913.i, i32 %add2913.i, i32 30) #19
  %or2963.i = tail call i32 @llvm.fshl.i32(i32 %add2913.i, i32 %add2913.i, i32 19) #19
  %xor2964.i = xor i32 %or2960.i, %or2963.i
  %or2967.i = tail call i32 @llvm.fshl.i32(i32 %add2913.i, i32 %add2913.i, i32 10) #19
  %xor2968.i = xor i32 %xor2964.i, %or2967.i
  %and2969.i = and i32 %add2913.i, %add2851.i
  %or2970.i = or i32 %add2913.i, %add2851.i
  %and2971.i = and i32 %or2970.i, %add2789.i
  %or2972.i = or i32 %and2971.i, %and2969.i
  %add2973.i = add i32 %xor2968.i, %or2972.i
  %add2974.i = add i32 %add2956.i, %add2727.i
  %add2975.i = add i32 %add2973.i, %add2956.i
  %or2982.i = tail call i32 @llvm.fshl.i32(i32 %add2974.i, i32 %add2974.i, i32 26) #19
  %or2985.i = tail call i32 @llvm.fshl.i32(i32 %add2974.i, i32 %add2974.i, i32 21) #19
  %xor2986.i = xor i32 %or2982.i, %or2985.i
  %or2989.i = tail call i32 @llvm.fshl.i32(i32 %add2974.i, i32 %add2974.i, i32 7) #19
  %xor2990.i = xor i32 %xor2986.i, %or2989.i
  %xor2992.i = xor i32 %add2912.i, %add2850.i
  %and2993.i = and i32 %add2974.i, %xor2992.i
  %xor2994.i = xor i32 %and2993.i, %add2850.i
  %or2999.i = tail call i32 @llvm.fshl.i32(i32 %add2893.i, i32 %add2893.i, i32 15) #19
  %or3002.i = tail call i32 @llvm.fshl.i32(i32 %add2893.i, i32 %add2893.i, i32 13) #19
  %xor3003.i = xor i32 %or2999.i, %or3002.i
  %shr3004.i = lshr i32 %add2893.i, 10
  %xor3005.i = xor i32 %xor3003.i, %shr3004.i
  %or3009.i = tail call i32 @llvm.fshl.i32(i32 %add2087.i, i32 %add2087.i, i32 25) #19
  %or3012.i = tail call i32 @llvm.fshl.i32(i32 %add2087.i, i32 %add2087.i, i32 14) #19
  %xor3013.i = xor i32 %or3009.i, %or3012.i
  %shr3014.i = lshr i32 %add2087.i, 3
  %xor3015.i = xor i32 %xor3013.i, %shr3014.i
  %add3006.i = add i32 %xor3015.i, %add2025.i
  %add3016.i = add i32 %add3006.i, %add2583.i
  %add3017.i = add i32 %add3016.i, %xor3005.i
  %add2991.i = add i32 %add3017.i, 1322822218
  %add2995.i = add i32 %add2991.i, %add2788.i
  %add2996.i = add i32 %add2995.i, %xor2994.i
  %add3018.i = add i32 %add2996.i, %xor2990.i
  %or3022.i = tail call i32 @llvm.fshl.i32(i32 %add2975.i, i32 %add2975.i, i32 30) #19
  %or3025.i = tail call i32 @llvm.fshl.i32(i32 %add2975.i, i32 %add2975.i, i32 19) #19
  %xor3026.i = xor i32 %or3022.i, %or3025.i
  %or3029.i = tail call i32 @llvm.fshl.i32(i32 %add2975.i, i32 %add2975.i, i32 10) #19
  %xor3030.i = xor i32 %xor3026.i, %or3029.i
  %and3031.i = and i32 %add2975.i, %add2913.i
  %or3032.i = or i32 %add2975.i, %add2913.i
  %and3033.i = and i32 %or3032.i, %add2851.i
  %or3034.i = or i32 %and3033.i, %and3031.i
  %add3035.i = add i32 %xor3030.i, %or3034.i
  %add3036.i = add i32 %add3018.i, %add2789.i
  %add3037.i = add i32 %add3035.i, %add3018.i
  %or3044.i = tail call i32 @llvm.fshl.i32(i32 %add3036.i, i32 %add3036.i, i32 26) #19
  %or3047.i = tail call i32 @llvm.fshl.i32(i32 %add3036.i, i32 %add3036.i, i32 21) #19
  %xor3048.i = xor i32 %or3044.i, %or3047.i
  %or3051.i = tail call i32 @llvm.fshl.i32(i32 %add3036.i, i32 %add3036.i, i32 7) #19
  %xor3052.i = xor i32 %xor3048.i, %or3051.i
  %xor3054.i = xor i32 %add2974.i, %add2912.i
  %and3055.i = and i32 %add3036.i, %xor3054.i
  %xor3056.i = xor i32 %and3055.i, %add2912.i
  %or3061.i = tail call i32 @llvm.fshl.i32(i32 %add2955.i, i32 %add2955.i, i32 15) #19
  %or3064.i = tail call i32 @llvm.fshl.i32(i32 %add2955.i, i32 %add2955.i, i32 13) #19
  %xor3065.i = xor i32 %or3061.i, %or3064.i
  %shr3066.i = lshr i32 %add2955.i, 10
  %xor3067.i = xor i32 %xor3065.i, %shr3066.i
  %or3071.i = tail call i32 @llvm.fshl.i32(i32 %add2149.i, i32 %add2149.i, i32 25) #19
  %or3074.i = tail call i32 @llvm.fshl.i32(i32 %add2149.i, i32 %add2149.i, i32 14) #19
  %xor3075.i = xor i32 %or3071.i, %or3074.i
  %shr3076.i = lshr i32 %add2149.i, 3
  %xor3077.i = xor i32 %xor3075.i, %shr3076.i
  %add3068.i = add i32 %xor3077.i, %add2087.i
  %add3078.i = add i32 %add3068.i, %add2645.i
  %add3079.i = add i32 %add3078.i, %xor3067.i
  %add3053.i = add i32 %add3079.i, 1537002063
  %add3057.i = add i32 %add3053.i, %add2850.i
  %add3058.i = add i32 %add3057.i, %xor3056.i
  %add3080.i = add i32 %add3058.i, %xor3052.i
  %or3084.i = tail call i32 @llvm.fshl.i32(i32 %add3037.i, i32 %add3037.i, i32 30) #19
  %or3087.i = tail call i32 @llvm.fshl.i32(i32 %add3037.i, i32 %add3037.i, i32 19) #19
  %xor3088.i = xor i32 %or3084.i, %or3087.i
  %or3091.i = tail call i32 @llvm.fshl.i32(i32 %add3037.i, i32 %add3037.i, i32 10) #19
  %xor3092.i = xor i32 %xor3088.i, %or3091.i
  %and3093.i = and i32 %add3037.i, %add2975.i
  %or3094.i = or i32 %add3037.i, %add2975.i
  %and3095.i = and i32 %or3094.i, %add2913.i
  %or3096.i = or i32 %and3095.i, %and3093.i
  %add3097.i = add i32 %xor3092.i, %or3096.i
  %add3098.i = add i32 %add3080.i, %add2851.i
  %add3099.i = add i32 %add3097.i, %add3080.i
  %or3106.i = tail call i32 @llvm.fshl.i32(i32 %add3098.i, i32 %add3098.i, i32 26) #19
  %or3109.i = tail call i32 @llvm.fshl.i32(i32 %add3098.i, i32 %add3098.i, i32 21) #19
  %xor3110.i = xor i32 %or3106.i, %or3109.i
  %or3113.i = tail call i32 @llvm.fshl.i32(i32 %add3098.i, i32 %add3098.i, i32 7) #19
  %xor3114.i = xor i32 %xor3110.i, %or3113.i
  %xor3116.i = xor i32 %add3036.i, %add2974.i
  %and3117.i = and i32 %add3098.i, %xor3116.i
  %xor3118.i = xor i32 %and3117.i, %add2974.i
  %or3123.i = tail call i32 @llvm.fshl.i32(i32 %add3017.i, i32 %add3017.i, i32 15) #19
  %or3126.i = tail call i32 @llvm.fshl.i32(i32 %add3017.i, i32 %add3017.i, i32 13) #19
  %xor3127.i = xor i32 %or3123.i, %or3126.i
  %shr3128.i = lshr i32 %add3017.i, 10
  %xor3129.i = xor i32 %xor3127.i, %shr3128.i
  %or3133.i = tail call i32 @llvm.fshl.i32(i32 %add2211.i, i32 %add2211.i, i32 25) #19
  %or3136.i = tail call i32 @llvm.fshl.i32(i32 %add2211.i, i32 %add2211.i, i32 14) #19
  %xor3137.i = xor i32 %or3133.i, %or3136.i
  %shr3138.i = lshr i32 %add2211.i, 3
  %xor3139.i = xor i32 %xor3137.i, %shr3138.i
  %add3130.i = add i32 %xor3139.i, %add2149.i
  %add3140.i = add i32 %add3130.i, %add2707.i
  %add3141.i = add i32 %add3140.i, %xor3129.i
  %add3115.i = add i32 %add3141.i, 1747873779
  %add3119.i = add i32 %add3115.i, %add2912.i
  %add3120.i = add i32 %add3119.i, %xor3118.i
  %add3142.i = add i32 %add3120.i, %xor3114.i
  %or3146.i = tail call i32 @llvm.fshl.i32(i32 %add3099.i, i32 %add3099.i, i32 30) #19
  %or3149.i = tail call i32 @llvm.fshl.i32(i32 %add3099.i, i32 %add3099.i, i32 19) #19
  %xor3150.i = xor i32 %or3146.i, %or3149.i
  %or3153.i = tail call i32 @llvm.fshl.i32(i32 %add3099.i, i32 %add3099.i, i32 10) #19
  %xor3154.i = xor i32 %xor3150.i, %or3153.i
  %and3155.i = and i32 %add3099.i, %add3037.i
  %or3156.i = or i32 %add3099.i, %add3037.i
  %and3157.i = and i32 %or3156.i, %add2975.i
  %or3158.i = or i32 %and3157.i, %and3155.i
  %add3159.i = add i32 %xor3154.i, %or3158.i
  %add3160.i = add i32 %add3142.i, %add2913.i
  %add3161.i = add i32 %add3159.i, %add3142.i
  %or3168.i = tail call i32 @llvm.fshl.i32(i32 %add3160.i, i32 %add3160.i, i32 26) #19
  %or3171.i = tail call i32 @llvm.fshl.i32(i32 %add3160.i, i32 %add3160.i, i32 21) #19
  %xor3172.i = xor i32 %or3168.i, %or3171.i
  %or3175.i = tail call i32 @llvm.fshl.i32(i32 %add3160.i, i32 %add3160.i, i32 7) #19
  %xor3176.i = xor i32 %xor3172.i, %or3175.i
  %xor3178.i = xor i32 %add3098.i, %add3036.i
  %and3179.i = and i32 %add3160.i, %xor3178.i
  %xor3180.i = xor i32 %and3179.i, %add3036.i
  %or3185.i = tail call i32 @llvm.fshl.i32(i32 %add3079.i, i32 %add3079.i, i32 15) #19
  %or3188.i = tail call i32 @llvm.fshl.i32(i32 %add3079.i, i32 %add3079.i, i32 13) #19
  %xor3189.i = xor i32 %or3185.i, %or3188.i
  %shr3190.i = lshr i32 %add3079.i, 10
  %xor3191.i = xor i32 %xor3189.i, %shr3190.i
  %or3195.i = tail call i32 @llvm.fshl.i32(i32 %add2273.i, i32 %add2273.i, i32 25) #19
  %or3198.i = tail call i32 @llvm.fshl.i32(i32 %add2273.i, i32 %add2273.i, i32 14) #19
  %xor3199.i = xor i32 %or3195.i, %or3198.i
  %shr3200.i = lshr i32 %add2273.i, 3
  %xor3201.i = xor i32 %xor3199.i, %shr3200.i
  %add3192.i = add i32 %xor3201.i, %add2211.i
  %add3202.i = add i32 %add3192.i, %add2769.i
  %add3203.i = add i32 %add3202.i, %xor3191.i
  %add3177.i = add i32 %add3203.i, 1955562222
  %add3181.i = add i32 %add3177.i, %add2974.i
  %add3182.i = add i32 %add3181.i, %xor3180.i
  %add3204.i = add i32 %add3182.i, %xor3176.i
  %or3208.i = tail call i32 @llvm.fshl.i32(i32 %add3161.i, i32 %add3161.i, i32 30) #19
  %or3211.i = tail call i32 @llvm.fshl.i32(i32 %add3161.i, i32 %add3161.i, i32 19) #19
  %xor3212.i = xor i32 %or3208.i, %or3211.i
  %or3215.i = tail call i32 @llvm.fshl.i32(i32 %add3161.i, i32 %add3161.i, i32 10) #19
  %xor3216.i = xor i32 %xor3212.i, %or3215.i
  %and3217.i = and i32 %add3161.i, %add3099.i
  %or3218.i = or i32 %add3161.i, %add3099.i
  %and3219.i = and i32 %or3218.i, %add3037.i
  %or3220.i = or i32 %and3219.i, %and3217.i
  %add3221.i = add i32 %xor3216.i, %or3220.i
  %add3222.i = add i32 %add3204.i, %add2975.i
  %add3223.i = add i32 %add3221.i, %add3204.i
  %or3230.i = tail call i32 @llvm.fshl.i32(i32 %add3222.i, i32 %add3222.i, i32 26) #19
  %or3233.i = tail call i32 @llvm.fshl.i32(i32 %add3222.i, i32 %add3222.i, i32 21) #19
  %xor3234.i = xor i32 %or3230.i, %or3233.i
  %or3237.i = tail call i32 @llvm.fshl.i32(i32 %add3222.i, i32 %add3222.i, i32 7) #19
  %xor3238.i = xor i32 %xor3234.i, %or3237.i
  %xor3240.i = xor i32 %add3160.i, %add3098.i
  %and3241.i = and i32 %add3222.i, %xor3240.i
  %xor3242.i = xor i32 %and3241.i, %add3098.i
  %or3247.i = tail call i32 @llvm.fshl.i32(i32 %add3141.i, i32 %add3141.i, i32 15) #19
  %or3250.i = tail call i32 @llvm.fshl.i32(i32 %add3141.i, i32 %add3141.i, i32 13) #19
  %xor3251.i = xor i32 %or3247.i, %or3250.i
  %shr3252.i = lshr i32 %add3141.i, 10
  %xor3253.i = xor i32 %xor3251.i, %shr3252.i
  %or3257.i = tail call i32 @llvm.fshl.i32(i32 %add2335.i, i32 %add2335.i, i32 25) #19
  %or3260.i = tail call i32 @llvm.fshl.i32(i32 %add2335.i, i32 %add2335.i, i32 14) #19
  %xor3261.i = xor i32 %or3257.i, %or3260.i
  %shr3262.i = lshr i32 %add2335.i, 3
  %xor3263.i = xor i32 %xor3261.i, %shr3262.i
  %add3254.i = add i32 %xor3263.i, %add2273.i
  %add3264.i = add i32 %add3254.i, %add2831.i
  %add3265.i = add i32 %add3264.i, %xor3253.i
  %add3239.i = add i32 %add3265.i, 2024104815
  %add3243.i = add i32 %add3239.i, %add3036.i
  %add3244.i = add i32 %add3243.i, %xor3242.i
  %add3266.i = add i32 %add3244.i, %xor3238.i
  %or3270.i = tail call i32 @llvm.fshl.i32(i32 %add3223.i, i32 %add3223.i, i32 30) #19
  %or3273.i = tail call i32 @llvm.fshl.i32(i32 %add3223.i, i32 %add3223.i, i32 19) #19
  %xor3274.i = xor i32 %or3270.i, %or3273.i
  %or3277.i = tail call i32 @llvm.fshl.i32(i32 %add3223.i, i32 %add3223.i, i32 10) #19
  %xor3278.i = xor i32 %xor3274.i, %or3277.i
  %and3279.i = and i32 %add3223.i, %add3161.i
  %or3280.i = or i32 %add3223.i, %add3161.i
  %and3281.i = and i32 %or3280.i, %add3099.i
  %or3282.i = or i32 %and3281.i, %and3279.i
  %add3283.i = add i32 %xor3278.i, %or3282.i
  %add3284.i = add i32 %add3266.i, %add3037.i
  %add3285.i = add i32 %add3283.i, %add3266.i
  %or3292.i = tail call i32 @llvm.fshl.i32(i32 %add3284.i, i32 %add3284.i, i32 26) #19
  %or3295.i = tail call i32 @llvm.fshl.i32(i32 %add3284.i, i32 %add3284.i, i32 21) #19
  %xor3296.i = xor i32 %or3292.i, %or3295.i
  %or3299.i = tail call i32 @llvm.fshl.i32(i32 %add3284.i, i32 %add3284.i, i32 7) #19
  %xor3300.i = xor i32 %xor3296.i, %or3299.i
  %xor3302.i = xor i32 %add3222.i, %add3160.i
  %and3303.i = and i32 %add3284.i, %xor3302.i
  %xor3304.i = xor i32 %and3303.i, %add3160.i
  %or3309.i = tail call i32 @llvm.fshl.i32(i32 %add3203.i, i32 %add3203.i, i32 15) #19
  %or3312.i = tail call i32 @llvm.fshl.i32(i32 %add3203.i, i32 %add3203.i, i32 13) #19
  %xor3313.i = xor i32 %or3309.i, %or3312.i
  %shr3314.i = lshr i32 %add3203.i, 10
  %xor3315.i = xor i32 %xor3313.i, %shr3314.i
  %or3319.i = tail call i32 @llvm.fshl.i32(i32 %add2397.i, i32 %add2397.i, i32 25) #19
  %or3322.i = tail call i32 @llvm.fshl.i32(i32 %add2397.i, i32 %add2397.i, i32 14) #19
  %xor3323.i = xor i32 %or3319.i, %or3322.i
  %shr3324.i = lshr i32 %add2397.i, 3
  %xor3325.i = xor i32 %xor3323.i, %shr3324.i
  %add3316.i = add i32 %xor3325.i, %add2335.i
  %add3326.i = add i32 %add3316.i, %add2893.i
  %add3327.i = add i32 %add3326.i, %xor3315.i
  %add3301.i = add i32 %add3327.i, -2067236844
  %add3305.i = add i32 %add3301.i, %add3098.i
  %add3306.i = add i32 %add3305.i, %xor3304.i
  %add3328.i = add i32 %add3306.i, %xor3300.i
  %or3332.i = tail call i32 @llvm.fshl.i32(i32 %add3285.i, i32 %add3285.i, i32 30) #19
  %or3335.i = tail call i32 @llvm.fshl.i32(i32 %add3285.i, i32 %add3285.i, i32 19) #19
  %xor3336.i = xor i32 %or3332.i, %or3335.i
  %or3339.i = tail call i32 @llvm.fshl.i32(i32 %add3285.i, i32 %add3285.i, i32 10) #19
  %xor3340.i = xor i32 %xor3336.i, %or3339.i
  %and3341.i = and i32 %add3285.i, %add3223.i
  %or3342.i = or i32 %add3285.i, %add3223.i
  %and3343.i = and i32 %or3342.i, %add3161.i
  %or3344.i = or i32 %and3343.i, %and3341.i
  %add3345.i = add i32 %xor3340.i, %or3344.i
  %add3346.i = add i32 %add3328.i, %add3099.i
  %add3347.i = add i32 %add3345.i, %add3328.i
  %or3354.i = tail call i32 @llvm.fshl.i32(i32 %add3346.i, i32 %add3346.i, i32 26) #19
  %or3357.i = tail call i32 @llvm.fshl.i32(i32 %add3346.i, i32 %add3346.i, i32 21) #19
  %xor3358.i = xor i32 %or3354.i, %or3357.i
  %or3361.i = tail call i32 @llvm.fshl.i32(i32 %add3346.i, i32 %add3346.i, i32 7) #19
  %xor3362.i = xor i32 %xor3358.i, %or3361.i
  %xor3364.i = xor i32 %add3284.i, %add3222.i
  %and3365.i = and i32 %add3346.i, %xor3364.i
  %xor3366.i = xor i32 %and3365.i, %add3222.i
  %or3371.i = tail call i32 @llvm.fshl.i32(i32 %add3265.i, i32 %add3265.i, i32 15) #19
  %or3374.i = tail call i32 @llvm.fshl.i32(i32 %add3265.i, i32 %add3265.i, i32 13) #19
  %xor3375.i = xor i32 %or3371.i, %or3374.i
  %shr3376.i = lshr i32 %add3265.i, 10
  %xor3377.i = xor i32 %xor3375.i, %shr3376.i
  %or3381.i = tail call i32 @llvm.fshl.i32(i32 %add2459.i, i32 %add2459.i, i32 25) #19
  %or3384.i = tail call i32 @llvm.fshl.i32(i32 %add2459.i, i32 %add2459.i, i32 14) #19
  %xor3385.i = xor i32 %or3381.i, %or3384.i
  %shr3386.i = lshr i32 %add2459.i, 3
  %xor3387.i = xor i32 %xor3385.i, %shr3386.i
  %add3378.i = add i32 %xor3387.i, %add2397.i
  %add3388.i = add i32 %add3378.i, %add2955.i
  %add3389.i = add i32 %add3388.i, %xor3377.i
  %add3363.i = add i32 %add3389.i, -1933114872
  %add3367.i = add i32 %add3363.i, %add3160.i
  %add3368.i = add i32 %add3367.i, %xor3366.i
  %add3390.i = add i32 %add3368.i, %xor3362.i
  %or3394.i = tail call i32 @llvm.fshl.i32(i32 %add3347.i, i32 %add3347.i, i32 30) #19
  %or3397.i = tail call i32 @llvm.fshl.i32(i32 %add3347.i, i32 %add3347.i, i32 19) #19
  %xor3398.i = xor i32 %or3394.i, %or3397.i
  %or3401.i = tail call i32 @llvm.fshl.i32(i32 %add3347.i, i32 %add3347.i, i32 10) #19
  %xor3402.i = xor i32 %xor3398.i, %or3401.i
  %and3403.i = and i32 %add3347.i, %add3285.i
  %or3404.i = or i32 %add3347.i, %add3285.i
  %and3405.i = and i32 %or3404.i, %add3223.i
  %or3406.i = or i32 %and3405.i, %and3403.i
  %add3407.i = add i32 %xor3402.i, %or3406.i
  %add3408.i = add i32 %add3390.i, %add3161.i
  %add3409.i = add i32 %add3407.i, %add3390.i
  %or3416.i = tail call i32 @llvm.fshl.i32(i32 %add3408.i, i32 %add3408.i, i32 26) #19
  %or3419.i = tail call i32 @llvm.fshl.i32(i32 %add3408.i, i32 %add3408.i, i32 21) #19
  %xor3420.i = xor i32 %or3416.i, %or3419.i
  %or3423.i = tail call i32 @llvm.fshl.i32(i32 %add3408.i, i32 %add3408.i, i32 7) #19
  %xor3424.i = xor i32 %xor3420.i, %or3423.i
  %xor3426.i = xor i32 %add3346.i, %add3284.i
  %and3427.i = and i32 %add3408.i, %xor3426.i
  %xor3428.i = xor i32 %and3427.i, %add3284.i
  %or3433.i = tail call i32 @llvm.fshl.i32(i32 %add3327.i, i32 %add3327.i, i32 15) #19
  %or3436.i = tail call i32 @llvm.fshl.i32(i32 %add3327.i, i32 %add3327.i, i32 13) #19
  %xor3437.i = xor i32 %or3433.i, %or3436.i
  %shr3438.i = lshr i32 %add3327.i, 10
  %xor3439.i = xor i32 %xor3437.i, %shr3438.i
  %or3443.i = tail call i32 @llvm.fshl.i32(i32 %add2521.i, i32 %add2521.i, i32 25) #19
  %or3446.i = tail call i32 @llvm.fshl.i32(i32 %add2521.i, i32 %add2521.i, i32 14) #19
  %xor3447.i = xor i32 %or3443.i, %or3446.i
  %shr3448.i = lshr i32 %add2521.i, 3
  %xor3449.i = xor i32 %xor3447.i, %shr3448.i
  %add3440.i = add i32 %xor3449.i, %add2459.i
  %add3450.i = add i32 %add3440.i, %add3017.i
  %add3451.i = add i32 %add3450.i, %xor3439.i
  %add3425.i = add i32 %add3451.i, -1866530822
  %add3429.i = add i32 %add3425.i, %add3222.i
  %add3430.i = add i32 %add3429.i, %xor3428.i
  %add3452.i = add i32 %add3430.i, %xor3424.i
  %or3456.i = tail call i32 @llvm.fshl.i32(i32 %add3409.i, i32 %add3409.i, i32 30) #19
  %or3459.i = tail call i32 @llvm.fshl.i32(i32 %add3409.i, i32 %add3409.i, i32 19) #19
  %xor3460.i = xor i32 %or3456.i, %or3459.i
  %or3463.i = tail call i32 @llvm.fshl.i32(i32 %add3409.i, i32 %add3409.i, i32 10) #19
  %xor3464.i = xor i32 %xor3460.i, %or3463.i
  %and3465.i = and i32 %add3409.i, %add3347.i
  %or3466.i = or i32 %add3409.i, %add3347.i
  %and3467.i = and i32 %or3466.i, %add3285.i
  %or3468.i = or i32 %and3467.i, %and3465.i
  %add3469.i = add i32 %xor3464.i, %or3468.i
  %add3470.i = add i32 %add3452.i, %add3223.i
  %add3471.i = add i32 %add3469.i, %add3452.i
  %or3478.i = tail call i32 @llvm.fshl.i32(i32 %add3470.i, i32 %add3470.i, i32 26) #19
  %or3481.i = tail call i32 @llvm.fshl.i32(i32 %add3470.i, i32 %add3470.i, i32 21) #19
  %xor3482.i = xor i32 %or3478.i, %or3481.i
  %or3485.i = tail call i32 @llvm.fshl.i32(i32 %add3470.i, i32 %add3470.i, i32 7) #19
  %xor3486.i = xor i32 %xor3482.i, %or3485.i
  %xor3488.i = xor i32 %add3408.i, %add3346.i
  %and3489.i = and i32 %add3470.i, %xor3488.i
  %xor3490.i = xor i32 %and3489.i, %add3346.i
  %or3495.i = tail call i32 @llvm.fshl.i32(i32 %add3389.i, i32 %add3389.i, i32 15) #19
  %or3498.i = tail call i32 @llvm.fshl.i32(i32 %add3389.i, i32 %add3389.i, i32 13) #19
  %xor3499.i = xor i32 %or3495.i, %or3498.i
  %shr3500.i = lshr i32 %add3389.i, 10
  %xor3501.i = xor i32 %xor3499.i, %shr3500.i
  %or3505.i = tail call i32 @llvm.fshl.i32(i32 %add2583.i, i32 %add2583.i, i32 25) #19
  %or3508.i = tail call i32 @llvm.fshl.i32(i32 %add2583.i, i32 %add2583.i, i32 14) #19
  %xor3509.i = xor i32 %or3505.i, %or3508.i
  %shr3510.i = lshr i32 %add2583.i, 3
  %xor3511.i = xor i32 %xor3509.i, %shr3510.i
  %add3502.i = add i32 %xor3511.i, %add2521.i
  %add3512.i = add i32 %add3502.i, %add3079.i
  %add3513.i = add i32 %add3512.i, %xor3501.i
  %add3487.i = add i32 %add3513.i, -1538233109
  %add3491.i = add i32 %add3487.i, %add3284.i
  %add3492.i = add i32 %add3491.i, %xor3490.i
  %add3514.i = add i32 %add3492.i, %xor3486.i
  %or3518.i = tail call i32 @llvm.fshl.i32(i32 %add3471.i, i32 %add3471.i, i32 30) #19
  %or3521.i = tail call i32 @llvm.fshl.i32(i32 %add3471.i, i32 %add3471.i, i32 19) #19
  %xor3522.i = xor i32 %or3518.i, %or3521.i
  %or3525.i = tail call i32 @llvm.fshl.i32(i32 %add3471.i, i32 %add3471.i, i32 10) #19
  %xor3526.i = xor i32 %xor3522.i, %or3525.i
  %and3527.i = and i32 %add3471.i, %add3409.i
  %or3528.i = or i32 %add3471.i, %add3409.i
  %and3529.i = and i32 %or3528.i, %add3347.i
  %or3530.i = or i32 %and3529.i, %and3527.i
  %add3531.i = add i32 %xor3526.i, %or3530.i
  %add3532.i = add i32 %add3514.i, %add3285.i
  %add3533.i = add i32 %add3531.i, %add3514.i
  %or3540.i = tail call i32 @llvm.fshl.i32(i32 %add3532.i, i32 %add3532.i, i32 26) #19
  %or3543.i = tail call i32 @llvm.fshl.i32(i32 %add3532.i, i32 %add3532.i, i32 21) #19
  %xor3544.i = xor i32 %or3540.i, %or3543.i
  %or3547.i = tail call i32 @llvm.fshl.i32(i32 %add3532.i, i32 %add3532.i, i32 7) #19
  %xor3548.i = xor i32 %xor3544.i, %or3547.i
  %xor3550.i = xor i32 %add3470.i, %add3408.i
  %and3551.i = and i32 %add3532.i, %xor3550.i
  %xor3552.i = xor i32 %and3551.i, %add3408.i
  %or3557.i = tail call i32 @llvm.fshl.i32(i32 %add3451.i, i32 %add3451.i, i32 15) #19
  %or3560.i = tail call i32 @llvm.fshl.i32(i32 %add3451.i, i32 %add3451.i, i32 13) #19
  %xor3561.i = xor i32 %or3557.i, %or3560.i
  %shr3562.i = lshr i32 %add3451.i, 10
  %xor3563.i = xor i32 %xor3561.i, %shr3562.i
  %or3568.i = tail call i32 @llvm.fshl.i32(i32 %add2645.i, i32 %add2645.i, i32 25) #19
  %or3571.i = tail call i32 @llvm.fshl.i32(i32 %add2645.i, i32 %add2645.i, i32 14) #19
  %xor3572.i = xor i32 %or3568.i, %or3571.i
  %shr3573.i = lshr i32 %add2645.i, 3
  %xor3574.i = xor i32 %xor3572.i, %shr3573.i
  %add3549.i = add i32 %add2583.i, -1090935817
  %add3553.i = add i32 %add3549.i, %xor3574.i
  %add3554.i = add i32 %add3553.i, %add3141.i
  %add3564.i = add i32 %add3554.i, %xor3563.i
  %add3565.i = add i32 %add3564.i, %add3346.i
  %add3575.i = add i32 %add3565.i, %xor3552.i
  %add3576.i = add i32 %add3575.i, %xor3548.i
  %or3580.i = tail call i32 @llvm.fshl.i32(i32 %add3533.i, i32 %add3533.i, i32 30) #19
  %or3583.i = tail call i32 @llvm.fshl.i32(i32 %add3533.i, i32 %add3533.i, i32 19) #19
  %xor3584.i = xor i32 %or3580.i, %or3583.i
  %or3587.i = tail call i32 @llvm.fshl.i32(i32 %add3533.i, i32 %add3533.i, i32 10) #19
  %xor3588.i = xor i32 %xor3584.i, %or3587.i
  %and3589.i = and i32 %add3533.i, %add3471.i
  %or3590.i = or i32 %add3533.i, %add3471.i
  %and3591.i = and i32 %or3590.i, %add3409.i
  %or3592.i = or i32 %and3591.i, %and3589.i
  %add3593.i = add i32 %xor3588.i, %or3592.i
  %add3594.i = add i32 %add3576.i, %add3347.i
  %add3595.i = add i32 %add3593.i, %add3576.i
  %or3602.i = tail call i32 @llvm.fshl.i32(i32 %add3594.i, i32 %add3594.i, i32 26) #19
  %or3605.i = tail call i32 @llvm.fshl.i32(i32 %add3594.i, i32 %add3594.i, i32 21) #19
  %xor3606.i = xor i32 %or3602.i, %or3605.i
  %or3609.i = tail call i32 @llvm.fshl.i32(i32 %add3594.i, i32 %add3594.i, i32 7) #19
  %xor3610.i = xor i32 %xor3606.i, %or3609.i
  %xor3612.i = xor i32 %add3532.i, %add3470.i
  %and3613.i = and i32 %add3594.i, %xor3612.i
  %xor3614.i = xor i32 %and3613.i, %add3470.i
  %or3619.i = tail call i32 @llvm.fshl.i32(i32 %add3513.i, i32 %add3513.i, i32 15) #19
  %or3622.i = tail call i32 @llvm.fshl.i32(i32 %add3513.i, i32 %add3513.i, i32 13) #19
  %xor3623.i = xor i32 %or3619.i, %or3622.i
  %shr3624.i = lshr i32 %add3513.i, 10
  %xor3625.i = xor i32 %xor3623.i, %shr3624.i
  %or3630.i = tail call i32 @llvm.fshl.i32(i32 %add2707.i, i32 %add2707.i, i32 25) #19
  %or3633.i = tail call i32 @llvm.fshl.i32(i32 %add2707.i, i32 %add2707.i, i32 14) #19
  %xor3634.i = xor i32 %or3630.i, %or3633.i
  %shr3635.i = lshr i32 %add2707.i, 3
  %xor3636.i = xor i32 %xor3634.i, %shr3635.i
  %add3611.i = add i32 %add2645.i, -965641998
  %add3615.i = add i32 %add3611.i, %xor3636.i
  %add3616.i = add i32 %add3615.i, %add3203.i
  %add3626.i = add i32 %add3616.i, %xor3625.i
  %add3627.i = add i32 %add3626.i, %add3408.i
  %add3637.i = add i32 %add3627.i, %xor3614.i
  %add3638.i = add i32 %add3637.i, %xor3610.i
  %or3642.i = tail call i32 @llvm.fshl.i32(i32 %add3595.i, i32 %add3595.i, i32 30) #19
  %or3645.i = tail call i32 @llvm.fshl.i32(i32 %add3595.i, i32 %add3595.i, i32 19) #19
  %xor3646.i = xor i32 %or3642.i, %or3645.i
  %or3649.i = tail call i32 @llvm.fshl.i32(i32 %add3595.i, i32 %add3595.i, i32 10) #19
  %xor3650.i = xor i32 %xor3646.i, %or3649.i
  %and3651.i = and i32 %add3595.i, %add3533.i
  %or3652.i = or i32 %add3595.i, %add3533.i
  %and3653.i = and i32 %or3652.i, %add3471.i
  %or3654.i = or i32 %and3653.i, %and3651.i
  %add3655.i = add i32 %or3654.i, %1
  %add3657.i = add i32 %add3655.i, %xor3650.i
  %add3661.i = add i32 %add3657.i, %add3638.i
  store i32 %add3661.i, i32* %arraydecay8, align 4, !tbaa !3
  %add3663.i = add i32 %add3595.i, %2
  store i32 %add3663.i, i32* %arrayidx1.i, align 4, !tbaa !3
  %add3665.i = add i32 %add3533.i, %3
  store i32 %add3665.i, i32* %arrayidx2.i, align 4, !tbaa !3
  %add3667.i = add i32 %add3471.i, %4
  store i32 %add3667.i, i32* %arrayidx3.i, align 4, !tbaa !3
  %add3656.i = add i32 %add3409.i, %5
  %add3669.i = add i32 %add3656.i, %add3638.i
  store i32 %add3669.i, i32* %arrayidx4.i, align 4, !tbaa !3
  %add3671.i = add i32 %add3594.i, %6
  store i32 %add3671.i, i32* %arrayidx5.i, align 4, !tbaa !3
  %add3673.i = add i32 %add3532.i, %7
  store i32 %add3673.i, i32* %arrayidx6.i, align 4, !tbaa !3
  %add3675.i = add i32 %add3470.i, %8
  store i32 %add3675.i, i32* %arrayidx7.i, align 4, !tbaa !3
  %cmp3.not = icmp ult i64 %sub7, 64
  br i1 %cmp3.not, label %while.end, label %while.body, !llvm.loop !69

while.end:                                        ; preds = %while.body, %entry
  %len.addr.0.lcssa = phi i64 [ %len, %entry ], [ %sub7, %while.body ]
  %bufsize.0.lcssa = phi i64 [ %and, %entry ], [ 0, %while.body ]
  %data.addr.0.lcssa = phi i8* [ %data, %entry ], [ %add.ptr6, %while.body ]
  %tobool.not = icmp eq i64 %len.addr.0.lcssa, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %while.end
  %add.ptr13 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 1, i64 %bufsize.0.lcssa
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %add.ptr13, i8* align 1 %data.addr.0.lcssa, i64 %len.addr.0.lcssa, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_sha256_finalize(%struct.secp256k1_sha256* noundef %hash, i8* nocapture noundef writeonly %out32) unnamed_addr #9 {
entry:
  %sizedesc = alloca [8 x i8], align 1
  %0 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  %bytes = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 2
  %1 = load i64, i64* %bytes, align 8, !tbaa !7
  %shr = lshr i64 %1, 29
  %conv.i = trunc i64 %shr to i8
  %arrayidx.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 3
  store i8 %conv.i, i8* %arrayidx.i, align 1, !tbaa !10
  %shr.i48 = lshr i64 %1, 37
  %conv1.i = trunc i64 %shr.i48 to i8
  %arrayidx2.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 2
  store i8 %conv1.i, i8* %arrayidx2.i, align 1, !tbaa !10
  %shr3.i49 = lshr i64 %1, 45
  %conv4.i = trunc i64 %shr3.i49 to i8
  %arrayidx5.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 1
  store i8 %conv4.i, i8* %arrayidx5.i, align 1, !tbaa !10
  %shr6.i50 = lshr i64 %1, 53
  %conv7.i = trunc i64 %shr6.i50 to i8
  store i8 %conv7.i, i8* %0, align 1, !tbaa !10
  %arrayidx3 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 4
  %.tr = trunc i64 %1 to i32
  %conv5 = shl i32 %.tr, 3
  %conv.i28 = trunc i32 %conv5 to i8
  %arrayidx.i29 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 7
  store i8 %conv.i28, i8* %arrayidx.i29, align 1, !tbaa !10
  %shr.i30 = lshr i32 %conv5, 8
  %conv1.i31 = trunc i32 %shr.i30 to i8
  %arrayidx2.i32 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 6
  store i8 %conv1.i31, i8* %arrayidx2.i32, align 1, !tbaa !10
  %shr3.i33 = lshr i32 %conv5, 16
  %conv4.i34 = trunc i32 %shr3.i33 to i8
  %arrayidx5.i35 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc, i64 0, i64 5
  store i8 %conv4.i34, i8* %arrayidx5.i35, align 1, !tbaa !10
  %shr6.i36 = lshr i32 %conv5, 24
  %conv7.i37 = trunc i32 %shr6.i36 to i8
  store i8 %conv7.i37, i8* %arrayidx3, align 1, !tbaa !10
  %sub = sub i64 55, %1
  %rem7 = and i64 %sub, 63
  %add = add nuw nsw i64 %rem7, 1
  tail call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef %hash, i8* noundef getelementptr inbounds (<{ i8, [63 x i8] }>, <{ i8, [63 x i8] }>* @secp256k1_sha256_finalize.pad, i64 0, i32 0), i64 noundef %add)
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef %hash, i8* noundef nonnull %0, i64 noundef 8)
  %arrayidx12 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 0
  %2 = load i32, i32* %arrayidx12, align 4, !tbaa !3
  %conv.i38 = trunc i32 %2 to i8
  %arrayidx.i39 = getelementptr inbounds i8, i8* %out32, i64 3
  store i8 %conv.i38, i8* %arrayidx.i39, align 1, !tbaa !10
  %shr.i40 = lshr i32 %2, 8
  %conv1.i41 = trunc i32 %shr.i40 to i8
  %arrayidx2.i42 = getelementptr inbounds i8, i8* %out32, i64 2
  store i8 %conv1.i41, i8* %arrayidx2.i42, align 1, !tbaa !10
  %shr3.i43 = lshr i32 %2, 16
  %conv4.i44 = trunc i32 %shr3.i43 to i8
  %arrayidx5.i45 = getelementptr inbounds i8, i8* %out32, i64 1
  store i8 %conv4.i44, i8* %arrayidx5.i45, align 1, !tbaa !10
  %shr6.i46 = lshr i32 %2, 24
  %conv7.i47 = trunc i32 %shr6.i46 to i8
  store i8 %conv7.i47, i8* %out32, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12, align 4, !tbaa !3
  %arrayidx10.1 = getelementptr inbounds i8, i8* %out32, i64 4
  %arrayidx12.1 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 1
  %3 = load i32, i32* %arrayidx12.1, align 4, !tbaa !3
  %conv.i38.1 = trunc i32 %3 to i8
  %arrayidx.i39.1 = getelementptr inbounds i8, i8* %out32, i64 7
  store i8 %conv.i38.1, i8* %arrayidx.i39.1, align 1, !tbaa !10
  %shr.i40.1 = lshr i32 %3, 8
  %conv1.i41.1 = trunc i32 %shr.i40.1 to i8
  %arrayidx2.i42.1 = getelementptr inbounds i8, i8* %out32, i64 6
  store i8 %conv1.i41.1, i8* %arrayidx2.i42.1, align 1, !tbaa !10
  %shr3.i43.1 = lshr i32 %3, 16
  %conv4.i44.1 = trunc i32 %shr3.i43.1 to i8
  %arrayidx5.i45.1 = getelementptr inbounds i8, i8* %out32, i64 5
  store i8 %conv4.i44.1, i8* %arrayidx5.i45.1, align 1, !tbaa !10
  %shr6.i46.1 = lshr i32 %3, 24
  %conv7.i47.1 = trunc i32 %shr6.i46.1 to i8
  store i8 %conv7.i47.1, i8* %arrayidx10.1, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.1, align 4, !tbaa !3
  %arrayidx10.2 = getelementptr inbounds i8, i8* %out32, i64 8
  %arrayidx12.2 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 2
  %4 = load i32, i32* %arrayidx12.2, align 4, !tbaa !3
  %conv.i38.2 = trunc i32 %4 to i8
  %arrayidx.i39.2 = getelementptr inbounds i8, i8* %out32, i64 11
  store i8 %conv.i38.2, i8* %arrayidx.i39.2, align 1, !tbaa !10
  %shr.i40.2 = lshr i32 %4, 8
  %conv1.i41.2 = trunc i32 %shr.i40.2 to i8
  %arrayidx2.i42.2 = getelementptr inbounds i8, i8* %out32, i64 10
  store i8 %conv1.i41.2, i8* %arrayidx2.i42.2, align 1, !tbaa !10
  %shr3.i43.2 = lshr i32 %4, 16
  %conv4.i44.2 = trunc i32 %shr3.i43.2 to i8
  %arrayidx5.i45.2 = getelementptr inbounds i8, i8* %out32, i64 9
  store i8 %conv4.i44.2, i8* %arrayidx5.i45.2, align 1, !tbaa !10
  %shr6.i46.2 = lshr i32 %4, 24
  %conv7.i47.2 = trunc i32 %shr6.i46.2 to i8
  store i8 %conv7.i47.2, i8* %arrayidx10.2, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.2, align 4, !tbaa !3
  %arrayidx10.3 = getelementptr inbounds i8, i8* %out32, i64 12
  %arrayidx12.3 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 3
  %5 = load i32, i32* %arrayidx12.3, align 4, !tbaa !3
  %conv.i38.3 = trunc i32 %5 to i8
  %arrayidx.i39.3 = getelementptr inbounds i8, i8* %out32, i64 15
  store i8 %conv.i38.3, i8* %arrayidx.i39.3, align 1, !tbaa !10
  %shr.i40.3 = lshr i32 %5, 8
  %conv1.i41.3 = trunc i32 %shr.i40.3 to i8
  %arrayidx2.i42.3 = getelementptr inbounds i8, i8* %out32, i64 14
  store i8 %conv1.i41.3, i8* %arrayidx2.i42.3, align 1, !tbaa !10
  %shr3.i43.3 = lshr i32 %5, 16
  %conv4.i44.3 = trunc i32 %shr3.i43.3 to i8
  %arrayidx5.i45.3 = getelementptr inbounds i8, i8* %out32, i64 13
  store i8 %conv4.i44.3, i8* %arrayidx5.i45.3, align 1, !tbaa !10
  %shr6.i46.3 = lshr i32 %5, 24
  %conv7.i47.3 = trunc i32 %shr6.i46.3 to i8
  store i8 %conv7.i47.3, i8* %arrayidx10.3, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.3, align 4, !tbaa !3
  %arrayidx10.4 = getelementptr inbounds i8, i8* %out32, i64 16
  %arrayidx12.4 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 4
  %6 = load i32, i32* %arrayidx12.4, align 4, !tbaa !3
  %conv.i38.4 = trunc i32 %6 to i8
  %arrayidx.i39.4 = getelementptr inbounds i8, i8* %out32, i64 19
  store i8 %conv.i38.4, i8* %arrayidx.i39.4, align 1, !tbaa !10
  %shr.i40.4 = lshr i32 %6, 8
  %conv1.i41.4 = trunc i32 %shr.i40.4 to i8
  %arrayidx2.i42.4 = getelementptr inbounds i8, i8* %out32, i64 18
  store i8 %conv1.i41.4, i8* %arrayidx2.i42.4, align 1, !tbaa !10
  %shr3.i43.4 = lshr i32 %6, 16
  %conv4.i44.4 = trunc i32 %shr3.i43.4 to i8
  %arrayidx5.i45.4 = getelementptr inbounds i8, i8* %out32, i64 17
  store i8 %conv4.i44.4, i8* %arrayidx5.i45.4, align 1, !tbaa !10
  %shr6.i46.4 = lshr i32 %6, 24
  %conv7.i47.4 = trunc i32 %shr6.i46.4 to i8
  store i8 %conv7.i47.4, i8* %arrayidx10.4, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.4, align 4, !tbaa !3
  %arrayidx10.5 = getelementptr inbounds i8, i8* %out32, i64 20
  %arrayidx12.5 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 5
  %7 = load i32, i32* %arrayidx12.5, align 4, !tbaa !3
  %conv.i38.5 = trunc i32 %7 to i8
  %arrayidx.i39.5 = getelementptr inbounds i8, i8* %out32, i64 23
  store i8 %conv.i38.5, i8* %arrayidx.i39.5, align 1, !tbaa !10
  %shr.i40.5 = lshr i32 %7, 8
  %conv1.i41.5 = trunc i32 %shr.i40.5 to i8
  %arrayidx2.i42.5 = getelementptr inbounds i8, i8* %out32, i64 22
  store i8 %conv1.i41.5, i8* %arrayidx2.i42.5, align 1, !tbaa !10
  %shr3.i43.5 = lshr i32 %7, 16
  %conv4.i44.5 = trunc i32 %shr3.i43.5 to i8
  %arrayidx5.i45.5 = getelementptr inbounds i8, i8* %out32, i64 21
  store i8 %conv4.i44.5, i8* %arrayidx5.i45.5, align 1, !tbaa !10
  %shr6.i46.5 = lshr i32 %7, 24
  %conv7.i47.5 = trunc i32 %shr6.i46.5 to i8
  store i8 %conv7.i47.5, i8* %arrayidx10.5, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.5, align 4, !tbaa !3
  %arrayidx10.6 = getelementptr inbounds i8, i8* %out32, i64 24
  %arrayidx12.6 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 6
  %8 = load i32, i32* %arrayidx12.6, align 4, !tbaa !3
  %conv.i38.6 = trunc i32 %8 to i8
  %arrayidx.i39.6 = getelementptr inbounds i8, i8* %out32, i64 27
  store i8 %conv.i38.6, i8* %arrayidx.i39.6, align 1, !tbaa !10
  %shr.i40.6 = lshr i32 %8, 8
  %conv1.i41.6 = trunc i32 %shr.i40.6 to i8
  %arrayidx2.i42.6 = getelementptr inbounds i8, i8* %out32, i64 26
  store i8 %conv1.i41.6, i8* %arrayidx2.i42.6, align 1, !tbaa !10
  %shr3.i43.6 = lshr i32 %8, 16
  %conv4.i44.6 = trunc i32 %shr3.i43.6 to i8
  %arrayidx5.i45.6 = getelementptr inbounds i8, i8* %out32, i64 25
  store i8 %conv4.i44.6, i8* %arrayidx5.i45.6, align 1, !tbaa !10
  %shr6.i46.6 = lshr i32 %8, 24
  %conv7.i47.6 = trunc i32 %shr6.i46.6 to i8
  store i8 %conv7.i47.6, i8* %arrayidx10.6, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.6, align 4, !tbaa !3
  %arrayidx10.7 = getelementptr inbounds i8, i8* %out32, i64 28
  %arrayidx12.7 = getelementptr inbounds %struct.secp256k1_sha256, %struct.secp256k1_sha256* %hash, i64 0, i32 0, i64 7
  %9 = load i32, i32* %arrayidx12.7, align 4, !tbaa !3
  %conv.i38.7 = trunc i32 %9 to i8
  %arrayidx.i39.7 = getelementptr inbounds i8, i8* %out32, i64 31
  store i8 %conv.i38.7, i8* %arrayidx.i39.7, align 1, !tbaa !10
  %shr.i40.7 = lshr i32 %9, 8
  %conv1.i41.7 = trunc i32 %shr.i40.7 to i8
  %arrayidx2.i42.7 = getelementptr inbounds i8, i8* %out32, i64 30
  store i8 %conv1.i41.7, i8* %arrayidx2.i42.7, align 1, !tbaa !10
  %shr3.i43.7 = lshr i32 %9, 16
  %conv4.i44.7 = trunc i32 %shr3.i43.7 to i8
  %arrayidx5.i45.7 = getelementptr inbounds i8, i8* %out32, i64 29
  store i8 %conv4.i44.7, i8* %arrayidx5.i45.7, align 1, !tbaa !10
  %shr6.i46.7 = lshr i32 %9, 24
  %conv7.i47.7 = trunc i32 %shr6.i46.7 to i8
  store i8 %conv7.i47.7, i8* %arrayidx10.7, align 1, !tbaa !10
  store i32 0, i32* %arrayidx12.7, align 4, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret void
}

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn
declare dso_local noalias noundef i8* @malloc(i64 noundef) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fprintf(%struct._IO_FILE* nocapture noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare dso_local void @abort() local_unnamed_addr #12

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @secp256k1_fe_set_b32(%struct.secp256k1_fe* nocapture noundef %r, i8* noundef readonly %a) unnamed_addr #8 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %a, i64 31
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %a, i64 30
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !10
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %a, i64 29
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %arrayidx7 = getelementptr inbounds i8, i8* %a, i64 28
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !10
  %conv8 = zext i8 %3 to i64
  %shl9 = shl nuw nsw i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  %arrayidx11 = getelementptr inbounds i8, i8* %a, i64 27
  %4 = load i8, i8* %arrayidx11, align 1, !tbaa !10
  %conv12 = zext i8 %4 to i64
  %shl13 = shl nuw nsw i64 %conv12, 32
  %or14 = or i64 %or10, %shl13
  %arrayidx15 = getelementptr inbounds i8, i8* %a, i64 26
  %5 = load i8, i8* %arrayidx15, align 1, !tbaa !10
  %conv16 = zext i8 %5 to i64
  %shl17 = shl nuw nsw i64 %conv16, 40
  %or18 = or i64 %or14, %shl17
  %arrayidx19 = getelementptr inbounds i8, i8* %a, i64 25
  %6 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %7 = and i8 %6, 15
  %8 = zext i8 %7 to i64
  %shl22 = shl nuw nsw i64 %8, 48
  %or23 = or i64 %or18, %shl22
  %arrayidx24 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 0
  store i64 %or23, i64* %arrayidx24, align 8, !tbaa !13
  %9 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %10 = lshr i8 %9, 4
  %11 = zext i8 %10 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %a, i64 24
  %12 = load i8, i8* %arrayidx29, align 1, !tbaa !10
  %conv30 = zext i8 %12 to i64
  %shl31 = shl nuw nsw i64 %conv30, 4
  %or32 = or i64 %shl31, %11
  %arrayidx33 = getelementptr inbounds i8, i8* %a, i64 23
  %13 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %13 to i64
  %shl35 = shl nuw nsw i64 %conv34, 12
  %or36 = or i64 %or32, %shl35
  %arrayidx37 = getelementptr inbounds i8, i8* %a, i64 22
  %14 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %14 to i64
  %shl39 = shl nuw nsw i64 %conv38, 20
  %or40 = or i64 %or36, %shl39
  %arrayidx41 = getelementptr inbounds i8, i8* %a, i64 21
  %15 = load i8, i8* %arrayidx41, align 1, !tbaa !10
  %conv42 = zext i8 %15 to i64
  %shl43 = shl nuw nsw i64 %conv42, 28
  %or44 = or i64 %or40, %shl43
  %arrayidx45 = getelementptr inbounds i8, i8* %a, i64 20
  %16 = load i8, i8* %arrayidx45, align 1, !tbaa !10
  %conv46 = zext i8 %16 to i64
  %shl47 = shl nuw nsw i64 %conv46, 36
  %or48 = or i64 %or44, %shl47
  %arrayidx49 = getelementptr inbounds i8, i8* %a, i64 19
  %17 = load i8, i8* %arrayidx49, align 1, !tbaa !10
  %conv50 = zext i8 %17 to i64
  %shl51 = shl nuw nsw i64 %conv50, 44
  %or52 = or i64 %or48, %shl51
  %arrayidx54 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 1
  store i64 %or52, i64* %arrayidx54, align 8, !tbaa !13
  %arrayidx55 = getelementptr inbounds i8, i8* %a, i64 18
  %18 = load i8, i8* %arrayidx55, align 1, !tbaa !10
  %conv56 = zext i8 %18 to i64
  %arrayidx57 = getelementptr inbounds i8, i8* %a, i64 17
  %19 = load i8, i8* %arrayidx57, align 1, !tbaa !10
  %conv58 = zext i8 %19 to i64
  %shl59 = shl nuw nsw i64 %conv58, 8
  %or60 = or i64 %shl59, %conv56
  %arrayidx61 = getelementptr inbounds i8, i8* %a, i64 16
  %20 = load i8, i8* %arrayidx61, align 1, !tbaa !10
  %conv62 = zext i8 %20 to i64
  %shl63 = shl nuw nsw i64 %conv62, 16
  %or64 = or i64 %or60, %shl63
  %arrayidx65 = getelementptr inbounds i8, i8* %a, i64 15
  %21 = load i8, i8* %arrayidx65, align 1, !tbaa !10
  %conv66 = zext i8 %21 to i64
  %shl67 = shl nuw nsw i64 %conv66, 24
  %or68 = or i64 %or64, %shl67
  %arrayidx69 = getelementptr inbounds i8, i8* %a, i64 14
  %22 = load i8, i8* %arrayidx69, align 1, !tbaa !10
  %conv70 = zext i8 %22 to i64
  %shl71 = shl nuw nsw i64 %conv70, 32
  %or72 = or i64 %or68, %shl71
  %arrayidx73 = getelementptr inbounds i8, i8* %a, i64 13
  %23 = load i8, i8* %arrayidx73, align 1, !tbaa !10
  %conv74 = zext i8 %23 to i64
  %shl75 = shl nuw nsw i64 %conv74, 40
  %or76 = or i64 %or72, %shl75
  %arrayidx77 = getelementptr inbounds i8, i8* %a, i64 12
  %24 = load i8, i8* %arrayidx77, align 1, !tbaa !10
  %25 = and i8 %24, 15
  %26 = zext i8 %25 to i64
  %shl81 = shl nuw nsw i64 %26, 48
  %or82 = or i64 %or76, %shl81
  %arrayidx84 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 2
  store i64 %or82, i64* %arrayidx84, align 8, !tbaa !13
  %27 = load i8, i8* %arrayidx77, align 1, !tbaa !10
  %28 = lshr i8 %27, 4
  %29 = zext i8 %28 to i64
  %arrayidx90 = getelementptr inbounds i8, i8* %a, i64 11
  %30 = load i8, i8* %arrayidx90, align 1, !tbaa !10
  %conv91 = zext i8 %30 to i64
  %shl92 = shl nuw nsw i64 %conv91, 4
  %or93 = or i64 %shl92, %29
  %arrayidx94 = getelementptr inbounds i8, i8* %a, i64 10
  %31 = load i8, i8* %arrayidx94, align 1, !tbaa !10
  %conv95 = zext i8 %31 to i64
  %shl96 = shl nuw nsw i64 %conv95, 12
  %or97 = or i64 %or93, %shl96
  %arrayidx98 = getelementptr inbounds i8, i8* %a, i64 9
  %32 = load i8, i8* %arrayidx98, align 1, !tbaa !10
  %conv99 = zext i8 %32 to i64
  %shl100 = shl nuw nsw i64 %conv99, 20
  %or101 = or i64 %or97, %shl100
  %arrayidx102 = getelementptr inbounds i8, i8* %a, i64 8
  %33 = load i8, i8* %arrayidx102, align 1, !tbaa !10
  %conv103 = zext i8 %33 to i64
  %shl104 = shl nuw nsw i64 %conv103, 28
  %or105 = or i64 %or101, %shl104
  %arrayidx106 = getelementptr inbounds i8, i8* %a, i64 7
  %34 = load i8, i8* %arrayidx106, align 1, !tbaa !10
  %conv107 = zext i8 %34 to i64
  %shl108 = shl nuw nsw i64 %conv107, 36
  %or109 = or i64 %or105, %shl108
  %arrayidx110 = getelementptr inbounds i8, i8* %a, i64 6
  %35 = load i8, i8* %arrayidx110, align 1, !tbaa !10
  %conv111 = zext i8 %35 to i64
  %shl112 = shl nuw nsw i64 %conv111, 44
  %or113 = or i64 %or109, %shl112
  %arrayidx115 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 3
  store i64 %or113, i64* %arrayidx115, align 8, !tbaa !13
  %arrayidx116 = getelementptr inbounds i8, i8* %a, i64 5
  %36 = load i8, i8* %arrayidx116, align 1, !tbaa !10
  %conv117 = zext i8 %36 to i64
  %arrayidx118 = getelementptr inbounds i8, i8* %a, i64 4
  %37 = load i8, i8* %arrayidx118, align 1, !tbaa !10
  %conv119 = zext i8 %37 to i64
  %shl120 = shl nuw nsw i64 %conv119, 8
  %or121 = or i64 %shl120, %conv117
  %arrayidx122 = getelementptr inbounds i8, i8* %a, i64 3
  %38 = load i8, i8* %arrayidx122, align 1, !tbaa !10
  %conv123 = zext i8 %38 to i64
  %shl124 = shl nuw nsw i64 %conv123, 16
  %or125 = or i64 %or121, %shl124
  %arrayidx126 = getelementptr inbounds i8, i8* %a, i64 2
  %39 = load i8, i8* %arrayidx126, align 1, !tbaa !10
  %conv127 = zext i8 %39 to i64
  %shl128 = shl nuw nsw i64 %conv127, 24
  %or129 = or i64 %or125, %shl128
  %arrayidx130 = getelementptr inbounds i8, i8* %a, i64 1
  %40 = load i8, i8* %arrayidx130, align 1, !tbaa !10
  %conv131 = zext i8 %40 to i64
  %shl132 = shl nuw nsw i64 %conv131, 32
  %or133 = or i64 %or129, %shl132
  %41 = load i8, i8* %a, align 1, !tbaa !10
  %conv135 = zext i8 %41 to i64
  %shl136 = shl nuw nsw i64 %conv135, 40
  %or137 = or i64 %or133, %shl136
  %arrayidx139 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 4
  store i64 %or137, i64* %arrayidx139, align 8, !tbaa !13
  %cmp = icmp eq i64 %or137, 281474976710655
  %and147 = and i64 %or82, %or52
  %and150 = and i64 %and147, %or113
  %cmp151 = icmp eq i64 %and150, 4503599627370495
  %and153202 = and i1 %cmp151, %cmp
  %cmp156 = icmp ugt i64 %or23, 4503595332402222
  %and158203 = and i1 %cmp156, %and153202
  %lnot = xor i1 %and158203, true
  %lnot.ext = zext i1 %lnot to i32
  ret i32 %lnot.ext
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* nocapture noundef writeonly %r, %struct.secp256k1_fe* nocapture noundef readonly %a) unnamed_addr #8 {
entry:
  %arraydecay2 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 0
  %0 = load i64, i64* %arraydecay2, align 8, !tbaa !13
  %arrayidx1.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 1
  %1 = load i64, i64* %arrayidx1.i, align 8, !tbaa !13
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 2
  %2 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13
  %arrayidx3.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx3.i, align 8, !tbaa !13
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 4
  %4 = load i64, i64* %arrayidx4.i, align 8, !tbaa !13
  %mul.i = shl i64 %0, 1
  %conv.i.i = zext i64 %mul.i to i128
  %conv1.i.i = zext i64 %3 to i128
  %mul.i.i = mul nuw i128 %conv1.i.i, %conv.i.i
  %mul17.i = shl i64 %1, 1
  %conv.i215.i = zext i64 %mul17.i to i128
  %conv1.i216.i = zext i64 %2 to i128
  %mul.i217.i = mul nuw i128 %conv1.i216.i, %conv.i215.i
  %add.i.i = add i128 %mul.i.i, %mul.i217.i
  %conv.i218.i = zext i64 %4 to i128
  %mul.i220.i = mul nuw i128 %conv.i218.i, %conv.i218.i
  %conv1.i222.i = and i128 %mul.i220.i, 18446744073709551615
  %mul.i223.i = mul nuw nsw i128 %conv1.i222.i, 68719492368
  %add.i224.i = add i128 %add.i.i, %mul.i223.i
  %shr.i.i = lshr i128 %mul.i220.i, 64
  %shr.i226.i = lshr i128 %add.i224.i, 52
  %mul37.i = shl i64 %4, 1
  %conv.i227.i = zext i64 %0 to i128
  %conv1.i228.i = zext i64 %mul37.i to i128
  %mul.i229.i = mul nuw i128 %conv1.i228.i, %conv.i227.i
  %mul.i233.i = mul nuw i128 %conv1.i.i, %conv.i215.i
  %mul.i237.i = mul nuw i128 %conv1.i216.i, %conv1.i216.i
  %mul.i241.i = mul nuw nsw i128 %shr.i.i, 281475040739328
  %add.i230.i = add i128 %mul.i233.i, %mul.i237.i
  %add.i234.i = add i128 %add.i230.i, %mul.i229.i
  %add.i238.i = add i128 %add.i234.i, %mul.i241.i
  %add.i242.i = add i128 %add.i238.i, %shr.i226.i
  %conv.i243.i = trunc i128 %add.i242.i to i64
  %shr.i244.i = lshr i128 %add.i242.i, 52
  %and47.i = lshr i64 %conv.i243.i, 48
  %5 = and i64 %and47.i, 15
  %and54.i = and i64 %conv.i243.i, 281474976710655
  %mul.i247.i = mul nuw i128 %conv.i227.i, %conv.i227.i
  %conv.i248.i = zext i64 %1 to i128
  %mul.i250.i = mul nuw i128 %conv1.i228.i, %conv.i248.i
  %mul64.i = shl i64 %2, 1
  %conv.i252.i = zext i64 %mul64.i to i128
  %mul.i254.i = mul nuw i128 %conv1.i.i, %conv.i252.i
  %add.i251.i = add i128 %mul.i250.i, %mul.i254.i
  %add.i255.i = add i128 %add.i251.i, %shr.i244.i
  %conv.i256.i = trunc i128 %add.i255.i to i64
  %shr.i257.i = lshr i128 %add.i255.i, 52
  %and69.i = shl i64 %conv.i256.i, 4
  %shl.i = and i64 %and69.i, 72057594037927920
  %or.i = or i64 %shl.i, %5
  %conv.i258.i = zext i64 %or.i to i128
  %mul.i259.i = mul nuw nsw i128 %conv.i258.i, 4294968273
  %add.i260.i = add i128 %mul.i259.i, %mul.i247.i
  %shr.i262.i = lshr i128 %add.i260.i, 52
  %mul.i265.i = mul nuw i128 %conv.i248.i, %conv.i.i
  %mul.i269.i = mul nuw i128 %conv1.i228.i, %conv1.i216.i
  %mul.i273.i = mul nuw i128 %conv1.i.i, %conv1.i.i
  %add.i270.i = add i128 %mul.i269.i, %mul.i273.i
  %add.i274.i = add i128 %add.i270.i, %shr.i257.i
  %conv.i276.i = and i128 %add.i274.i, 4503599627370495
  %mul.i277.i = mul nuw nsw i128 %conv.i276.i, 68719492368
  %add.i266.i = add i128 %mul.i277.i, %mul.i265.i
  %add.i278.i = add i128 %add.i266.i, %shr.i262.i
  %shr.i279.i = lshr i128 %add.i274.i, 52
  %6 = insertelement <2 x i128> poison, i128 %add.i260.i, i64 0
  %7 = insertelement <2 x i128> %6, i128 %add.i278.i, i64 1
  %8 = trunc <2 x i128> %7 to <2 x i64>
  %9 = and <2 x i64> %8, <i64 4503599627370495, i64 4503599627370495>
  %10 = bitcast %struct.secp256k1_fe* %r to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 8, !tbaa !13
  %shr.i281.i = lshr i128 %add.i278.i, 52
  %mul.i284.i = mul nuw i128 %conv1.i216.i, %conv.i.i
  %mul.i288.i = mul nuw i128 %conv.i248.i, %conv.i248.i
  %mul.i292.i = mul nuw i128 %conv1.i228.i, %conv1.i.i
  %add.i293.i = add i128 %shr.i279.i, %mul.i292.i
  %conv1.i295.i = and i128 %add.i293.i, 18446744073709551615
  %mul.i296.i = mul nuw nsw i128 %conv1.i295.i, 68719492368
  %add.i285.i = add i128 %mul.i284.i, %mul.i288.i
  %add.i289.i = add i128 %add.i285.i, %mul.i296.i
  %add.i297.i = add i128 %add.i289.i, %shr.i281.i
  %shr.i298.i = lshr i128 %add.i293.i, 64
  %arrayidx130.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 2
  %shr.i300.i = lshr i128 %add.i297.i, 52
  %mul.i303.i = mul nuw nsw i128 %shr.i298.i, 281475040739328
  %conv.i305.i = and i128 %add.i224.i, 4503599627370494
  %add.i304.i = add nuw nsw i128 %mul.i303.i, %conv.i305.i
  %add.i306.i = add nuw nsw i128 %add.i304.i, %shr.i300.i
  %11 = insertelement <2 x i128> poison, i128 %add.i297.i, i64 0
  %12 = insertelement <2 x i128> %11, i128 %add.i306.i, i64 1
  %13 = trunc <2 x i128> %12 to <2 x i64>
  %14 = and <2 x i64> %13, <i64 4503599627370495, i64 4503599627370495>
  %15 = bitcast i64* %arrayidx130.i to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 8, !tbaa !13
  %shr.i308.i = lshr i128 %add.i306.i, 52
  %conv.i309.i = trunc i128 %shr.i308.i to i64
  %add.i = add nuw nsw i64 %and54.i, %conv.i309.i
  %arrayidx151.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 4
  store i64 %add.i, i64* %arrayidx151.i, align 8, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* nocapture noundef writeonly %r, %struct.secp256k1_fe* nocapture noundef readonly %a, %struct.secp256k1_fe* noalias nocapture noundef readonly %b) unnamed_addr #1 {
entry:
  %arraydecay2 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 0
  %arraydecay4 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %b, i64 0, i32 0, i64 0
  tail call void @llvm.experimental.noalias.scope.decl(metadata !70)
  %0 = load i64, i64* %arraydecay2, align 8, !tbaa !13, !noalias !70
  %arrayidx1.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 1
  %1 = load i64, i64* %arrayidx1.i, align 8, !tbaa !13, !noalias !70
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 2
  %2 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13, !noalias !70
  %arrayidx3.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx3.i, align 8, !tbaa !13, !noalias !70
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %a, i64 0, i32 0, i64 4
  %4 = load i64, i64* %arrayidx4.i, align 8, !tbaa !13, !noalias !70
  %arrayidx40.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %b, i64 0, i32 0, i64 3
  %5 = load i64, i64* %arrayidx40.i, align 8, !tbaa !13, !alias.scope !70
  %conv.i.i = zext i64 %0 to i128
  %conv1.i.i = zext i64 %5 to i128
  %mul.i.i = mul nuw i128 %conv1.i.i, %conv.i.i
  %arrayidx41.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %b, i64 0, i32 0, i64 2
  %6 = load i64, i64* %arrayidx41.i, align 8, !tbaa !13, !alias.scope !70
  %conv.i279.i = zext i64 %1 to i128
  %conv1.i280.i = zext i64 %6 to i128
  %mul.i281.i = mul nuw i128 %conv1.i280.i, %conv.i279.i
  %add.i.i = add i128 %mul.i281.i, %mul.i.i
  %arrayidx42.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %b, i64 0, i32 0, i64 1
  %7 = load i64, i64* %arrayidx42.i, align 8, !tbaa !13, !alias.scope !70
  %conv.i282.i = zext i64 %2 to i128
  %conv1.i283.i = zext i64 %7 to i128
  %mul.i284.i = mul nuw i128 %conv1.i283.i, %conv.i282.i
  %add.i285.i = add i128 %add.i.i, %mul.i284.i
  %8 = load i64, i64* %arraydecay4, align 8, !tbaa !13, !alias.scope !70
  %conv.i286.i = zext i64 %3 to i128
  %conv1.i287.i = zext i64 %8 to i128
  %mul.i288.i = mul nuw i128 %conv1.i287.i, %conv.i286.i
  %add.i289.i = add i128 %add.i285.i, %mul.i288.i
  %arrayidx47.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %b, i64 0, i32 0, i64 4
  %9 = load i64, i64* %arrayidx47.i, align 8, !tbaa !13, !alias.scope !70
  %conv.i290.i = zext i64 %4 to i128
  %conv1.i291.i = zext i64 %9 to i128
  %mul.i292.i = mul nuw i128 %conv1.i291.i, %conv.i290.i
  %conv1.i294.i = and i128 %mul.i292.i, 18446744073709551615
  %mul.i295.i = mul nuw nsw i128 %conv1.i294.i, 68719492368
  %add.i296.i = add i128 %add.i289.i, %mul.i295.i
  %shr.i.i = lshr i128 %mul.i292.i, 64
  %shr.i298.i = lshr i128 %add.i296.i, 52
  %mul.i301.i = mul nuw i128 %conv1.i291.i, %conv.i.i
  %mul.i305.i = mul nuw i128 %conv1.i.i, %conv.i279.i
  %mul.i309.i = mul nuw i128 %conv1.i280.i, %conv.i282.i
  %mul.i313.i = mul nuw i128 %conv1.i283.i, %conv.i286.i
  %mul.i317.i = mul nuw i128 %conv1.i287.i, %conv.i290.i
  %mul.i321.i = mul nuw nsw i128 %shr.i.i, 281475040739328
  %add.i302.i = add i128 %mul.i309.i, %mul.i305.i
  %add.i306.i = add i128 %add.i302.i, %mul.i313.i
  %add.i310.i = add i128 %add.i306.i, %mul.i317.i
  %add.i314.i = add i128 %add.i310.i, %mul.i301.i
  %add.i318.i = add i128 %add.i314.i, %mul.i321.i
  %add.i322.i = add i128 %add.i318.i, %shr.i298.i
  %conv.i323.i = trunc i128 %add.i322.i to i64
  %shr.i324.i = lshr i128 %add.i322.i, 52
  %and77.i = lshr i64 %conv.i323.i, 48
  %shr.i = and i64 %and77.i, 15
  %and84.i = and i64 %conv.i323.i, 281474976710655
  %mul.i327.i = mul nuw i128 %conv1.i287.i, %conv.i.i
  %mul.i330.i = mul nuw i128 %conv1.i291.i, %conv.i279.i
  %mul.i334.i = mul nuw i128 %conv1.i.i, %conv.i282.i
  %mul.i338.i = mul nuw i128 %conv1.i280.i, %conv.i286.i
  %mul.i342.i = mul nuw i128 %conv1.i283.i, %conv.i290.i
  %add.i331.i = add i128 %mul.i338.i, %mul.i334.i
  %add.i335.i = add i128 %add.i331.i, %mul.i342.i
  %add.i339.i = add i128 %add.i335.i, %mul.i330.i
  %add.i343.i = add i128 %add.i339.i, %shr.i324.i
  %conv.i344.i = trunc i128 %add.i343.i to i64
  %shr.i345.i = lshr i128 %add.i343.i, 52
  %and103.i = shl i64 %conv.i344.i, 4
  %shl.i = and i64 %and103.i, 72057594037927920
  %or.i = or i64 %shl.i, %shr.i
  %conv.i346.i = zext i64 %or.i to i128
  %mul.i347.i = mul nuw nsw i128 %conv.i346.i, 4294968273
  %add.i348.i = add i128 %mul.i347.i, %mul.i327.i
  %shr.i350.i = lshr i128 %add.i348.i, 52
  %mul.i353.i = mul nuw i128 %conv1.i283.i, %conv.i.i
  %mul.i357.i = mul nuw i128 %conv1.i287.i, %conv.i279.i
  %mul.i361.i = mul nuw i128 %conv1.i291.i, %conv.i282.i
  %mul.i365.i = mul nuw i128 %conv1.i.i, %conv.i286.i
  %mul.i369.i = mul nuw i128 %conv1.i280.i, %conv.i290.i
  %add.i362.i = add i128 %mul.i369.i, %mul.i365.i
  %add.i366.i = add i128 %add.i362.i, %mul.i361.i
  %add.i370.i = add i128 %add.i366.i, %shr.i345.i
  %conv.i372.i = and i128 %add.i370.i, 4503599627370495
  %mul.i373.i = mul nuw nsw i128 %conv.i372.i, 68719492368
  %add.i354.i = add i128 %mul.i357.i, %mul.i353.i
  %add.i358.i = add i128 %add.i354.i, %mul.i373.i
  %add.i374.i = add i128 %add.i358.i, %shr.i350.i
  %shr.i375.i = lshr i128 %add.i370.i, 52
  %10 = insertelement <2 x i128> poison, i128 %add.i348.i, i64 0
  %11 = insertelement <2 x i128> %10, i128 %add.i374.i, i64 1
  %12 = trunc <2 x i128> %11 to <2 x i64>
  %13 = and <2 x i64> %12, <i64 4503599627370495, i64 4503599627370495>
  %14 = bitcast %struct.secp256k1_fe* %r to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 8, !tbaa !13, !noalias !70
  %shr.i377.i = lshr i128 %add.i374.i, 52
  %mul.i380.i = mul nuw i128 %conv1.i280.i, %conv.i.i
  %mul.i384.i = mul nuw i128 %conv1.i283.i, %conv.i279.i
  %mul.i388.i = mul nuw i128 %conv1.i287.i, %conv.i282.i
  %mul.i392.i = mul nuw i128 %conv1.i291.i, %conv.i286.i
  %mul.i396.i = mul nuw i128 %conv1.i.i, %conv.i290.i
  %add.i393.i = add i128 %mul.i392.i, %mul.i396.i
  %add.i397.i = add i128 %add.i393.i, %shr.i375.i
  %conv1.i399.i = and i128 %add.i397.i, 18446744073709551615
  %mul.i400.i = mul nuw nsw i128 %conv1.i399.i, 68719492368
  %add.i381.i = add i128 %mul.i384.i, %mul.i380.i
  %add.i385.i = add i128 %add.i381.i, %mul.i388.i
  %add.i389.i = add i128 %add.i385.i, %mul.i400.i
  %add.i401.i = add i128 %add.i389.i, %shr.i377.i
  %shr.i402.i = lshr i128 %add.i397.i, 64
  %arrayidx173.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 2
  %shr.i404.i = lshr i128 %add.i401.i, 52
  %mul.i407.i = mul nuw nsw i128 %shr.i402.i, 281475040739328
  %conv.i409.i = and i128 %add.i296.i, 4503599627370495
  %add.i408.i = add nuw nsw i128 %mul.i407.i, %conv.i409.i
  %add.i410.i = add nuw nsw i128 %add.i408.i, %shr.i404.i
  %15 = insertelement <2 x i128> poison, i128 %add.i401.i, i64 0
  %16 = insertelement <2 x i128> %15, i128 %add.i410.i, i64 1
  %17 = trunc <2 x i128> %16 to <2 x i64>
  %18 = and <2 x i64> %17, <i64 4503599627370495, i64 4503599627370495>
  %19 = bitcast i64* %arrayidx173.i to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %19, align 8, !tbaa !13, !noalias !70
  %shr.i412.i = lshr i128 %add.i410.i, 52
  %conv.i413.i = trunc i128 %shr.i412.i to i64
  %add.i = add nuw nsw i64 %and84.i, %conv.i413.i
  %arrayidx194.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 4
  store i64 %add.i, i64* %arrayidx194.i, align 8, !tbaa !13, !noalias !70
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc i32 @secp256k1_der_parse_integer(%struct.secp256k1_scalar* nocapture noundef %r, i8** nocapture noundef %sig, i8* noundef %sigend) unnamed_addr #9 {
entry:
  %overflow = alloca i32, align 4
  %ra = alloca [32 x i8], align 16
  %0 = bitcast i32* %overflow to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  store i32 0, i32* %overflow, align 4, !tbaa !3
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %ra, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %1, i8 0, i64 32, i1 false)
  %2 = load i8*, i8** %sig, align 8, !tbaa !16
  %cmp = icmp eq i8* %2, %sigend
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8, i8* %2, align 1, !tbaa !10
  %cmp1.not = icmp eq i8 %3, 2
  br i1 %cmp1.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i64 1
  store i8* %incdec.ptr, i8** %sig, align 8, !tbaa !16
  %cmp1.not.i = icmp ult i8* %incdec.ptr, %sigend
  br i1 %cmp1.not.i, label %if.end.i, label %cleanup

if.end.i:                                         ; preds = %if.end
  %incdec.ptr.i = getelementptr inbounds i8, i8* %2, i64 2
  store i8* %incdec.ptr.i, i8** %sig, align 8, !tbaa !16
  %4 = load i8, i8* %incdec.ptr, align 1, !tbaa !10
  %conv3.i = zext i8 %4 to i32
  %cmp4.i = icmp eq i8 %4, -1
  br i1 %cmp4.i, label %cleanup, label %if.end7.i

if.end7.i:                                        ; preds = %if.end.i
  %and.i = and i32 %conv3.i, 128
  %cmp9.i = icmp eq i32 %and.i, 0
  br i1 %cmp9.i, label %if.end6, label %if.end13.i

if.end13.i:                                       ; preds = %if.end7.i
  %cmp15.i = icmp eq i8 %4, -128
  br i1 %cmp15.i, label %cleanup, label %if.end18.i

if.end18.i:                                       ; preds = %if.end13.i
  %and20.i = and i32 %conv3.i, 127
  %5 = zext i32 %and20.i to i64
  %sub.ptr.lhs.cast.i = ptrtoint i8* %sigend to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %incdec.ptr.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp22.i = icmp ult i64 %sub.ptr.sub.i, %5
  br i1 %cmp22.i, label %cleanup, label %if.end25.i

if.end25.i:                                       ; preds = %if.end18.i
  %6 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %cmp27.i = icmp eq i8 %6, 0
  %cmp31.i = icmp ugt i32 %and20.i, 8
  %or.cond.i = select i1 %cmp27.i, i1 true, i1 %cmp31.i
  %cmp35.not74.i = icmp eq i32 %and20.i, 0
  %or.cond118 = select i1 %or.cond.i, i1 true, i1 %cmp35.not74.i
  br i1 %or.cond118, label %cleanup, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.end25.i
  %conv37.i120 = zext i8 %6 to i64
  %incdec.ptr38.i121 = getelementptr inbounds i8, i8* %2, i64 3
  store i8* %incdec.ptr38.i121, i8** %sig, align 8, !tbaa !16
  %dec.i122 = add nsw i64 %5, -1
  %cmp35.not.i123 = icmp eq i64 %dec.i122, 0
  br i1 %cmp35.not.i123, label %while.end.i, label %while.body.while.body_crit_edge.i.preheader, !llvm.loop !50

while.body.while.body_crit_edge.i.preheader:      ; preds = %while.body.i.preheader
  %7 = add nsw i64 %5, -2
  %xtraiter = and i64 %dec.i122, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %while.body.while.body_crit_edge.i.prol.loopexit, label %while.body.while.body_crit_edge.i.prol

while.body.while.body_crit_edge.i.prol:           ; preds = %while.body.while.body_crit_edge.i.preheader, %while.body.while.body_crit_edge.i.prol
  %dec.i126.prol = phi i64 [ %dec.i.prol, %while.body.while.body_crit_edge.i.prol ], [ %dec.i122, %while.body.while.body_crit_edge.i.preheader ]
  %incdec.ptr38.i125.prol = phi i8* [ %incdec.ptr38.i.prol, %while.body.while.body_crit_edge.i.prol ], [ %incdec.ptr38.i121, %while.body.while.body_crit_edge.i.preheader ]
  %or.i124.prol = phi i64 [ %or.i.prol, %while.body.while.body_crit_edge.i.prol ], [ %conv37.i120, %while.body.while.body_crit_edge.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %while.body.while.body_crit_edge.i.prol ], [ 0, %while.body.while.body_crit_edge.i.preheader ]
  %.pre.i.prol = load i8, i8* %incdec.ptr38.i125.prol, align 1, !tbaa !10
  %shl.i.prol = shl i64 %or.i124.prol, 8
  %conv37.i.prol = zext i8 %.pre.i.prol to i64
  %or.i.prol = or i64 %shl.i.prol, %conv37.i.prol
  %incdec.ptr38.i.prol = getelementptr inbounds i8, i8* %incdec.ptr38.i125.prol, i64 1
  store i8* %incdec.ptr38.i.prol, i8** %sig, align 8, !tbaa !16
  %dec.i.prol = add nsw i64 %dec.i126.prol, -1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %while.body.while.body_crit_edge.i.prol.loopexit, label %while.body.while.body_crit_edge.i.prol, !llvm.loop !73

while.body.while.body_crit_edge.i.prol.loopexit:  ; preds = %while.body.while.body_crit_edge.i.prol, %while.body.while.body_crit_edge.i.preheader
  %or.i.lcssa143.unr = phi i64 [ undef, %while.body.while.body_crit_edge.i.preheader ], [ %or.i.prol, %while.body.while.body_crit_edge.i.prol ]
  %incdec.ptr38.i.lcssa142.unr = phi i8* [ undef, %while.body.while.body_crit_edge.i.preheader ], [ %incdec.ptr38.i.prol, %while.body.while.body_crit_edge.i.prol ]
  %dec.i126.unr = phi i64 [ %dec.i122, %while.body.while.body_crit_edge.i.preheader ], [ %dec.i.prol, %while.body.while.body_crit_edge.i.prol ]
  %incdec.ptr38.i125.unr = phi i8* [ %incdec.ptr38.i121, %while.body.while.body_crit_edge.i.preheader ], [ %incdec.ptr38.i.prol, %while.body.while.body_crit_edge.i.prol ]
  %or.i124.unr = phi i64 [ %conv37.i120, %while.body.while.body_crit_edge.i.preheader ], [ %or.i.prol, %while.body.while.body_crit_edge.i.prol ]
  %8 = icmp ult i64 %7, 3
  br i1 %8, label %while.end.i, label %while.body.while.body_crit_edge.i

while.body.while.body_crit_edge.i:                ; preds = %while.body.while.body_crit_edge.i.prol.loopexit, %while.body.while.body_crit_edge.i
  %dec.i126 = phi i64 [ %dec.i.3, %while.body.while.body_crit_edge.i ], [ %dec.i126.unr, %while.body.while.body_crit_edge.i.prol.loopexit ]
  %incdec.ptr38.i125 = phi i8* [ %incdec.ptr38.i.3, %while.body.while.body_crit_edge.i ], [ %incdec.ptr38.i125.unr, %while.body.while.body_crit_edge.i.prol.loopexit ]
  %or.i124 = phi i64 [ %or.i.3, %while.body.while.body_crit_edge.i ], [ %or.i124.unr, %while.body.while.body_crit_edge.i.prol.loopexit ]
  %.pre.i = load i8, i8* %incdec.ptr38.i125, align 1, !tbaa !10
  %conv37.i = zext i8 %.pre.i to i64
  %incdec.ptr38.i = getelementptr inbounds i8, i8* %incdec.ptr38.i125, i64 1
  store i8* %incdec.ptr38.i, i8** %sig, align 8, !tbaa !16
  %.pre.i.1 = load i8, i8* %incdec.ptr38.i, align 1, !tbaa !10
  %9 = shl i64 %or.i124, 16
  %10 = shl nuw nsw i64 %conv37.i, 8
  %shl.i.1 = or i64 %9, %10
  %conv37.i.1 = zext i8 %.pre.i.1 to i64
  %or.i.1 = or i64 %shl.i.1, %conv37.i.1
  %incdec.ptr38.i.1 = getelementptr inbounds i8, i8* %incdec.ptr38.i125, i64 2
  store i8* %incdec.ptr38.i.1, i8** %sig, align 8, !tbaa !16
  %.pre.i.2 = load i8, i8* %incdec.ptr38.i.1, align 1, !tbaa !10
  %conv37.i.2 = zext i8 %.pre.i.2 to i64
  %incdec.ptr38.i.2 = getelementptr inbounds i8, i8* %incdec.ptr38.i125, i64 3
  store i8* %incdec.ptr38.i.2, i8** %sig, align 8, !tbaa !16
  %.pre.i.3 = load i8, i8* %incdec.ptr38.i.2, align 1, !tbaa !10
  %11 = shl i64 %or.i.1, 16
  %12 = shl nuw nsw i64 %conv37.i.2, 8
  %shl.i.3 = or i64 %11, %12
  %conv37.i.3 = zext i8 %.pre.i.3 to i64
  %or.i.3 = or i64 %shl.i.3, %conv37.i.3
  %incdec.ptr38.i.3 = getelementptr inbounds i8, i8* %incdec.ptr38.i125, i64 4
  store i8* %incdec.ptr38.i.3, i8** %sig, align 8, !tbaa !16
  %dec.i.3 = add nsw i64 %dec.i126, -4
  %cmp35.not.i.3 = icmp eq i64 %dec.i.3, 0
  br i1 %cmp35.not.i.3, label %while.end.i, label %while.body.while.body_crit_edge.i, !llvm.loop !50

while.end.i:                                      ; preds = %while.body.while.body_crit_edge.i.prol.loopexit, %while.body.while.body_crit_edge.i, %while.body.i.preheader
  %or.i.lcssa = phi i64 [ %conv37.i120, %while.body.i.preheader ], [ %or.i.lcssa143.unr, %while.body.while.body_crit_edge.i.prol.loopexit ], [ %or.i.3, %while.body.while.body_crit_edge.i ]
  %incdec.ptr38.i.lcssa = phi i8* [ %incdec.ptr38.i121, %while.body.i.preheader ], [ %incdec.ptr38.i.lcssa142.unr, %while.body.while.body_crit_edge.i.prol.loopexit ], [ %incdec.ptr38.i.3, %while.body.while.body_crit_edge.i ]
  %.pre76.i = ptrtoint i8* %incdec.ptr38.i.lcssa to i64
  %.pre77.i = sub i64 %sub.ptr.lhs.cast.i, %.pre76.i
  %cmp42.i = icmp ugt i64 %or.i.lcssa, %.pre77.i
  %cmp46.i = icmp ult i64 %or.i.lcssa, 128
  %or.cond119 = or i1 %cmp42.i, %cmp46.i
  br i1 %or.cond119, label %cleanup, label %lor.lhs.false9

if.end6:                                          ; preds = %if.end7.i
  %conv12.i = zext i8 %4 to i64
  %cmp7 = icmp eq i8 %4, 0
  br i1 %cmp7, label %cleanup, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %while.end.i, %if.end6
  %rlen.1104133 = phi i64 [ %conv12.i, %if.end6 ], [ %or.i.lcssa, %while.end.i ]
  %13 = phi i8* [ %incdec.ptr.i, %if.end6 ], [ %incdec.ptr38.i.lcssa, %while.end.i ]
  %sub.ptr.lhs.cast = ptrtoint i8* %sigend to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp10 = icmp ugt i64 %rlen.1104133, %sub.ptr.sub
  br i1 %cmp10, label %cleanup, label %if.end13

if.end13:                                         ; preds = %lor.lhs.false9
  %14 = load i8, i8* %13, align 1, !tbaa !10
  %cmp15 = icmp eq i8 %14, 0
  %cmp17 = icmp ugt i64 %rlen.1104133, 1
  %or.cond = select i1 %cmp15, i1 %cmp17, i1 false
  br i1 %or.cond, label %land.lhs.true19, label %if.end24

land.lhs.true19:                                  ; preds = %if.end13
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 1
  %15 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp21 = icmp sgt i8 %15, -1
  br i1 %cmp21, label %cleanup, label %if.then51

if.end24:                                         ; preds = %if.end13
  %cmp26 = icmp eq i8 %14, -1
  %or.cond71 = select i1 %cmp26, i1 %cmp17, i1 false
  br i1 %or.cond71, label %land.lhs.true31, label %if.end38

land.lhs.true31:                                  ; preds = %if.end24
  %arrayidx32 = getelementptr inbounds i8, i8* %13, i64 1
  %16 = load i8, i8* %arrayidx32, align 1, !tbaa !10
  %cmp35 = icmp slt i8 %16, 0
  br i1 %cmp35, label %cleanup, label %if.then43

if.end38:                                         ; preds = %if.end24
  %cmp41 = icmp slt i8 %14, 0
  br i1 %cmp41, label %if.then43, label %land.lhs.true47

if.then43:                                        ; preds = %land.lhs.true31, %if.end38
  store i32 1, i32* %overflow, align 4, !tbaa !3
  %.pre = load i8, i8* %13, align 1, !tbaa !10
  br label %land.lhs.true47

land.lhs.true47:                                  ; preds = %if.end38, %if.then43
  %tobool.not = phi i1 [ true, %if.end38 ], [ false, %if.then43 ]
  %17 = phi i8 [ %14, %if.end38 ], [ %.pre, %if.then43 ]
  %cmp49 = icmp eq i8 %17, 0
  br i1 %cmp49, label %if.then51, label %if.end53

if.then51:                                        ; preds = %land.lhs.true19, %land.lhs.true47
  %tobool.not137 = phi i1 [ %tobool.not, %land.lhs.true47 ], [ true, %land.lhs.true19 ]
  %dec = add i64 %rlen.1104133, -1
  %incdec.ptr52 = getelementptr inbounds i8, i8* %13, i64 1
  store i8* %incdec.ptr52, i8** %sig, align 8, !tbaa !16
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %land.lhs.true47
  %tobool.not136 = phi i1 [ %tobool.not137, %if.then51 ], [ %tobool.not, %land.lhs.true47 ]
  %18 = phi i8* [ %incdec.ptr52, %if.then51 ], [ %13, %land.lhs.true47 ]
  %rlen.2 = phi i64 [ %dec, %if.then51 ], [ %rlen.1104133, %land.lhs.true47 ]
  %cmp54 = icmp ugt i64 %rlen.2, 32
  br i1 %cmp54, label %if.end57.thread, label %if.end57

if.end57.thread:                                  ; preds = %if.end53
  store i32 1, i32* %overflow, align 4, !tbaa !3
  br label %if.then66

if.end57:                                         ; preds = %if.end53
  br i1 %tobool.not136, label %if.then58, label %if.then66

if.then58:                                        ; preds = %if.end57
  %tobool59.not = icmp eq i64 %rlen.2, 0
  br i1 %tobool59.not, label %if.end64, label %if.then60

if.then60:                                        ; preds = %if.then58
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %ra, i64 0, i64 32
  %idx.neg = sub nsw i64 0, %rlen.2
  %add.ptr61 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %add.ptr61, i8* nonnull align 1 %18, i64 %rlen.2, i1 false)
  br label %if.end64

if.end64:                                         ; preds = %if.then58, %if.then60
  call fastcc void @secp256k1_scalar_set_b32(%struct.secp256k1_scalar* noundef %r, i8* noundef nonnull %1, i32* noundef nonnull %overflow)
  %.pr116 = load i32, i32* %overflow, align 4, !tbaa !3
  %tobool65.not = icmp eq i32 %.pr116, 0
  br i1 %tobool65.not, label %if.end67, label %if.then66

if.then66:                                        ; preds = %if.end57, %if.end57.thread, %if.end64
  %19 = bitcast %struct.secp256k1_scalar* %r to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %19, i8 0, i64 32, i1 false)
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.end64
  %20 = load i8*, i8** %sig, align 8, !tbaa !16
  %add.ptr68 = getelementptr inbounds i8, i8* %20, i64 %rlen.2
  store i8* %add.ptr68, i8** %sig, align 8, !tbaa !16
  br label %cleanup

cleanup:                                          ; preds = %while.end.i, %if.end25.i, %if.end18.i, %if.end13.i, %if.end.i, %if.end, %land.lhs.true31, %land.lhs.true19, %if.end6, %lor.lhs.false9, %entry, %lor.lhs.false, %if.end67
  %retval.0 = phi i32 [ 1, %if.end67 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false9 ], [ 0, %if.end6 ], [ 0, %land.lhs.true19 ], [ 0, %land.lhs.true31 ], [ 0, %if.end ], [ 0, %if.end.i ], [ 0, %if.end13.i ], [ 0, %if.end18.i ], [ 0, %if.end25.i ], [ 0, %while.end.i ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* nocapture noundef writeonly %r, %struct.secp256k1_scalar* nocapture noundef readonly %a, %struct.secp256k1_scalar* nocapture noundef readonly %b) unnamed_addr #1 {
entry:
  %l = alloca [8 x i64], align 16
  %0 = bitcast [8 x i64]* %l to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #19
  %arraydecay = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 0
  call fastcc void @secp256k1_scalar_mul_512(i64* noundef nonnull %arraydecay, %struct.secp256k1_scalar* noundef %a, %struct.secp256k1_scalar* noundef %b)
  %arrayidx.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 4
  %1 = load i64, i64* %arrayidx.i, align 16, !tbaa !13
  %arrayidx1.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 5
  %2 = load i64, i64* %arrayidx1.i, align 8, !tbaa !13
  %arrayidx2.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 6
  %3 = load i64, i64* %arrayidx2.i, align 16, !tbaa !13
  %arrayidx3.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 7
  %4 = load i64, i64* %arrayidx3.i, align 8, !tbaa !13
  %5 = load i64, i64* %arraydecay, align 16, !tbaa !13
  %conv.i.i = zext i64 %1 to i128
  %mul.i.i = mul nuw nsw i128 %conv.i.i, 4624529908474429119
  %shr.i.i = lshr i128 %mul.i.i, 64
  %conv.i907.i = trunc i128 %shr.i.i to i64
  %conv.i908.i = trunc i128 %mul.i.i to i64
  %add.i = add i64 %5, %conv.i908.i
  %cmp.i = icmp ult i64 %add.i, %conv.i908.i
  %6 = zext i1 %cmp.i to i64
  %arrayidx16.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 1
  %7 = load i64, i64* %arrayidx16.i, align 8, !tbaa !13
  %add7.i = add i64 %7, %conv.i907.i
  %add17.i = add i64 %add7.i, %6
  %cmp19.i = icmp ult i64 %add17.i, %7
  %8 = zext i1 %cmp19.i to i64
  %conv.i909.i = zext i64 %2 to i128
  %mul.i910.i = mul nuw nsw i128 %conv.i909.i, 4624529908474429119
  %shr.i911.i = lshr i128 %mul.i910.i, 64
  %conv.i912.i = trunc i128 %shr.i911.i to i64
  %conv.i913.i = trunc i128 %mul.i910.i to i64
  %add41.i = add i64 %add17.i, %conv.i913.i
  %cmp42.i = icmp ult i64 %add41.i, %conv.i913.i
  %9 = zext i1 %cmp42.i to i64
  %mul.i915.i = mul nuw nsw i128 %conv.i.i, 4994812053365940164
  %shr.i916.i = lshr i128 %mul.i915.i, 64
  %conv.i917.i = trunc i128 %shr.i916.i to i64
  %conv.i918.i = trunc i128 %mul.i915.i to i64
  %add63.i = add i64 %add41.i, %conv.i918.i
  %cmp64.i = icmp ult i64 %add63.i, %conv.i918.i
  %10 = zext i1 %cmp64.i to i64
  %arrayidx83.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 2
  %11 = load i64, i64* %arrayidx83.i, align 16, !tbaa !13
  %add67.i = add nuw i64 %conv.i912.i, %conv.i917.i
  %add45.i = add i64 %add67.i, %11
  %add46.i = add i64 %add45.i, %8
  %add68.i = add i64 %add46.i, %9
  %add84.i = add i64 %add68.i, %10
  %cmp86.i = icmp ult i64 %add84.i, %11
  %conv88.i = zext i1 %cmp86.i to i64
  %conv.i919.i = zext i64 %3 to i128
  %mul.i920.i = mul nuw nsw i128 %conv.i919.i, 4624529908474429119
  %shr.i921.i = lshr i128 %mul.i920.i, 64
  %conv.i922.i = trunc i128 %shr.i921.i to i64
  %conv.i923.i = trunc i128 %mul.i920.i to i64
  %add100.i = add i64 %add84.i, %conv.i923.i
  %cmp101.i = icmp ult i64 %add100.i, %conv.i923.i
  %12 = zext i1 %cmp101.i to i64
  %mul.i925.i = mul nuw nsw i128 %conv.i909.i, 4994812053365940164
  %shr.i926.i = lshr i128 %mul.i925.i, 64
  %conv.i927.i = trunc i128 %shr.i926.i to i64
  %conv.i928.i = trunc i128 %mul.i925.i to i64
  %add125.i = add i64 %add100.i, %conv.i928.i
  %cmp126.i = icmp ult i64 %add125.i, %conv.i928.i
  %13 = zext i1 %cmp126.i to i64
  %add146.i = add i64 %add125.i, %1
  %cmp147.i = icmp ult i64 %add146.i, %1
  %conv149.i = zext i1 %cmp147.i to i64
  %arrayidx157.i = getelementptr inbounds [8 x i64], [8 x i64]* %l, i64 0, i64 3
  %14 = load i64, i64* %arrayidx157.i, align 8, !tbaa !13
  %add129.i = add nuw i64 %conv.i922.i, %conv.i927.i
  %add104.i = add i64 %add129.i, %14
  %add105.i = add i64 %add104.i, %conv88.i
  %add130.i = add i64 %add105.i, %12
  %add150.i = add i64 %add130.i, %13
  %add158.i = add i64 %add150.i, %conv149.i
  %cmp160.i = icmp ult i64 %add158.i, %14
  %conv162.i = zext i1 %cmp160.i to i64
  %conv.i929.i = zext i64 %4 to i128
  %mul.i930.i = mul nuw nsw i128 %conv.i929.i, 4624529908474429119
  %shr.i931.i = lshr i128 %mul.i930.i, 64
  %conv.i932.i = trunc i128 %shr.i931.i to i64
  %conv.i933.i = trunc i128 %mul.i930.i to i64
  %add174.i = add i64 %add158.i, %conv.i933.i
  %cmp175.i = icmp ult i64 %add174.i, %conv.i933.i
  %15 = zext i1 %cmp175.i to i64
  %mul.i935.i = mul nuw nsw i128 %conv.i919.i, 4994812053365940164
  %shr.i936.i = lshr i128 %mul.i935.i, 64
  %conv.i937.i = trunc i128 %shr.i936.i to i64
  %conv.i938.i = trunc i128 %mul.i935.i to i64
  %add199.i = add i64 %add174.i, %conv.i938.i
  %cmp200.i = icmp ult i64 %add199.i, %conv.i938.i
  %16 = zext i1 %cmp200.i to i64
  %add220.i = add i64 %add199.i, %2
  %cmp221.i = icmp ult i64 %add220.i, %2
  %conv223.i = zext i1 %cmp221.i to i64
  %mul.i940.i = mul nuw nsw i128 %conv.i929.i, 4994812053365940164
  %shr.i941.i = lshr i128 %mul.i940.i, 64
  %conv.i942.i = trunc i128 %shr.i941.i to i64
  %conv.i943.i = trunc i128 %mul.i940.i to i64
  %add203.i = add i64 %conv.i943.i, %conv.i937.i
  %add178.i = add i64 %add203.i, %conv.i932.i
  %add179.i = add i64 %add178.i, %conv162.i
  %add204.i = add i64 %add179.i, %15
  %add224.i = add i64 %add204.i, %16
  %add235.i = add i64 %add224.i, %conv223.i
  %cmp236.i = icmp ult i64 %add235.i, %conv.i943.i
  %17 = zext i1 %cmp236.i to i64
  %add256.i = add i64 %add235.i, %3
  %cmp257.i = icmp ult i64 %add256.i, %3
  %conv259.i = zext i1 %cmp257.i to i64
  %add239.i = add i64 %4, %conv.i942.i
  %add260.i = add i64 %add239.i, %17
  %add266.i = add i64 %add260.i, %conv259.i
  %cmp267.i = icmp ult i64 %add266.i, %4
  %18 = zext i1 %cmp267.i to i64
  %conv.i944.i = zext i64 %add256.i to i128
  %mul.i945.i = mul nuw nsw i128 %conv.i944.i, 4624529908474429119
  %shr.i946.i = lshr i128 %mul.i945.i, 64
  %conv.i947.i = trunc i128 %shr.i946.i to i64
  %conv.i948.i = trunc i128 %mul.i945.i to i64
  %add300.i = add i64 %add.i, %conv.i948.i
  %cmp301.i = icmp ult i64 %add300.i, %conv.i948.i
  %19 = zext i1 %cmp301.i to i64
  %add304.i = add i64 %add63.i, %conv.i947.i
  %add316.i = add i64 %add304.i, %19
  %cmp317.i = icmp ult i64 %add316.i, %add63.i
  %20 = zext i1 %cmp317.i to i64
  %conv.i949.i = zext i64 %add266.i to i128
  %mul.i950.i = mul nuw nsw i128 %conv.i949.i, 4624529908474429119
  %shr.i951.i = lshr i128 %mul.i950.i, 64
  %conv.i952.i = trunc i128 %shr.i951.i to i64
  %conv.i953.i = trunc i128 %mul.i950.i to i64
  %add339.i = add i64 %add316.i, %conv.i953.i
  %cmp340.i = icmp ult i64 %add339.i, %conv.i953.i
  %21 = zext i1 %cmp340.i to i64
  %mul.i955.i = mul nuw nsw i128 %conv.i944.i, 4994812053365940164
  %shr.i956.i = lshr i128 %mul.i955.i, 64
  %conv.i957.i = trunc i128 %shr.i956.i to i64
  %conv.i958.i = trunc i128 %mul.i955.i to i64
  %add364.i = add i64 %add339.i, %conv.i958.i
  %cmp365.i = icmp ult i64 %add364.i, %conv.i958.i
  %22 = zext i1 %cmp365.i to i64
  %add368.i = add i64 %add146.i, %conv.i957.i
  %add343.i = add i64 %add368.i, %conv.i952.i
  %add344.i = add i64 %add343.i, %20
  %add369.i = add i64 %add344.i, %21
  %add385.i = add i64 %add369.i, %22
  %cmp386.i = icmp ult i64 %add385.i, %add146.i
  %conv388.i = zext i1 %cmp386.i to i64
  %conv.i963.i = select i1 %cmp267.i, i64 4624529908474429119, i64 0
  %add401.i = add i64 %add385.i, %conv.i963.i
  %cmp402.i = icmp ult i64 %add401.i, %conv.i963.i
  %23 = zext i1 %cmp402.i to i64
  %mul.i965.i = mul nuw nsw i128 %conv.i949.i, 4994812053365940164
  %shr.i966.i = lshr i128 %mul.i965.i, 64
  %conv.i967.i = trunc i128 %shr.i966.i to i64
  %conv.i968.i = trunc i128 %mul.i965.i to i64
  %add426.i = add i64 %add401.i, %conv.i968.i
  %cmp427.i = icmp ult i64 %add426.i, %conv.i968.i
  %24 = zext i1 %cmp427.i to i64
  %add447.i = add i64 %add426.i, %add256.i
  %cmp448.i = icmp ult i64 %add447.i, %add256.i
  %conv450.i = zext i1 %cmp448.i to i64
  %add430.i = add i64 %add220.i, %conv.i967.i
  %add406.i = add i64 %add430.i, %conv388.i
  %add431.i = add i64 %add406.i, %23
  %add451.i = add i64 %add431.i, %24
  %add457.i = add i64 %add451.i, %conv450.i
  %cmp458.i = icmp ult i64 %add457.i, %add220.i
  %25 = zext i1 %cmp458.i to i64
  %conv.i973.i = select i1 %cmp267.i, i64 4994812053365940164, i64 0
  %add481.i = add i64 %add457.i, %conv.i973.i
  %cmp482.i = icmp ult i64 %add481.i, %conv.i973.i
  %26 = zext i1 %cmp482.i to i64
  %add492.i = add i64 %add481.i, %add266.i
  %cmp493.i = icmp ult i64 %add492.i, %add266.i
  %27 = zext i1 %cmp493.i to i64
  %add486.i = add nuw nsw i64 %25, %18
  %add496.i = add nuw nsw i64 %add486.i, %26
  %add516.i = add nuw nsw i64 %add496.i, %27
  %conv.i974.i = zext i64 %add300.i to i128
  %conv1.i.i = zext i64 %add516.i to i128
  %mul.i975.i = mul nuw nsw i128 %conv1.i.i, 4624529908474429119
  %add.i.i = add nuw nsw i128 %mul.i975.i, %conv.i974.i
  %conv.i976.i = trunc i128 %add.i.i to i64
  %arrayidx525.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 0
  %shr.i977.i = lshr i128 %add.i.i, 64
  %conv.i978.i = zext i64 %add364.i to i128
  %mul.i981.i = mul nuw nsw i128 %conv1.i.i, 4994812053365940164
  %add.i979.i = add nuw nsw i128 %mul.i981.i, %conv.i978.i
  %add.i982.i = add nuw nsw i128 %add.i979.i, %shr.i977.i
  %conv.i983.i = trunc i128 %add.i982.i to i64
  %arrayidx529.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 1
  %shr.i984.i = lshr i128 %add.i982.i, 64
  %conv.i985.i = zext i64 %add447.i to i128
  %add.i986.i = add nuw nsw i128 %conv1.i.i, %conv.i985.i
  %add.i988.i = add nuw nsw i128 %add.i986.i, %shr.i984.i
  %conv.i989.i = trunc i128 %add.i988.i to i64
  %arrayidx533.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 2
  %shr.i990.i = lshr i128 %add.i988.i, 64
  %conv.i991.i = zext i64 %add492.i to i128
  %add.i992.i = add nuw nsw i128 %shr.i990.i, %conv.i991.i
  %conv.i993.i = trunc i128 %add.i992.i to i64
  %arrayidx536.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %r, i64 0, i32 0, i64 3
  %shr.i994.i = lshr i128 %add.i992.i, 64
  %cmp.i.i = icmp ne i64 %conv.i993.i, -1
  %cmp3.i.i = icmp ult i64 %conv.i989.i, -2
  %or545.i.i = or i1 %cmp3.i.i, %cmp.i.i
  %or5.i.i = zext i1 %or545.i.i to i32
  %cmp8.i.i = icmp eq i64 %conv.i989.i, -1
  %conv9.i.i = zext i1 %cmp8.i.i to i32
  %neg.i.i = xor i32 %or5.i.i, -1
  %and.i.i = and i32 %neg.i.i, %conv9.i.i
  %cmp13.i.i = icmp ult i64 %conv.i983.i, -4994812053365940165
  %or1546.i.i = or i1 %cmp13.i.i, %or545.i.i
  %or15.i.i = zext i1 %or1546.i.i to i32
  %cmp18.i.i = icmp ugt i64 %conv.i983.i, -4994812053365940165
  %conv19.i.i = zext i1 %cmp18.i.i to i32
  %neg20.i.i = xor i32 %or15.i.i, -1
  %and21.i.i = and i32 %neg20.i.i, %conv19.i.i
  %or22.i.i = or i32 %and21.i.i, %and.i.i
  %cmp25.i.i = icmp ugt i64 %conv.i976.i, -4624529908474429120
  %conv26.i.i = zext i1 %cmp25.i.i to i32
  %and28.i.i = and i32 %neg20.i.i, %conv26.i.i
  %or29.i.i = or i32 %or22.i.i, %and28.i.i
  %28 = trunc i128 %shr.i994.i to i32
  %conv541.i = add nuw nsw i32 %or29.i.i, %28
  %conv.i.i.i = and i128 %add.i.i, 18446744073709551615
  %conv1.i997.i = zext i32 %conv541.i to i64
  %mul.i998.i = mul nuw i64 %conv1.i997.i, 4624529908474429119
  %conv.i37.i.i = zext i64 %mul.i998.i to i128
  %add.i.i.i = add nuw nsw i128 %conv.i.i.i, %conv.i37.i.i
  %conv.i38.i.i = trunc i128 %add.i.i.i to i64
  store i64 %conv.i38.i.i, i64* %arrayidx525.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i128 %add.i.i.i, 64
  %conv.i39.i.i = and i128 %add.i982.i, 18446744073709551615
  %mul7.i.i = mul nuw i64 %conv1.i997.i, 4994812053365940164
  %conv.i41.i.i = zext i64 %mul7.i.i to i128
  %add.i40.i.i = add nuw nsw i128 %conv.i39.i.i, %conv.i41.i.i
  %add.i42.i.i = add nuw nsw i128 %add.i40.i.i, %shr.i.i.i
  %conv.i43.i.i = trunc i128 %add.i42.i.i to i64
  store i64 %conv.i43.i.i, i64* %arrayidx529.i, align 8, !tbaa !13
  %shr.i44.i.i = lshr i128 %add.i42.i.i, 64
  %conv.i45.i.i = and i128 %add.i988.i, 18446744073709551615
  %conv.i47.i.i = zext i32 %conv541.i to i128
  %add.i46.i.i = add nuw nsw i128 %conv.i45.i.i, %conv.i47.i.i
  %add.i48.i.i = add nuw nsw i128 %add.i46.i.i, %shr.i44.i.i
  %conv.i49.i.i = trunc i128 %add.i48.i.i to i64
  store i64 %conv.i49.i.i, i64* %arrayidx533.i, align 8, !tbaa !13
  %shr.i50.i.i = lshr i128 %add.i48.i.i, 64
  %29 = trunc i128 %shr.i50.i.i to i64
  %conv.i53.i.i = add i64 %29, %conv.i993.i
  store i64 %conv.i53.i.i, i64* %arrayidx536.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_ecmult(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* nocapture noundef readonly %a, %struct.secp256k1_scalar* nocapture noundef readonly %na, %struct.secp256k1_scalar* noundef readonly %ng) unnamed_addr #9 {
entry:
  %zi2.i.i16.i = alloca %struct.secp256k1_fe, align 16
  %zi3.i.i17.i = alloca %struct.secp256k1_fe, align 8
  %zs.i.i = alloca %struct.secp256k1_fe, align 8
  %tmpa.i.i = alloca %struct.secp256k1_gej, align 8
  %zi2.i.i.i = alloca %struct.secp256k1_fe, align 16
  %zi3.i.i.i = alloca %struct.secp256k1_fe, align 8
  %d.i.i = alloca %struct.secp256k1_gej, align 8
  %ai.i.i = alloca %struct.secp256k1_gej, align 8
  %d_ge.i.i = alloca %struct.secp256k1_ge, align 8
  %l.i18.i.i = alloca [8 x i64], align 16
  %l.i.i.i = alloca [8 x i64], align 16
  %c1.i.i = alloca %struct.secp256k1_scalar, align 8
  %c2.i.i = alloca %struct.secp256k1_scalar, align 8
  %tmpa.i = alloca %struct.secp256k1_ge, align 8
  %Z.i = alloca %struct.secp256k1_fe, align 8
  %ng_1.i = alloca %struct.secp256k1_scalar, align 16
  %ng_128.i = alloca %struct.secp256k1_scalar, align 16
  %wnaf_ng_1.i = alloca [129 x i32], align 16
  %wnaf_ng_128.i = alloca [129 x i32], align 16
  %tmp.i = alloca %struct.secp256k1_gej, align 8
  %na_1.i = alloca %struct.secp256k1_scalar, align 8
  %na_lam.i = alloca %struct.secp256k1_scalar, align 8
  %aux = alloca [8 x %struct.secp256k1_fe], align 16
  %pre_a = alloca [8 x %struct.secp256k1_ge], align 16
  %ps = alloca [1 x %struct.secp256k1_strauss_point_state], align 16
  %0 = bitcast [8 x %struct.secp256k1_fe]* %aux to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %0) #19
  %1 = bitcast [8 x %struct.secp256k1_ge]* %pre_a to i8*
  call void @llvm.lifetime.start.p0i8(i64 704, i8* nonnull %1) #19
  %2 = bitcast [1 x %struct.secp256k1_strauss_point_state]* %ps to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %2) #19
  %3 = bitcast %struct.secp256k1_ge* %tmpa.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #19
  %4 = bitcast %struct.secp256k1_fe* %Z.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  %5 = bitcast %struct.secp256k1_scalar* %ng_1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #19
  %6 = bitcast %struct.secp256k1_scalar* %ng_128.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #19
  %7 = bitcast [129 x i32]* %wnaf_ng_1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 516, i8* nonnull %7) #19
  %8 = bitcast [129 x i32]* %wnaf_ng_128.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 516, i8* nonnull %8) #19
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %Z.i, i64 0, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx9.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %Z.i, i64 0, i32 0, i64 1
  %9 = bitcast i64* %arrayidx9.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %9, i8 0, i64 32, i1 false) #19
  %10 = bitcast %struct.secp256k1_gej* %tmp.i to i8*
  %11 = bitcast %struct.secp256k1_scalar* %na_1.i to i8*
  %12 = bitcast %struct.secp256k1_scalar* %na_lam.i to i8*
  %arrayidx.i3.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na, i64 0, i32 0, i64 0
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na, i64 0, i32 0, i64 1
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na, i64 0, i32 0, i64 2
  %arrayidx7.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na, i64 0, i32 0, i64 3
  %13 = bitcast %struct.secp256k1_scalar* %c1.i.i to i8*
  %14 = bitcast %struct.secp256k1_scalar* %c2.i.i to i8*
  %15 = bitcast [8 x i64]* %l.i.i.i to i8*
  %arraydecay.i.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i.i.i, i64 0, i64 0
  %arrayidx.i.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i.i.i, i64 0, i64 6
  %arrayidx14.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c1.i.i, i64 0, i32 0, i64 0
  %arrayidx20.i.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i.i.i, i64 0, i64 7
  %arrayidx41.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c1.i.i, i64 0, i32 0, i64 1
  %arrayidx68.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c1.i.i, i64 0, i32 0, i64 2
  %arrayidx81.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c1.i.i, i64 0, i32 0, i64 3
  %arrayidx85.i.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i.i.i, i64 0, i64 5
  %16 = bitcast [8 x i64]* %l.i18.i.i to i8*
  %arraydecay.i19.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i18.i.i, i64 0, i64 0
  %arrayidx.i20.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i18.i.i, i64 0, i64 6
  %arrayidx14.i21.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c2.i.i, i64 0, i32 0, i64 0
  %arrayidx20.i22.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i18.i.i, i64 0, i64 7
  %arrayidx41.i23.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c2.i.i, i64 0, i32 0, i64 1
  %arrayidx68.i24.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c2.i.i, i64 0, i32 0, i64 2
  %arrayidx81.i25.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %c2.i.i, i64 0, i32 0, i64 3
  %arrayidx85.i26.i.i = getelementptr inbounds [8 x i64], [8 x i64]* %l.i18.i.i, i64 0, i64 5
  %arrayidx4.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_lam.i, i64 0, i32 0, i64 0
  %arrayidx11.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_lam.i, i64 0, i32 0, i64 1
  %arrayidx18.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_lam.i, i64 0, i32 0, i64 2
  %arrayidx25.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_lam.i, i64 0, i32 0, i64 3
  %arrayidx.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_1.i, i64 0, i32 0, i64 0
  %arrayidx2.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_1.i, i64 0, i32 0, i64 1
  %arrayidx4.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_1.i, i64 0, i32 0, i64 2
  %arrayidx7.i.i.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %na_1.i, i64 0, i32 0, i64 3
  %17 = bitcast %struct.secp256k1_gej* %a to i8*
  %18 = bitcast %struct.secp256k1_gej* %d.i.i to i8*
  %19 = bitcast %struct.secp256k1_gej* %ai.i.i to i8*
  %20 = bitcast %struct.secp256k1_ge* %d_ge.i.i to i8*
  %y.i4.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %d.i.i, i64 0, i32 1
  %infinity.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %d_ge.i.i, i64 0, i32 2
  %y2.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %d_ge.i.i, i64 0, i32 1
  %21 = bitcast %struct.secp256k1_fe* %y2.i.i.i to i8*
  %22 = bitcast %struct.secp256k1_fe* %y.i4.i to i8*
  %z1.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %d.i.i, i64 0, i32 2
  %23 = bitcast %struct.secp256k1_fe* %zi2.i.i.i to i8*
  %24 = bitcast %struct.secp256k1_fe* %zi3.i.i.i to i8*
  %infinity.i1.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmp.i, i64 0, i32 3
  %arraydecay2.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %z1.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %d.i.i, i64 0, i32 2, i32 0, i64 1
  %arrayidx2.i.i.i6.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %d.i.i, i64 0, i32 2, i32 0, i64 2
  %arrayidx3.i.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %d.i.i, i64 0, i32 2, i32 0, i64 3
  %arrayidx4.i.i.i7.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %d.i.i, i64 0, i32 2, i32 0, i64 4
  %arrayidx130.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zi2.i.i.i, i64 0, i32 0, i64 2
  %arrayidx151.i.i.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zi2.i.i.i, i64 0, i32 0, i64 4
  %x1.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmp.i, i64 0, i32 0
  %y2.i2.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmp.i, i64 0, i32 1
  %infinity1.i.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %ai.i.i, i64 0, i32 3
  %y.i4.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %ai.i.i, i64 0, i32 1
  %25 = bitcast %struct.secp256k1_fe* %y.i4.i.i to i8*
  %z3.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %ai.i.i, i64 0, i32 2
  %z4.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmp.i, i64 0, i32 2
  %26 = bitcast %struct.secp256k1_fe* %z3.i.i to i8*
  %27 = bitcast %struct.secp256k1_fe* %z4.i.i to i8*
  %28 = bitcast %struct.secp256k1_fe* %z1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #19
  %29 = bitcast %struct.secp256k1_scalar* %na to <4 x i64>*
  %30 = load <4 x i64>, <4 x i64>* %29, align 8, !tbaa !13
  %31 = call i64 @llvm.vector.reduce.or.v4i64(<4 x i64> %30)
  %cmp.i.not.i = icmp eq i64 %31, 0
  br i1 %cmp.i.not.i, label %secp256k1_ge_table_set_globalz.exit.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %a.idx.i = getelementptr %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 3
  %a.idx.val.i = load i32, i32* %a.idx.i, align 8, !tbaa !65
  %tobool3.not.i = icmp eq i32 %a.idx.val.i, 0
  br i1 %tobool3.not.i, label %if.then.i.i, label %secp256k1_ge_table_set_globalz.exit.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #19
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #19
  call fastcc void @secp256k1_scalar_mul_512(i64* noundef nonnull %arraydecay.i.i.i, %struct.secp256k1_scalar* noundef nonnull %na, %struct.secp256k1_scalar* noundef nonnull @secp256k1_scalar_split_lambda.g1) #19
  %32 = load i64, i64* %arrayidx.i.i.i, align 16, !tbaa !13
  %33 = load i64, i64* %arrayidx20.i.i.i, align 8, !tbaa !13
  %34 = load i64, i64* %arrayidx85.i.i.i, align 8, !tbaa !13
  %shr89.i.i.i = lshr i64 %34, 63
  %conv91.i.i.i = trunc i64 %shr89.i.i.i to i32
  %sub.i.i.i.i = add nuw nsw i32 %conv91.i.i.i, 511
  %conv.i.i.i.i.i = zext i64 %32 to i128
  %and.i.i.i.i = lshr i32 %sub.i.i.i.i, 8
  %and.lobit.i.i.i.i = and i32 %and.i.i.i.i, 1
  %35 = xor i32 %and.lobit.i.i.i.i, 1
  %conv.i4.i.i.i.i = zext i32 %35 to i128
  %add.i.i.i.i.i = add nuw nsw i128 %conv.i4.i.i.i.i, %conv.i.i.i.i.i
  %conv.i5.i.i.i.i = trunc i128 %add.i.i.i.i.i to i64
  store i64 %conv.i5.i.i.i.i, i64* %arrayidx14.i.i.i, align 8, !tbaa !13
  %shr.i.i.i.i.i = lshr i128 %add.i.i.i.i.i, 64
  %conv.i6.i.i.i.i = zext i64 %33 to i128
  %add.i7.i.i.i.i = add nuw nsw i128 %shr.i.i.i.i.i, %conv.i6.i.i.i.i
  %conv.i8.i.i.i.i = trunc i128 %add.i7.i.i.i.i to i64
  store i64 %conv.i8.i.i.i.i, i64* %arrayidx41.i.i.i, align 8, !tbaa !13
  %shr.i9.i.i.i.i = lshr i128 %add.i7.i.i.i.i, 64
  %conv.i12.i.i.i.i = trunc i128 %shr.i9.i.i.i.i to i64
  store i64 %conv.i12.i.i.i.i, i64* %arrayidx68.i.i.i, align 8, !tbaa !13
  store i64 0, i64* %arrayidx81.i.i.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #19
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #19
  call fastcc void @secp256k1_scalar_mul_512(i64* noundef nonnull %arraydecay.i19.i.i, %struct.secp256k1_scalar* noundef nonnull %na, %struct.secp256k1_scalar* noundef nonnull @secp256k1_scalar_split_lambda.g2) #19
  %36 = load i64, i64* %arrayidx.i20.i.i, align 16, !tbaa !13
  %37 = load i64, i64* %arrayidx20.i22.i.i, align 8, !tbaa !13
  %38 = load i64, i64* %arrayidx85.i26.i.i, align 8, !tbaa !13
  %shr89.i27.i.i = lshr i64 %38, 63
  %conv91.i28.i.i = trunc i64 %shr89.i27.i.i to i32
  %sub.i.i29.i.i = add nuw nsw i32 %conv91.i28.i.i, 511
  %conv.i.i.i30.i.i = zext i64 %36 to i128
  %and.i.i31.i.i = lshr i32 %sub.i.i29.i.i, 8
  %and.lobit.i.i32.i.i = and i32 %and.i.i31.i.i, 1
  %39 = xor i32 %and.lobit.i.i32.i.i, 1
  %conv.i4.i.i33.i.i = zext i32 %39 to i128
  %add.i.i.i34.i.i = add nuw nsw i128 %conv.i4.i.i33.i.i, %conv.i.i.i30.i.i
  %conv.i5.i.i35.i.i = trunc i128 %add.i.i.i34.i.i to i64
  store i64 %conv.i5.i.i35.i.i, i64* %arrayidx14.i21.i.i, align 8, !tbaa !13
  %shr.i.i.i36.i.i = lshr i128 %add.i.i.i34.i.i, 64
  %conv.i6.i.i37.i.i = zext i64 %37 to i128
  %add.i7.i.i38.i.i = add nuw nsw i128 %shr.i.i.i36.i.i, %conv.i6.i.i37.i.i
  %conv.i8.i.i39.i.i = trunc i128 %add.i7.i.i38.i.i to i64
  store i64 %conv.i8.i.i39.i.i, i64* %arrayidx41.i23.i.i, align 8, !tbaa !13
  %shr.i9.i.i40.i.i = lshr i128 %add.i7.i.i38.i.i, 64
  %conv.i12.i.i41.i.i = trunc i128 %shr.i9.i.i40.i.i to i64
  store i64 %conv.i12.i.i41.i.i, i64* %arrayidx68.i24.i.i, align 8, !tbaa !13
  store i64 0, i64* %arrayidx81.i25.i.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #19
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %c1.i.i, %struct.secp256k1_scalar* noundef nonnull %c1.i.i, %struct.secp256k1_scalar* noundef nonnull @secp256k1_scalar_split_lambda.minus_b1) #19
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %c2.i.i, %struct.secp256k1_scalar* noundef nonnull %c2.i.i, %struct.secp256k1_scalar* noundef nonnull @secp256k1_scalar_split_lambda.minus_b2) #19
  %40 = load i64, i64* %arrayidx14.i.i.i, align 8, !tbaa !13
  %conv.i.i.i.i = zext i64 %40 to i128
  %41 = load i64, i64* %arrayidx14.i21.i.i, align 8, !tbaa !13
  %conv.i6.i.i.i = zext i64 %41 to i128
  %add.i.i.i.i = add nuw nsw i128 %conv.i6.i.i.i, %conv.i.i.i.i
  %conv.i7.i.i.i = trunc i128 %add.i.i.i.i to i64
  %shr.i.i.i.i = lshr i128 %add.i.i.i.i, 64
  %42 = load i64, i64* %arrayidx41.i.i.i, align 8, !tbaa !13
  %conv.i8.i.i.i = zext i64 %42 to i128
  %add.i9.i.i.i = add nuw nsw i128 %shr.i.i.i.i, %conv.i8.i.i.i
  %43 = load i64, i64* %arrayidx41.i23.i.i, align 8, !tbaa !13
  %conv.i10.i.i.i = zext i64 %43 to i128
  %add.i11.i.i.i = add nuw nsw i128 %add.i9.i.i.i, %conv.i10.i.i.i
  %conv.i12.i.i.i = trunc i128 %add.i11.i.i.i to i64
  %shr.i13.i.i.i = lshr i128 %add.i11.i.i.i, 64
  %44 = load i64, i64* %arrayidx68.i.i.i, align 8, !tbaa !13
  %conv.i14.i.i.i = zext i64 %44 to i128
  %45 = load i64, i64* %arrayidx68.i24.i.i, align 8, !tbaa !13
  %conv.i16.i.i.i = zext i64 %45 to i128
  %add.i15.i.i.i = add nuw nsw i128 %conv.i16.i.i.i, %conv.i14.i.i.i
  %add.i17.i.i.i = add nuw nsw i128 %add.i15.i.i.i, %shr.i13.i.i.i
  %conv.i18.i.i.i = trunc i128 %add.i17.i.i.i to i64
  %shr.i19.i.i.i = lshr i128 %add.i17.i.i.i, 64
  %46 = load i64, i64* %arrayidx81.i.i.i, align 8, !tbaa !13
  %conv.i20.i.i.i = zext i64 %46 to i128
  %47 = load i64, i64* %arrayidx81.i25.i.i, align 8, !tbaa !13
  %conv.i22.i.i.i = zext i64 %47 to i128
  %add.i21.i.i.i = add nuw nsw i128 %conv.i22.i.i.i, %conv.i20.i.i.i
  %add.i23.i.i.i = add nuw nsw i128 %add.i21.i.i.i, %shr.i19.i.i.i
  %conv.i24.i.i.i = trunc i128 %add.i23.i.i.i to i64
  %shr.i25.i.i.i = lshr i128 %add.i23.i.i.i, 64
  %cmp.i.i.i.i = icmp ne i64 %conv.i24.i.i.i, -1
  %cmp3.i.i.i.i = icmp ult i64 %conv.i18.i.i.i, -2
  %or545.i.i.i.i = or i1 %cmp3.i.i.i.i, %cmp.i.i.i.i
  %or5.i.i.i.i = zext i1 %or545.i.i.i.i to i32
  %cmp8.i.i.i.i = icmp eq i64 %conv.i18.i.i.i, -1
  %conv9.i.i.i.i = zext i1 %cmp8.i.i.i.i to i32
  %neg.i.i.i.i = xor i32 %or5.i.i.i.i, -1
  %and.i.i44.i.i = and i32 %neg.i.i.i.i, %conv9.i.i.i.i
  %cmp13.i.i.i.i = icmp ult i64 %conv.i12.i.i.i, -4994812053365940165
  %or1546.i.i.i.i = or i1 %cmp13.i.i.i.i, %or545.i.i.i.i
  %or15.i.i.i.i = zext i1 %or1546.i.i.i.i to i32
  %cmp18.i.i.i.i = icmp ugt i64 %conv.i12.i.i.i, -4994812053365940165
  %conv19.i.i.i.i = zext i1 %cmp18.i.i.i.i to i32
  %neg20.i.i.i.i = xor i32 %or15.i.i.i.i, -1
  %and21.i.i.i.i = and i32 %neg20.i.i.i.i, %conv19.i.i.i.i
  %or22.i.i.i.i = or i32 %and21.i.i.i.i, %and.i.i44.i.i
  %cmp25.i.i.i.i = icmp ugt i64 %conv.i7.i.i.i, -4624529908474429120
  %conv26.i.i.i.i = zext i1 %cmp25.i.i.i.i to i32
  %and28.i.i.i.i = and i32 %neg20.i.i.i.i, %conv26.i.i.i.i
  %or29.i.i.i.i = or i32 %or22.i.i.i.i, %and28.i.i.i.i
  %48 = trunc i128 %shr.i25.i.i.i to i32
  %conv28.i.i.i = add nuw nsw i32 %or29.i.i.i.i, %48
  %conv.i.i.i45.i.i = and i128 %add.i.i.i.i, 18446744073709551615
  %conv1.i.i.i.i = zext i32 %conv28.i.i.i to i64
  %mul.i.i.i.i = mul i64 %conv1.i.i.i.i, 4624529908474429119
  %conv.i37.i.i.i.i = zext i64 %mul.i.i.i.i to i128
  %add.i.i.i46.i.i = add nuw nsw i128 %conv.i.i.i45.i.i, %conv.i37.i.i.i.i
  %conv.i38.i.i.i.i = trunc i128 %add.i.i.i46.i.i to i64
  store i64 %conv.i38.i.i.i.i, i64* %arrayidx4.i.i.i, align 8, !tbaa !13
  %shr.i.i.i47.i.i = lshr i128 %add.i.i.i46.i.i, 64
  %conv.i39.i.i.i.i = and i128 %add.i11.i.i.i, 18446744073709551615
  %mul7.i.i.i.i = mul i64 %conv1.i.i.i.i, 4994812053365940164
  %conv.i41.i.i.i.i = zext i64 %mul7.i.i.i.i to i128
  %add.i40.i.i.i.i = add nuw nsw i128 %conv.i39.i.i.i.i, %conv.i41.i.i.i.i
  %add.i42.i.i.i.i = add nuw nsw i128 %add.i40.i.i.i.i, %shr.i.i.i47.i.i
  %conv.i43.i.i.i.i = trunc i128 %add.i42.i.i.i.i to i64
  store i64 %conv.i43.i.i.i.i, i64* %arrayidx11.i.i.i, align 8, !tbaa !13
  %shr.i44.i.i.i.i = lshr i128 %add.i42.i.i.i.i, 64
  %conv.i45.i.i.i.i = and i128 %add.i17.i.i.i, 18446744073709551615
  %conv.i47.i.i.i.i = zext i32 %conv28.i.i.i to i128
  %add.i46.i.i.i.i = add nuw nsw i128 %conv.i45.i.i.i.i, %conv.i47.i.i.i.i
  %add.i48.i.i.i.i = add nuw nsw i128 %add.i46.i.i.i.i, %shr.i44.i.i.i.i
  %conv.i49.i.i.i.i = trunc i128 %add.i48.i.i.i.i to i64
  store i64 %conv.i49.i.i.i.i, i64* %arrayidx18.i.i.i, align 8, !tbaa !13
  %shr.i50.i.i.i.i = lshr i128 %add.i48.i.i.i.i, 64
  %49 = trunc i128 %shr.i50.i.i.i.i to i64
  %conv.i53.i.i.i.i = add i64 %49, %conv.i24.i.i.i
  store i64 %conv.i53.i.i.i.i, i64* %arrayidx25.i.i.i, align 8, !tbaa !13
  call fastcc void @secp256k1_scalar_mul(%struct.secp256k1_scalar* noundef nonnull %na_1.i, %struct.secp256k1_scalar* noundef nonnull %na_lam.i, %struct.secp256k1_scalar* noundef nonnull @secp256k1_const_lambda) #19
  %50 = load i64, i64* %arrayidx.i.i.i.i, align 8, !tbaa !13
  %51 = load i64, i64* %arrayidx2.i.i.i.i, align 8, !tbaa !13
  %or.i.i.i.i = or i64 %51, %50
  %52 = load i64, i64* %arrayidx4.i.i.i.i, align 8, !tbaa !13
  %or5.i.i48.i.i = or i64 %or.i.i.i.i, %52
  %53 = load i64, i64* %arrayidx7.i.i.i.i, align 8, !tbaa !13
  %or8.i.i.i.i = or i64 %or5.i.i48.i.i, %53
  %cmp.i.i49.i.i = icmp ne i64 %or8.i.i.i.i, 0
  %.neg.i.i.i = sext i1 %cmp.i.i49.i.i to i64
  %neg.i.i.i = xor i64 %50, -1
  %conv.i40.i.i.i = zext i64 %neg.i.i.i to i128
  %add.i.i50.i.i = add nuw nsw i128 %conv.i40.i.i.i, 13822214165235122498
  %conv.i41.i.i.i = trunc i128 %add.i.i50.i.i to i64
  %and.i.i.i = and i64 %.neg.i.i.i, %conv.i41.i.i.i
  %shr.i.i52.i.i = lshr i128 %add.i.i50.i.i, 64
  %neg7.i.i.i = xor i64 %51, -1
  %conv.i42.i.i.i = zext i64 %neg7.i.i.i to i128
  %add.i43.i.i.i = add nuw nsw i128 %conv.i42.i.i.i, 13451932020343611451
  %add.i44.i.i.i = add nuw nsw i128 %add.i43.i.i.i, %shr.i.i52.i.i
  %conv.i45.i.i.i = trunc i128 %add.i44.i.i.i to i64
  %and9.i.i.i = and i64 %.neg.i.i.i, %conv.i45.i.i.i
  %shr.i46.i.i.i = lshr i128 %add.i44.i.i.i, 64
  %neg14.i.i.i = xor i64 %52, -1
  %conv.i47.i.i.i = zext i64 %neg14.i.i.i to i128
  %add.i48.i.i.i = add nuw nsw i128 %conv.i47.i.i.i, 18446744073709551614
  %add.i49.i.i.i = add nuw nsw i128 %add.i48.i.i.i, %shr.i46.i.i.i
  %conv.i50.i.i.i = trunc i128 %add.i49.i.i.i to i64
  %and16.i.i.i = and i64 %conv.i50.i.i.i, %.neg.i.i.i
  %shr.i51.i.i.i = lshr i128 %add.i49.i.i.i, 64
  %54 = trunc i128 %shr.i51.i.i.i to i64
  %55 = sub i64 -2, %53
  %conv.i55.i.i.i = add i64 %55, %54
  %and23.i.i.i = and i64 %conv.i55.i.i.i, %.neg.i.i.i
  %conv.i.i57.i.i = zext i64 %and.i.i.i to i128
  %56 = load i64, i64* %arrayidx.i3.i, align 8, !tbaa !13
  %conv.i6.i59.i.i = zext i64 %56 to i128
  %add.i.i60.i.i = add nuw nsw i128 %conv.i.i57.i.i, %conv.i6.i59.i.i
  %conv.i7.i61.i.i = trunc i128 %add.i.i60.i.i to i64
  %shr.i.i63.i.i = lshr i128 %add.i.i60.i.i, 64
  %conv.i8.i65.i.i = zext i64 %and9.i.i.i to i128
  %57 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %conv.i10.i68.i.i = zext i64 %57 to i128
  %add.i9.i66.i.i = add nuw nsw i128 %conv.i8.i65.i.i, %conv.i10.i68.i.i
  %add.i11.i69.i.i = add nuw nsw i128 %add.i9.i66.i.i, %shr.i.i63.i.i
  %conv.i12.i70.i.i = trunc i128 %add.i11.i69.i.i to i64
  %shr.i13.i72.i.i = lshr i128 %add.i11.i69.i.i, 64
  %conv.i14.i74.i.i = zext i64 %and16.i.i.i to i128
  %58 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %conv.i16.i77.i.i = zext i64 %58 to i128
  %add.i15.i75.i.i = add nuw nsw i128 %conv.i14.i74.i.i, %conv.i16.i77.i.i
  %add.i17.i78.i.i = add nuw nsw i128 %add.i15.i75.i.i, %shr.i13.i72.i.i
  %conv.i18.i79.i.i = trunc i128 %add.i17.i78.i.i to i64
  %shr.i19.i81.i.i = lshr i128 %add.i17.i78.i.i, 64
  %conv.i20.i83.i.i = zext i64 %and23.i.i.i to i128
  %59 = load i64, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %conv.i22.i86.i.i = zext i64 %59 to i128
  %add.i21.i84.i.i = add nuw nsw i128 %conv.i20.i83.i.i, %conv.i22.i86.i.i
  %add.i23.i87.i.i = add nuw nsw i128 %add.i21.i84.i.i, %shr.i19.i81.i.i
  %conv.i24.i88.i.i = trunc i128 %add.i23.i87.i.i to i64
  %shr.i25.i90.i.i = lshr i128 %add.i23.i87.i.i, 64
  %cmp.i.i91.i.i = icmp ne i64 %conv.i24.i88.i.i, -1
  %cmp3.i.i92.i.i = icmp ult i64 %conv.i18.i79.i.i, -2
  %or545.i.i93.i.i = or i1 %cmp3.i.i92.i.i, %cmp.i.i91.i.i
  %or5.i.i94.i.i = zext i1 %or545.i.i93.i.i to i32
  %cmp8.i.i95.i.i = icmp eq i64 %conv.i18.i79.i.i, -1
  %conv9.i.i96.i.i = zext i1 %cmp8.i.i95.i.i to i32
  %neg.i.i97.i.i = xor i32 %or5.i.i94.i.i, -1
  %and.i.i98.i.i = and i32 %neg.i.i97.i.i, %conv9.i.i96.i.i
  %cmp13.i.i99.i.i = icmp ult i64 %conv.i12.i70.i.i, -4994812053365940165
  %or1546.i.i100.i.i = or i1 %cmp13.i.i99.i.i, %or545.i.i93.i.i
  %or15.i.i101.i.i = zext i1 %or1546.i.i100.i.i to i32
  %cmp18.i.i102.i.i = icmp ugt i64 %conv.i12.i70.i.i, -4994812053365940165
  %conv19.i.i103.i.i = zext i1 %cmp18.i.i102.i.i to i32
  %neg20.i.i104.i.i = xor i32 %or15.i.i101.i.i, -1
  %and21.i.i105.i.i = and i32 %neg20.i.i104.i.i, %conv19.i.i103.i.i
  %or22.i.i106.i.i = or i32 %and21.i.i105.i.i, %and.i.i98.i.i
  %cmp25.i.i107.i.i = icmp ugt i64 %conv.i7.i61.i.i, -4624529908474429120
  %conv26.i.i108.i.i = zext i1 %cmp25.i.i107.i.i to i32
  %and28.i.i109.i.i = and i32 %neg20.i.i104.i.i, %conv26.i.i108.i.i
  %or29.i.i110.i.i = or i32 %or22.i.i106.i.i, %and28.i.i109.i.i
  %60 = trunc i128 %shr.i25.i90.i.i to i32
  %conv28.i111.i.i = add nuw nsw i32 %or29.i.i110.i.i, %60
  %conv.i.i.i112.i.i = and i128 %add.i.i60.i.i, 18446744073709551615
  %conv1.i.i113.i.i = zext i32 %conv28.i111.i.i to i64
  %mul.i.i114.i.i = mul i64 %conv1.i.i113.i.i, 4624529908474429119
  %conv.i37.i.i115.i.i = zext i64 %mul.i.i114.i.i to i128
  %add.i.i.i116.i.i = add nuw nsw i128 %conv.i.i.i112.i.i, %conv.i37.i.i115.i.i
  %conv.i38.i.i117.i.i = trunc i128 %add.i.i.i116.i.i to i64
  store i64 %conv.i38.i.i117.i.i, i64* %arrayidx.i.i.i.i, align 8, !tbaa !13
  %shr.i.i.i118.i.i = lshr i128 %add.i.i.i116.i.i, 64
  %conv.i39.i.i119.i.i = and i128 %add.i11.i69.i.i, 18446744073709551615
  %mul7.i.i120.i.i = mul i64 %conv1.i.i113.i.i, 4994812053365940164
  %conv.i41.i.i121.i.i = zext i64 %mul7.i.i120.i.i to i128
  %add.i40.i.i122.i.i = add nuw nsw i128 %conv.i39.i.i119.i.i, %conv.i41.i.i121.i.i
  %add.i42.i.i123.i.i = add nuw nsw i128 %add.i40.i.i122.i.i, %shr.i.i.i118.i.i
  %conv.i43.i.i124.i.i = trunc i128 %add.i42.i.i123.i.i to i64
  store i64 %conv.i43.i.i124.i.i, i64* %arrayidx2.i.i.i.i, align 8, !tbaa !13
  %shr.i44.i.i125.i.i = lshr i128 %add.i42.i.i123.i.i, 64
  %conv.i45.i.i126.i.i = and i128 %add.i17.i78.i.i, 18446744073709551615
  %conv.i47.i.i127.i.i = zext i32 %conv28.i111.i.i to i128
  %add.i46.i.i128.i.i = add nuw nsw i128 %conv.i45.i.i126.i.i, %conv.i47.i.i127.i.i
  %add.i48.i.i129.i.i = add nuw nsw i128 %add.i46.i.i128.i.i, %shr.i44.i.i125.i.i
  %conv.i49.i.i130.i.i = trunc i128 %add.i48.i.i129.i.i to i64
  store i64 %conv.i49.i.i130.i.i, i64* %arrayidx4.i.i.i.i, align 8, !tbaa !13
  %shr.i50.i.i131.i.i = lshr i128 %add.i48.i.i129.i.i, 64
  %61 = trunc i128 %shr.i50.i.i131.i.i to i64
  %conv.i53.i.i132.i.i = add i64 %61, %conv.i24.i88.i.i
  store i64 %conv.i53.i.i132.i.i, i64* %arrayidx7.i.i.i.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #19
  %arraydecay.i = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 0, i64 0
  %call6.i = call fastcc i32 @secp256k1_ecmult_wnaf(i32* noundef nonnull %arraydecay.i, %struct.secp256k1_scalar* noundef nonnull %na_1.i, i32 noundef 5) #19
  %bits_na_1.i = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 2
  store i32 %call6.i, i32* %bits_na_1.i, align 8, !tbaa !74
  %arraydecay11.i = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 1, i64 0
  %call12.i = call fastcc i32 @secp256k1_ecmult_wnaf(i32* noundef nonnull %arraydecay11.i, %struct.secp256k1_scalar* noundef nonnull %na_lam.i, i32 noundef 5) #19
  %bits_na_lam.i = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 3
  store i32 %call12.i, i32* %bits_na_lam.i, align 4, !tbaa !76
  %62 = load i32, i32* %bits_na_1.i, align 8, !tbaa !74
  %cmp30.i = icmp sgt i32 %62, 0
  %spec.select.i = select i1 %cmp30.i, i32 %62, i32 0
  %cmp40.i = icmp sgt i32 %call12.i, %spec.select.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128) %10, i8* noundef nonnull align 8 dereferenceable(128) %17, i64 128, i1 false) #19, !tbaa.struct !67
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %18) #19
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %19) #19
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #19
  call fastcc void @secp256k1_gej_double_var(%struct.secp256k1_gej* noundef nonnull %d.i.i, %struct.secp256k1_gej* noundef nonnull %tmp.i, %struct.secp256k1_fe* noundef null) #19
  store i32 0, i32* %infinity.i.i.i, align 8, !tbaa !37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %20, i8* noundef nonnull align 8 dereferenceable(40) %18, i64 40, i1 false) #19, !tbaa.struct !18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %21, i8* noundef nonnull align 8 dereferenceable(40) %22, i64 40, i1 false) #19, !tbaa.struct !18
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #19
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #19
  %63 = load i64, i64* %arraydecay2.i.i.i, align 8, !tbaa !13
  %64 = load i64, i64* %arrayidx1.i.i.i.i, align 8, !tbaa !13
  %65 = load i64, i64* %arrayidx2.i.i.i6.i, align 8, !tbaa !13
  %66 = load i64, i64* %arrayidx3.i.i.i.i, align 8, !tbaa !13
  %67 = load i64, i64* %arrayidx4.i.i.i7.i, align 8, !tbaa !13
  %mul.i.i.i8.i = shl i64 %63, 1
  %conv.i.i.i.i9.i = zext i64 %mul.i.i.i8.i to i128
  %conv1.i.i.i.i.i = zext i64 %66 to i128
  %mul.i.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv.i.i.i.i9.i
  %mul17.i.i.i.i = shl i64 %64, 1
  %conv.i215.i.i.i.i = zext i64 %mul17.i.i.i.i to i128
  %conv1.i216.i.i.i.i = zext i64 %65 to i128
  %mul.i217.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i, %conv.i215.i.i.i.i
  %add.i.i.i.i10.i = add i128 %mul.i.i.i.i.i, %mul.i217.i.i.i.i
  %conv.i218.i.i.i.i = zext i64 %67 to i128
  %mul.i220.i.i.i.i = mul nuw i128 %conv.i218.i.i.i.i, %conv.i218.i.i.i.i
  %conv1.i222.i.i.i.i = and i128 %mul.i220.i.i.i.i, 18446744073709551615
  %mul.i223.i.i.i.i = mul nuw nsw i128 %conv1.i222.i.i.i.i, 68719492368
  %add.i224.i.i.i.i = add i128 %add.i.i.i.i10.i, %mul.i223.i.i.i.i
  %shr.i.i.i.i11.i = lshr i128 %mul.i220.i.i.i.i, 64
  %shr.i226.i.i.i.i = lshr i128 %add.i224.i.i.i.i, 52
  %mul37.i.i.i.i = shl i64 %67, 1
  %conv.i227.i.i.i.i = zext i64 %63 to i128
  %conv1.i228.i.i.i.i = zext i64 %mul37.i.i.i.i to i128
  %mul.i229.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv.i227.i.i.i.i
  %mul.i233.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv.i215.i.i.i.i
  %mul.i237.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i, %conv1.i216.i.i.i.i
  %mul.i241.i.i.i.i = mul nuw nsw i128 %shr.i.i.i.i11.i, 281475040739328
  %add.i230.i.i.i.i = add i128 %mul.i233.i.i.i.i, %mul.i237.i.i.i.i
  %add.i234.i.i.i.i = add i128 %add.i230.i.i.i.i, %mul.i229.i.i.i.i
  %add.i238.i.i.i.i = add i128 %add.i234.i.i.i.i, %mul.i241.i.i.i.i
  %add.i242.i.i.i.i = add i128 %add.i238.i.i.i.i, %shr.i226.i.i.i.i
  %conv.i243.i.i.i.i = trunc i128 %add.i242.i.i.i.i to i64
  %shr.i244.i.i.i.i = lshr i128 %add.i242.i.i.i.i, 52
  %and47.i.i.i.i = lshr i64 %conv.i243.i.i.i.i, 48
  %68 = and i64 %and47.i.i.i.i, 15
  %and54.i.i.i.i = and i64 %conv.i243.i.i.i.i, 281474976710655
  %mul.i247.i.i.i.i = mul nuw i128 %conv.i227.i.i.i.i, %conv.i227.i.i.i.i
  %conv.i248.i.i.i.i = zext i64 %64 to i128
  %mul.i250.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv.i248.i.i.i.i
  %mul64.i.i.i.i = shl i64 %65, 1
  %conv.i252.i.i.i.i = zext i64 %mul64.i.i.i.i to i128
  %mul.i254.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv.i252.i.i.i.i
  %add.i251.i.i.i.i = add i128 %mul.i250.i.i.i.i, %mul.i254.i.i.i.i
  %add.i255.i.i.i.i = add i128 %add.i251.i.i.i.i, %shr.i244.i.i.i.i
  %conv.i256.i.i.i.i = trunc i128 %add.i255.i.i.i.i to i64
  %shr.i257.i.i.i.i = lshr i128 %add.i255.i.i.i.i, 52
  %and69.i.i.i.i = shl i64 %conv.i256.i.i.i.i, 4
  %shl.i.i.i.i = and i64 %and69.i.i.i.i, 72057594037927920
  %or.i.i.i12.i = or i64 %shl.i.i.i.i, %68
  %conv.i258.i.i.i.i = zext i64 %or.i.i.i12.i to i128
  %mul.i259.i.i.i.i = mul nuw nsw i128 %conv.i258.i.i.i.i, 4294968273
  %add.i260.i.i.i.i = add i128 %mul.i259.i.i.i.i, %mul.i247.i.i.i.i
  %shr.i262.i.i.i.i = lshr i128 %add.i260.i.i.i.i, 52
  %mul.i265.i.i.i.i = mul nuw i128 %conv.i248.i.i.i.i, %conv.i.i.i.i9.i
  %mul.i269.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv1.i216.i.i.i.i
  %mul.i273.i.i.i.i = mul nuw i128 %conv1.i.i.i.i.i, %conv1.i.i.i.i.i
  %add.i270.i.i.i.i = add i128 %mul.i269.i.i.i.i, %mul.i273.i.i.i.i
  %add.i274.i.i.i.i = add i128 %add.i270.i.i.i.i, %shr.i257.i.i.i.i
  %conv.i276.i.i.i.i = and i128 %add.i274.i.i.i.i, 4503599627370495
  %mul.i277.i.i.i.i = mul nuw nsw i128 %conv.i276.i.i.i.i, 68719492368
  %add.i266.i.i.i.i = add i128 %mul.i277.i.i.i.i, %mul.i265.i.i.i.i
  %add.i278.i.i.i.i = add i128 %add.i266.i.i.i.i, %shr.i262.i.i.i.i
  %shr.i279.i.i.i.i = lshr i128 %add.i274.i.i.i.i, 52
  %69 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i.i, i64 0
  %70 = insertelement <2 x i128> %69, i128 %add.i278.i.i.i.i, i64 1
  %71 = trunc <2 x i128> %70 to <2 x i64>
  %72 = and <2 x i64> %71, <i64 4503599627370495, i64 4503599627370495>
  %73 = bitcast %struct.secp256k1_fe* %zi2.i.i.i to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %73, align 16, !tbaa !13
  %shr.i281.i.i.i.i = lshr i128 %add.i278.i.i.i.i, 52
  %mul.i284.i.i.i.i = mul nuw i128 %conv1.i216.i.i.i.i, %conv.i.i.i.i9.i
  %mul.i288.i.i.i.i = mul nuw i128 %conv.i248.i.i.i.i, %conv.i248.i.i.i.i
  %mul.i292.i.i.i.i = mul nuw i128 %conv1.i228.i.i.i.i, %conv1.i.i.i.i.i
  %add.i293.i.i.i.i = add i128 %shr.i279.i.i.i.i, %mul.i292.i.i.i.i
  %conv1.i295.i.i.i.i = and i128 %add.i293.i.i.i.i, 18446744073709551615
  %mul.i296.i.i.i.i = mul nuw nsw i128 %conv1.i295.i.i.i.i, 68719492368
  %add.i285.i.i.i.i = add i128 %mul.i284.i.i.i.i, %mul.i288.i.i.i.i
  %add.i289.i.i.i.i = add i128 %add.i285.i.i.i.i, %mul.i296.i.i.i.i
  %add.i297.i.i.i.i = add i128 %add.i289.i.i.i.i, %shr.i281.i.i.i.i
  %shr.i298.i.i.i.i = lshr i128 %add.i293.i.i.i.i, 64
  %shr.i300.i.i.i.i = lshr i128 %add.i297.i.i.i.i, 52
  %mul.i303.i.i.i.i = mul nuw nsw i128 %shr.i298.i.i.i.i, 281475040739328
  %conv.i305.i.i.i.i = and i128 %add.i224.i.i.i.i, 4503599627370494
  %add.i304.i.i.i.i = add nuw nsw i128 %mul.i303.i.i.i.i, %conv.i305.i.i.i.i
  %add.i306.i.i.i.i = add nuw nsw i128 %add.i304.i.i.i.i, %shr.i300.i.i.i.i
  %74 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i.i, i64 0
  %75 = insertelement <2 x i128> %74, i128 %add.i306.i.i.i.i, i64 1
  %76 = trunc <2 x i128> %75 to <2 x i64>
  %77 = and <2 x i64> %76, <i64 4503599627370495, i64 4503599627370495>
  %78 = bitcast i64* %arrayidx130.i.i.i.i to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 16, !tbaa !13
  %shr.i308.i.i.i.i = lshr i128 %add.i306.i.i.i.i, 52
  %conv.i309.i.i.i.i = trunc i128 %shr.i308.i.i.i.i to i64
  %add.i.i.i13.i = add nuw nsw i64 %and54.i.i.i.i, %conv.i309.i.i.i.i
  store i64 %add.i.i.i13.i, i64* %arrayidx151.i.i.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %zi3.i.i.i, %struct.secp256k1_fe* noundef nonnull %zi2.i.i.i, %struct.secp256k1_fe* noundef nonnull %z1.i.i) #19
  %x.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x.i.i.i, %struct.secp256k1_fe* noundef nonnull %x1.i.i.i, %struct.secp256k1_fe* noundef nonnull %zi2.i.i.i) #19
  %y.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y.i.i.i, %struct.secp256k1_fe* noundef nonnull %y2.i2.i.i, %struct.secp256k1_fe* noundef nonnull %zi3.i.i.i) #19
  %79 = load i32, i32* %infinity.i1.i.i, align 8, !tbaa !65
  %infinity4.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 0, i32 2
  store i32 %79, i32* %infinity4.i.i.i, align 16, !tbaa !37
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #19
  store i32 %79, i32* %infinity1.i.i.i, align 8, !tbaa !65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %19, i8* noundef nonnull align 16 dereferenceable(40) %1, i64 40, i1 false) #19, !tbaa.struct !18
  %80 = bitcast %struct.secp256k1_fe* %y.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %25, i8* noundef nonnull align 8 dereferenceable(40) %80, i64 40, i1 false) #19, !tbaa.struct !18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %26, i8* noundef nonnull align 8 dereferenceable(40) %27, i64 40, i1 false) #19, !tbaa.struct !18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %0, i8* noundef nonnull align 8 dereferenceable(40) %28, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.i14.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 1
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.i14.i) #19
  %arrayidx9.i15.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 1
  %infinity.i5.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 1, i32 2
  store i32 0, i32* %infinity.i5.i.i, align 8, !tbaa !37
  %81 = bitcast %struct.secp256k1_ge* %arrayidx9.i15.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %81, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 1, i32 1
  %82 = bitcast %struct.secp256k1_fe* %y2.i6.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %82, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.1.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 2
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.1.i.i) #19
  %arrayidx9.1.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 2
  %infinity.i5.1.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 2, i32 2
  store i32 0, i32* %infinity.i5.1.i.i, align 16, !tbaa !37
  %83 = bitcast %struct.secp256k1_ge* %arrayidx9.1.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %83, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.1.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 2, i32 1
  %84 = bitcast %struct.secp256k1_fe* %y2.i6.1.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %84, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.2.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 3
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.2.i.i) #19
  %arrayidx9.2.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 3
  %infinity.i5.2.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 3, i32 2
  store i32 0, i32* %infinity.i5.2.i.i, align 8, !tbaa !37
  %85 = bitcast %struct.secp256k1_ge* %arrayidx9.2.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %85, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.2.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 3, i32 1
  %86 = bitcast %struct.secp256k1_fe* %y2.i6.2.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %86, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.3.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 4
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.3.i.i) #19
  %arrayidx9.3.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 4
  %infinity.i5.3.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 4, i32 2
  store i32 0, i32* %infinity.i5.3.i.i, align 16, !tbaa !37
  %87 = bitcast %struct.secp256k1_ge* %arrayidx9.3.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %87, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.3.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 4, i32 1
  %88 = bitcast %struct.secp256k1_fe* %y2.i6.3.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %88, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.4.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 5
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.4.i.i) #19
  %arrayidx9.4.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 5
  %infinity.i5.4.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 5, i32 2
  store i32 0, i32* %infinity.i5.4.i.i, align 8, !tbaa !37
  %89 = bitcast %struct.secp256k1_ge* %arrayidx9.4.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %89, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.4.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 5, i32 1
  %90 = bitcast %struct.secp256k1_fe* %y2.i6.4.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %90, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.5.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 6
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.5.i.i) #19
  %arrayidx9.5.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 6
  %infinity.i5.5.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 6, i32 2
  store i32 0, i32* %infinity.i5.5.i.i, align 16, !tbaa !37
  %91 = bitcast %struct.secp256k1_ge* %arrayidx9.5.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %91, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.5.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 6, i32 1
  %92 = bitcast %struct.secp256k1_fe* %y2.i6.5.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %92, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx7.6.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 7
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_gej* noundef nonnull %ai.i.i, %struct.secp256k1_ge* noundef nonnull %d_ge.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx7.6.i.i) #19
  %arrayidx9.6.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7
  %infinity.i5.6.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 2
  store i32 0, i32* %infinity.i5.6.i.i, align 8, !tbaa !37
  %93 = bitcast %struct.secp256k1_ge* %arrayidx9.6.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %93, i8* noundef nonnull align 8 dereferenceable(40) %19, i64 40, i1 false) #19, !tbaa.struct !18
  %y2.i6.6.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 1
  %94 = bitcast %struct.secp256k1_fe* %y2.i6.6.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40) %94, i8* noundef nonnull align 8 dereferenceable(40) %25, i64 40, i1 false) #19, !tbaa.struct !18
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %Z.i, %struct.secp256k1_fe* noundef nonnull %z3.i.i, %struct.secp256k1_fe* noundef nonnull %z1.i.i) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %19) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #19
  %95 = bitcast %struct.secp256k1_fe* %zs.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %95) #19
  %arrayidx.i.i18.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 1, i32 0, i64 0
  %96 = load i64, i64* %arrayidx.i.i18.i, align 16, !tbaa !13
  %arrayidx2.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 1, i32 0, i64 1
  %97 = load i64, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  %arrayidx4.i.i19.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 1, i32 0, i64 2
  %98 = load i64, i64* %arrayidx4.i.i19.i, align 16, !tbaa !13
  %arrayidx6.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 1, i32 0, i64 3
  %99 = load i64, i64* %arrayidx6.i.i.i, align 8, !tbaa !13
  %arrayidx8.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 7, i32 1, i32 0, i64 4
  %100 = load i64, i64* %arrayidx8.i.i.i, align 16, !tbaa !13
  %shr.i.i.i = lshr i64 %100, 48
  %and.i.i20.i = and i64 %100, 281474976710655
  %mul.i.i.i = mul nuw nsw i64 %shr.i.i.i, 4294968273
  %add.i.i.i = add i64 %mul.i.i.i, %96
  %shr9.i.i.i = lshr i64 %add.i.i.i, 52
  %add10.i.i.i = add i64 %shr9.i.i.i, %97
  %and11.i.i.i = and i64 %add.i.i.i, 4503599627370495
  %shr12.i.i.i = lshr i64 %add10.i.i.i, 52
  %add13.i.i.i = add i64 %shr12.i.i.i, %98
  %and14.i.i.i = and i64 %add10.i.i.i, 4503599627370495
  %shr15.i.i.i = lshr i64 %add13.i.i.i, 52
  %add16.i.i.i = add i64 %shr15.i.i.i, %99
  %and17.i.i.i = and i64 %add13.i.i.i, 4503599627370495
  %shr18.i.i.i = lshr i64 %add16.i.i.i, 52
  %add19.i.i.i = add nuw nsw i64 %shr18.i.i.i, %and.i.i20.i
  %and20.i.i.i = and i64 %add16.i.i.i, 4503599627370495
  store i64 %and11.i.i.i, i64* %arrayidx.i.i18.i, align 16, !tbaa !13
  store i64 %and14.i.i.i, i64* %arrayidx2.i.i.i, align 8, !tbaa !13
  store i64 %and17.i.i.i, i64* %arrayidx4.i.i19.i, align 16, !tbaa !13
  store i64 %and20.i.i.i, i64* %arrayidx6.i.i.i, align 8, !tbaa !13
  store i64 %add19.i.i.i, i64* %arrayidx8.i.i.i, align 16, !tbaa !13
  %101 = bitcast %struct.secp256k1_fe* %arrayidx7.6.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %95, i8* noundef nonnull align 8 dereferenceable(40) %101, i64 40, i1 false) #19, !tbaa.struct !18
  %102 = bitcast %struct.secp256k1_gej* %tmpa.i.i to i8*
  %y9.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmpa.i.i, i64 0, i32 1
  %103 = bitcast %struct.secp256k1_fe* %y9.i.i to i8*
  %infinity.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmpa.i.i, i64 0, i32 3
  %104 = bitcast %struct.secp256k1_fe* %zi2.i.i16.i to i8*
  %105 = bitcast %struct.secp256k1_fe* %zi3.i.i17.i to i8*
  %arraydecay2.i.i22.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zs.i.i, i64 0, i32 0, i64 0
  %arrayidx1.i.i.i23.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zs.i.i, i64 0, i32 0, i64 1
  %arrayidx2.i.i.i24.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zs.i.i, i64 0, i32 0, i64 2
  %arrayidx3.i.i.i25.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zs.i.i, i64 0, i32 0, i64 3
  %arrayidx4.i.i.i26.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zs.i.i, i64 0, i32 0, i64 4
  %arrayidx130.i.i.i28.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zi2.i.i16.i, i64 0, i32 0, i64 2
  %arrayidx151.i.i.i30.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %zi2.i.i16.i, i64 0, i32 0, i64 4
  %x1.i.i31.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %tmpa.i.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %102) #19
  %.pre.i.i = load i64, i64* %arraydecay2.i.i22.i, align 8, !tbaa !13
  %.pre33.i.i = load i64, i64* %arrayidx1.i.i.i23.i, align 8, !tbaa !13
  %.pre34.i.i = load i64, i64* %arrayidx2.i.i.i24.i, align 8, !tbaa !13
  %.pre35.i.i = load i64, i64* %arrayidx3.i.i.i25.i, align 8, !tbaa !13
  %.pre36.i.i = load i64, i64* %arrayidx4.i.i.i26.i, align 8, !tbaa !13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %102, i8* noundef nonnull align 16 dereferenceable(40) %91, i64 40, i1 false) #19, !tbaa.struct !18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %103, i8* noundef nonnull align 8 dereferenceable(40) %92, i64 40, i1 false) #19, !tbaa.struct !18
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !65
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %104) #19
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #19
  %mul.i.i.peel.i.i = shl i64 %.pre.i.i, 1
  %conv.i.i.i.peel.i.i = zext i64 %mul.i.i.peel.i.i to i128
  %conv1.i.i.i.peel.i.i = zext i64 %.pre35.i.i to i128
  %mul.i.i.i.peel.i.i = mul nuw i128 %conv1.i.i.i.peel.i.i, %conv.i.i.i.peel.i.i
  %mul17.i.i.peel.i.i = shl i64 %.pre33.i.i, 1
  %conv.i215.i.i.peel.i.i = zext i64 %mul17.i.i.peel.i.i to i128
  %conv1.i216.i.i.peel.i.i = zext i64 %.pre34.i.i to i128
  %mul.i217.i.i.peel.i.i = mul nuw i128 %conv1.i216.i.i.peel.i.i, %conv.i215.i.i.peel.i.i
  %add.i.i.i.peel.i.i = add i128 %mul.i.i.i.peel.i.i, %mul.i217.i.i.peel.i.i
  %conv.i218.i.i.peel.i.i = zext i64 %.pre36.i.i to i128
  %mul.i220.i.i.peel.i.i = mul nuw i128 %conv.i218.i.i.peel.i.i, %conv.i218.i.i.peel.i.i
  %conv1.i222.i.i.peel.i.i = and i128 %mul.i220.i.i.peel.i.i, 18446744073709551615
  %mul.i223.i.i.peel.i.i = mul nuw nsw i128 %conv1.i222.i.i.peel.i.i, 68719492368
  %add.i224.i.i.peel.i.i = add i128 %add.i.i.i.peel.i.i, %mul.i223.i.i.peel.i.i
  %shr.i.i.i.peel.i.i = lshr i128 %mul.i220.i.i.peel.i.i, 64
  %shr.i226.i.i.peel.i.i = lshr i128 %add.i224.i.i.peel.i.i, 52
  %mul37.i.i.peel.i.i = shl i64 %.pre36.i.i, 1
  %conv.i227.i.i.peel.i.i = zext i64 %.pre.i.i to i128
  %conv1.i228.i.i.peel.i.i = zext i64 %mul37.i.i.peel.i.i to i128
  %mul.i229.i.i.peel.i.i = mul nuw i128 %conv1.i228.i.i.peel.i.i, %conv.i227.i.i.peel.i.i
  %mul.i233.i.i.peel.i.i = mul nuw i128 %conv1.i.i.i.peel.i.i, %conv.i215.i.i.peel.i.i
  %mul.i237.i.i.peel.i.i = mul nuw i128 %conv1.i216.i.i.peel.i.i, %conv1.i216.i.i.peel.i.i
  %mul.i241.i.i.peel.i.i = mul nuw nsw i128 %shr.i.i.i.peel.i.i, 281475040739328
  %add.i230.i.i.peel.i.i = add i128 %mul.i233.i.i.peel.i.i, %mul.i237.i.i.peel.i.i
  %add.i234.i.i.peel.i.i = add i128 %add.i230.i.i.peel.i.i, %mul.i229.i.i.peel.i.i
  %add.i238.i.i.peel.i.i = add i128 %add.i234.i.i.peel.i.i, %mul.i241.i.i.peel.i.i
  %add.i242.i.i.peel.i.i = add i128 %add.i238.i.i.peel.i.i, %shr.i226.i.i.peel.i.i
  %conv.i243.i.i.peel.i.i = trunc i128 %add.i242.i.i.peel.i.i to i64
  %shr.i244.i.i.peel.i.i = lshr i128 %add.i242.i.i.peel.i.i, 52
  %and47.i.i.peel.i.i = lshr i64 %conv.i243.i.i.peel.i.i, 48
  %106 = and i64 %and47.i.i.peel.i.i, 15
  %and54.i.i.peel.i.i = and i64 %conv.i243.i.i.peel.i.i, 281474976710655
  %mul.i247.i.i.peel.i.i = mul nuw i128 %conv.i227.i.i.peel.i.i, %conv.i227.i.i.peel.i.i
  %conv.i248.i.i.peel.i.i = zext i64 %.pre33.i.i to i128
  %mul.i250.i.i.peel.i.i = mul nuw i128 %conv1.i228.i.i.peel.i.i, %conv.i248.i.i.peel.i.i
  %mul64.i.i.peel.i.i = shl i64 %.pre34.i.i, 1
  %conv.i252.i.i.peel.i.i = zext i64 %mul64.i.i.peel.i.i to i128
  %mul.i254.i.i.peel.i.i = mul nuw i128 %conv1.i.i.i.peel.i.i, %conv.i252.i.i.peel.i.i
  %add.i251.i.i.peel.i.i = add i128 %mul.i250.i.i.peel.i.i, %mul.i254.i.i.peel.i.i
  %add.i255.i.i.peel.i.i = add i128 %add.i251.i.i.peel.i.i, %shr.i244.i.i.peel.i.i
  %conv.i256.i.i.peel.i.i = trunc i128 %add.i255.i.i.peel.i.i to i64
  %shr.i257.i.i.peel.i.i = lshr i128 %add.i255.i.i.peel.i.i, 52
  %and69.i.i.peel.i.i = shl i64 %conv.i256.i.i.peel.i.i, 4
  %shl.i.i.peel.i.i = and i64 %and69.i.i.peel.i.i, 72057594037927920
  %or.i.i.peel.i.i = or i64 %shl.i.i.peel.i.i, %106
  %conv.i258.i.i.peel.i.i = zext i64 %or.i.i.peel.i.i to i128
  %mul.i259.i.i.peel.i.i = mul nuw nsw i128 %conv.i258.i.i.peel.i.i, 4294968273
  %add.i260.i.i.peel.i.i = add i128 %mul.i259.i.i.peel.i.i, %mul.i247.i.i.peel.i.i
  %shr.i262.i.i.peel.i.i = lshr i128 %add.i260.i.i.peel.i.i, 52
  %mul.i265.i.i.peel.i.i = mul nuw i128 %conv.i248.i.i.peel.i.i, %conv.i.i.i.peel.i.i
  %mul.i269.i.i.peel.i.i = mul nuw i128 %conv1.i228.i.i.peel.i.i, %conv1.i216.i.i.peel.i.i
  %mul.i273.i.i.peel.i.i = mul nuw i128 %conv1.i.i.i.peel.i.i, %conv1.i.i.i.peel.i.i
  %add.i270.i.i.peel.i.i = add i128 %mul.i269.i.i.peel.i.i, %mul.i273.i.i.peel.i.i
  %add.i274.i.i.peel.i.i = add i128 %add.i270.i.i.peel.i.i, %shr.i257.i.i.peel.i.i
  %conv.i276.i.i.peel.i.i = and i128 %add.i274.i.i.peel.i.i, 4503599627370495
  %mul.i277.i.i.peel.i.i = mul nuw nsw i128 %conv.i276.i.i.peel.i.i, 68719492368
  %add.i266.i.i.peel.i.i = add i128 %mul.i277.i.i.peel.i.i, %mul.i265.i.i.peel.i.i
  %add.i278.i.i.peel.i.i = add i128 %add.i266.i.i.peel.i.i, %shr.i262.i.i.peel.i.i
  %shr.i279.i.i.peel.i.i = lshr i128 %add.i274.i.i.peel.i.i, 52
  %107 = insertelement <2 x i128> poison, i128 %add.i260.i.i.peel.i.i, i64 0
  %108 = insertelement <2 x i128> %107, i128 %add.i278.i.i.peel.i.i, i64 1
  %109 = trunc <2 x i128> %108 to <2 x i64>
  %110 = and <2 x i64> %109, <i64 4503599627370495, i64 4503599627370495>
  %111 = bitcast %struct.secp256k1_fe* %zi2.i.i16.i to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %111, align 16, !tbaa !13
  %shr.i281.i.i.peel.i.i = lshr i128 %add.i278.i.i.peel.i.i, 52
  %mul.i284.i.i.peel.i.i = mul nuw i128 %conv1.i216.i.i.peel.i.i, %conv.i.i.i.peel.i.i
  %mul.i288.i.i.peel.i.i = mul nuw i128 %conv.i248.i.i.peel.i.i, %conv.i248.i.i.peel.i.i
  %mul.i292.i.i.peel.i.i = mul nuw i128 %conv1.i228.i.i.peel.i.i, %conv1.i.i.i.peel.i.i
  %add.i293.i.i.peel.i.i = add i128 %shr.i279.i.i.peel.i.i, %mul.i292.i.i.peel.i.i
  %conv1.i295.i.i.peel.i.i = and i128 %add.i293.i.i.peel.i.i, 18446744073709551615
  %mul.i296.i.i.peel.i.i = mul nuw nsw i128 %conv1.i295.i.i.peel.i.i, 68719492368
  %add.i285.i.i.peel.i.i = add i128 %mul.i284.i.i.peel.i.i, %mul.i288.i.i.peel.i.i
  %add.i289.i.i.peel.i.i = add i128 %add.i285.i.i.peel.i.i, %mul.i296.i.i.peel.i.i
  %add.i297.i.i.peel.i.i = add i128 %add.i289.i.i.peel.i.i, %shr.i281.i.i.peel.i.i
  %shr.i298.i.i.peel.i.i = lshr i128 %add.i293.i.i.peel.i.i, 64
  %shr.i300.i.i.peel.i.i = lshr i128 %add.i297.i.i.peel.i.i, 52
  %mul.i303.i.i.peel.i.i = mul nuw nsw i128 %shr.i298.i.i.peel.i.i, 281475040739328
  %conv.i305.i.i.peel.i.i = and i128 %add.i224.i.i.peel.i.i, 4503599627370494
  %add.i304.i.i.peel.i.i = add nuw nsw i128 %mul.i303.i.i.peel.i.i, %conv.i305.i.i.peel.i.i
  %add.i306.i.i.peel.i.i = add nuw nsw i128 %add.i304.i.i.peel.i.i, %shr.i300.i.i.peel.i.i
  %112 = insertelement <2 x i128> poison, i128 %add.i297.i.i.peel.i.i, i64 0
  %113 = insertelement <2 x i128> %112, i128 %add.i306.i.i.peel.i.i, i64 1
  %114 = trunc <2 x i128> %113 to <2 x i64>
  %115 = and <2 x i64> %114, <i64 4503599627370495, i64 4503599627370495>
  %116 = bitcast i64* %arrayidx130.i.i.i28.i to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 16, !tbaa !13
  %shr.i308.i.i.peel.i.i = lshr i128 %add.i306.i.i.peel.i.i, 52
  %conv.i309.i.i.peel.i.i = trunc i128 %shr.i308.i.i.peel.i.i to i64
  %add.i.i.peel.i.i = add nuw nsw i64 %and54.i.i.peel.i.i, %conv.i309.i.i.peel.i.i
  store i64 %add.i.i.peel.i.i, i64* %arrayidx151.i.i.i30.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %zi3.i.i17.i, %struct.secp256k1_fe* noundef nonnull %zi2.i.i16.i, %struct.secp256k1_fe* noundef nonnull %zs.i.i) #19
  %x.i.peel.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %arrayidx9.5.i.i, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x.i.peel.i.i, %struct.secp256k1_fe* noundef nonnull %x1.i.i31.i, %struct.secp256k1_fe* noundef nonnull %zi2.i.i16.i) #19
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y2.i6.5.i.i, %struct.secp256k1_fe* noundef nonnull %y9.i.i, %struct.secp256k1_fe* noundef nonnull %zi3.i.i17.i) #19
  store i32 0, i32* %infinity.i5.5.i.i, align 16, !tbaa !37
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %104) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %102) #19
  %117 = bitcast %struct.secp256k1_fe* %zi2.i.i16.i to <2 x i64>*
  %118 = bitcast i64* %arrayidx130.i.i.i28.i to <2 x i64>*
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.end.i.i, %if.then.i.i
  %i.030.i.i = phi i64 [ %dec.i.i, %if.end.i.i ], [ 6, %if.then.i.i ]
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %102) #19
  %arrayidx6.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 %i.030.i.i
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %zs.i.i, %struct.secp256k1_fe* noundef nonnull %zs.i.i, %struct.secp256k1_fe* noundef nonnull %arrayidx6.i.i) #19
  %dec.i.i = add nsw i64 %i.030.i.i, -1
  %arrayidx7.i32.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %dec.i.i
  %119 = bitcast %struct.secp256k1_ge* %arrayidx7.i32.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %102, i8* noundef nonnull align 8 dereferenceable(40) %119, i64 40, i1 false) #19, !tbaa.struct !18
  %y11.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %dec.i.i, i32 1
  %120 = bitcast %struct.secp256k1_fe* %y11.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %103, i8* noundef nonnull align 8 dereferenceable(40) %120, i64 40, i1 false) #19, !tbaa.struct !18
  store i32 0, i32* %infinity.i.i, align 8, !tbaa !65
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %104) #19
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #19
  %121 = load i64, i64* %arraydecay2.i.i22.i, align 8, !tbaa !13
  %122 = load i64, i64* %arrayidx1.i.i.i23.i, align 8, !tbaa !13
  %123 = load i64, i64* %arrayidx2.i.i.i24.i, align 8, !tbaa !13
  %124 = load i64, i64* %arrayidx3.i.i.i25.i, align 8, !tbaa !13
  %125 = load i64, i64* %arrayidx4.i.i.i26.i, align 8, !tbaa !13
  %mul.i.i.i33.i = shl i64 %121, 1
  %conv.i.i.i.i34.i = zext i64 %mul.i.i.i33.i to i128
  %conv1.i.i.i.i35.i = zext i64 %124 to i128
  %mul.i.i.i.i36.i = mul nuw i128 %conv1.i.i.i.i35.i, %conv.i.i.i.i34.i
  %mul17.i.i.i37.i = shl i64 %122, 1
  %conv.i215.i.i.i38.i = zext i64 %mul17.i.i.i37.i to i128
  %conv1.i216.i.i.i39.i = zext i64 %123 to i128
  %mul.i217.i.i.i40.i = mul nuw i128 %conv1.i216.i.i.i39.i, %conv.i215.i.i.i38.i
  %add.i.i.i.i41.i = add i128 %mul.i.i.i.i36.i, %mul.i217.i.i.i40.i
  %conv.i218.i.i.i42.i = zext i64 %125 to i128
  %mul.i220.i.i.i43.i = mul nuw i128 %conv.i218.i.i.i42.i, %conv.i218.i.i.i42.i
  %conv1.i222.i.i.i44.i = and i128 %mul.i220.i.i.i43.i, 18446744073709551615
  %mul.i223.i.i.i45.i = mul nuw nsw i128 %conv1.i222.i.i.i44.i, 68719492368
  %add.i224.i.i.i46.i = add i128 %add.i.i.i.i41.i, %mul.i223.i.i.i45.i
  %shr.i.i.i.i47.i = lshr i128 %mul.i220.i.i.i43.i, 64
  %shr.i226.i.i.i48.i = lshr i128 %add.i224.i.i.i46.i, 52
  %mul37.i.i.i49.i = shl i64 %125, 1
  %conv.i227.i.i.i50.i = zext i64 %121 to i128
  %conv1.i228.i.i.i51.i = zext i64 %mul37.i.i.i49.i to i128
  %mul.i229.i.i.i52.i = mul nuw i128 %conv1.i228.i.i.i51.i, %conv.i227.i.i.i50.i
  %mul.i233.i.i.i53.i = mul nuw i128 %conv1.i.i.i.i35.i, %conv.i215.i.i.i38.i
  %mul.i237.i.i.i54.i = mul nuw i128 %conv1.i216.i.i.i39.i, %conv1.i216.i.i.i39.i
  %mul.i241.i.i.i55.i = mul nuw nsw i128 %shr.i.i.i.i47.i, 281475040739328
  %add.i230.i.i.i56.i = add i128 %mul.i233.i.i.i53.i, %mul.i237.i.i.i54.i
  %add.i234.i.i.i57.i = add i128 %add.i230.i.i.i56.i, %mul.i229.i.i.i52.i
  %add.i238.i.i.i58.i = add i128 %add.i234.i.i.i57.i, %mul.i241.i.i.i55.i
  %add.i242.i.i.i59.i = add i128 %add.i238.i.i.i58.i, %shr.i226.i.i.i48.i
  %conv.i243.i.i.i60.i = trunc i128 %add.i242.i.i.i59.i to i64
  %shr.i244.i.i.i61.i = lshr i128 %add.i242.i.i.i59.i, 52
  %and47.i.i.i62.i = lshr i64 %conv.i243.i.i.i60.i, 48
  %126 = and i64 %and47.i.i.i62.i, 15
  %and54.i.i.i63.i = and i64 %conv.i243.i.i.i60.i, 281474976710655
  %mul.i247.i.i.i64.i = mul nuw i128 %conv.i227.i.i.i50.i, %conv.i227.i.i.i50.i
  %conv.i248.i.i.i65.i = zext i64 %122 to i128
  %mul.i250.i.i.i66.i = mul nuw i128 %conv1.i228.i.i.i51.i, %conv.i248.i.i.i65.i
  %mul64.i.i.i67.i = shl i64 %123, 1
  %conv.i252.i.i.i68.i = zext i64 %mul64.i.i.i67.i to i128
  %mul.i254.i.i.i69.i = mul nuw i128 %conv1.i.i.i.i35.i, %conv.i252.i.i.i68.i
  %add.i251.i.i.i70.i = add i128 %mul.i250.i.i.i66.i, %mul.i254.i.i.i69.i
  %add.i255.i.i.i71.i = add i128 %add.i251.i.i.i70.i, %shr.i244.i.i.i61.i
  %conv.i256.i.i.i72.i = trunc i128 %add.i255.i.i.i71.i to i64
  %shr.i257.i.i.i73.i = lshr i128 %add.i255.i.i.i71.i, 52
  %and69.i.i.i74.i = shl i64 %conv.i256.i.i.i72.i, 4
  %shl.i.i.i75.i = and i64 %and69.i.i.i74.i, 72057594037927920
  %or.i.i.i76.i = or i64 %shl.i.i.i75.i, %126
  %conv.i258.i.i.i77.i = zext i64 %or.i.i.i76.i to i128
  %mul.i259.i.i.i78.i = mul nuw nsw i128 %conv.i258.i.i.i77.i, 4294968273
  %add.i260.i.i.i79.i = add i128 %mul.i259.i.i.i78.i, %mul.i247.i.i.i64.i
  %shr.i262.i.i.i82.i = lshr i128 %add.i260.i.i.i79.i, 52
  %mul.i265.i.i.i83.i = mul nuw i128 %conv.i248.i.i.i65.i, %conv.i.i.i.i34.i
  %mul.i269.i.i.i84.i = mul nuw i128 %conv1.i228.i.i.i51.i, %conv1.i216.i.i.i39.i
  %mul.i273.i.i.i85.i = mul nuw i128 %conv1.i.i.i.i35.i, %conv1.i.i.i.i35.i
  %add.i270.i.i.i86.i = add i128 %mul.i269.i.i.i84.i, %mul.i273.i.i.i85.i
  %add.i274.i.i.i87.i = add i128 %add.i270.i.i.i86.i, %shr.i257.i.i.i73.i
  %conv.i276.i.i.i88.i = and i128 %add.i274.i.i.i87.i, 4503599627370495
  %mul.i277.i.i.i89.i = mul nuw nsw i128 %conv.i276.i.i.i88.i, 68719492368
  %add.i266.i.i.i90.i = add i128 %mul.i277.i.i.i89.i, %mul.i265.i.i.i83.i
  %add.i278.i.i.i91.i = add i128 %add.i266.i.i.i90.i, %shr.i262.i.i.i82.i
  %shr.i279.i.i.i92.i = lshr i128 %add.i274.i.i.i87.i, 52
  %127 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i79.i, i64 0
  %128 = insertelement <2 x i128> %127, i128 %add.i278.i.i.i91.i, i64 1
  %129 = trunc <2 x i128> %128 to <2 x i64>
  %130 = and <2 x i64> %129, <i64 4503599627370495, i64 4503599627370495>
  store <2 x i64> %130, <2 x i64>* %117, align 16, !tbaa !13
  %shr.i281.i.i.i95.i = lshr i128 %add.i278.i.i.i91.i, 52
  %mul.i284.i.i.i96.i = mul nuw i128 %conv1.i216.i.i.i39.i, %conv.i.i.i.i34.i
  %mul.i288.i.i.i97.i = mul nuw i128 %conv.i248.i.i.i65.i, %conv.i248.i.i.i65.i
  %mul.i292.i.i.i98.i = mul nuw i128 %conv1.i228.i.i.i51.i, %conv1.i.i.i.i35.i
  %add.i293.i.i.i99.i = add i128 %shr.i279.i.i.i92.i, %mul.i292.i.i.i98.i
  %conv1.i295.i.i.i100.i = and i128 %add.i293.i.i.i99.i, 18446744073709551615
  %mul.i296.i.i.i101.i = mul nuw nsw i128 %conv1.i295.i.i.i100.i, 68719492368
  %add.i285.i.i.i102.i = add i128 %mul.i284.i.i.i96.i, %mul.i288.i.i.i97.i
  %add.i289.i.i.i103.i = add i128 %add.i285.i.i.i102.i, %mul.i296.i.i.i101.i
  %add.i297.i.i.i104.i = add i128 %add.i289.i.i.i103.i, %shr.i281.i.i.i95.i
  %shr.i298.i.i.i105.i = lshr i128 %add.i293.i.i.i99.i, 64
  %shr.i300.i.i.i108.i = lshr i128 %add.i297.i.i.i104.i, 52
  %mul.i303.i.i.i109.i = mul nuw nsw i128 %shr.i298.i.i.i105.i, 281475040739328
  %conv.i305.i.i.i110.i = and i128 %add.i224.i.i.i46.i, 4503599627370494
  %add.i304.i.i.i111.i = add nuw nsw i128 %mul.i303.i.i.i109.i, %conv.i305.i.i.i110.i
  %add.i306.i.i.i112.i = add nuw nsw i128 %add.i304.i.i.i111.i, %shr.i300.i.i.i108.i
  %131 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i104.i, i64 0
  %132 = insertelement <2 x i128> %131, i128 %add.i306.i.i.i112.i, i64 1
  %133 = trunc <2 x i128> %132 to <2 x i64>
  %134 = and <2 x i64> %133, <i64 4503599627370495, i64 4503599627370495>
  store <2 x i64> %134, <2 x i64>* %118, align 16, !tbaa !13
  %shr.i308.i.i.i115.i = lshr i128 %add.i306.i.i.i112.i, 52
  %conv.i309.i.i.i116.i = trunc i128 %shr.i308.i.i.i115.i to i64
  %add.i.i.i117.i = add nuw nsw i64 %and54.i.i.i63.i, %conv.i309.i.i.i116.i
  store i64 %add.i.i.i117.i, i64* %arrayidx151.i.i.i30.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %zi3.i.i17.i, %struct.secp256k1_fe* noundef nonnull %zi2.i.i16.i, %struct.secp256k1_fe* noundef nonnull %zs.i.i) #19
  %x.i.i118.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %arrayidx7.i32.i, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %x.i.i118.i, %struct.secp256k1_fe* noundef nonnull %x1.i.i31.i, %struct.secp256k1_fe* noundef nonnull %zi2.i.i16.i) #19
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y11.i.i, %struct.secp256k1_fe* noundef nonnull %y9.i.i, %struct.secp256k1_fe* noundef nonnull %zi3.i.i17.i) #19
  %infinity4.i.i119.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %dec.i.i, i32 2
  store i32 0, i32* %infinity4.i.i119.i, align 8, !tbaa !37
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %104) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %102) #19
  %cmp2.not.i.i = icmp eq i64 %dec.i.i, 0
  br i1 %cmp2.not.i.i, label %for.cond73.preheader.lr.ph.i, label %if.end.i.i, !llvm.loop !77

secp256k1_ge_table_set_globalz.exit.i:            ; preds = %lor.lhs.false.i, %entry
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #19
  br label %for.end92.i

for.cond73.preheader.lr.ph.i:                     ; preds = %if.end.i.i
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %95) #19
  br label %for.body77.i

for.body77.i:                                     ; preds = %for.body77.i, %for.cond73.preheader.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.cond73.preheader.lr.ph.i ], [ %indvars.iv.next.i, %for.body77.i ]
  %arraydecay.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 %indvars.iv.i, i32 0, i64 0
  %arraydecay2.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %indvars.iv.i, i32 0, i32 0, i64 0
  %135 = load i64, i64* %arraydecay2.i.i, align 8, !tbaa !13, !noalias !79
  %arrayidx1.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %indvars.iv.i, i32 0, i32 0, i64 1
  %136 = load i64, i64* %arrayidx1.i.i.i, align 8, !tbaa !13, !noalias !79
  %arrayidx2.i.i120.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %indvars.iv.i, i32 0, i32 0, i64 2
  %137 = load i64, i64* %arrayidx2.i.i120.i, align 8, !tbaa !13, !noalias !79
  %arrayidx3.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %indvars.iv.i, i32 0, i32 0, i64 3
  %138 = load i64, i64* %arrayidx3.i.i.i, align 8, !tbaa !13, !noalias !79
  %arrayidx4.i.i121.i = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %indvars.iv.i, i32 0, i32 0, i64 4
  %139 = load i64, i64* %arrayidx4.i.i121.i, align 8, !tbaa !13, !noalias !79
  %conv.i.i.i122.i = zext i64 %135 to i128
  %mul.i.i.i123.i = mul nuw nsw i128 %conv.i.i.i122.i, 124274446989802
  %conv.i279.i.i.i = zext i64 %136 to i128
  %mul.i281.i.i.i = mul nuw nsw i128 %conv.i279.i.i.i, 3435101582848073
  %add.i.i.i124.i = add nuw nsw i128 %mul.i281.i.i.i, %mul.i.i.i123.i
  %conv.i282.i.i.i = zext i64 %137 to i128
  %mul.i284.i.i.i = mul nuw nsw i128 %conv.i282.i.i.i, 2059588628732947
  %add.i285.i.i.i = add nuw nsw i128 %add.i.i.i124.i, %mul.i284.i.i.i
  %conv.i286.i.i.i = zext i64 %138 to i128
  %mul.i288.i.i.i = mul nuw nsw i128 %conv.i286.i.i.i, 2652195750478318
  %add.i289.i.i.i = add nuw nsw i128 %add.i285.i.i.i, %mul.i288.i.i.i
  %conv.i290.i.i.i = zext i64 %139 to i128
  %mul.i292.i.i.i = mul nuw nsw i128 %conv.i290.i.i.i, 135142927197564
  %conv1.i294.i.i.i = and i128 %mul.i292.i.i.i, 18446744073709551612
  %mul.i295.i.i.i = mul nuw nsw i128 %conv1.i294.i.i.i, 68719492368
  %add.i296.i.i.i = add nuw nsw i128 %add.i289.i.i.i, %mul.i295.i.i.i
  %shr.i.i.i125.i = lshr i128 %mul.i292.i.i.i, 64
  %shr.i298.i.i.i = lshr i128 %add.i296.i.i.i, 52
  %mul.i301.i.i.i = mul nuw nsw i128 %conv.i.i.i122.i, 135142927197564
  %mul.i305.i.i.i = mul nuw nsw i128 %conv.i279.i.i.i, 124274446989802
  %mul.i309.i.i.i = mul nuw nsw i128 %conv.i282.i.i.i, 3435101582848073
  %mul.i313.i.i.i = mul nuw nsw i128 %conv.i286.i.i.i, 2059588628732947
  %mul.i317.i.i.i = mul nuw nsw i128 %conv.i290.i.i.i, 2652195750478318
  %mul.i321.i.i.i = mul nuw nsw i128 %shr.i.i.i125.i, 281475040739328
  %add.i302.i.i.i = add nuw nsw i128 %mul.i305.i.i.i, %mul.i301.i.i.i
  %add.i306.i.i.i = add nuw nsw i128 %add.i302.i.i.i, %mul.i309.i.i.i
  %add.i310.i.i.i = add nuw nsw i128 %add.i306.i.i.i, %mul.i313.i.i.i
  %add.i314.i.i.i = add nuw nsw i128 %add.i310.i.i.i, %mul.i317.i.i.i
  %add.i318.i.i.i = add nuw nsw i128 %add.i314.i.i.i, %mul.i321.i.i.i
  %add.i322.i.i.i = add nuw nsw i128 %add.i318.i.i.i, %shr.i298.i.i.i
  %conv.i323.i.i.i = trunc i128 %add.i322.i.i.i to i64
  %shr.i324.i.i.i = lshr i128 %add.i322.i.i.i, 52
  %and77.i.i.i = lshr i64 %conv.i323.i.i.i, 48
  %shr.i.i126.i = and i64 %and77.i.i.i, 15
  %and84.i.i.i = and i64 %conv.i323.i.i.i, 281474976710655
  %mul.i327.i.i.i = mul nuw nsw i128 %conv.i.i.i122.i, 2652195750478318
  %mul.i330.i.i.i = mul nuw nsw i128 %conv.i279.i.i.i, 135142927197564
  %mul.i334.i.i.i = mul nuw nsw i128 %conv.i282.i.i.i, 124274446989802
  %mul.i338.i.i.i = mul nuw nsw i128 %conv.i286.i.i.i, 3435101582848073
  %mul.i342.i.i.i = mul nuw nsw i128 %conv.i290.i.i.i, 2059588628732947
  %add.i331.i.i.i = add nuw nsw i128 %mul.i334.i.i.i, %mul.i330.i.i.i
  %add.i335.i.i.i = add nuw nsw i128 %add.i331.i.i.i, %mul.i338.i.i.i
  %add.i339.i.i.i = add nuw nsw i128 %add.i335.i.i.i, %mul.i342.i.i.i
  %add.i343.i.i.i = add nuw nsw i128 %add.i339.i.i.i, %shr.i324.i.i.i
  %conv.i344.i.i.i = trunc i128 %add.i343.i.i.i to i64
  %shr.i345.i.i.i = lshr i128 %add.i343.i.i.i, 52
  %and103.i.i.i = shl i64 %conv.i344.i.i.i, 4
  %shl.i.i.i = and i64 %and103.i.i.i, 72057594037927920
  %or.i.i.i = or i64 %shl.i.i.i, %shr.i.i126.i
  %conv.i346.i.i.i = zext i64 %or.i.i.i to i128
  %mul.i347.i.i.i = mul nuw nsw i128 %conv.i346.i.i.i, 4294968273
  %add.i348.i.i.i = add nuw nsw i128 %mul.i347.i.i.i, %mul.i327.i.i.i
  %shr.i350.i.i.i = lshr i128 %add.i348.i.i.i, 52
  %mul.i353.i.i.i = mul nuw nsw i128 %conv.i.i.i122.i, 2059588628732947
  %mul.i357.i.i.i = mul nuw nsw i128 %conv.i279.i.i.i, 2652195750478318
  %mul.i361.i.i.i = mul nuw nsw i128 %conv.i282.i.i.i, 135142927197564
  %mul.i365.i.i.i = mul nuw nsw i128 %conv.i286.i.i.i, 124274446989802
  %mul.i369.i.i.i = mul nuw nsw i128 %conv.i290.i.i.i, 3435101582848073
  %add.i362.i.i.i = add nuw nsw i128 %mul.i365.i.i.i, %mul.i361.i.i.i
  %add.i366.i.i.i = add nuw nsw i128 %add.i362.i.i.i, %mul.i369.i.i.i
  %add.i370.i.i.i = add nuw nsw i128 %add.i366.i.i.i, %shr.i345.i.i.i
  %conv.i372.i.i.i = and i128 %add.i370.i.i.i, 4503599627370495
  %mul.i373.i.i.i = mul nuw nsw i128 %conv.i372.i.i.i, 68719492368
  %add.i354.i.i.i = add nuw nsw i128 %mul.i357.i.i.i, %mul.i353.i.i.i
  %add.i358.i.i.i = add nuw nsw i128 %add.i354.i.i.i, %mul.i373.i.i.i
  %add.i374.i.i.i = add nuw nsw i128 %add.i358.i.i.i, %shr.i350.i.i.i
  %shr.i375.i.i.i = lshr i128 %add.i370.i.i.i, 52
  %140 = insertelement <2 x i128> poison, i128 %add.i348.i.i.i, i64 0
  %141 = insertelement <2 x i128> %140, i128 %add.i374.i.i.i, i64 1
  %142 = trunc <2 x i128> %141 to <2 x i64>
  %143 = and <2 x i64> %142, <i64 4503599627370495, i64 4503599627370495>
  %144 = bitcast i64* %arraydecay.i.i to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %144, align 8, !tbaa !13, !noalias !79
  %shr.i377.i.i.i = lshr i128 %add.i374.i.i.i, 52
  %mul.i380.i.i.i = mul nuw nsw i128 %conv.i.i.i122.i, 3435101582848073
  %mul.i384.i.i.i = mul nuw nsw i128 %conv.i279.i.i.i, 2059588628732947
  %mul.i388.i.i.i = mul nuw nsw i128 %conv.i282.i.i.i, 2652195750478318
  %mul.i392.i.i.i = mul nuw nsw i128 %conv.i286.i.i.i, 135142927197564
  %mul.i396.i.i.i = mul nuw nsw i128 %conv.i290.i.i.i, 124274446989802
  %add.i393.i.i.i = add nuw nsw i128 %mul.i396.i.i.i, %mul.i392.i.i.i
  %add.i397.i.i.i = add nuw nsw i128 %add.i393.i.i.i, %shr.i375.i.i.i
  %conv1.i399.i.i.i = and i128 %add.i397.i.i.i, 18446744073709551615
  %mul.i400.i.i.i = mul nuw nsw i128 %conv1.i399.i.i.i, 68719492368
  %add.i381.i.i.i = add nuw nsw i128 %mul.i384.i.i.i, %mul.i380.i.i.i
  %add.i385.i.i.i = add nuw nsw i128 %add.i381.i.i.i, %mul.i388.i.i.i
  %add.i389.i.i.i = add nuw nsw i128 %add.i385.i.i.i, %mul.i400.i.i.i
  %add.i401.i.i.i = add nuw nsw i128 %add.i389.i.i.i, %shr.i377.i.i.i
  %shr.i402.i.i.i = lshr i128 %add.i397.i.i.i, 64
  %arrayidx173.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 %indvars.iv.i, i32 0, i64 2
  %shr.i404.i.i.i = lshr i128 %add.i401.i.i.i, 52
  %mul.i407.i.i.i = mul nuw nsw i128 %shr.i402.i.i.i, 281475040739328
  %conv.i409.i.i.i = and i128 %add.i296.i.i.i, 4503599627370495
  %add.i408.i.i.i = add nuw nsw i128 %mul.i407.i.i.i, %conv.i409.i.i.i
  %add.i410.i.i.i = add nuw nsw i128 %add.i408.i.i.i, %shr.i404.i.i.i
  %145 = insertelement <2 x i128> poison, i128 %add.i401.i.i.i, i64 0
  %146 = insertelement <2 x i128> %145, i128 %add.i410.i.i.i, i64 1
  %147 = trunc <2 x i128> %146 to <2 x i64>
  %148 = and <2 x i64> %147, <i64 4503599627370495, i64 4503599627370495>
  %149 = bitcast i64* %arrayidx173.i.i.i to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %149, align 8, !tbaa !13, !noalias !79
  %shr.i412.i.i.i = lshr i128 %add.i410.i.i.i, 52
  %conv.i413.i.i.i = trunc i128 %shr.i412.i.i.i to i64
  %add.i.i127.i = add nuw nsw i64 %and84.i.i.i, %conv.i413.i.i.i
  %arrayidx194.i.i.i = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 %indvars.iv.i, i32 0, i64 4
  store i64 %add.i.i127.i, i64* %arrayidx194.i.i.i, align 8, !tbaa !13, !noalias !79
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, 8
  br i1 %exitcond.not.i, label %for.end92.i.loopexit, label %for.body77.i, !llvm.loop !84

for.end92.i.loopexit:                             ; preds = %for.body77.i
  %bits.2.i = select i1 %cmp40.i, i32 %call12.i, i32 %spec.select.i
  br label %for.end92.i

for.end92.i:                                      ; preds = %for.end92.i.loopexit, %secp256k1_ge_table_set_globalz.exit.i
  %bits.3205211.i = phi i32 [ 0, %secp256k1_ge_table_set_globalz.exit.i ], [ %bits.2.i, %for.end92.i.loopexit ]
  %cmp70183206209.i = phi i1 [ false, %secp256k1_ge_table_set_globalz.exit.i ], [ true, %for.end92.i.loopexit ]
  %tobool93.not.i = icmp eq %struct.secp256k1_scalar* %ng, null
  br i1 %tobool93.not.i, label %if.end107.i, label %if.then94.i

if.then94.i:                                      ; preds = %for.end92.i
  %150 = bitcast %struct.secp256k1_scalar* %ng to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !tbaa !13
  %152 = bitcast %struct.secp256k1_scalar* %ng_1.i to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %152, align 16, !tbaa !13
  %arrayidx8.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %ng_1.i, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %ng, i64 0, i32 0, i64 2
  %153 = bitcast i64* %arrayidx8.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %153, i8 0, i64 16, i1 false) #19
  %154 = bitcast i64* %arrayidx12.i.i to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !tbaa !13
  %156 = bitcast %struct.secp256k1_scalar* %ng_128.i to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %156, align 16, !tbaa !13
  %arrayidx20.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %ng_128.i, i64 0, i32 0, i64 2
  %157 = bitcast i64* %arrayidx20.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %157, i8 0, i64 16, i1 false) #19
  %arraydecay95.i = getelementptr inbounds [129 x i32], [129 x i32]* %wnaf_ng_1.i, i64 0, i64 0
  %call96.i = call fastcc i32 @secp256k1_ecmult_wnaf(i32* noundef nonnull %arraydecay95.i, %struct.secp256k1_scalar* noundef nonnull %ng_1.i, i32 noundef 15) #19
  %arraydecay97.i = getelementptr inbounds [129 x i32], [129 x i32]* %wnaf_ng_128.i, i64 0, i64 0
  %call98.i = call fastcc i32 @secp256k1_ecmult_wnaf(i32* noundef nonnull %arraydecay97.i, %struct.secp256k1_scalar* noundef nonnull %ng_128.i, i32 noundef 15) #19
  %cmp99.i = icmp sgt i32 %call96.i, %bits.3205211.i
  %spec.select1.i = select i1 %cmp99.i, i32 %call96.i, i32 %bits.3205211.i
  %cmp103.i = icmp sgt i32 %call98.i, %spec.select1.i
  %spec.select2.i = select i1 %cmp103.i, i32 %call98.i, i32 %spec.select1.i
  %phi.cast.i = sext i32 %call96.i to i64
  %phi.cast199.i = sext i32 %call98.i to i64
  br label %if.end107.i

if.end107.i:                                      ; preds = %if.then94.i, %for.end92.i
  %bits_ng_1.0.i = phi i64 [ 0, %for.end92.i ], [ %phi.cast.i, %if.then94.i ]
  %bits_ng_128.0.i = phi i64 [ 0, %for.end92.i ], [ %phi.cast199.i, %if.then94.i ]
  %bits.5.i = phi i32 [ %bits.3205211.i, %for.end92.i ], [ %spec.select2.i, %if.then94.i ]
  %infinity.i132.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 1, i32* %infinity.i132.i, align 8, !tbaa !65
  %158 = bitcast %struct.secp256k1_gej* %r to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(120) %158, i8 0, i64 120, i1 false) #19
  %cmp109190.i = icmp sgt i32 %bits.5.i, 0
  br i1 %cmp109190.i, label %for.body111.lr.ph.i, label %secp256k1_ecmult_strauss_wnaf.exit

for.body111.lr.ph.i:                              ; preds = %if.end107.i
  %arrayidx.i.i135.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %tmpa.i, i64 0, i32 1, i32 0, i64 0
  %arrayidx15.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %tmpa.i, i64 0, i32 1, i32 0, i64 2
  %arrayidx31.i.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %tmpa.i, i64 0, i32 1, i32 0, i64 4
  %infinity.i1.i144.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %tmpa.i, i64 0, i32 2
  %y2.i2.i145.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %tmpa.i, i64 0, i32 1
  %159 = bitcast %struct.secp256k1_fe* %y2.i2.i145.i to i8*
  %160 = zext i32 %bits.5.i to i64
  %bits_na_1118.i = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 2
  %161 = load i32, i32* %bits_na_1118.i, align 8
  %162 = sext i32 %161 to i64
  %bits_na_lam133.i = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 3
  %163 = load i32, i32* %bits_na_lam133.i, align 4
  %164 = sext i32 %163 to i64
  br i1 %cmp70183206209.i, label %for.body111.i.us.preheader, label %for.body111.i

for.body111.i.us.preheader:                       ; preds = %for.body111.lr.ph.i
  %165 = bitcast i64* %arrayidx.i.i135.i to <2 x i64>*
  %166 = bitcast i64* %arrayidx.i.i135.i to <2 x i64>*
  %167 = bitcast i64* %arrayidx15.i.i.i to <2 x i64>*
  %168 = bitcast i64* %arrayidx15.i.i.i to <2 x i64>*
  %169 = bitcast %struct.secp256k1_fe* %y2.i2.i145.i to <2 x i64>*
  %170 = bitcast %struct.secp256k1_fe* %y2.i2.i145.i to <2 x i64>*
  %171 = bitcast i64* %arrayidx15.i.i.i to <2 x i64>*
  %172 = bitcast i64* %arrayidx15.i.i.i to <2 x i64>*
  br label %for.body111.i.us

for.body111.i.us:                                 ; preds = %for.body111.i.us.preheader, %if.end169.i.us
  %indvars.iv195.i.us = phi i64 [ %indvars.iv.next196.i.us, %if.end169.i.us ], [ %160, %for.body111.i.us.preheader ]
  %indvars.iv.next196.i.us = add nsw i64 %indvars.iv195.i.us, -1
  call fastcc void @secp256k1_gej_double_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_fe* noundef null) #19
  %cmp119.not.i.us = icmp sgt i64 %indvars.iv195.i.us, %162
  br i1 %cmp119.not.i.us, label %if.end130.i.us, label %land.lhs.true.i.us

land.lhs.true.i.us:                               ; preds = %for.body111.i.us
  %arrayidx124.i.us = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 0, i64 %indvars.iv.next196.i.us
  %173 = load i32, i32* %arrayidx124.i.us, align 4, !tbaa !3
  %tobool125.not.i.us = icmp eq i32 %173, 0
  br i1 %tobool125.not.i.us, label %if.end130.i.us, label %if.then126.i.us

if.then126.i.us:                                  ; preds = %land.lhs.true.i.us
  %cmp14.i.i.us = icmp sgt i32 %173, 0
  br i1 %cmp14.i.i.us, label %if.then.i134.i.us, label %if.else.i.i.us

if.else.i.i.us:                                   ; preds = %if.then126.i.us
  %sub18.i.i.us = xor i32 %173, -1
  %div19.i.i.us = sdiv i32 %sub18.i.i.us, 2
  %174 = zext i32 %div19.i.i.us to i64
  %arrayidx21.i.i.us = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %174
  %175 = bitcast %struct.secp256k1_ge* %arrayidx21.i.i.us to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %3, i8* noundef nonnull align 8 dereferenceable(88) %175, i64 88, i1 false) #19, !tbaa.struct !85
  %176 = load <2 x i64>, <2 x i64>* %165, align 8, !tbaa !13
  %177 = sub <2 x i64> <i64 18014381329608892, i64 18014398509481980>, %176
  store <2 x i64> %177, <2 x i64>* %166, align 8, !tbaa !13
  %178 = load <2 x i64>, <2 x i64>* %167, align 8, !tbaa !13
  %179 = sub <2 x i64> <i64 18014398509481980, i64 18014398509481980>, %178
  store <2 x i64> %179, <2 x i64>* %168, align 8, !tbaa !13
  %180 = load i64, i64* %arrayidx31.i.i.i, align 8, !tbaa !13
  %sub32.i.i.i.us = sub i64 1125899906842620, %180
  store i64 %sub32.i.i.i.us, i64* %arrayidx31.i.i.i, align 8, !tbaa !13
  br label %secp256k1_ecmult_table_get_ge.exit.i.us

if.then.i134.i.us:                                ; preds = %if.then126.i.us
  %sub16.i.i.us = add nsw i32 %173, -1
  %div1.i.i.us = lshr i32 %sub16.i.i.us, 1
  %181 = zext i32 %div1.i.i.us to i64
  %arrayidx.i133.i.us = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %181
  %182 = bitcast %struct.secp256k1_ge* %arrayidx.i133.i.us to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %3, i8* noundef nonnull align 8 dereferenceable(88) %182, i64 88, i1 false) #19, !tbaa.struct !85
  br label %secp256k1_ecmult_table_get_ge.exit.i.us

secp256k1_ecmult_table_get_ge.exit.i.us:          ; preds = %if.then.i134.i.us, %if.else.i.i.us
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_fe* noundef null) #19
  br label %if.end130.i.us

if.end130.i.us:                                   ; preds = %secp256k1_ecmult_table_get_ge.exit.i.us, %land.lhs.true.i.us, %for.body111.i.us
  %cmp134.not.i.us = icmp sgt i64 %indvars.iv195.i.us, %164
  br i1 %cmp134.not.i.us, label %for.end153.i.us, label %land.lhs.true136.i.us

land.lhs.true136.i.us:                            ; preds = %if.end130.i.us
  %arrayidx141.i.us = getelementptr inbounds [1 x %struct.secp256k1_strauss_point_state], [1 x %struct.secp256k1_strauss_point_state]* %ps, i64 0, i64 0, i32 1, i64 %indvars.iv.next196.i.us
  %183 = load i32, i32* %arrayidx141.i.us, align 4, !tbaa !3
  %tobool142.not.i.us = icmp eq i32 %183, 0
  br i1 %tobool142.not.i.us, label %for.end153.i.us, label %if.then143.i.us

if.then143.i.us:                                  ; preds = %land.lhs.true136.i.us
  %cmp14.i137.i.us = icmp sgt i32 %183, 0
  br i1 %cmp14.i137.i.us, label %if.then.i143.i.us, label %if.else.i156.i.us

if.else.i156.i.us:                                ; preds = %if.then143.i.us
  %sub22.i.i.us = xor i32 %183, -1
  %div23.i.i.us = sdiv i32 %sub22.i.i.us, 2
  %184 = zext i32 %div23.i.i.us to i64
  %arrayidx25.i.i.us = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 %184
  %y31.i.i.us = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %184, i32 1
  store i32 0, i32* %infinity.i1.i144.i, align 8, !tbaa !37
  %185 = bitcast %struct.secp256k1_fe* %arrayidx25.i.i.us to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %3, i8* noundef nonnull align 8 dereferenceable(40) %185, i64 40, i1 false) #19, !tbaa.struct !18
  %186 = bitcast %struct.secp256k1_fe* %y31.i.i.us to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %159, i8* noundef nonnull align 8 dereferenceable(40) %186, i64 40, i1 false) #19, !tbaa.struct !18
  %187 = load <2 x i64>, <2 x i64>* %169, align 8, !tbaa !13
  %188 = sub <2 x i64> <i64 18014381329608892, i64 18014398509481980>, %187
  store <2 x i64> %188, <2 x i64>* %170, align 8, !tbaa !13
  %189 = load <2 x i64>, <2 x i64>* %171, align 8, !tbaa !13
  %190 = sub <2 x i64> <i64 18014398509481980, i64 18014398509481980>, %189
  store <2 x i64> %190, <2 x i64>* %172, align 8, !tbaa !13
  %191 = load i64, i64* %arrayidx31.i.i.i, align 8, !tbaa !13
  %sub32.i.i155.i.us = sub i64 1125899906842620, %191
  store i64 %sub32.i.i155.i.us, i64* %arrayidx31.i.i.i, align 8, !tbaa !13
  br label %secp256k1_ecmult_table_get_ge_lambda.exit.i.us

if.then.i143.i.us:                                ; preds = %if.then143.i.us
  %sub16.i138.i.us = add nsw i32 %183, -1
  %div3.i.i.us = lshr i32 %sub16.i138.i.us, 1
  %192 = zext i32 %div3.i.i.us to i64
  %arrayidx.i139.i.us = getelementptr inbounds [8 x %struct.secp256k1_fe], [8 x %struct.secp256k1_fe]* %aux, i64 0, i64 %192
  %y.i140.i.us = getelementptr inbounds [8 x %struct.secp256k1_ge], [8 x %struct.secp256k1_ge]* %pre_a, i64 0, i64 %192, i32 1
  store i32 0, i32* %infinity.i1.i144.i, align 8, !tbaa !37
  %193 = bitcast %struct.secp256k1_fe* %arrayidx.i139.i.us to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %3, i8* noundef nonnull align 8 dereferenceable(40) %193, i64 40, i1 false) #19, !tbaa.struct !18
  %194 = bitcast %struct.secp256k1_fe* %y.i140.i.us to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %159, i8* noundef nonnull align 8 dereferenceable(40) %194, i64 40, i1 false) #19, !tbaa.struct !18
  br label %secp256k1_ecmult_table_get_ge_lambda.exit.i.us

secp256k1_ecmult_table_get_ge_lambda.exit.i.us:   ; preds = %if.then.i143.i.us, %if.else.i156.i.us
  call fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_fe* noundef null) #19
  br label %for.end153.i.us

for.end153.i.us:                                  ; preds = %secp256k1_ecmult_table_get_ge_lambda.exit.i.us, %land.lhs.true136.i.us, %if.end130.i.us
  %cmp154.not.i.us = icmp sgt i64 %indvars.iv195.i.us, %bits_ng_1.0.i
  br i1 %cmp154.not.i.us, label %if.end161.i.us, label %land.lhs.true156.i.us

land.lhs.true156.i.us:                            ; preds = %for.end153.i.us
  %arrayidx158.i.us = getelementptr inbounds [129 x i32], [129 x i32]* %wnaf_ng_1.i, i64 0, i64 %indvars.iv.next196.i.us
  %195 = load i32, i32* %arrayidx158.i.us, align 4, !tbaa !3
  %tobool159.not.i.us = icmp eq i32 %195, 0
  br i1 %tobool159.not.i.us, label %if.end161.i.us, label %if.then160.i.us

if.then160.i.us:                                  ; preds = %land.lhs.true156.i.us
  call fastcc void @secp256k1_ecmult_table_get_ge_storage(%struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_ge_storage* noundef getelementptr inbounds ([8192 x %struct.secp256k1_ge_storage], [8192 x %struct.secp256k1_ge_storage]* @secp256k1_pre_g, i64 0, i64 0), i32 noundef %195) #19
  call fastcc void @secp256k1_gej_add_zinv_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_fe* noundef nonnull %Z.i) #19
  br label %if.end161.i.us

if.end161.i.us:                                   ; preds = %if.then160.i.us, %land.lhs.true156.i.us, %for.end153.i.us
  %cmp162.not.i.us = icmp sgt i64 %indvars.iv195.i.us, %bits_ng_128.0.i
  br i1 %cmp162.not.i.us, label %if.end169.i.us, label %land.lhs.true164.i.us

land.lhs.true164.i.us:                            ; preds = %if.end161.i.us
  %arrayidx166.i.us = getelementptr inbounds [129 x i32], [129 x i32]* %wnaf_ng_128.i, i64 0, i64 %indvars.iv.next196.i.us
  %196 = load i32, i32* %arrayidx166.i.us, align 4, !tbaa !3
  %tobool167.not.i.us = icmp eq i32 %196, 0
  br i1 %tobool167.not.i.us, label %if.end169.i.us, label %if.then168.i.us

if.then168.i.us:                                  ; preds = %land.lhs.true164.i.us
  call fastcc void @secp256k1_ecmult_table_get_ge_storage(%struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_ge_storage* noundef getelementptr inbounds ([8192 x %struct.secp256k1_ge_storage], [8192 x %struct.secp256k1_ge_storage]* @secp256k1_pre_g_128, i64 0, i64 0), i32 noundef %196) #19
  call fastcc void @secp256k1_gej_add_zinv_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_fe* noundef nonnull %Z.i) #19
  br label %if.end169.i.us

if.end169.i.us:                                   ; preds = %if.then168.i.us, %land.lhs.true164.i.us, %if.end161.i.us
  %cmp109.i.us = icmp ugt i64 %indvars.iv195.i.us, 1
  br i1 %cmp109.i.us, label %for.body111.i.us, label %for.end171.i, !llvm.loop !86

for.body111.i:                                    ; preds = %for.body111.lr.ph.i, %if.end169.i
  %indvars.iv195.i = phi i64 [ %indvars.iv.next196.i, %if.end169.i ], [ %160, %for.body111.lr.ph.i ]
  %indvars.iv.next196.i = add nsw i64 %indvars.iv195.i, -1
  call fastcc void @secp256k1_gej_double_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_fe* noundef null) #19
  %cmp154.not.i = icmp sgt i64 %indvars.iv195.i, %bits_ng_1.0.i
  br i1 %cmp154.not.i, label %if.end161.i, label %land.lhs.true156.i

land.lhs.true156.i:                               ; preds = %for.body111.i
  %arrayidx158.i = getelementptr inbounds [129 x i32], [129 x i32]* %wnaf_ng_1.i, i64 0, i64 %indvars.iv.next196.i
  %197 = load i32, i32* %arrayidx158.i, align 4, !tbaa !3
  %tobool159.not.i = icmp eq i32 %197, 0
  br i1 %tobool159.not.i, label %if.end161.i, label %if.then160.i

if.then160.i:                                     ; preds = %land.lhs.true156.i
  call fastcc void @secp256k1_ecmult_table_get_ge_storage(%struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_ge_storage* noundef getelementptr inbounds ([8192 x %struct.secp256k1_ge_storage], [8192 x %struct.secp256k1_ge_storage]* @secp256k1_pre_g, i64 0, i64 0), i32 noundef %197) #19
  call fastcc void @secp256k1_gej_add_zinv_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_fe* noundef nonnull %Z.i) #19
  br label %if.end161.i

if.end161.i:                                      ; preds = %if.then160.i, %land.lhs.true156.i, %for.body111.i
  %cmp162.not.i = icmp sgt i64 %indvars.iv195.i, %bits_ng_128.0.i
  br i1 %cmp162.not.i, label %if.end169.i, label %land.lhs.true164.i

land.lhs.true164.i:                               ; preds = %if.end161.i
  %arrayidx166.i = getelementptr inbounds [129 x i32], [129 x i32]* %wnaf_ng_128.i, i64 0, i64 %indvars.iv.next196.i
  %198 = load i32, i32* %arrayidx166.i, align 4, !tbaa !3
  %tobool167.not.i = icmp eq i32 %198, 0
  br i1 %tobool167.not.i, label %if.end169.i, label %if.then168.i

if.then168.i:                                     ; preds = %land.lhs.true164.i
  call fastcc void @secp256k1_ecmult_table_get_ge_storage(%struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_ge_storage* noundef getelementptr inbounds ([8192 x %struct.secp256k1_ge_storage], [8192 x %struct.secp256k1_ge_storage]* @secp256k1_pre_g_128, i64 0, i64 0), i32 noundef %198) #19
  call fastcc void @secp256k1_gej_add_zinv_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %tmpa.i, %struct.secp256k1_fe* noundef nonnull %Z.i) #19
  br label %if.end169.i

if.end169.i:                                      ; preds = %if.then168.i, %land.lhs.true164.i, %if.end161.i
  %cmp109.i = icmp ugt i64 %indvars.iv195.i, 1
  br i1 %cmp109.i, label %for.body111.i, label %for.end171.i, !llvm.loop !86

for.end171.i:                                     ; preds = %if.end169.i, %if.end169.i.us
  %.pre198.i = load i32, i32* %infinity.i132.i, align 8, !tbaa !65
  %phi.cmp.i = icmp eq i32 %.pre198.i, 0
  br i1 %phi.cmp.i, label %if.then173.i, label %secp256k1_ecmult_strauss_wnaf.exit

if.then173.i:                                     ; preds = %for.end171.i
  %z174.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z174.i, %struct.secp256k1_fe* noundef nonnull %z174.i, %struct.secp256k1_fe* noundef nonnull %Z.i) #19
  br label %secp256k1_ecmult_strauss_wnaf.exit

secp256k1_ecmult_strauss_wnaf.exit:               ; preds = %if.end107.i, %for.end171.i, %if.then173.i
  call void @llvm.lifetime.end.p0i8(i64 516, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 516, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 704, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %0) #19
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc i32 @secp256k1_gej_eq_x_var(%struct.secp256k1_fe* nocapture noundef readonly %x, %struct.secp256k1_gej* nocapture noundef readonly %a) unnamed_addr #1 {
entry:
  %r = alloca %struct.secp256k1_fe, align 8
  %0 = bitcast %struct.secp256k1_fe* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #19
  %z = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %r, %struct.secp256k1_fe* noundef nonnull %z)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %r, %struct.secp256k1_fe* noundef nonnull %r, %struct.secp256k1_fe* noundef %x)
  %r2.sroa.0.0..sroa_idx = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0, i32 0, i64 0
  %r2.sroa.0.0.copyload = load i64, i64* %r2.sroa.0.0..sroa_idx, align 8, !tbaa.struct !18
  %r2.sroa.6.0..sroa_idx6 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0, i32 0, i64 1
  %r2.sroa.6.0.copyload = load i64, i64* %r2.sroa.6.0..sroa_idx6, align 8, !tbaa.struct !46
  %r2.sroa.9.0..sroa_idx9 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0, i32 0, i64 2
  %r2.sroa.9.0.copyload = load i64, i64* %r2.sroa.9.0..sroa_idx9, align 8, !tbaa.struct !47
  %r2.sroa.12.0..sroa_idx12 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0, i32 0, i64 3
  %r2.sroa.12.0.copyload = load i64, i64* %r2.sroa.12.0..sroa_idx12, align 8, !tbaa.struct !48
  %r2.sroa.15.0..sroa_idx15 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0, i32 0, i64 4
  %r2.sroa.15.0.copyload = load i64, i64* %r2.sroa.15.0..sroa_idx15, align 8, !tbaa.struct !49
  %shr.i = lshr i64 %r2.sroa.15.0.copyload, 48
  %and.i = and i64 %r2.sroa.15.0.copyload, 281474976710655
  %mul.i = mul nuw nsw i64 %shr.i, 4294968273
  %add.i = add i64 %mul.i, %r2.sroa.0.0.copyload
  %shr9.i = lshr i64 %add.i, 52
  %add10.i = add i64 %shr9.i, %r2.sroa.6.0.copyload
  %and11.i = and i64 %add.i, 4503599627370495
  %shr12.i = lshr i64 %add10.i, 52
  %add13.i = add i64 %shr12.i, %r2.sroa.9.0.copyload
  %shr15.i = lshr i64 %add13.i, 52
  %add16.i = add i64 %shr15.i, %r2.sroa.12.0.copyload
  %shr18.i = lshr i64 %add16.i, 52
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 0
  %1 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %sub.i.i = sub i64 18014381329608892, %1
  %arrayidx31.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 4
  %2 = load i64, i64* %arrayidx31.i.i, align 8, !tbaa !13
  %sub32.i.i = sub i64 1125899906842620, %2
  %add.i.i = add i64 %sub.i.i, %and11.i
  %add19.i = add i64 %sub32.i.i, %and.i
  %add22.i.i = add i64 %add19.i, %shr18.i
  %shr.i.i = lshr i64 %add22.i.i, 48
  %mul.i.i = mul nuw nsw i64 %shr.i.i, 4294968273
  %add.i5.i = add i64 %add.i.i, %mul.i.i
  %and.i.i = and i64 %add.i5.i, 4503599627370495
  %xor.i.i = xor i64 %and.i.i, 4294968272
  %cmp.i.i = icmp ne i64 %and.i.i, 0
  %cmp3.i.i = icmp ne i64 %xor.i.i, 4503599627370495
  %and589.i.i = and i1 %cmp.i.i, %cmp3.i.i
  br i1 %and589.i.i, label %secp256k1_fe_equal_var.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %and20.i = and i64 %add16.i, 4503599627370495
  %and17.i = and i64 %add13.i, 4503599627370495
  %and14.i = and i64 %add10.i, 4503599627370495
  %arrayidx23.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx23.i.i, align 8, !tbaa !13
  %arrayidx15.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 2
  %4 = load i64, i64* %arrayidx15.i.i, align 8, !tbaa !13
  %arrayidx7.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %r, i64 0, i32 0, i64 1
  %5 = load i64, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %and12.i.i = and i64 %add22.i.i, 281474976710655
  %shr13.i.i = lshr i64 %add.i5.i, 52
  %sub8.i.i = add nuw nsw i64 %and14.i, 18014398509481980
  %add7.i.i = add nuw nsw i64 %sub8.i.i, %shr13.i.i
  %add14.i.i = sub i64 %add7.i.i, %5
  %shr15.i.i = lshr i64 %add14.i.i, 52
  %sub16.i.i = add nuw nsw i64 %and17.i, 18014398509481980
  %add12.i.i = sub i64 %sub16.i.i, %4
  %add16.i.i = add i64 %add12.i.i, %shr15.i.i
  %and17.i.i = and i64 %add14.i.i, 4503599627370495
  %or.i.i = or i64 %and17.i.i, %and.i.i
  %and18.i.i = and i64 %add14.i.i, %xor.i.i
  %shr19.i.i = lshr i64 %add16.i.i, 52
  %sub24.i.i = add nuw nsw i64 %and20.i, 18014398509481980
  %add17.i.i = sub i64 %sub24.i.i, %3
  %add20.i.i = add i64 %add17.i.i, %shr19.i.i
  %and21.i.i = and i64 %add16.i.i, 4503599627370495
  %or22.i.i = or i64 %or.i.i, %and21.i.i
  %and23.i.i = and i64 %and18.i.i, %add16.i.i
  %shr24.i.i = lshr i64 %add20.i.i, 52
  %add25.i.i = add nuw nsw i64 %shr24.i.i, %and12.i.i
  %and26.i.i = and i64 %add20.i.i, 4503599627370495
  %or27.i.i = or i64 %or22.i.i, %and26.i.i
  %and28.i.i = and i64 %and23.i.i, %add20.i.i
  %or29.i.i = or i64 %or27.i.i, %add25.i.i
  %xor30.i.i = xor i64 %add25.i.i, 4222124650659840
  %and31.i.i = and i64 %and28.i.i, %xor30.i.i
  %cmp35.i.i = icmp eq i64 %or29.i.i, 0
  %cmp37.i.i = icmp eq i64 %and31.i.i, 4503599627370495
  %or3990.i.i = or i1 %cmp35.i.i, %cmp37.i.i
  %or39.i.i = zext i1 %or3990.i.i to i32
  br label %secp256k1_fe_equal_var.exit

secp256k1_fe_equal_var.exit:                      ; preds = %entry, %if.end.i.i
  %retval.0.i.i = phi i32 [ %or39.i.i, %if.end.i.i ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #19
  ret i32 %retval.0.i.i
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_modinv64_update_de_62(%struct.secp256k1_modinv64_signed62* nocapture noundef %d, %struct.secp256k1_modinv64_signed62* nocapture noundef %e, %struct.secp256k1_modinv64_trans2x2* nocapture noundef readonly %t, %struct.secp256k1_modinv64_modinfo* nocapture noundef readonly %modinfo) unnamed_addr #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 0
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !13
  %arrayidx2 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 1
  %1 = load i64, i64* %arrayidx2, align 8, !tbaa !13
  %arrayidx4 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 2
  %2 = load i64, i64* %arrayidx4, align 8, !tbaa !13
  %arrayidx6 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx6, align 8, !tbaa !13
  %arrayidx8 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 4
  %4 = load i64, i64* %arrayidx8, align 8, !tbaa !13
  %arrayidx10 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 0
  %5 = load i64, i64* %arrayidx10, align 8, !tbaa !13
  %arrayidx12 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 1
  %6 = load i64, i64* %arrayidx12, align 8, !tbaa !13
  %arrayidx14 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 2
  %7 = load i64, i64* %arrayidx14, align 8, !tbaa !13
  %arrayidx16 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 3
  %8 = load i64, i64* %arrayidx16, align 8, !tbaa !13
  %arrayidx18 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 4
  %9 = load i64, i64* %arrayidx18, align 8, !tbaa !13
  %u19 = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 0
  %10 = load i64, i64* %u19, align 8, !tbaa !54
  %v21 = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 1
  %11 = load i64, i64* %v21, align 8, !tbaa !56
  %q22 = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 2
  %12 = load i64, i64* %q22, align 8, !tbaa !57
  %r23 = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 3
  %13 = load i64, i64* %r23, align 8, !tbaa !58
  %shr = ashr i64 %4, 63
  %shr24 = ashr i64 %9, 63
  %and = and i64 %10, %shr
  %and25 = and i64 %11, %shr24
  %add = add nsw i64 %and25, %and
  %and26 = and i64 %12, %shr
  %and27 = and i64 %13, %shr24
  %add28 = add nsw i64 %and27, %and26
  %conv.i = sext i64 %10 to i128
  %conv1.i = sext i64 %0 to i128
  %mul.i = mul nsw i128 %conv.i, %conv1.i
  %conv.i242 = sext i64 %11 to i128
  %conv1.i243 = sext i64 %5 to i128
  %mul.i244 = mul nsw i128 %conv.i242, %conv1.i243
  %add.i = add nsw i128 %mul.i244, %mul.i
  %conv.i245 = sext i64 %12 to i128
  %mul.i247 = mul nsw i128 %conv.i245, %conv1.i
  %conv.i248 = sext i64 %13 to i128
  %mul.i250 = mul nsw i128 %conv.i248, %conv1.i243
  %add.i251 = add nsw i128 %mul.i250, %mul.i247
  %modulus_inv62 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 1
  %14 = load i64, i64* %modulus_inv62, align 8, !tbaa !87
  %conv.i252 = trunc i128 %add.i to i64
  %mul = mul i64 %14, %conv.i252
  %add29 = add i64 %mul, %add
  %and30 = and i64 %add29, 4611686018427387903
  %sub = sub i64 %add, %and30
  %conv.i253 = trunc i128 %add.i251 to i64
  %mul33 = mul i64 %14, %conv.i253
  %add34 = add i64 %mul33, %add28
  %and35 = and i64 %add34, 4611686018427387903
  %sub36 = sub i64 %add28, %and35
  %arrayidx38 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 0
  %15 = load i64, i64* %arrayidx38, align 8, !tbaa !13
  %conv.i254 = sext i64 %15 to i128
  %conv1.i255 = sext i64 %sub to i128
  %mul.i256 = mul nsw i128 %conv1.i255, %conv.i254
  %add.i257 = add nsw i128 %mul.i256, %add.i
  %conv1.i259 = sext i64 %sub36 to i128
  %mul.i260 = mul nsw i128 %conv1.i259, %conv.i254
  %add.i261 = add nsw i128 %mul.i260, %add.i251
  %shr.i = ashr i128 %add.i257, 62
  %shr.i264 = ashr i128 %add.i261, 62
  %conv1.i266 = sext i64 %1 to i128
  %mul.i267 = mul nsw i128 %conv.i, %conv1.i266
  %conv1.i270 = sext i64 %6 to i128
  %mul.i271 = mul nsw i128 %conv.i242, %conv1.i270
  %add.i268 = add i128 %mul.i271, %mul.i267
  %add.i272 = add i128 %add.i268, %shr.i
  %mul.i275 = mul nsw i128 %conv.i245, %conv1.i266
  %mul.i279 = mul nsw i128 %conv.i248, %conv1.i270
  %add.i276 = add i128 %mul.i279, %mul.i275
  %add.i280 = add i128 %add.i276, %shr.i264
  %arrayidx53 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 1
  %16 = load i64, i64* %arrayidx53, align 8, !tbaa !13
  %tobool.not = icmp eq i64 %16, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv.i281 = sext i64 %16 to i128
  %mul.i283 = mul nsw i128 %conv1.i255, %conv.i281
  %add.i284 = add nsw i128 %add.i272, %mul.i283
  %mul.i287 = mul nsw i128 %conv1.i259, %conv.i281
  %add.i288 = add nsw i128 %add.i280, %mul.i287
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cd.0 = phi i128 [ %add.i272, %entry ], [ %add.i284, %if.then ]
  %ce.0 = phi i128 [ %add.i280, %entry ], [ %add.i288, %if.then ]
  %conv.i289 = trunc i128 %cd.0 to i64
  %and61 = and i64 %conv.i289, 4611686018427387903
  store i64 %and61, i64* %arrayidx, align 8, !tbaa !13
  %shr.i290 = ashr i128 %cd.0, 62
  %conv.i291 = trunc i128 %ce.0 to i64
  %and65 = and i64 %conv.i291, 4611686018427387903
  store i64 %and65, i64* %arrayidx10, align 8, !tbaa !13
  %shr.i292 = ashr i128 %ce.0, 62
  %conv1.i294 = sext i64 %2 to i128
  %mul.i295 = mul nsw i128 %conv.i, %conv1.i294
  %conv1.i298 = sext i64 %7 to i128
  %mul.i299 = mul nsw i128 %conv.i242, %conv1.i298
  %add.i296 = add i128 %mul.i299, %mul.i295
  %add.i300 = add i128 %add.i296, %shr.i290
  %mul.i303 = mul nsw i128 %conv.i245, %conv1.i294
  %mul.i307 = mul nsw i128 %conv.i248, %conv1.i298
  %add.i304 = add i128 %mul.i307, %mul.i303
  %add.i308 = add i128 %add.i304, %shr.i292
  %arrayidx70 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 2
  %17 = load i64, i64* %arrayidx70, align 8, !tbaa !13
  %tobool71.not = icmp eq i64 %17, 0
  br i1 %tobool71.not, label %if.end79, label %if.then72

if.then72:                                        ; preds = %if.end
  %conv.i309 = sext i64 %17 to i128
  %mul.i311 = mul nsw i128 %conv.i309, %conv1.i255
  %add.i312 = add nsw i128 %mul.i311, %add.i300
  %mul.i315 = mul nsw i128 %conv.i309, %conv1.i259
  %add.i316 = add nsw i128 %mul.i315, %add.i308
  br label %if.end79

if.end79:                                         ; preds = %if.then72, %if.end
  %cd.1 = phi i128 [ %add.i300, %if.end ], [ %add.i312, %if.then72 ]
  %ce.1 = phi i128 [ %add.i308, %if.end ], [ %add.i316, %if.then72 ]
  %conv.i317 = trunc i128 %cd.1 to i64
  %and81 = and i64 %conv.i317, 4611686018427387903
  store i64 %and81, i64* %arrayidx2, align 8, !tbaa !13
  %shr.i318 = ashr i128 %cd.1, 62
  %conv.i319 = trunc i128 %ce.1 to i64
  %and85 = and i64 %conv.i319, 4611686018427387903
  store i64 %and85, i64* %arrayidx12, align 8, !tbaa !13
  %shr.i320 = ashr i128 %ce.1, 62
  %conv1.i322 = sext i64 %3 to i128
  %mul.i323 = mul nsw i128 %conv.i, %conv1.i322
  %conv1.i326 = sext i64 %8 to i128
  %mul.i327 = mul nsw i128 %conv.i242, %conv1.i326
  %add.i324 = add i128 %mul.i327, %mul.i323
  %add.i328 = add i128 %add.i324, %shr.i318
  %mul.i331 = mul nsw i128 %conv.i245, %conv1.i322
  %mul.i335 = mul nsw i128 %conv.i248, %conv1.i326
  %add.i332 = add i128 %mul.i335, %mul.i331
  %add.i336 = add i128 %add.i332, %shr.i320
  %arrayidx90 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 3
  %18 = load i64, i64* %arrayidx90, align 8, !tbaa !13
  %tobool91.not = icmp eq i64 %18, 0
  br i1 %tobool91.not, label %if.end99, label %if.then92

if.then92:                                        ; preds = %if.end79
  %conv.i337 = sext i64 %18 to i128
  %mul.i339 = mul nsw i128 %conv.i337, %conv1.i255
  %add.i340 = add nsw i128 %mul.i339, %add.i328
  %mul.i343 = mul nsw i128 %conv.i337, %conv1.i259
  %add.i344 = add nsw i128 %mul.i343, %add.i336
  br label %if.end99

if.end99:                                         ; preds = %if.then92, %if.end79
  %cd.2 = phi i128 [ %add.i328, %if.end79 ], [ %add.i340, %if.then92 ]
  %ce.2 = phi i128 [ %add.i336, %if.end79 ], [ %add.i344, %if.then92 ]
  %conv.i345 = trunc i128 %cd.2 to i64
  %and101 = and i64 %conv.i345, 4611686018427387903
  store i64 %and101, i64* %arrayidx4, align 8, !tbaa !13
  %shr.i346 = ashr i128 %cd.2, 62
  %conv.i347 = trunc i128 %ce.2 to i64
  %and105 = and i64 %conv.i347, 4611686018427387903
  store i64 %and105, i64* %arrayidx14, align 8, !tbaa !13
  %shr.i348 = ashr i128 %ce.2, 62
  %conv1.i350 = sext i64 %4 to i128
  %mul.i351 = mul nsw i128 %conv.i, %conv1.i350
  %conv1.i354 = sext i64 %9 to i128
  %mul.i355 = mul nsw i128 %conv.i242, %conv1.i354
  %mul.i359 = mul nsw i128 %conv.i245, %conv1.i350
  %mul.i363 = mul nsw i128 %conv.i248, %conv1.i354
  %arrayidx110 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 4
  %19 = load i64, i64* %arrayidx110, align 8, !tbaa !13
  %conv.i365 = sext i64 %19 to i128
  %mul.i367 = mul nsw i128 %conv.i365, %conv1.i255
  %add.i352 = add i128 %mul.i355, %mul.i351
  %add.i356 = add i128 %add.i352, %shr.i346
  %add.i368 = add i128 %add.i356, %mul.i367
  %mul.i371 = mul nsw i128 %conv.i365, %conv1.i259
  %add.i360 = add i128 %mul.i363, %mul.i359
  %add.i364 = add i128 %add.i360, %shr.i348
  %add.i372 = add i128 %add.i364, %mul.i371
  %conv.i373 = trunc i128 %add.i368 to i64
  %and115 = and i64 %conv.i373, 4611686018427387903
  store i64 %and115, i64* %arrayidx6, align 8, !tbaa !13
  %20 = lshr i128 %add.i368, 62
  %conv.i375 = trunc i128 %add.i372 to i64
  %and119 = and i64 %conv.i375, 4611686018427387903
  store i64 %and119, i64* %arrayidx16, align 8, !tbaa !13
  %21 = lshr i128 %add.i372, 62
  %conv.i377 = trunc i128 %20 to i64
  store i64 %conv.i377, i64* %arrayidx8, align 8, !tbaa !13
  %conv.i378 = trunc i128 %21 to i64
  store i64 %conv.i378, i64* %arrayidx18, align 8, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.cttz.i64(i64, i1 immarg) #13

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_scalar_mul_512(i64* nocapture noundef writeonly %l, %struct.secp256k1_scalar* nocapture noundef readonly %a, %struct.secp256k1_scalar* nocapture noundef readonly %b) unnamed_addr #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %a, i64 0, i32 0, i64 0
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !13
  %arrayidx2 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b, i64 0, i32 0, i64 0
  %1 = load i64, i64* %arrayidx2, align 8, !tbaa !13
  %conv.i = zext i64 %0 to i128
  %conv1.i = zext i64 %1 to i128
  %mul.i = mul nuw i128 %conv1.i, %conv.i
  %shr.i = lshr i128 %mul.i, 64
  %conv.i722 = trunc i128 %shr.i to i64
  %conv.i723 = trunc i128 %mul.i to i64
  store i64 %conv.i723, i64* %l, align 8, !tbaa !13
  %2 = load i64, i64* %arrayidx, align 8, !tbaa !13
  %arrayidx21 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b, i64 0, i32 0, i64 1
  %3 = load i64, i64* %arrayidx21, align 8, !tbaa !13
  %conv.i724 = zext i64 %2 to i128
  %conv1.i725 = zext i64 %3 to i128
  %mul.i726 = mul nuw i128 %conv1.i725, %conv.i724
  %shr.i727 = lshr i128 %mul.i726, 64
  %conv.i728 = trunc i128 %shr.i727 to i64
  %conv.i729 = trunc i128 %mul.i726 to i64
  %add24 = add i64 %conv.i729, %conv.i722
  %cmp25 = icmp ult i64 %add24, %conv.i729
  %4 = zext i1 %cmp25 to i64
  %add28 = add nuw i64 %4, %conv.i728
  %arrayidx44 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %a, i64 0, i32 0, i64 1
  %5 = load i64, i64* %arrayidx44, align 8, !tbaa !13
  %6 = load i64, i64* %arrayidx2, align 8, !tbaa !13
  %conv.i730 = zext i64 %5 to i128
  %conv1.i731 = zext i64 %6 to i128
  %mul.i732 = mul nuw i128 %conv1.i731, %conv.i730
  %shr.i733 = lshr i128 %mul.i732, 64
  %conv.i734 = trunc i128 %shr.i733 to i64
  %conv.i735 = trunc i128 %mul.i732 to i64
  %add49 = add i64 %add24, %conv.i735
  %cmp50 = icmp ult i64 %add49, %conv.i735
  %7 = zext i1 %cmp50 to i64
  %add53 = add nuw i64 %7, %conv.i734
  %add54 = add i64 %add28, %add53
  %cmp55 = icmp ult i64 %add54, %add53
  %arrayidx68 = getelementptr inbounds i64, i64* %l, i64 1
  store i64 %add49, i64* %arrayidx68, align 8, !tbaa !13
  %conv69 = zext i1 %cmp55 to i64
  %8 = load i64, i64* %arrayidx, align 8, !tbaa !13
  %arrayidx76 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b, i64 0, i32 0, i64 2
  %9 = load i64, i64* %arrayidx76, align 8, !tbaa !13
  %conv.i736 = zext i64 %8 to i128
  %conv1.i737 = zext i64 %9 to i128
  %mul.i738 = mul nuw i128 %conv1.i737, %conv.i736
  %shr.i739 = lshr i128 %mul.i738, 64
  %conv.i740 = trunc i128 %shr.i739 to i64
  %conv.i741 = trunc i128 %mul.i738 to i64
  %add79 = add i64 %add54, %conv.i741
  %cmp80 = icmp ult i64 %add79, %conv.i741
  %10 = zext i1 %cmp80 to i64
  %add83 = add nuw i64 %10, %conv.i740
  %add84 = add i64 %add83, %conv69
  %cmp85 = icmp ult i64 %add84, %add83
  %conv86 = zext i1 %cmp85 to i64
  %11 = load i64, i64* %arrayidx44, align 8, !tbaa !13
  %12 = load i64, i64* %arrayidx21, align 8, !tbaa !13
  %conv.i742 = zext i64 %11 to i128
  %conv1.i743 = zext i64 %12 to i128
  %mul.i744 = mul nuw i128 %conv1.i743, %conv.i742
  %shr.i745 = lshr i128 %mul.i744, 64
  %conv.i746 = trunc i128 %shr.i745 to i64
  %conv.i747 = trunc i128 %mul.i744 to i64
  %add107 = add i64 %add79, %conv.i747
  %cmp108 = icmp ult i64 %add107, %conv.i747
  %13 = zext i1 %cmp108 to i64
  %add111 = add nuw i64 %13, %conv.i746
  %add112 = add i64 %add84, %add111
  %cmp113 = icmp ult i64 %add112, %add111
  %conv114 = zext i1 %cmp113 to i64
  %add115 = add nuw nsw i64 %conv114, %conv86
  %arrayidx130 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %a, i64 0, i32 0, i64 2
  %14 = load i64, i64* %arrayidx130, align 8, !tbaa !13
  %15 = load i64, i64* %arrayidx2, align 8, !tbaa !13
  %conv.i748 = zext i64 %14 to i128
  %conv1.i749 = zext i64 %15 to i128
  %mul.i750 = mul nuw i128 %conv1.i749, %conv.i748
  %shr.i751 = lshr i128 %mul.i750, 64
  %conv.i752 = trunc i128 %shr.i751 to i64
  %conv.i753 = trunc i128 %mul.i750 to i64
  %add135 = add i64 %add107, %conv.i753
  %cmp136 = icmp ult i64 %add135, %conv.i753
  %16 = zext i1 %cmp136 to i64
  %add139 = add nuw i64 %16, %conv.i752
  %add140 = add i64 %add112, %add139
  %cmp141 = icmp ult i64 %add140, %add139
  %conv142 = zext i1 %cmp141 to i64
  %add143 = add nuw nsw i64 %add115, %conv142
  %arrayidx154 = getelementptr inbounds i64, i64* %l, i64 2
  store i64 %add135, i64* %arrayidx154, align 8, !tbaa !13
  %17 = load i64, i64* %arrayidx, align 8, !tbaa !13
  %arrayidx162 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %b, i64 0, i32 0, i64 3
  %18 = load i64, i64* %arrayidx162, align 8, !tbaa !13
  %conv.i754 = zext i64 %17 to i128
  %conv1.i755 = zext i64 %18 to i128
  %mul.i756 = mul nuw i128 %conv1.i755, %conv.i754
  %shr.i757 = lshr i128 %mul.i756, 64
  %conv.i758 = trunc i128 %shr.i757 to i64
  %conv.i759 = trunc i128 %mul.i756 to i64
  %add165 = add i64 %add140, %conv.i759
  %cmp166 = icmp ult i64 %add165, %conv.i759
  %19 = zext i1 %cmp166 to i64
  %add169 = add nuw i64 %19, %conv.i758
  %add170 = add i64 %add143, %add169
  %cmp171 = icmp ult i64 %add170, %add169
  %conv172 = zext i1 %cmp171 to i64
  %20 = load i64, i64* %arrayidx44, align 8, !tbaa !13
  %21 = load i64, i64* %arrayidx76, align 8, !tbaa !13
  %conv.i760 = zext i64 %20 to i128
  %conv1.i761 = zext i64 %21 to i128
  %mul.i762 = mul nuw i128 %conv1.i761, %conv.i760
  %shr.i763 = lshr i128 %mul.i762, 64
  %conv.i764 = trunc i128 %shr.i763 to i64
  %conv.i765 = trunc i128 %mul.i762 to i64
  %add193 = add i64 %add165, %conv.i765
  %cmp194 = icmp ult i64 %add193, %conv.i765
  %22 = zext i1 %cmp194 to i64
  %add197 = add nuw i64 %22, %conv.i764
  %add198 = add i64 %add170, %add197
  %cmp199 = icmp ult i64 %add198, %add197
  %conv200 = zext i1 %cmp199 to i64
  %add201 = add nuw nsw i64 %conv200, %conv172
  %23 = load i64, i64* %arrayidx130, align 8, !tbaa !13
  %24 = load i64, i64* %arrayidx21, align 8, !tbaa !13
  %conv.i766 = zext i64 %23 to i128
  %conv1.i767 = zext i64 %24 to i128
  %mul.i768 = mul nuw i128 %conv1.i767, %conv.i766
  %shr.i769 = lshr i128 %mul.i768, 64
  %conv.i770 = trunc i128 %shr.i769 to i64
  %conv.i771 = trunc i128 %mul.i768 to i64
  %add221 = add i64 %add193, %conv.i771
  %cmp222 = icmp ult i64 %add221, %conv.i771
  %25 = zext i1 %cmp222 to i64
  %add225 = add nuw i64 %25, %conv.i770
  %add226 = add i64 %add198, %add225
  %cmp227 = icmp ult i64 %add226, %add225
  %conv228 = zext i1 %cmp227 to i64
  %add229 = add nuw nsw i64 %add201, %conv228
  %arrayidx244 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %a, i64 0, i32 0, i64 3
  %26 = load i64, i64* %arrayidx244, align 8, !tbaa !13
  %27 = load i64, i64* %arrayidx2, align 8, !tbaa !13
  %conv.i772 = zext i64 %26 to i128
  %conv1.i773 = zext i64 %27 to i128
  %mul.i774 = mul nuw i128 %conv1.i773, %conv.i772
  %shr.i775 = lshr i128 %mul.i774, 64
  %conv.i776 = trunc i128 %shr.i775 to i64
  %conv.i777 = trunc i128 %mul.i774 to i64
  %add249 = add i64 %add221, %conv.i777
  %cmp250 = icmp ult i64 %add249, %conv.i777
  %28 = zext i1 %cmp250 to i64
  %add253 = add nuw i64 %28, %conv.i776
  %add254 = add i64 %add253, %add226
  %cmp255 = icmp ult i64 %add254, %add253
  %conv256 = zext i1 %cmp255 to i64
  %add257 = add nuw nsw i64 %add229, %conv256
  %arrayidx268 = getelementptr inbounds i64, i64* %l, i64 3
  store i64 %add249, i64* %arrayidx268, align 8, !tbaa !13
  %29 = load i64, i64* %arrayidx44, align 8, !tbaa !13
  %30 = load i64, i64* %arrayidx162, align 8, !tbaa !13
  %conv.i778 = zext i64 %29 to i128
  %conv1.i779 = zext i64 %30 to i128
  %mul.i780 = mul nuw i128 %conv1.i779, %conv.i778
  %shr.i781 = lshr i128 %mul.i780, 64
  %conv.i782 = trunc i128 %shr.i781 to i64
  %conv.i783 = trunc i128 %mul.i780 to i64
  %add279 = add i64 %add254, %conv.i783
  %cmp280 = icmp ult i64 %add279, %conv.i783
  %31 = zext i1 %cmp280 to i64
  %add283 = add nuw i64 %31, %conv.i782
  %add284 = add i64 %add257, %add283
  %cmp285 = icmp ult i64 %add284, %add283
  %conv286 = zext i1 %cmp285 to i64
  %32 = load i64, i64* %arrayidx130, align 8, !tbaa !13
  %33 = load i64, i64* %arrayidx76, align 8, !tbaa !13
  %conv.i784 = zext i64 %32 to i128
  %conv1.i785 = zext i64 %33 to i128
  %mul.i786 = mul nuw i128 %conv1.i785, %conv.i784
  %shr.i787 = lshr i128 %mul.i786, 64
  %conv.i788 = trunc i128 %shr.i787 to i64
  %conv.i789 = trunc i128 %mul.i786 to i64
  %add307 = add i64 %add279, %conv.i789
  %cmp308 = icmp ult i64 %add307, %conv.i789
  %34 = zext i1 %cmp308 to i64
  %add311 = add nuw i64 %34, %conv.i788
  %add312 = add i64 %add284, %add311
  %cmp313 = icmp ult i64 %add312, %add311
  %conv314 = zext i1 %cmp313 to i64
  %add315 = add nuw nsw i64 %conv314, %conv286
  %35 = load i64, i64* %arrayidx244, align 8, !tbaa !13
  %36 = load i64, i64* %arrayidx21, align 8, !tbaa !13
  %conv.i790 = zext i64 %35 to i128
  %conv1.i791 = zext i64 %36 to i128
  %mul.i792 = mul nuw i128 %conv1.i791, %conv.i790
  %shr.i793 = lshr i128 %mul.i792, 64
  %conv.i794 = trunc i128 %shr.i793 to i64
  %conv.i795 = trunc i128 %mul.i792 to i64
  %add335 = add i64 %add307, %conv.i795
  %cmp336 = icmp ult i64 %add335, %conv.i795
  %37 = zext i1 %cmp336 to i64
  %add339 = add nuw i64 %37, %conv.i794
  %add340 = add i64 %add312, %add339
  %cmp341 = icmp ult i64 %add340, %add339
  %conv342 = zext i1 %cmp341 to i64
  %add343 = add nuw nsw i64 %add315, %conv342
  %arrayidx354 = getelementptr inbounds i64, i64* %l, i64 4
  store i64 %add335, i64* %arrayidx354, align 8, !tbaa !13
  %38 = load i64, i64* %arrayidx130, align 8, !tbaa !13
  %39 = load i64, i64* %arrayidx162, align 8, !tbaa !13
  %conv.i796 = zext i64 %38 to i128
  %conv1.i797 = zext i64 %39 to i128
  %mul.i798 = mul nuw i128 %conv1.i797, %conv.i796
  %shr.i799 = lshr i128 %mul.i798, 64
  %conv.i800 = trunc i128 %shr.i799 to i64
  %conv.i801 = trunc i128 %mul.i798 to i64
  %add365 = add i64 %add340, %conv.i801
  %cmp366 = icmp ult i64 %add365, %conv.i801
  %40 = zext i1 %cmp366 to i64
  %add369 = add nuw i64 %40, %conv.i800
  %add370 = add i64 %add343, %add369
  %cmp371 = icmp ult i64 %add370, %add369
  %conv372 = zext i1 %cmp371 to i64
  %41 = load i64, i64* %arrayidx244, align 8, !tbaa !13
  %42 = load i64, i64* %arrayidx76, align 8, !tbaa !13
  %conv.i802 = zext i64 %41 to i128
  %conv1.i803 = zext i64 %42 to i128
  %mul.i804 = mul nuw i128 %conv1.i803, %conv.i802
  %shr.i805 = lshr i128 %mul.i804, 64
  %conv.i806 = trunc i128 %shr.i805 to i64
  %conv.i807 = trunc i128 %mul.i804 to i64
  %add393 = add i64 %add365, %conv.i807
  %cmp394 = icmp ult i64 %add393, %conv.i807
  %43 = zext i1 %cmp394 to i64
  %add397 = add nuw i64 %43, %conv.i806
  %add398 = add i64 %add370, %add397
  %cmp399 = icmp ult i64 %add398, %add397
  %conv400 = zext i1 %cmp399 to i64
  %arrayidx412 = getelementptr inbounds i64, i64* %l, i64 5
  store i64 %add393, i64* %arrayidx412, align 8, !tbaa !13
  %44 = load i64, i64* %arrayidx244, align 8, !tbaa !13
  %45 = load i64, i64* %arrayidx162, align 8, !tbaa !13
  %conv.i808 = zext i64 %44 to i128
  %conv1.i809 = zext i64 %45 to i128
  %mul.i810 = mul nuw i128 %conv1.i809, %conv.i808
  %shr.i811 = lshr i128 %mul.i810, 64
  %conv.i812 = trunc i128 %shr.i811 to i64
  %conv.i813 = trunc i128 %mul.i810 to i64
  %add423 = add i64 %add398, %conv.i813
  %cmp424 = icmp ult i64 %add423, %conv.i813
  %46 = zext i1 %cmp424 to i64
  %add427 = add nuw i64 %conv372, %conv.i812
  %add401 = add i64 %add427, %conv400
  %add428 = add i64 %add401, %46
  %arrayidx434 = getelementptr inbounds i64, i64* %l, i64 6
  store i64 %add423, i64* %arrayidx434, align 8, !tbaa !13
  %arrayidx445 = getelementptr inbounds i64, i64* %l, i64 7
  store i64 %add428, i64* %arrayidx445, align 8, !tbaa !13
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc i32 @secp256k1_ecmult_wnaf(i32* nocapture noundef writeonly %wnaf, %struct.secp256k1_scalar* nocapture noundef readonly %a, i32 noundef %w) unnamed_addr #9 {
entry:
  %s = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_scalar* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %1 = bitcast i32* %wnaf to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(516) %1, i8 0, i64 516, i1 false)
  %2 = bitcast %struct.secp256k1_scalar* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %0, i8* noundef nonnull align 8 dereferenceable(32) %2, i64 32, i1 false), !tbaa.struct !46
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 3
  %3 = load i64, i64* %arrayidx.i, align 8, !tbaa !13
  %tobool.not = icmp sgt i64 %3, -1
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 0
  %4 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 1
  %5 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 2
  %6 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %neg.i = xor i64 %4, -1
  %conv.i40.i = zext i64 %neg.i to i128
  %add.i.i = add nuw nsw i128 %conv.i40.i, 13822214165235122498
  %conv.i41.i = trunc i128 %add.i.i to i64
  store i64 %conv.i41.i, i64* %arrayidx.i.i, align 8, !tbaa !13
  %shr.i.i = lshr i128 %add.i.i, 64
  %neg7.i = xor i64 %5, -1
  %conv.i42.i = zext i64 %neg7.i to i128
  %add.i43.i = add nuw nsw i128 %conv.i42.i, 13451932020343611451
  %add.i44.i = add nuw nsw i128 %add.i43.i, %shr.i.i
  %conv.i45.i = trunc i128 %add.i44.i to i64
  store i64 %conv.i45.i, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %shr.i46.i = lshr i128 %add.i44.i, 64
  %neg14.i = xor i64 %6, -1
  %conv.i47.i = zext i64 %neg14.i to i128
  %add.i48.i = add nuw nsw i128 %conv.i47.i, 18446744073709551614
  %add.i49.i = add nuw nsw i128 %add.i48.i, %shr.i46.i
  %conv.i50.i = trunc i128 %add.i49.i to i64
  store i64 %conv.i50.i, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %shr.i51.i = lshr i128 %add.i49.i, 64
  %7 = trunc i128 %shr.i51.i to i64
  %8 = sub nsw i64 -2, %3
  %conv.i55.i = add nsw i64 %8, %7
  store i64 %conv.i55.i, i64* %arrayidx.i, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %sign.0 = phi i32 [ -1, %if.then ], [ 1, %entry ]
  %sub37 = add nsw i32 %w, -1
  br label %while.body

while.body:                                       ; preds = %if.end, %cleanup
  %last_set_bit.013 = phi i32 [ -1, %if.end ], [ %last_set_bit.1, %cleanup ]
  %carry.012 = phi i32 [ 0, %if.end ], [ %carry.1, %cleanup ]
  %bit.011 = phi i32 [ 0, %if.end ], [ %bit.1, %cleanup ]
  %shr1.i = lshr i32 %bit.011, 6
  %idxprom.i = zext i32 %shr1.i to i64
  %arrayidx.i2 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 %idxprom.i
  %9 = load i64, i64* %arrayidx.i2, align 8, !tbaa !13
  %and.i3 = and i32 %bit.011, 63
  %sh_prom.i = zext i32 %and.i3 to i64
  %shr3.i4 = lshr i64 %9, %sh_prom.i
  %10 = trunc i64 %shr3.i4 to i32
  %conv7.i5 = and i32 %10, 1
  %cmp27 = icmp eq i32 %conv7.i5, %carry.012
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.body
  %inc = add nsw i32 %bit.011, 1
  br label %cleanup, !llvm.loop !89

if.end30:                                         ; preds = %while.body
  %sub = sub nsw i32 129, %bit.011
  %cmp31 = icmp slt i32 %sub, %w
  %spec.select = select i1 %cmp31, i32 %sub, i32 %w
  %add.i = add i32 %spec.select, %bit.011
  %sub.i = add i32 %add.i, -1
  %shr.i = lshr i32 %sub.i, 6
  %cmp7.i = icmp eq i32 %shr.i, %shr1.i
  br i1 %cmp7.i, label %secp256k1_scalar_get_bits_var.exit, label %do.body9.i

do.body9.i:                                       ; preds = %if.end30
  %add11.i = add nuw nsw i32 %shr1.i, 1
  %idxprom20.i = zext i32 %add11.i to i64
  %arrayidx21.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %s, i64 0, i32 0, i64 %idxprom20.i
  %11 = load i64, i64* %arrayidx21.i, align 8, !tbaa !13
  %sub23.i = sub nuw nsw i32 64, %and.i3
  %sh_prom24.i = zext i32 %sub23.i to i64
  %shl.i = shl i64 %11, %sh_prom24.i
  %or.i = or i64 %shl.i, %shr3.i4
  br label %secp256k1_scalar_get_bits_var.exit

secp256k1_scalar_get_bits_var.exit:               ; preds = %if.end30, %do.body9.i
  %or.sink.i = phi i64 [ %or.i, %do.body9.i ], [ %shr3.i4, %if.end30 ]
  %sh_prom25.i = zext i32 %spec.select to i64
  %notmask.i = shl nsw i64 -1, %sh_prom25.i
  %sub27.i = xor i64 %notmask.i, -1
  %and28.i = and i64 %or.sink.i, %sub27.i
  %retval.0.i = trunc i64 %and28.i to i32
  %add = add i32 %carry.012, %retval.0.i
  %shr1 = lshr i32 %add, %sub37
  %and = and i32 %shr1, 1
  %shl = shl nuw i32 %and, %w
  %sub38 = sub nsw i32 %add, %shl
  %mul39 = mul nsw i32 %sub38, %sign.0
  %idxprom = sext i32 %bit.011 to i64
  %arrayidx = getelementptr inbounds i32, i32* %wnaf, i64 %idxprom
  store i32 %mul39, i32* %arrayidx, align 4, !tbaa !3
  br label %cleanup

cleanup:                                          ; preds = %secp256k1_scalar_get_bits_var.exit, %if.then29
  %bit.1 = phi i32 [ %inc, %if.then29 ], [ %add.i, %secp256k1_scalar_get_bits_var.exit ]
  %carry.1 = phi i32 [ %carry.012, %if.then29 ], [ %and, %secp256k1_scalar_get_bits_var.exit ]
  %last_set_bit.1 = phi i32 [ %last_set_bit.013, %if.then29 ], [ %bit.011, %secp256k1_scalar_get_bits_var.exit ]
  %cmp24 = icmp slt i32 %bit.1, 129
  br i1 %cmp24, label %while.body, label %while.end

while.end:                                        ; preds = %cleanup
  %add42 = add nsw i32 %last_set_bit.1, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %add42
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_gej_double_var(%struct.secp256k1_gej* nocapture noundef %r, %struct.secp256k1_gej* nocapture noundef readonly %a, %struct.secp256k1_fe* noundef %rzr) unnamed_addr #1 {
entry:
  %l.i = alloca %struct.secp256k1_fe, align 8
  %s.i = alloca %struct.secp256k1_fe, align 8
  %t.i = alloca %struct.secp256k1_fe, align 16
  %infinity = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 3
  %0 = load i32, i32* %infinity, align 8, !tbaa !65
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end2, label %if.then

if.then:                                          ; preds = %entry
  %infinity.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 1, i32* %infinity.i, align 8, !tbaa !65
  %1 = bitcast %struct.secp256k1_gej* %r to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(120) %1, i8 0, i64 120, i1 false) #19
  %cmp.not = icmp eq %struct.secp256k1_fe* %rzr, null
  br i1 %cmp.not, label %return, label %if.then1

if.then1:                                         ; preds = %if.then
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 0
  store i64 1, i64* %arrayidx.i, align 8, !tbaa !13
  %arrayidx9.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 1
  %2 = bitcast i64* %arrayidx9.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2, i8 0, i64 32, i1 false) #19
  br label %return

if.end2:                                          ; preds = %entry
  %cmp3.not = icmp eq %struct.secp256k1_fe* %rzr, null
  br i1 %cmp3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end2
  %y = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1
  %3 = bitcast %struct.secp256k1_fe* %rzr to i8*
  %4 = bitcast %struct.secp256k1_fe* %y to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %3, i8* noundef nonnull align 8 dereferenceable(40) %4, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i13 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 0
  %5 = load i64, i64* %arrayidx.i13, align 8, !tbaa !13
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 1
  %6 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 2
  %7 = load i64, i64* %arrayidx4.i, align 8, !tbaa !13
  %arrayidx6.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 3
  %8 = load i64, i64* %arrayidx6.i, align 8, !tbaa !13
  %arrayidx8.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 4
  %9 = load i64, i64* %arrayidx8.i, align 8, !tbaa !13
  %shr.i = lshr i64 %9, 48
  %and.i = and i64 %9, 281474976710655
  %mul.i = mul nuw nsw i64 %shr.i, 4294968273
  %add.i = add i64 %mul.i, %5
  %shr9.i = lshr i64 %add.i, 52
  %add10.i = add i64 %shr9.i, %6
  %and11.i = and i64 %add.i, 4503599627370495
  %shr12.i = lshr i64 %add10.i, 52
  %add13.i = add i64 %shr12.i, %7
  %and14.i = and i64 %add10.i, 4503599627370495
  %shr15.i = lshr i64 %add13.i, 52
  %add16.i = add i64 %shr15.i, %8
  %and17.i = and i64 %add13.i, 4503599627370495
  %shr18.i = lshr i64 %add16.i, 52
  %add19.i = add nuw nsw i64 %shr18.i, %and.i
  %and20.i = and i64 %add16.i, 4503599627370495
  store i64 %and11.i, i64* %arrayidx.i13, align 8, !tbaa !13
  store i64 %and14.i, i64* %arrayidx2.i, align 8, !tbaa !13
  store i64 %and17.i, i64* %arrayidx4.i, align 8, !tbaa !13
  store i64 %and20.i, i64* %arrayidx6.i, align 8, !tbaa !13
  store i64 %add19.i, i64* %arrayidx8.i, align 8, !tbaa !13
  %.pre = load i32, i32* %infinity, align 8, !tbaa !65
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end2
  %10 = phi i32 [ %.pre, %if.then4 ], [ 0, %if.end2 ]
  %11 = bitcast %struct.secp256k1_fe* %l.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #19
  %12 = bitcast %struct.secp256k1_fe* %s.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #19
  %13 = bitcast %struct.secp256k1_fe* %t.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #19
  %infinity1.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 %10, i32* %infinity1.i, align 8, !tbaa !65
  %z.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2
  %z2.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2
  %y.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1
  tail call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z.i, %struct.secp256k1_fe* noundef nonnull %z2.i, %struct.secp256k1_fe* noundef nonnull %y.i) #19
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %s.i, %struct.secp256k1_fe* noundef nonnull %y.i) #19
  %x.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 0
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %l.i, %struct.secp256k1_fe* noundef %x.i) #19
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %l.i, i64 0, i32 0, i64 0
  %14 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %mul.i.i = mul i64 %14, 3
  %arrayidx3.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %l.i, i64 0, i32 0, i64 1
  %15 = load i64, i64* %arrayidx3.i.i, align 8, !tbaa !13
  %mul4.i.i = mul i64 %15, 3
  %arrayidx7.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %l.i, i64 0, i32 0, i64 2
  %16 = load i64, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %mul8.i.i = mul i64 %16, 3
  %arrayidx11.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %l.i, i64 0, i32 0, i64 3
  %17 = load i64, i64* %arrayidx11.i.i, align 8, !tbaa !13
  %mul12.i.i = mul i64 %17, 3
  %arrayidx15.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %l.i, i64 0, i32 0, i64 4
  %18 = load i64, i64* %arrayidx15.i.i, align 8, !tbaa !13
  %mul16.i.i = mul i64 %18, 3
  %and.i.i = and i64 %mul.i.i, 1
  %sub.i.i = sub nsw i64 0, %and.i.i
  %shr.i.i = lshr i64 %sub.i.i, 12
  %and9.i.i = and i64 %shr.i.i, 4503595332402223
  %add.i.i = add i64 %and9.i.i, %mul.i.i
  %add10.i.i = add i64 %shr.i.i, %mul4.i.i
  %add11.i.i = add i64 %mul8.i.i, %shr.i.i
  %add12.i.i = add i64 %mul12.i.i, %shr.i.i
  %shr13.i.i = lshr i64 %sub.i.i, 16
  %add14.i.i = add i64 %mul16.i.i, %shr13.i.i
  %shr16.i.i = lshr i64 %add.i.i, 1
  %and17.i.i = shl i64 %add10.i.i, 51
  %shl.i.i = and i64 %and17.i.i, 2251799813685248
  %add18.i.i = add nuw i64 %shr16.i.i, %shl.i.i
  store i64 %add18.i.i, i64* %arrayidx.i.i, align 8, !tbaa !13
  %shr21.i.i = lshr i64 %add10.i.i, 1
  %and22.i.i = shl i64 %add11.i.i, 51
  %shl23.i.i = and i64 %and22.i.i, 2251799813685248
  %add24.i.i = add nuw i64 %shl23.i.i, %shr21.i.i
  store i64 %add24.i.i, i64* %arrayidx3.i.i, align 8, !tbaa !13
  %shr27.i.i = lshr i64 %add11.i.i, 1
  %and28.i.i = shl i64 %add12.i.i, 51
  %shl29.i.i = and i64 %and28.i.i, 2251799813685248
  %add30.i.i = add nuw i64 %shl29.i.i, %shr27.i.i
  store i64 %add30.i.i, i64* %arrayidx7.i.i, align 8, !tbaa !13
  %shr33.i.i = lshr i64 %add12.i.i, 1
  %and34.i.i = shl i64 %add14.i.i, 51
  %shl35.i.i = and i64 %and34.i.i, 2251799813685248
  %add36.i.i = add nuw i64 %shl35.i.i, %shr33.i.i
  store i64 %add36.i.i, i64* %arrayidx11.i.i, align 8, !tbaa !13
  %shr39.i.i = lshr i64 %add14.i.i, 1
  store i64 %shr39.i.i, i64* %arrayidx15.i.i, align 8, !tbaa !13
  %arrayidx.i28.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 0
  %19 = load i64, i64* %arrayidx.i28.i, align 8, !tbaa !13
  %sub.i29.i = sub i64 18014381329608892, %19
  %arrayidx2.i30.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t.i, i64 0, i32 0, i64 0
  store i64 %sub.i29.i, i64* %arrayidx2.i30.i, align 16, !tbaa !13
  %arrayidx7.i31.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 1
  %20 = load i64, i64* %arrayidx7.i31.i, align 8, !tbaa !13
  %sub8.i.i = sub i64 18014398509481980, %20
  %arrayidx10.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t.i, i64 0, i32 0, i64 1
  store i64 %sub8.i.i, i64* %arrayidx10.i.i, align 8, !tbaa !13
  %arrayidx15.i32.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 2
  %21 = load i64, i64* %arrayidx15.i32.i, align 8, !tbaa !13
  %sub16.i.i = sub i64 18014398509481980, %21
  %arrayidx18.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t.i, i64 0, i32 0, i64 2
  store i64 %sub16.i.i, i64* %arrayidx18.i.i, align 16, !tbaa !13
  %arrayidx23.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 3
  %22 = load i64, i64* %arrayidx23.i.i, align 8, !tbaa !13
  %sub24.i.i = sub i64 18014398509481980, %22
  %arrayidx26.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t.i, i64 0, i32 0, i64 3
  store i64 %sub24.i.i, i64* %arrayidx26.i.i, align 8, !tbaa !13
  %arrayidx31.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s.i, i64 0, i32 0, i64 4
  %23 = load i64, i64* %arrayidx31.i.i, align 8, !tbaa !13
  %sub32.i.i = sub i64 1125899906842620, %23
  %arrayidx34.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t.i, i64 0, i32 0, i64 4
  store i64 %sub32.i.i, i64* %arrayidx34.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %t.i, %struct.secp256k1_fe* noundef nonnull %t.i, %struct.secp256k1_fe* noundef %x.i) #19
  %x5.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef %x5.i, %struct.secp256k1_fe* noundef nonnull %l.i) #19
  %arrayidx2.i34.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 0
  %24 = bitcast %struct.secp256k1_fe* %t.i to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 16, !tbaa !13
  %arrayidx6.i37.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 1
  %26 = bitcast %struct.secp256k1_gej* %r to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8, !tbaa !13
  %arrayidx11.i38.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 2
  %28 = bitcast i64* %arrayidx18.i.i to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 16, !tbaa !13
  %arrayidx16.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 3
  %30 = bitcast i64* %arrayidx11.i38.i to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8, !tbaa !13
  %32 = load i64, i64* %arrayidx34.i.i, align 16, !tbaa !13
  %arrayidx21.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 4
  %33 = load i64, i64* %arrayidx21.i.i, align 8, !tbaa !13
  %34 = shl <2 x i64> %25, <i64 1, i64 1>
  %35 = add <2 x i64> %27, %34
  %36 = extractelement <2 x i64> %35, i64 0
  store i64 %36, i64* %arrayidx2.i34.i, align 8, !tbaa !13
  %37 = extractelement <2 x i64> %35, i64 1
  store i64 %37, i64* %arrayidx6.i37.i, align 8, !tbaa !13
  %38 = shl <2 x i64> %29, <i64 1, i64 1>
  %39 = add <2 x i64> %31, %38
  %40 = extractelement <2 x i64> %39, i64 0
  store i64 %40, i64* %arrayidx11.i38.i, align 8, !tbaa !13
  %41 = extractelement <2 x i64> %39, i64 1
  store i64 %41, i64* %arrayidx16.i.i, align 8, !tbaa !13
  %reass.add103.i = shl i64 %32, 1
  %add22.i54.i = add i64 %33, %reass.add103.i
  store i64 %add22.i54.i, i64* %arrayidx21.i.i, align 8, !tbaa !13
  %mul.i.i.i = shl i64 %19, 1
  %conv.i.i.i.i = zext i64 %mul.i.i.i to i128
  %conv1.i.i.i.i = zext i64 %22 to i128
  %mul.i.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv.i.i.i.i
  %mul17.i.i.i = shl i64 %20, 1
  %conv.i215.i.i.i = zext i64 %mul17.i.i.i to i128
  %conv1.i216.i.i.i = zext i64 %21 to i128
  %mul.i217.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv.i215.i.i.i
  %add.i.i.i.i = add i128 %mul.i.i.i.i, %mul.i217.i.i.i
  %conv.i218.i.i.i = zext i64 %23 to i128
  %mul.i220.i.i.i = mul nuw i128 %conv.i218.i.i.i, %conv.i218.i.i.i
  %conv1.i222.i.i.i = and i128 %mul.i220.i.i.i, 18446744073709551615
  %mul.i223.i.i.i = mul nuw nsw i128 %conv1.i222.i.i.i, 68719492368
  %add.i224.i.i.i = add i128 %add.i.i.i.i, %mul.i223.i.i.i
  %shr.i.i.i.i = lshr i128 %mul.i220.i.i.i, 64
  %shr.i226.i.i.i = lshr i128 %add.i224.i.i.i, 52
  %mul37.i.i.i = shl i64 %23, 1
  %conv.i227.i.i.i = zext i64 %19 to i128
  %conv1.i228.i.i.i = zext i64 %mul37.i.i.i to i128
  %mul.i229.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv.i227.i.i.i
  %mul.i233.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv.i215.i.i.i
  %mul.i237.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv1.i216.i.i.i
  %mul.i241.i.i.i = mul nuw nsw i128 %shr.i.i.i.i, 281475040739328
  %add.i230.i.i.i = add i128 %mul.i233.i.i.i, %mul.i237.i.i.i
  %add.i234.i.i.i = add i128 %add.i230.i.i.i, %mul.i229.i.i.i
  %add.i238.i.i.i = add i128 %add.i234.i.i.i, %mul.i241.i.i.i
  %add.i242.i.i.i = add i128 %add.i238.i.i.i, %shr.i226.i.i.i
  %conv.i243.i.i.i = trunc i128 %add.i242.i.i.i to i64
  %shr.i244.i.i.i = lshr i128 %add.i242.i.i.i, 52
  %and47.i.i.i = lshr i64 %conv.i243.i.i.i, 48
  %42 = and i64 %and47.i.i.i, 15
  %and54.i.i.i = and i64 %conv.i243.i.i.i, 281474976710655
  %mul.i247.i.i.i = mul nuw i128 %conv.i227.i.i.i, %conv.i227.i.i.i
  %conv.i248.i.i.i = zext i64 %20 to i128
  %mul.i250.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv.i248.i.i.i
  %mul64.i.i.i = shl i64 %21, 1
  %conv.i252.i.i.i = zext i64 %mul64.i.i.i to i128
  %mul.i254.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv.i252.i.i.i
  %add.i251.i.i.i = add i128 %mul.i250.i.i.i, %mul.i254.i.i.i
  %add.i255.i.i.i = add i128 %add.i251.i.i.i, %shr.i244.i.i.i
  %conv.i256.i.i.i = trunc i128 %add.i255.i.i.i to i64
  %shr.i257.i.i.i = lshr i128 %add.i255.i.i.i, 52
  %and69.i.i.i = shl i64 %conv.i256.i.i.i, 4
  %shl.i.i.i = and i64 %and69.i.i.i, 72057594037927920
  %or.i.i.i = or i64 %shl.i.i.i, %42
  %conv.i258.i.i.i = zext i64 %or.i.i.i to i128
  %mul.i259.i.i.i = mul nuw nsw i128 %conv.i258.i.i.i, 4294968273
  %add.i260.i.i.i = add i128 %mul.i259.i.i.i, %mul.i247.i.i.i
  %shr.i262.i.i.i = lshr i128 %add.i260.i.i.i, 52
  %mul.i265.i.i.i = mul nuw i128 %conv.i248.i.i.i, %conv.i.i.i.i
  %mul.i269.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv1.i216.i.i.i
  %mul.i273.i.i.i = mul nuw i128 %conv1.i.i.i.i, %conv1.i.i.i.i
  %add.i270.i.i.i = add i128 %mul.i269.i.i.i, %mul.i273.i.i.i
  %add.i274.i.i.i = add i128 %add.i270.i.i.i, %shr.i257.i.i.i
  %conv.i276.i.i.i = and i128 %add.i274.i.i.i, 4503599627370495
  %mul.i277.i.i.i = mul nuw nsw i128 %conv.i276.i.i.i, 68719492368
  %add.i266.i.i.i = add i128 %mul.i277.i.i.i, %mul.i265.i.i.i
  %add.i278.i.i.i = add i128 %add.i266.i.i.i, %shr.i262.i.i.i
  %shr.i279.i.i.i = lshr i128 %add.i274.i.i.i, 52
  %43 = insertelement <2 x i128> poison, i128 %add.i260.i.i.i, i64 0
  %44 = insertelement <2 x i128> %43, i128 %add.i278.i.i.i, i64 1
  %45 = trunc <2 x i128> %44 to <2 x i64>
  %46 = and <2 x i64> %45, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i.i = lshr i128 %add.i278.i.i.i, 52
  %mul.i284.i.i.i = mul nuw i128 %conv1.i216.i.i.i, %conv.i.i.i.i
  %mul.i288.i.i.i = mul nuw i128 %conv.i248.i.i.i, %conv.i248.i.i.i
  %mul.i292.i.i.i = mul nuw i128 %conv1.i228.i.i.i, %conv1.i.i.i.i
  %add.i293.i.i.i = add i128 %shr.i279.i.i.i, %mul.i292.i.i.i
  %conv1.i295.i.i.i = and i128 %add.i293.i.i.i, 18446744073709551615
  %mul.i296.i.i.i = mul nuw nsw i128 %conv1.i295.i.i.i, 68719492368
  %add.i285.i.i.i = add i128 %mul.i284.i.i.i, %mul.i288.i.i.i
  %add.i289.i.i.i = add i128 %add.i285.i.i.i, %mul.i296.i.i.i
  %add.i297.i.i.i = add i128 %add.i289.i.i.i, %shr.i281.i.i.i
  %shr.i298.i.i.i = lshr i128 %add.i293.i.i.i, 64
  %shr.i300.i.i.i = lshr i128 %add.i297.i.i.i, 52
  %mul.i303.i.i.i = mul nuw nsw i128 %shr.i298.i.i.i, 281475040739328
  %conv.i305.i.i.i = and i128 %add.i224.i.i.i, 4503599627370494
  %add.i304.i.i.i = add nuw nsw i128 %mul.i303.i.i.i, %conv.i305.i.i.i
  %add.i306.i.i.i = add nuw nsw i128 %add.i304.i.i.i, %shr.i300.i.i.i
  %47 = insertelement <2 x i128> poison, i128 %add.i297.i.i.i, i64 0
  %48 = insertelement <2 x i128> %47, i128 %add.i306.i.i.i, i64 1
  %49 = trunc <2 x i128> %48 to <2 x i64>
  %50 = and <2 x i64> %49, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i.i = lshr i128 %add.i306.i.i.i, 52
  %conv.i309.i.i.i = trunc i128 %shr.i308.i.i.i to i64
  %51 = add <2 x i64> %35, %25
  %52 = bitcast %struct.secp256k1_fe* %t.i to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %52, align 16, !tbaa !13
  %53 = add <2 x i64> %39, %29
  %54 = bitcast i64* %arrayidx18.i.i to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %54, align 16, !tbaa !13
  %add22.i69.i = add i64 %add22.i54.i, %32
  store i64 %add22.i69.i, i64* %arrayidx34.i.i, align 16, !tbaa !13
  %y9.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y9.i, %struct.secp256k1_fe* noundef nonnull %t.i, %struct.secp256k1_fe* noundef nonnull %l.i) #19
  %55 = bitcast %struct.secp256k1_fe* %y9.i to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8, !tbaa !13
  %arrayidx11.i77.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 2
  %57 = bitcast i64* %arrayidx11.i77.i to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !tbaa !13
  %arrayidx21.i83.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 4
  %59 = load i64, i64* %arrayidx21.i83.i, align 8, !tbaa !13
  %60 = add <2 x i64> %46, %56
  %61 = sub <2 x i64> <i64 27021571994413338, i64 27021597764222970>, %60
  %62 = bitcast %struct.secp256k1_fe* %y9.i to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %62, align 8, !tbaa !13
  %63 = add <2 x i64> %50, %58
  %64 = sub <2 x i64> <i64 27021597764222970, i64 27021597764222970>, %63
  %65 = bitcast i64* %arrayidx11.i77.i to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8, !tbaa !13
  %66 = add nuw nsw i64 %and54.i.i.i, %conv.i309.i.i.i
  %67 = add i64 %66, %59
  %sub32.i98.i = sub i64 1688849860263930, %67
  store i64 %sub32.i98.i, i64* %arrayidx21.i83.i, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #19
  br label %return

return:                                           ; preds = %if.then, %if.then1, %if.end5
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_gej_add_ge_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* nocapture noundef readonly %a, %struct.secp256k1_ge* nocapture noundef readonly %b, %struct.secp256k1_fe* noundef %rzr) unnamed_addr #1 {
entry:
  %z12 = alloca %struct.secp256k1_fe, align 8
  %u1 = alloca %struct.secp256k1_fe, align 8
  %u2 = alloca %struct.secp256k1_fe, align 8
  %s1 = alloca %struct.secp256k1_fe, align 8
  %s2 = alloca %struct.secp256k1_fe, align 8
  %h = alloca %struct.secp256k1_fe, align 8
  %i = alloca %struct.secp256k1_fe, align 8
  %h2 = alloca %struct.secp256k1_fe, align 16
  %h3 = alloca %struct.secp256k1_fe, align 16
  %t = alloca %struct.secp256k1_fe, align 16
  %0 = bitcast %struct.secp256k1_fe* %z12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_fe* %u1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #19
  %2 = bitcast %struct.secp256k1_fe* %u2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #19
  %3 = bitcast %struct.secp256k1_fe* %s1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #19
  %4 = bitcast %struct.secp256k1_fe* %s2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  %5 = bitcast %struct.secp256k1_fe* %h to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #19
  %6 = bitcast %struct.secp256k1_fe* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #19
  %7 = bitcast %struct.secp256k1_fe* %h2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #19
  %8 = bitcast %struct.secp256k1_fe* %h3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #19
  %9 = bitcast %struct.secp256k1_fe* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #19
  %infinity = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 3
  %10 = load i32, i32* %infinity, align 8, !tbaa !65
  %tobool.not = icmp eq i32 %10, 0
  %infinity1 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 2
  %11 = load i32, i32* %infinity1, align 8, !tbaa !37
  br i1 %tobool.not, label %if.end, label %do.body

do.body:                                          ; preds = %entry
  %infinity1.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 %11, i32* %infinity1.i, align 8, !tbaa !65
  %12 = bitcast %struct.secp256k1_gej* %r to i8*
  %13 = bitcast %struct.secp256k1_ge* %b to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %12, i8* noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false) #19, !tbaa.struct !18
  %y.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1
  %y3.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1
  %14 = bitcast %struct.secp256k1_fe* %y.i to i8*
  %15 = bitcast %struct.secp256k1_fe* %y3.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %14, i8* noundef nonnull align 8 dereferenceable(40) %15, i64 40, i1 false) #19, !tbaa.struct !18
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 0
  store i64 1, i64* %arrayidx.i.i, align 8, !tbaa !13
  %arrayidx9.i.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 1
  %16 = bitcast i64* %arrayidx9.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %16, i8 0, i64 32, i1 false) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool2.not = icmp eq i32 %11, 0
  br i1 %tobool2.not, label %if.end8, label %if.then3

if.then3:                                         ; preds = %if.end
  %cmp4.not = icmp eq %struct.secp256k1_fe* %rzr, null
  br i1 %cmp4.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.then3
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 0
  store i64 1, i64* %arrayidx.i, align 8, !tbaa !13
  %arrayidx9.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %rzr, i64 0, i32 0, i64 1
  %17 = bitcast i64* %arrayidx9.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %17, i8 0, i64 32, i1 false) #19
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.then3
  %18 = bitcast %struct.secp256k1_gej* %r to i8*
  %19 = bitcast %struct.secp256k1_gej* %a to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128) %18, i8* noundef nonnull align 8 dereferenceable(128) %19, i64 128, i1 false), !tbaa.struct !67
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %z = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %z12, %struct.secp256k1_fe* noundef nonnull %z)
  %20 = bitcast %struct.secp256k1_gej* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %1, i8* noundef nonnull align 8 dereferenceable(40) %20, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i75 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 0
  %21 = load i64, i64* %arrayidx.i75, align 8, !tbaa !13
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 1
  %22 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 2
  %23 = load i64, i64* %arrayidx4.i, align 8, !tbaa !13
  %arrayidx6.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 3
  %24 = load i64, i64* %arrayidx6.i, align 8, !tbaa !13
  %arrayidx8.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 4
  %25 = load i64, i64* %arrayidx8.i, align 8, !tbaa !13
  %shr.i = lshr i64 %25, 48
  %and.i = and i64 %25, 281474976710655
  %mul.i = mul nuw nsw i64 %shr.i, 4294968273
  %add.i = add i64 %mul.i, %21
  %shr9.i = lshr i64 %add.i, 52
  %add10.i = add i64 %shr9.i, %22
  %and11.i = and i64 %add.i, 4503599627370495
  %shr12.i = lshr i64 %add10.i, 52
  %add13.i = add i64 %shr12.i, %23
  %and14.i = and i64 %add10.i, 4503599627370495
  %shr15.i = lshr i64 %add13.i, 52
  %add16.i = add i64 %shr15.i, %24
  %and17.i = and i64 %add13.i, 4503599627370495
  %shr18.i = lshr i64 %add16.i, 52
  %add19.i = add nuw nsw i64 %shr18.i, %and.i
  %and20.i = and i64 %add16.i, 4503599627370495
  store i64 %and11.i, i64* %arrayidx.i75, align 8, !tbaa !13
  store i64 %and14.i, i64* %arrayidx2.i, align 8, !tbaa !13
  store i64 %and17.i, i64* %arrayidx4.i, align 8, !tbaa !13
  store i64 %and20.i, i64* %arrayidx6.i, align 8, !tbaa !13
  store i64 %add19.i, i64* %arrayidx8.i, align 8, !tbaa !13
  %x9 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %u2, %struct.secp256k1_fe* noundef %x9, %struct.secp256k1_fe* noundef nonnull %z12)
  %y = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1
  %26 = bitcast %struct.secp256k1_fe* %y to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %3, i8* noundef nonnull align 8 dereferenceable(40) %26, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i76 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 0
  %27 = load i64, i64* %arrayidx.i76, align 8, !tbaa !13
  %arrayidx2.i77 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 1
  %28 = load i64, i64* %arrayidx2.i77, align 8, !tbaa !13
  %arrayidx4.i78 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 2
  %29 = load i64, i64* %arrayidx4.i78, align 8, !tbaa !13
  %arrayidx6.i79 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 3
  %30 = load i64, i64* %arrayidx6.i79, align 8, !tbaa !13
  %arrayidx8.i80 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 4
  %31 = load i64, i64* %arrayidx8.i80, align 8, !tbaa !13
  %shr.i81 = lshr i64 %31, 48
  %and.i82 = and i64 %31, 281474976710655
  %mul.i83 = mul nuw nsw i64 %shr.i81, 4294968273
  %add.i84 = add i64 %mul.i83, %27
  %shr9.i85 = lshr i64 %add.i84, 52
  %add10.i86 = add i64 %shr9.i85, %28
  %and11.i87 = and i64 %add.i84, 4503599627370495
  %shr12.i88 = lshr i64 %add10.i86, 52
  %add13.i89 = add i64 %shr12.i88, %29
  %and14.i90 = and i64 %add10.i86, 4503599627370495
  %shr15.i91 = lshr i64 %add13.i89, 52
  %add16.i92 = add i64 %shr15.i91, %30
  %and17.i93 = and i64 %add13.i89, 4503599627370495
  %shr18.i94 = lshr i64 %add16.i92, 52
  %add19.i95 = add nuw nsw i64 %shr18.i94, %and.i82
  %and20.i96 = and i64 %add16.i92, 4503599627370495
  store i64 %and11.i87, i64* %arrayidx.i76, align 8, !tbaa !13
  store i64 %and14.i90, i64* %arrayidx2.i77, align 8, !tbaa !13
  store i64 %and17.i93, i64* %arrayidx4.i78, align 8, !tbaa !13
  store i64 %and20.i96, i64* %arrayidx6.i79, align 8, !tbaa !13
  store i64 %add19.i95, i64* %arrayidx8.i80, align 8, !tbaa !13
  %y10 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %y10, %struct.secp256k1_fe* noundef nonnull %z12)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %z)
  %sub.i = sub nuw nsw i64 18014381329608892, %and11.i
  %arrayidx2.i98 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 0
  %sub8.i = sub nuw nsw i64 18014398509481980, %and14.i
  %arrayidx10.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 1
  %sub16.i = sub nuw nsw i64 18014398509481980, %and17.i
  %arrayidx18.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 2
  %sub24.i = sub nuw nsw i64 18014398509481980, %and20.i
  %arrayidx26.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 3
  %sub32.i = sub nuw nsw i64 1125899906842620, %add19.i
  %arrayidx34.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 4
  %arrayidx.i99 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 0
  %32 = load i64, i64* %arrayidx.i99, align 8, !tbaa !13
  %add.i101 = add i64 %32, %sub.i
  store i64 %add.i101, i64* %arrayidx2.i98, align 8, !tbaa !13
  %arrayidx4.i102 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 1
  %33 = load i64, i64* %arrayidx4.i102, align 8, !tbaa !13
  %add7.i = add i64 %33, %sub8.i
  store i64 %add7.i, i64* %arrayidx10.i, align 8, !tbaa !13
  %arrayidx9.i104 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 2
  %34 = load i64, i64* %arrayidx9.i104, align 8, !tbaa !13
  %add12.i = add i64 %34, %sub16.i
  store i64 %add12.i, i64* %arrayidx18.i, align 8, !tbaa !13
  %arrayidx14.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 3
  %35 = load i64, i64* %arrayidx14.i, align 8, !tbaa !13
  %add17.i = add i64 %35, %sub24.i
  store i64 %add17.i, i64* %arrayidx26.i, align 8, !tbaa !13
  %arrayidx19.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 4
  %36 = load i64, i64* %arrayidx19.i, align 8, !tbaa !13
  %add22.i = add i64 %36, %sub32.i
  store i64 %add22.i, i64* %arrayidx34.i, align 8, !tbaa !13
  %arrayidx.i105 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 0
  %37 = load i64, i64* %arrayidx.i105, align 8, !tbaa !13
  %sub.i106 = sub i64 18014381329608892, %37
  %arrayidx2.i107 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 0
  %arrayidx7.i108 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 1
  %38 = load i64, i64* %arrayidx7.i108, align 8, !tbaa !13
  %sub8.i109 = sub i64 18014398509481980, %38
  %arrayidx10.i110 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 1
  %arrayidx15.i111 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 2
  %39 = load i64, i64* %arrayidx15.i111, align 8, !tbaa !13
  %sub16.i112 = sub i64 18014398509481980, %39
  %arrayidx18.i113 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 2
  %arrayidx23.i114 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 3
  %40 = load i64, i64* %arrayidx23.i114, align 8, !tbaa !13
  %sub24.i115 = sub i64 18014398509481980, %40
  %arrayidx26.i116 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 3
  %arrayidx31.i117 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 4
  %41 = load i64, i64* %arrayidx31.i117, align 8, !tbaa !13
  %sub32.i118 = sub i64 1125899906842620, %41
  %arrayidx34.i119 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 4
  %add.i122 = add i64 %sub.i106, %and11.i87
  store i64 %add.i122, i64* %arrayidx2.i107, align 8, !tbaa !13
  %add7.i125 = add i64 %sub8.i109, %and14.i90
  store i64 %add7.i125, i64* %arrayidx10.i110, align 8, !tbaa !13
  %add12.i128 = add i64 %sub16.i112, %and17.i93
  store i64 %add12.i128, i64* %arrayidx18.i113, align 8, !tbaa !13
  %add17.i131 = add i64 %sub24.i115, %and20.i96
  store i64 %add17.i131, i64* %arrayidx26.i116, align 8, !tbaa !13
  %add22.i134 = add i64 %sub32.i118, %add19.i95
  store i64 %add22.i134, i64* %arrayidx34.i119, align 8, !tbaa !13
  %shr.i137 = lshr i64 %add22.i, 48
  %mul.i138 = mul nuw nsw i64 %shr.i137, 4294968273
  %add.i139 = add i64 %mul.i138, %add.i101
  %and.i140 = and i64 %add.i139, 4503599627370495
  %xor.i = xor i64 %and.i140, 4294968272
  %cmp.i = icmp ne i64 %and.i140, 0
  %cmp3.i = icmp ne i64 %xor.i, 4503599627370495
  %and589.i = and i1 %cmp.i, %cmp3.i
  br i1 %and589.i, label %if.end22, label %secp256k1_fe_normalizes_to_zero_var.exit

secp256k1_fe_normalizes_to_zero_var.exit:         ; preds = %if.end8
  %and12.i = and i64 %add22.i, 281474976710655
  %shr13.i = lshr i64 %add.i139, 52
  %add14.i = add i64 %shr13.i, %add7.i
  %shr15.i144 = lshr i64 %add14.i, 52
  %add16.i145 = add i64 %shr15.i144, %add12.i
  %and17.i146 = and i64 %add14.i, 4503599627370495
  %or.i = or i64 %and17.i146, %and.i140
  %and18.i = and i64 %add14.i, %xor.i
  %shr19.i = lshr i64 %add16.i145, 52
  %add20.i = add i64 %shr19.i, %add17.i
  %and21.i = and i64 %add16.i145, 4503599627370495
  %or22.i = or i64 %or.i, %and21.i
  %and23.i = and i64 %and18.i, %add16.i145
  %shr24.i = lshr i64 %add20.i, 52
  %add25.i = add nuw nsw i64 %shr24.i, %and12.i
  %and26.i = and i64 %add20.i, 4503599627370495
  %or27.i = or i64 %or22.i, %and26.i
  %and28.i = and i64 %and23.i, %add20.i
  %or29.i = or i64 %or27.i, %add25.i
  %xor30.i = xor i64 %add25.i, 4222124650659840
  %and31.i = and i64 %and28.i, %xor30.i
  %cmp35.i = icmp ne i64 %or29.i, 0
  %cmp37.i = icmp ne i64 %and31.i, 4503599627370495
  %tobool12.not = and i1 %cmp35.i, %cmp37.i
  br i1 %tobool12.not, label %if.end22, label %if.then13

if.then13:                                        ; preds = %secp256k1_fe_normalizes_to_zero_var.exit
  %shr.i149 = lshr i64 %add22.i134, 48
  %mul.i150 = mul nuw nsw i64 %shr.i149, 4294968273
  %add.i151 = add i64 %mul.i150, %add.i122
  %and.i152 = and i64 %add.i151, 4503599627370495
  %xor.i153 = xor i64 %and.i152, 4294968272
  %cmp.i154 = icmp ne i64 %and.i152, 0
  %cmp3.i155 = icmp ne i64 %xor.i153, 4503599627370495
  %and589.i156 = and i1 %cmp.i154, %cmp3.i155
  br i1 %and589.i156, label %if.else, label %secp256k1_fe_normalizes_to_zero_var.exit187

secp256k1_fe_normalizes_to_zero_var.exit187:      ; preds = %if.then13
  %and12.i160 = and i64 %add22.i134, 281474976710655
  %shr13.i161 = lshr i64 %add.i151, 52
  %add14.i162 = add i64 %shr13.i161, %add7.i125
  %shr15.i163 = lshr i64 %add14.i162, 52
  %add16.i164 = add i64 %shr15.i163, %add12.i128
  %and17.i165 = and i64 %add14.i162, 4503599627370495
  %or.i166 = or i64 %and17.i165, %and.i152
  %and18.i167 = and i64 %add14.i162, %xor.i153
  %shr19.i168 = lshr i64 %add16.i164, 52
  %add20.i169 = add i64 %shr19.i168, %add17.i131
  %and21.i170 = and i64 %add16.i164, 4503599627370495
  %or22.i171 = or i64 %or.i166, %and21.i170
  %and23.i172 = and i64 %and18.i167, %add16.i164
  %shr24.i173 = lshr i64 %add20.i169, 52
  %add25.i174 = add nuw nsw i64 %shr24.i173, %and12.i160
  %and26.i175 = and i64 %add20.i169, 4503599627370495
  %or27.i176 = or i64 %or22.i171, %and26.i175
  %and28.i177 = and i64 %and23.i172, %add20.i169
  %or29.i178 = or i64 %or27.i176, %add25.i174
  %xor30.i179 = xor i64 %add25.i174, 4222124650659840
  %and31.i180 = and i64 %and28.i177, %xor30.i179
  %cmp35.i181 = icmp ne i64 %or29.i178, 0
  %cmp37.i182 = icmp ne i64 %and31.i180, 4503599627370495
  %tobool15.not = and i1 %cmp35.i181, %cmp37.i182
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %secp256k1_fe_normalizes_to_zero_var.exit187
  tail call fastcc void @secp256k1_gej_double_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef nonnull %a, %struct.secp256k1_fe* noundef %rzr)
  br label %cleanup

if.else:                                          ; preds = %if.then13, %secp256k1_fe_normalizes_to_zero_var.exit187
  %cmp17.not = icmp eq %struct.secp256k1_fe* %rzr, null
  br i1 %cmp17.not, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.else
  %42 = bitcast %struct.secp256k1_fe* %rzr to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %42, i8 0, i64 40, i1 false)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.else
  %infinity.i190 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 1, i32* %infinity.i190, align 8, !tbaa !65
  %43 = bitcast %struct.secp256k1_gej* %r to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(120) %43, i8 0, i64 120, i1 false) #19
  br label %cleanup

if.end22:                                         ; preds = %if.end8, %secp256k1_fe_normalizes_to_zero_var.exit
  %infinity23 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 0, i32* %infinity23, align 8, !tbaa !65
  %cmp24.not = icmp eq %struct.secp256k1_fe* %rzr, null
  br i1 %cmp24.not, label %if.end27, label %if.then26

if.then26:                                        ; preds = %if.end22
  %44 = bitcast %struct.secp256k1_fe* %rzr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %44, i8* noundef nonnull align 8 dereferenceable(40) %5, i64 40, i1 false), !tbaa.struct !18
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end22
  %z28 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z28, %struct.secp256k1_fe* noundef nonnull %z, %struct.secp256k1_fe* noundef nonnull %h)
  %mul.i.i = shl i64 %add.i101, 1
  %conv.i.i.i = zext i64 %mul.i.i to i128
  %conv1.i.i.i = zext i64 %add17.i to i128
  %mul.i.i.i = mul nuw i128 %conv1.i.i.i, %conv.i.i.i
  %mul17.i.i = shl i64 %add7.i, 1
  %conv.i215.i.i = zext i64 %mul17.i.i to i128
  %conv1.i216.i.i = zext i64 %add12.i to i128
  %mul.i217.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i215.i.i
  %add.i.i.i = add i128 %mul.i.i.i, %mul.i217.i.i
  %conv.i218.i.i = zext i64 %add22.i to i128
  %mul.i220.i.i = mul nuw i128 %conv.i218.i.i, %conv.i218.i.i
  %conv1.i222.i.i = and i128 %mul.i220.i.i, 18446744073709551615
  %mul.i223.i.i = mul nuw nsw i128 %conv1.i222.i.i, 68719492368
  %add.i224.i.i = add i128 %add.i.i.i, %mul.i223.i.i
  %shr.i.i.i = lshr i128 %mul.i220.i.i, 64
  %shr.i226.i.i = lshr i128 %add.i224.i.i, 52
  %mul37.i.i = shl i64 %add22.i, 1
  %conv.i227.i.i = zext i64 %add.i101 to i128
  %conv1.i228.i.i = zext i64 %mul37.i.i to i128
  %mul.i229.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i227.i.i
  %mul.i233.i.i = mul nuw i128 %conv1.i.i.i, %conv.i215.i.i
  %mul.i237.i.i = mul nuw i128 %conv1.i216.i.i, %conv1.i216.i.i
  %mul.i241.i.i = mul nuw nsw i128 %shr.i.i.i, 281475040739328
  %add.i230.i.i = add i128 %mul.i233.i.i, %mul.i237.i.i
  %add.i234.i.i = add i128 %add.i230.i.i, %mul.i229.i.i
  %add.i238.i.i = add i128 %add.i234.i.i, %mul.i241.i.i
  %add.i242.i.i = add i128 %add.i238.i.i, %shr.i226.i.i
  %conv.i243.i.i = trunc i128 %add.i242.i.i to i64
  %shr.i244.i.i = lshr i128 %add.i242.i.i, 52
  %and47.i.i = lshr i64 %conv.i243.i.i, 48
  %45 = and i64 %and47.i.i, 15
  %and54.i.i = and i64 %conv.i243.i.i, 281474976710655
  %mul.i247.i.i = mul nuw i128 %conv.i227.i.i, %conv.i227.i.i
  %conv.i248.i.i = zext i64 %add7.i to i128
  %mul.i250.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i248.i.i
  %mul64.i.i = shl i64 %add12.i, 1
  %conv.i252.i.i = zext i64 %mul64.i.i to i128
  %mul.i254.i.i = mul nuw i128 %conv1.i.i.i, %conv.i252.i.i
  %add.i251.i.i = add i128 %mul.i250.i.i, %mul.i254.i.i
  %add.i255.i.i = add i128 %add.i251.i.i, %shr.i244.i.i
  %conv.i256.i.i = trunc i128 %add.i255.i.i to i64
  %shr.i257.i.i = lshr i128 %add.i255.i.i, 52
  %and69.i.i = shl i64 %conv.i256.i.i, 4
  %shl.i.i = and i64 %and69.i.i, 72057594037927920
  %or.i.i = or i64 %shl.i.i, %45
  %conv.i258.i.i = zext i64 %or.i.i to i128
  %mul.i259.i.i = mul nuw nsw i128 %conv.i258.i.i, 4294968273
  %add.i260.i.i = add i128 %mul.i259.i.i, %mul.i247.i.i
  %shr.i262.i.i = lshr i128 %add.i260.i.i, 52
  %mul.i265.i.i = mul nuw i128 %conv.i248.i.i, %conv.i.i.i
  %mul.i269.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i216.i.i
  %mul.i273.i.i = mul nuw i128 %conv1.i.i.i, %conv1.i.i.i
  %add.i270.i.i = add i128 %mul.i269.i.i, %mul.i273.i.i
  %add.i274.i.i = add i128 %add.i270.i.i, %shr.i257.i.i
  %conv.i276.i.i = and i128 %add.i274.i.i, 4503599627370495
  %mul.i277.i.i = mul nuw nsw i128 %conv.i276.i.i, 68719492368
  %add.i266.i.i = add i128 %mul.i277.i.i, %mul.i265.i.i
  %add.i278.i.i = add i128 %add.i266.i.i, %shr.i262.i.i
  %shr.i279.i.i = lshr i128 %add.i274.i.i, 52
  %46 = insertelement <2 x i128> poison, i128 %add.i260.i.i, i64 0
  %47 = insertelement <2 x i128> %46, i128 %add.i278.i.i, i64 1
  %48 = trunc <2 x i128> %47 to <2 x i64>
  %49 = and <2 x i64> %48, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i = lshr i128 %add.i278.i.i, 52
  %mul.i284.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i.i.i
  %mul.i288.i.i = mul nuw i128 %conv.i248.i.i, %conv.i248.i.i
  %mul.i292.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i.i.i
  %add.i293.i.i = add i128 %shr.i279.i.i, %mul.i292.i.i
  %conv1.i295.i.i = and i128 %add.i293.i.i, 18446744073709551615
  %mul.i296.i.i = mul nuw nsw i128 %conv1.i295.i.i, 68719492368
  %add.i285.i.i = add i128 %mul.i284.i.i, %mul.i288.i.i
  %add.i289.i.i = add i128 %add.i285.i.i, %mul.i296.i.i
  %add.i297.i.i = add i128 %add.i289.i.i, %shr.i281.i.i
  %shr.i298.i.i = lshr i128 %add.i293.i.i, 64
  %arrayidx130.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h2, i64 0, i32 0, i64 2
  %shr.i300.i.i = lshr i128 %add.i297.i.i, 52
  %mul.i303.i.i = mul nuw nsw i128 %shr.i298.i.i, 281475040739328
  %conv.i305.i.i = and i128 %add.i224.i.i, 4503599627370494
  %add.i304.i.i = add nuw nsw i128 %mul.i303.i.i, %conv.i305.i.i
  %add.i306.i.i = add nuw nsw i128 %add.i304.i.i, %shr.i300.i.i
  %50 = insertelement <2 x i128> poison, i128 %add.i297.i.i, i64 0
  %51 = insertelement <2 x i128> %50, i128 %add.i306.i.i, i64 1
  %52 = trunc <2 x i128> %51 to <2 x i64>
  %53 = and <2 x i64> %52, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i = lshr i128 %add.i306.i.i, 52
  %conv.i309.i.i = trunc i128 %shr.i308.i.i to i64
  %add.i.i = add nuw nsw i64 %and54.i.i, %conv.i309.i.i
  %arrayidx151.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h2, i64 0, i32 0, i64 4
  %54 = sub nuw nsw <2 x i64> <i64 18014381329608892, i64 18014398509481980>, %49
  %55 = bitcast %struct.secp256k1_fe* %h2 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %55, align 16, !tbaa !13
  %56 = sub nuw nsw <2 x i64> <i64 18014398509481980, i64 18014398509481980>, %53
  %57 = bitcast i64* %arrayidx130.i.i to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 16, !tbaa !13
  %sub32.i204 = sub nsw i64 1125899906842620, %add.i.i
  store i64 %sub32.i204, i64* %arrayidx151.i.i, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %h3, %struct.secp256k1_fe* noundef nonnull %h2, %struct.secp256k1_fe* noundef nonnull %h)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %t, %struct.secp256k1_fe* noundef nonnull %u1, %struct.secp256k1_fe* noundef nonnull %h2)
  %x30 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef %x30, %struct.secp256k1_fe* noundef nonnull %i)
  %58 = bitcast %struct.secp256k1_fe* %h3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16, !tbaa !13
  %60 = bitcast %struct.secp256k1_gej* %r to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !tbaa !13
  %62 = add <2 x i64> %61, %59
  %arrayidx9.i212 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h3, i64 0, i32 0, i64 2
  %arrayidx11.i213 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 2
  %63 = bitcast i64* %arrayidx9.i212 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 16, !tbaa !13
  %65 = bitcast i64* %arrayidx11.i213 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8, !tbaa !13
  %67 = add <2 x i64> %66, %64
  %arrayidx19.i218 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h3, i64 0, i32 0, i64 4
  %68 = load i64, i64* %arrayidx19.i218, align 16, !tbaa !13
  %arrayidx21.i219 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 4
  %69 = load i64, i64* %arrayidx21.i219, align 8, !tbaa !13
  %add22.i220 = add i64 %69, %68
  %70 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 16, !tbaa !13
  %arrayidx9.i227 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 2
  %72 = bitcast i64* %arrayidx9.i227 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 16, !tbaa !13
  %arrayidx19.i233 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 4
  %74 = load i64, i64* %arrayidx19.i233, align 16, !tbaa !13
  %75 = shl <2 x i64> %71, <i64 1, i64 1>
  %76 = add <2 x i64> %62, %75
  %77 = bitcast %struct.secp256k1_gej* %r to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %77, align 8, !tbaa !13
  %78 = shl <2 x i64> %73, <i64 1, i64 1>
  %79 = add <2 x i64> %67, %78
  %80 = bitcast i64* %arrayidx11.i213 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8, !tbaa !13
  %reass.add288 = shl i64 %74, 1
  %add22.i250 = add i64 %add22.i220, %reass.add288
  store i64 %add22.i250, i64* %arrayidx21.i219, align 8, !tbaa !13
  %81 = add <2 x i64> %76, %71
  %82 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %82, align 16, !tbaa !13
  %83 = add <2 x i64> %79, %73
  %84 = bitcast i64* %arrayidx9.i227 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 16, !tbaa !13
  %add22.i265 = add i64 %add22.i250, %74
  store i64 %add22.i265, i64* %arrayidx19.i233, align 16, !tbaa !13
  %y35 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y35, %struct.secp256k1_fe* noundef nonnull %t, %struct.secp256k1_fe* noundef nonnull %i)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %h3, %struct.secp256k1_fe* noundef nonnull %h3, %struct.secp256k1_fe* noundef nonnull %s1)
  %85 = bitcast %struct.secp256k1_fe* %h3 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 16, !tbaa !13
  %87 = bitcast %struct.secp256k1_fe* %y35 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !tbaa !13
  %89 = add <2 x i64> %88, %86
  %90 = bitcast %struct.secp256k1_fe* %y35 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8, !tbaa !13
  %arrayidx11.i273 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 2
  %91 = bitcast i64* %arrayidx9.i212 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 16, !tbaa !13
  %93 = bitcast i64* %arrayidx11.i273 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !tbaa !13
  %95 = add <2 x i64> %94, %92
  %96 = bitcast i64* %arrayidx11.i273 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 8, !tbaa !13
  %97 = load i64, i64* %arrayidx19.i218, align 16, !tbaa !13
  %arrayidx21.i279 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 4
  %98 = load i64, i64* %arrayidx21.i279, align 8, !tbaa !13
  %add22.i280 = add i64 %98, %97
  store i64 %add22.i280, i64* %arrayidx21.i279, align 8, !tbaa !13
  br label %cleanup

cleanup:                                          ; preds = %if.then16, %if.end20, %if.end27, %if.end7, %do.body
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #19
  ret void
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_ecmult_table_get_ge_storage(%struct.secp256k1_ge* noundef %r, %struct.secp256k1_ge_storage* nocapture noundef readonly %pre, i32 noundef %n) unnamed_addr #14 {
entry:
  %cmp14 = icmp sgt i32 %n, 0
  br i1 %cmp14, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %sub16 = add nsw i32 %n, -1
  %div48 = lshr i32 %sub16, 1
  %0 = zext i32 %div48 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 0, i32 0, i64 0
  %1 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %and.i.i = and i64 %1, 4503599627370495
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 0
  store i64 %and.i.i, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %2 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !13
  %shr.i.i = lshr i64 %2, 52
  %arrayidx6.i.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 0, i32 0, i64 1
  %3 = load i64, i64* %arrayidx6.i.i, align 8, !tbaa !13
  %shl.i.i = shl i64 %3, 12
  %and7.i.i = and i64 %shl.i.i, 4503599627366400
  %or.i.i = or i64 %and7.i.i, %shr.i.i
  %arrayidx9.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 1
  store i64 %or.i.i, i64* %arrayidx9.i.i, align 8, !tbaa !13
  %4 = load i64, i64* %arrayidx6.i.i, align 8, !tbaa !13
  %shr12.i.i = lshr i64 %4, 40
  %arrayidx14.i.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 0, i32 0, i64 2
  %5 = load i64, i64* %arrayidx14.i.i, align 8, !tbaa !13
  %shl15.i.i = shl i64 %5, 24
  %and16.i.i = and i64 %shl15.i.i, 4503599610593280
  %or17.i.i = or i64 %and16.i.i, %shr12.i.i
  %arrayidx19.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 2
  store i64 %or17.i.i, i64* %arrayidx19.i.i, align 8, !tbaa !13
  %6 = load i64, i64* %arrayidx14.i.i, align 8, !tbaa !13
  %shr22.i.i = lshr i64 %6, 28
  %arrayidx24.i.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 0, i32 0, i64 3
  %7 = load i64, i64* %arrayidx24.i.i, align 8, !tbaa !13
  %shl25.i.i = shl i64 %7, 36
  %and26.i.i = and i64 %shl25.i.i, 4503530907893760
  %or27.i.i = or i64 %and26.i.i, %shr22.i.i
  %arrayidx29.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 3
  store i64 %or27.i.i, i64* %arrayidx29.i.i, align 8, !tbaa !13
  %8 = load i64, i64* %arrayidx24.i.i, align 8, !tbaa !13
  %shr32.i.i = lshr i64 %8, 16
  %arrayidx34.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 4
  store i64 %shr32.i.i, i64* %arrayidx34.i.i, align 8, !tbaa !13
  %arrayidx.i6.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 1, i32 0, i64 0
  %9 = load i64, i64* %arrayidx.i6.i, align 8, !tbaa !13
  %and.i7.i = and i64 %9, 4503599627370495
  %arrayidx2.i8.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 0
  store i64 %and.i7.i, i64* %arrayidx2.i8.i, align 8, !tbaa !13
  %10 = load i64, i64* %arrayidx.i6.i, align 8, !tbaa !13
  %shr.i9.i = lshr i64 %10, 52
  %arrayidx6.i10.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 1, i32 0, i64 1
  %11 = load i64, i64* %arrayidx6.i10.i, align 8, !tbaa !13
  %shl.i11.i = shl i64 %11, 12
  %and7.i12.i = and i64 %shl.i11.i, 4503599627366400
  %or.i13.i = or i64 %and7.i12.i, %shr.i9.i
  %arrayidx9.i14.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 1
  store i64 %or.i13.i, i64* %arrayidx9.i14.i, align 8, !tbaa !13
  %12 = load i64, i64* %arrayidx6.i10.i, align 8, !tbaa !13
  %shr12.i15.i = lshr i64 %12, 40
  %arrayidx14.i16.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 1, i32 0, i64 2
  %13 = load i64, i64* %arrayidx14.i16.i, align 8, !tbaa !13
  %shl15.i17.i = shl i64 %13, 24
  %and16.i18.i = and i64 %shl15.i17.i, 4503599610593280
  %or17.i19.i = or i64 %and16.i18.i, %shr12.i15.i
  %arrayidx19.i20.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 2
  store i64 %or17.i19.i, i64* %arrayidx19.i20.i, align 8, !tbaa !13
  %14 = load i64, i64* %arrayidx14.i16.i, align 8, !tbaa !13
  %shr22.i21.i = lshr i64 %14, 28
  %arrayidx24.i22.i = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %0, i32 1, i32 0, i64 3
  %15 = load i64, i64* %arrayidx24.i22.i, align 8, !tbaa !13
  %shl25.i23.i = shl i64 %15, 36
  %and26.i24.i = and i64 %shl25.i23.i, 4503530907893760
  %or27.i25.i = or i64 %and26.i24.i, %shr22.i21.i
  %arrayidx29.i26.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 3
  store i64 %or27.i25.i, i64* %arrayidx29.i26.i, align 8, !tbaa !13
  %16 = load i64, i64* %arrayidx24.i22.i, align 8, !tbaa !13
  %shr32.i27.i = lshr i64 %16, 16
  %arrayidx34.i28.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 4
  store i64 %shr32.i27.i, i64* %arrayidx34.i28.i, align 8, !tbaa !13
  br label %if.end

if.else:                                          ; preds = %entry
  %sub18 = xor i32 %n, -1
  %div19 = sdiv i32 %sub18, 2
  %17 = zext i32 %div19 to i64
  %arrayidx.i.i1 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 0, i32 0, i64 0
  %18 = load i64, i64* %arrayidx.i.i1, align 8, !tbaa !13
  %and.i.i2 = and i64 %18, 4503599627370495
  %arrayidx2.i.i3 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 0
  store i64 %and.i.i2, i64* %arrayidx2.i.i3, align 8, !tbaa !13
  %19 = load i64, i64* %arrayidx.i.i1, align 8, !tbaa !13
  %shr.i.i4 = lshr i64 %19, 52
  %arrayidx6.i.i5 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 0, i32 0, i64 1
  %20 = load i64, i64* %arrayidx6.i.i5, align 8, !tbaa !13
  %shl.i.i6 = shl i64 %20, 12
  %and7.i.i7 = and i64 %shl.i.i6, 4503599627366400
  %or.i.i8 = or i64 %and7.i.i7, %shr.i.i4
  %arrayidx9.i.i9 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 1
  store i64 %or.i.i8, i64* %arrayidx9.i.i9, align 8, !tbaa !13
  %21 = load i64, i64* %arrayidx6.i.i5, align 8, !tbaa !13
  %shr12.i.i10 = lshr i64 %21, 40
  %arrayidx14.i.i11 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 0, i32 0, i64 2
  %22 = load i64, i64* %arrayidx14.i.i11, align 8, !tbaa !13
  %shl15.i.i12 = shl i64 %22, 24
  %and16.i.i13 = and i64 %shl15.i.i12, 4503599610593280
  %or17.i.i14 = or i64 %and16.i.i13, %shr12.i.i10
  %arrayidx19.i.i15 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 2
  store i64 %or17.i.i14, i64* %arrayidx19.i.i15, align 8, !tbaa !13
  %23 = load i64, i64* %arrayidx14.i.i11, align 8, !tbaa !13
  %shr22.i.i16 = lshr i64 %23, 28
  %arrayidx24.i.i17 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 0, i32 0, i64 3
  %24 = load i64, i64* %arrayidx24.i.i17, align 8, !tbaa !13
  %shl25.i.i18 = shl i64 %24, 36
  %and26.i.i19 = and i64 %shl25.i.i18, 4503530907893760
  %or27.i.i20 = or i64 %and26.i.i19, %shr22.i.i16
  %arrayidx29.i.i21 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 3
  store i64 %or27.i.i20, i64* %arrayidx29.i.i21, align 8, !tbaa !13
  %25 = load i64, i64* %arrayidx24.i.i17, align 8, !tbaa !13
  %shr32.i.i22 = lshr i64 %25, 16
  %arrayidx34.i.i23 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 0, i32 0, i64 4
  store i64 %shr32.i.i22, i64* %arrayidx34.i.i23, align 8, !tbaa !13
  %arrayidx.i6.i24 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 1, i32 0, i64 0
  %26 = load i64, i64* %arrayidx.i6.i24, align 8, !tbaa !13
  %and.i7.i25 = and i64 %26, 4503599627370495
  %arrayidx2.i8.i26 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 0
  store i64 %and.i7.i25, i64* %arrayidx2.i8.i26, align 8, !tbaa !13
  %27 = load i64, i64* %arrayidx.i6.i24, align 8, !tbaa !13
  %shr.i9.i27 = lshr i64 %27, 52
  %arrayidx6.i10.i28 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 1, i32 0, i64 1
  %28 = load i64, i64* %arrayidx6.i10.i28, align 8, !tbaa !13
  %shl.i11.i29 = shl i64 %28, 12
  %and7.i12.i30 = and i64 %shl.i11.i29, 4503599627366400
  %or.i13.i31 = or i64 %and7.i12.i30, %shr.i9.i27
  %arrayidx9.i14.i32 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 1
  store i64 %or.i13.i31, i64* %arrayidx9.i14.i32, align 8, !tbaa !13
  %29 = load i64, i64* %arrayidx6.i10.i28, align 8, !tbaa !13
  %shr12.i15.i33 = lshr i64 %29, 40
  %arrayidx14.i16.i34 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 1, i32 0, i64 2
  %30 = load i64, i64* %arrayidx14.i16.i34, align 8, !tbaa !13
  %shl15.i17.i35 = shl i64 %30, 24
  %and16.i18.i36 = and i64 %shl15.i17.i35, 4503599610593280
  %or17.i19.i37 = or i64 %and16.i18.i36, %shr12.i15.i33
  %arrayidx19.i20.i38 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 2
  store i64 %or17.i19.i37, i64* %arrayidx19.i20.i38, align 8, !tbaa !13
  %31 = load i64, i64* %arrayidx14.i16.i34, align 8, !tbaa !13
  %shr22.i21.i39 = lshr i64 %31, 28
  %arrayidx24.i22.i40 = getelementptr inbounds %struct.secp256k1_ge_storage, %struct.secp256k1_ge_storage* %pre, i64 %17, i32 1, i32 0, i64 3
  %32 = load i64, i64* %arrayidx24.i22.i40, align 8, !tbaa !13
  %shl25.i23.i41 = shl i64 %32, 36
  %and26.i24.i42 = and i64 %shl25.i23.i41, 4503530907893760
  %or27.i25.i43 = or i64 %and26.i24.i42, %shr22.i21.i39
  %arrayidx29.i26.i44 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 3
  store i64 %or27.i25.i43, i64* %arrayidx29.i26.i44, align 8, !tbaa !13
  %33 = load i64, i64* %arrayidx24.i22.i40, align 8, !tbaa !13
  %shr32.i27.i45 = lshr i64 %33, 16
  %arrayidx34.i28.i46 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 1, i32 0, i64 4
  %sub.i = sub nuw nsw i64 18014381329608892, %and.i7.i25
  store i64 %sub.i, i64* %arrayidx2.i8.i26, align 8, !tbaa !13
  %sub8.i = sub nuw nsw i64 18014398509481980, %or.i13.i31
  store i64 %sub8.i, i64* %arrayidx9.i14.i32, align 8, !tbaa !13
  %sub16.i = sub nuw nsw i64 18014398509481980, %or17.i19.i37
  store i64 %sub16.i, i64* %arrayidx19.i20.i38, align 8, !tbaa !13
  %sub24.i = sub nuw nsw i64 18014398509481980, %or27.i25.i43
  store i64 %sub24.i, i64* %arrayidx29.i26.i44, align 8, !tbaa !13
  %sub32.i = sub nuw nsw i64 1125899906842620, %shr32.i27.i45
  store i64 %sub32.i, i64* %arrayidx34.i28.i46, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %34 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %r, i64 0, i32 2
  store i32 0, i32* %34, align 8
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define internal fastcc void @secp256k1_gej_add_zinv_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* nocapture noundef readonly %a, %struct.secp256k1_ge* nocapture noundef readonly %b, %struct.secp256k1_fe* nocapture noundef readonly %bzinv) unnamed_addr #1 {
entry:
  %az = alloca %struct.secp256k1_fe, align 8
  %z12 = alloca %struct.secp256k1_fe, align 16
  %u1 = alloca %struct.secp256k1_fe, align 8
  %u2 = alloca %struct.secp256k1_fe, align 8
  %s1 = alloca %struct.secp256k1_fe, align 8
  %s2 = alloca %struct.secp256k1_fe, align 8
  %h = alloca %struct.secp256k1_fe, align 8
  %i = alloca %struct.secp256k1_fe, align 8
  %h2 = alloca %struct.secp256k1_fe, align 16
  %h3 = alloca %struct.secp256k1_fe, align 16
  %t = alloca %struct.secp256k1_fe, align 16
  %bzinv2 = alloca %struct.secp256k1_fe, align 8
  %bzinv3 = alloca %struct.secp256k1_fe, align 8
  %0 = bitcast %struct.secp256k1_fe* %az to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_fe* %z12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #19
  %2 = bitcast %struct.secp256k1_fe* %u1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #19
  %3 = bitcast %struct.secp256k1_fe* %u2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #19
  %4 = bitcast %struct.secp256k1_fe* %s1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  %5 = bitcast %struct.secp256k1_fe* %s2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #19
  %6 = bitcast %struct.secp256k1_fe* %h to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #19
  %7 = bitcast %struct.secp256k1_fe* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #19
  %8 = bitcast %struct.secp256k1_fe* %h2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #19
  %9 = bitcast %struct.secp256k1_fe* %h3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #19
  %10 = bitcast %struct.secp256k1_fe* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #19
  %infinity = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 3
  %11 = load i32, i32* %infinity, align 8, !tbaa !65
  %tobool.not = icmp eq i32 %11, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %12 = bitcast %struct.secp256k1_fe* %bzinv2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #19
  %13 = bitcast %struct.secp256k1_fe* %bzinv3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #19
  %infinity1 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 2
  %14 = load i32, i32* %infinity1, align 8, !tbaa !37
  %infinity2 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 %14, i32* %infinity2, align 8, !tbaa !65
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef nonnull %bzinv2, %struct.secp256k1_fe* noundef %bzinv)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %bzinv3, %struct.secp256k1_fe* noundef nonnull %bzinv2, %struct.secp256k1_fe* noundef %bzinv)
  %x = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0
  %x3 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef %x, %struct.secp256k1_fe* noundef %x3, %struct.secp256k1_fe* noundef nonnull %bzinv2)
  %y = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1
  %y4 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y, %struct.secp256k1_fe* noundef nonnull %y4, %struct.secp256k1_fe* noundef nonnull %bzinv3)
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 0
  store i64 1, i64* %arrayidx.i, align 8, !tbaa !13
  %arrayidx9.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2, i32 0, i64 1
  %15 = bitcast i64* %arrayidx9.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %15, i8 0, i64 32, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %infinity5 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 2
  %16 = load i32, i32* %infinity5, align 8, !tbaa !37
  %tobool6.not = icmp eq i32 %16, 0
  br i1 %tobool6.not, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  %17 = bitcast %struct.secp256k1_gej* %r to i8*
  %18 = bitcast %struct.secp256k1_gej* %a to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128) %17, i8* noundef nonnull align 8 dereferenceable(128) %18, i64 128, i1 false), !tbaa.struct !67
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %z9 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 2
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %az, %struct.secp256k1_fe* noundef nonnull %z9, %struct.secp256k1_fe* noundef %bzinv)
  %arraydecay2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %az, i64 0, i32 0, i64 0
  %19 = load i64, i64* %arraydecay2.i, align 8, !tbaa !13
  %arrayidx1.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %az, i64 0, i32 0, i64 1
  %20 = load i64, i64* %arrayidx1.i.i, align 8, !tbaa !13
  %arrayidx2.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %az, i64 0, i32 0, i64 2
  %21 = load i64, i64* %arrayidx2.i.i, align 8, !tbaa !13
  %arrayidx3.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %az, i64 0, i32 0, i64 3
  %22 = load i64, i64* %arrayidx3.i.i, align 8, !tbaa !13
  %arrayidx4.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %az, i64 0, i32 0, i64 4
  %23 = load i64, i64* %arrayidx4.i.i, align 8, !tbaa !13
  %mul.i.i = shl i64 %19, 1
  %conv.i.i.i = zext i64 %mul.i.i to i128
  %conv1.i.i.i = zext i64 %22 to i128
  %mul.i.i.i = mul nuw i128 %conv1.i.i.i, %conv.i.i.i
  %mul17.i.i = shl i64 %20, 1
  %conv.i215.i.i = zext i64 %mul17.i.i to i128
  %conv1.i216.i.i = zext i64 %21 to i128
  %mul.i217.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i215.i.i
  %add.i.i.i = add i128 %mul.i.i.i, %mul.i217.i.i
  %conv.i218.i.i = zext i64 %23 to i128
  %mul.i220.i.i = mul nuw i128 %conv.i218.i.i, %conv.i218.i.i
  %conv1.i222.i.i = and i128 %mul.i220.i.i, 18446744073709551615
  %mul.i223.i.i = mul nuw nsw i128 %conv1.i222.i.i, 68719492368
  %add.i224.i.i = add i128 %add.i.i.i, %mul.i223.i.i
  %shr.i.i.i = lshr i128 %mul.i220.i.i, 64
  %shr.i226.i.i = lshr i128 %add.i224.i.i, 52
  %mul37.i.i = shl i64 %23, 1
  %conv.i227.i.i = zext i64 %19 to i128
  %conv1.i228.i.i = zext i64 %mul37.i.i to i128
  %mul.i229.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i227.i.i
  %mul.i233.i.i = mul nuw i128 %conv1.i.i.i, %conv.i215.i.i
  %mul.i237.i.i = mul nuw i128 %conv1.i216.i.i, %conv1.i216.i.i
  %mul.i241.i.i = mul nuw nsw i128 %shr.i.i.i, 281475040739328
  %add.i230.i.i = add i128 %mul.i233.i.i, %mul.i237.i.i
  %add.i234.i.i = add i128 %add.i230.i.i, %mul.i229.i.i
  %add.i238.i.i = add i128 %add.i234.i.i, %mul.i241.i.i
  %add.i242.i.i = add i128 %add.i238.i.i, %shr.i226.i.i
  %conv.i243.i.i = trunc i128 %add.i242.i.i to i64
  %shr.i244.i.i = lshr i128 %add.i242.i.i, 52
  %and47.i.i = lshr i64 %conv.i243.i.i, 48
  %24 = and i64 %and47.i.i, 15
  %and54.i.i = and i64 %conv.i243.i.i, 281474976710655
  %mul.i247.i.i = mul nuw i128 %conv.i227.i.i, %conv.i227.i.i
  %conv.i248.i.i = zext i64 %20 to i128
  %mul.i250.i.i = mul nuw i128 %conv1.i228.i.i, %conv.i248.i.i
  %mul64.i.i = shl i64 %21, 1
  %conv.i252.i.i = zext i64 %mul64.i.i to i128
  %mul.i254.i.i = mul nuw i128 %conv1.i.i.i, %conv.i252.i.i
  %add.i251.i.i = add i128 %mul.i250.i.i, %mul.i254.i.i
  %add.i255.i.i = add i128 %add.i251.i.i, %shr.i244.i.i
  %conv.i256.i.i = trunc i128 %add.i255.i.i to i64
  %shr.i257.i.i = lshr i128 %add.i255.i.i, 52
  %and69.i.i = shl i64 %conv.i256.i.i, 4
  %shl.i.i = and i64 %and69.i.i, 72057594037927920
  %or.i.i = or i64 %shl.i.i, %24
  %conv.i258.i.i = zext i64 %or.i.i to i128
  %mul.i259.i.i = mul nuw nsw i128 %conv.i258.i.i, 4294968273
  %add.i260.i.i = add i128 %mul.i259.i.i, %mul.i247.i.i
  %shr.i262.i.i = lshr i128 %add.i260.i.i, 52
  %mul.i265.i.i = mul nuw i128 %conv.i248.i.i, %conv.i.i.i
  %mul.i269.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i216.i.i
  %mul.i273.i.i = mul nuw i128 %conv1.i.i.i, %conv1.i.i.i
  %add.i270.i.i = add i128 %mul.i269.i.i, %mul.i273.i.i
  %add.i274.i.i = add i128 %add.i270.i.i, %shr.i257.i.i
  %conv.i276.i.i = and i128 %add.i274.i.i, 4503599627370495
  %mul.i277.i.i = mul nuw nsw i128 %conv.i276.i.i, 68719492368
  %add.i266.i.i = add i128 %mul.i277.i.i, %mul.i265.i.i
  %add.i278.i.i = add i128 %add.i266.i.i, %shr.i262.i.i
  %shr.i279.i.i = lshr i128 %add.i274.i.i, 52
  %25 = insertelement <2 x i128> poison, i128 %add.i260.i.i, i64 0
  %26 = insertelement <2 x i128> %25, i128 %add.i278.i.i, i64 1
  %27 = trunc <2 x i128> %26 to <2 x i64>
  %28 = and <2 x i64> %27, <i64 4503599627370495, i64 4503599627370495>
  %29 = bitcast %struct.secp256k1_fe* %z12 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %29, align 16, !tbaa !13
  %shr.i281.i.i = lshr i128 %add.i278.i.i, 52
  %mul.i284.i.i = mul nuw i128 %conv1.i216.i.i, %conv.i.i.i
  %mul.i288.i.i = mul nuw i128 %conv.i248.i.i, %conv.i248.i.i
  %mul.i292.i.i = mul nuw i128 %conv1.i228.i.i, %conv1.i.i.i
  %add.i293.i.i = add i128 %shr.i279.i.i, %mul.i292.i.i
  %conv1.i295.i.i = and i128 %add.i293.i.i, 18446744073709551615
  %mul.i296.i.i = mul nuw nsw i128 %conv1.i295.i.i, 68719492368
  %add.i285.i.i = add i128 %mul.i284.i.i, %mul.i288.i.i
  %add.i289.i.i = add i128 %add.i285.i.i, %mul.i296.i.i
  %add.i297.i.i = add i128 %add.i289.i.i, %shr.i281.i.i
  %shr.i298.i.i = lshr i128 %add.i293.i.i, 64
  %arrayidx130.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %z12, i64 0, i32 0, i64 2
  %shr.i300.i.i = lshr i128 %add.i297.i.i, 52
  %mul.i303.i.i = mul nuw nsw i128 %shr.i298.i.i, 281475040739328
  %conv.i305.i.i = and i128 %add.i224.i.i, 4503599627370494
  %add.i304.i.i = add nuw nsw i128 %mul.i303.i.i, %conv.i305.i.i
  %add.i306.i.i = add nuw nsw i128 %add.i304.i.i, %shr.i300.i.i
  %30 = insertelement <2 x i128> poison, i128 %add.i297.i.i, i64 0
  %31 = insertelement <2 x i128> %30, i128 %add.i306.i.i, i64 1
  %32 = trunc <2 x i128> %31 to <2 x i64>
  %33 = and <2 x i64> %32, <i64 4503599627370495, i64 4503599627370495>
  %34 = bitcast i64* %arrayidx130.i.i to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %34, align 16, !tbaa !13
  %shr.i308.i.i = lshr i128 %add.i306.i.i, 52
  %conv.i309.i.i = trunc i128 %shr.i308.i.i to i64
  %add.i.i = add nuw nsw i64 %and54.i.i, %conv.i309.i.i
  %arrayidx151.i.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %z12, i64 0, i32 0, i64 4
  store i64 %add.i.i, i64* %arrayidx151.i.i, align 16, !tbaa !13
  %35 = bitcast %struct.secp256k1_gej* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %2, i8* noundef nonnull align 8 dereferenceable(40) %35, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i69 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 0
  %36 = load i64, i64* %arrayidx.i69, align 8, !tbaa !13
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 1
  %37 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 2
  %38 = load i64, i64* %arrayidx4.i, align 8, !tbaa !13
  %arrayidx6.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 3
  %39 = load i64, i64* %arrayidx6.i, align 8, !tbaa !13
  %arrayidx8.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u1, i64 0, i32 0, i64 4
  %40 = load i64, i64* %arrayidx8.i, align 8, !tbaa !13
  %shr.i = lshr i64 %40, 48
  %and.i = and i64 %40, 281474976710655
  %mul.i = mul nuw nsw i64 %shr.i, 4294968273
  %add.i = add i64 %mul.i, %36
  %shr9.i = lshr i64 %add.i, 52
  %add10.i = add i64 %shr9.i, %37
  %and11.i = and i64 %add.i, 4503599627370495
  %shr12.i = lshr i64 %add10.i, 52
  %add13.i = add i64 %shr12.i, %38
  %and14.i = and i64 %add10.i, 4503599627370495
  %shr15.i = lshr i64 %add13.i, 52
  %add16.i = add i64 %shr15.i, %39
  %and17.i = and i64 %add13.i, 4503599627370495
  %shr18.i = lshr i64 %add16.i, 52
  %add19.i = add nuw nsw i64 %shr18.i, %and.i
  %and20.i = and i64 %add16.i, 4503599627370495
  store i64 %and11.i, i64* %arrayidx.i69, align 8, !tbaa !13
  store i64 %and14.i, i64* %arrayidx2.i, align 8, !tbaa !13
  store i64 %and17.i, i64* %arrayidx4.i, align 8, !tbaa !13
  store i64 %and20.i, i64* %arrayidx6.i, align 8, !tbaa !13
  store i64 %add19.i, i64* %arrayidx8.i, align 8, !tbaa !13
  %x11 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 0
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %u2, %struct.secp256k1_fe* noundef %x11, %struct.secp256k1_fe* noundef nonnull %z12)
  %y12 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %a, i64 0, i32 1
  %41 = bitcast %struct.secp256k1_fe* %y12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %4, i8* noundef nonnull align 8 dereferenceable(40) %41, i64 40, i1 false), !tbaa.struct !18
  %arrayidx.i70 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 0
  %42 = load i64, i64* %arrayidx.i70, align 8, !tbaa !13
  %arrayidx2.i71 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 1
  %43 = load i64, i64* %arrayidx2.i71, align 8, !tbaa !13
  %arrayidx4.i72 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 2
  %44 = load i64, i64* %arrayidx4.i72, align 8, !tbaa !13
  %arrayidx6.i73 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 3
  %45 = load i64, i64* %arrayidx6.i73, align 8, !tbaa !13
  %arrayidx8.i74 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s1, i64 0, i32 0, i64 4
  %46 = load i64, i64* %arrayidx8.i74, align 8, !tbaa !13
  %shr.i75 = lshr i64 %46, 48
  %and.i76 = and i64 %46, 281474976710655
  %mul.i77 = mul nuw nsw i64 %shr.i75, 4294968273
  %add.i78 = add i64 %mul.i77, %42
  %shr9.i79 = lshr i64 %add.i78, 52
  %add10.i80 = add i64 %shr9.i79, %43
  %and11.i81 = and i64 %add.i78, 4503599627370495
  %shr12.i82 = lshr i64 %add10.i80, 52
  %add13.i83 = add i64 %shr12.i82, %44
  %and14.i84 = and i64 %add10.i80, 4503599627370495
  %shr15.i85 = lshr i64 %add13.i83, 52
  %add16.i86 = add i64 %shr15.i85, %45
  %and17.i87 = and i64 %add13.i83, 4503599627370495
  %shr18.i88 = lshr i64 %add16.i86, 52
  %add19.i89 = add nuw nsw i64 %shr18.i88, %and.i76
  %and20.i90 = and i64 %add16.i86, 4503599627370495
  store i64 %and11.i81, i64* %arrayidx.i70, align 8, !tbaa !13
  store i64 %and14.i84, i64* %arrayidx2.i71, align 8, !tbaa !13
  store i64 %and17.i87, i64* %arrayidx4.i72, align 8, !tbaa !13
  store i64 %and20.i90, i64* %arrayidx6.i73, align 8, !tbaa !13
  store i64 %add19.i89, i64* %arrayidx8.i74, align 8, !tbaa !13
  %y13 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %b, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %y13, %struct.secp256k1_fe* noundef nonnull %z12)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %s2, %struct.secp256k1_fe* noundef nonnull %az)
  %sub.i = sub nuw nsw i64 18014381329608892, %and11.i
  %arrayidx2.i92 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 0
  %sub8.i = sub nuw nsw i64 18014398509481980, %and14.i
  %arrayidx10.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 1
  %sub16.i = sub nuw nsw i64 18014398509481980, %and17.i
  %arrayidx18.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 2
  %sub24.i = sub nuw nsw i64 18014398509481980, %and20.i
  %arrayidx26.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 3
  %sub32.i = sub nuw nsw i64 1125899906842620, %add19.i
  %arrayidx34.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h, i64 0, i32 0, i64 4
  %arrayidx.i93 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 0
  %47 = load i64, i64* %arrayidx.i93, align 8, !tbaa !13
  %add.i95 = add i64 %47, %sub.i
  store i64 %add.i95, i64* %arrayidx2.i92, align 8, !tbaa !13
  %arrayidx4.i96 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 1
  %48 = load i64, i64* %arrayidx4.i96, align 8, !tbaa !13
  %add7.i = add i64 %48, %sub8.i
  store i64 %add7.i, i64* %arrayidx10.i, align 8, !tbaa !13
  %arrayidx9.i98 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 2
  %49 = load i64, i64* %arrayidx9.i98, align 8, !tbaa !13
  %add12.i = add i64 %49, %sub16.i
  store i64 %add12.i, i64* %arrayidx18.i, align 8, !tbaa !13
  %arrayidx14.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 3
  %50 = load i64, i64* %arrayidx14.i, align 8, !tbaa !13
  %add17.i = add i64 %50, %sub24.i
  store i64 %add17.i, i64* %arrayidx26.i, align 8, !tbaa !13
  %arrayidx19.i = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %u2, i64 0, i32 0, i64 4
  %51 = load i64, i64* %arrayidx19.i, align 8, !tbaa !13
  %add22.i = add i64 %51, %sub32.i
  store i64 %add22.i, i64* %arrayidx34.i, align 8, !tbaa !13
  %arrayidx.i99 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 0
  %52 = load i64, i64* %arrayidx.i99, align 8, !tbaa !13
  %sub.i100 = sub i64 18014381329608892, %52
  %arrayidx2.i101 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 0
  %arrayidx7.i102 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 1
  %53 = load i64, i64* %arrayidx7.i102, align 8, !tbaa !13
  %sub8.i103 = sub i64 18014398509481980, %53
  %arrayidx10.i104 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 1
  %arrayidx15.i105 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 2
  %54 = load i64, i64* %arrayidx15.i105, align 8, !tbaa !13
  %sub16.i106 = sub i64 18014398509481980, %54
  %arrayidx18.i107 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 2
  %arrayidx23.i108 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 3
  %55 = load i64, i64* %arrayidx23.i108, align 8, !tbaa !13
  %sub24.i109 = sub i64 18014398509481980, %55
  %arrayidx26.i110 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 3
  %arrayidx31.i111 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %s2, i64 0, i32 0, i64 4
  %56 = load i64, i64* %arrayidx31.i111, align 8, !tbaa !13
  %sub32.i112 = sub i64 1125899906842620, %56
  %arrayidx34.i113 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %i, i64 0, i32 0, i64 4
  %add.i116 = add i64 %sub.i100, %and11.i81
  store i64 %add.i116, i64* %arrayidx2.i101, align 8, !tbaa !13
  %add7.i119 = add i64 %sub8.i103, %and14.i84
  store i64 %add7.i119, i64* %arrayidx10.i104, align 8, !tbaa !13
  %add12.i122 = add i64 %sub16.i106, %and17.i87
  store i64 %add12.i122, i64* %arrayidx18.i107, align 8, !tbaa !13
  %add17.i125 = add i64 %sub24.i109, %and20.i90
  store i64 %add17.i125, i64* %arrayidx26.i110, align 8, !tbaa !13
  %add22.i128 = add i64 %sub32.i112, %add19.i89
  store i64 %add22.i128, i64* %arrayidx34.i113, align 8, !tbaa !13
  %shr.i131 = lshr i64 %add22.i, 48
  %mul.i132 = mul nuw nsw i64 %shr.i131, 4294968273
  %add.i133 = add i64 %mul.i132, %add.i95
  %and.i134 = and i64 %add.i133, 4503599627370495
  %xor.i = xor i64 %and.i134, 4294968272
  %cmp.i = icmp ne i64 %and.i134, 0
  %cmp3.i = icmp ne i64 %xor.i, 4503599627370495
  %and589.i = and i1 %cmp.i, %cmp3.i
  br i1 %and589.i, label %if.end20, label %secp256k1_fe_normalizes_to_zero_var.exit

secp256k1_fe_normalizes_to_zero_var.exit:         ; preds = %if.end8
  %and12.i = and i64 %add22.i, 281474976710655
  %shr13.i = lshr i64 %add.i133, 52
  %add14.i = add i64 %shr13.i, %add7.i
  %shr15.i138 = lshr i64 %add14.i, 52
  %add16.i139 = add i64 %shr15.i138, %add12.i
  %and17.i140 = and i64 %add14.i, 4503599627370495
  %or.i = or i64 %and17.i140, %and.i134
  %and18.i = and i64 %add14.i, %xor.i
  %shr19.i = lshr i64 %add16.i139, 52
  %add20.i = add i64 %shr19.i, %add17.i
  %and21.i = and i64 %add16.i139, 4503599627370495
  %or22.i = or i64 %or.i, %and21.i
  %and23.i = and i64 %and18.i, %add16.i139
  %shr24.i = lshr i64 %add20.i, 52
  %add25.i = add nuw nsw i64 %shr24.i, %and12.i
  %and26.i = and i64 %add20.i, 4503599627370495
  %or27.i = or i64 %or22.i, %and26.i
  %and28.i = and i64 %and23.i, %add20.i
  %or29.i = or i64 %or27.i, %add25.i
  %xor30.i = xor i64 %add25.i, 4222124650659840
  %and31.i = and i64 %and28.i, %xor30.i
  %cmp35.i = icmp ne i64 %or29.i, 0
  %cmp37.i = icmp ne i64 %and31.i, 4503599627370495
  %tobool14.not = and i1 %cmp35.i, %cmp37.i
  br i1 %tobool14.not, label %if.end20, label %if.then15

if.then15:                                        ; preds = %secp256k1_fe_normalizes_to_zero_var.exit
  %shr.i143 = lshr i64 %add22.i128, 48
  %mul.i144 = mul nuw nsw i64 %shr.i143, 4294968273
  %add.i145 = add i64 %mul.i144, %add.i116
  %and.i146 = and i64 %add.i145, 4503599627370495
  %xor.i147 = xor i64 %and.i146, 4294968272
  %cmp.i148 = icmp ne i64 %and.i146, 0
  %cmp3.i149 = icmp ne i64 %xor.i147, 4503599627370495
  %and589.i150 = and i1 %cmp.i148, %cmp3.i149
  br i1 %and589.i150, label %if.else, label %secp256k1_fe_normalizes_to_zero_var.exit181

secp256k1_fe_normalizes_to_zero_var.exit181:      ; preds = %if.then15
  %and12.i154 = and i64 %add22.i128, 281474976710655
  %shr13.i155 = lshr i64 %add.i145, 52
  %add14.i156 = add i64 %shr13.i155, %add7.i119
  %shr15.i157 = lshr i64 %add14.i156, 52
  %add16.i158 = add i64 %shr15.i157, %add12.i122
  %and17.i159 = and i64 %add14.i156, 4503599627370495
  %or.i160 = or i64 %and17.i159, %and.i146
  %and18.i161 = and i64 %add14.i156, %xor.i147
  %shr19.i162 = lshr i64 %add16.i158, 52
  %add20.i163 = add i64 %shr19.i162, %add17.i125
  %and21.i164 = and i64 %add16.i158, 4503599627370495
  %or22.i165 = or i64 %or.i160, %and21.i164
  %and23.i166 = and i64 %and18.i161, %add16.i158
  %shr24.i167 = lshr i64 %add20.i163, 52
  %add25.i168 = add nuw nsw i64 %shr24.i167, %and12.i154
  %and26.i169 = and i64 %add20.i163, 4503599627370495
  %or27.i170 = or i64 %or22.i165, %and26.i169
  %and28.i171 = and i64 %and23.i166, %add20.i163
  %or29.i172 = or i64 %or27.i170, %add25.i168
  %xor30.i173 = xor i64 %add25.i168, 4222124650659840
  %and31.i174 = and i64 %and28.i171, %xor30.i173
  %cmp35.i175 = icmp ne i64 %or29.i172, 0
  %cmp37.i176 = icmp ne i64 %and31.i174, 4503599627370495
  %tobool17.not = and i1 %cmp35.i175, %cmp37.i176
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %secp256k1_fe_normalizes_to_zero_var.exit181
  tail call fastcc void @secp256k1_gej_double_var(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef nonnull %a, %struct.secp256k1_fe* noundef null)
  br label %cleanup

if.else:                                          ; preds = %if.then15, %secp256k1_fe_normalizes_to_zero_var.exit181
  %infinity.i = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 1, i32* %infinity.i, align 8, !tbaa !65
  %57 = bitcast %struct.secp256k1_gej* %r to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(120) %57, i8 0, i64 120, i1 false) #19
  br label %cleanup

if.end20:                                         ; preds = %if.end8, %secp256k1_fe_normalizes_to_zero_var.exit
  %infinity21 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 3
  store i32 0, i32* %infinity21, align 8, !tbaa !65
  %z22 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 2
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %z22, %struct.secp256k1_fe* noundef nonnull %z9, %struct.secp256k1_fe* noundef nonnull %h)
  %mul.i.i188 = shl i64 %add.i95, 1
  %conv.i.i.i189 = zext i64 %mul.i.i188 to i128
  %conv1.i.i.i190 = zext i64 %add17.i to i128
  %mul.i.i.i191 = mul nuw i128 %conv1.i.i.i190, %conv.i.i.i189
  %mul17.i.i192 = shl i64 %add7.i, 1
  %conv.i215.i.i193 = zext i64 %mul17.i.i192 to i128
  %conv1.i216.i.i194 = zext i64 %add12.i to i128
  %mul.i217.i.i195 = mul nuw i128 %conv1.i216.i.i194, %conv.i215.i.i193
  %add.i.i.i196 = add i128 %mul.i.i.i191, %mul.i217.i.i195
  %conv.i218.i.i197 = zext i64 %add22.i to i128
  %mul.i220.i.i198 = mul nuw i128 %conv.i218.i.i197, %conv.i218.i.i197
  %conv1.i222.i.i199 = and i128 %mul.i220.i.i198, 18446744073709551615
  %mul.i223.i.i200 = mul nuw nsw i128 %conv1.i222.i.i199, 68719492368
  %add.i224.i.i201 = add i128 %add.i.i.i196, %mul.i223.i.i200
  %shr.i.i.i202 = lshr i128 %mul.i220.i.i198, 64
  %shr.i226.i.i203 = lshr i128 %add.i224.i.i201, 52
  %mul37.i.i204 = shl i64 %add22.i, 1
  %conv.i227.i.i205 = zext i64 %add.i95 to i128
  %conv1.i228.i.i206 = zext i64 %mul37.i.i204 to i128
  %mul.i229.i.i207 = mul nuw i128 %conv1.i228.i.i206, %conv.i227.i.i205
  %mul.i233.i.i208 = mul nuw i128 %conv1.i.i.i190, %conv.i215.i.i193
  %mul.i237.i.i209 = mul nuw i128 %conv1.i216.i.i194, %conv1.i216.i.i194
  %mul.i241.i.i210 = mul nuw nsw i128 %shr.i.i.i202, 281475040739328
  %add.i230.i.i211 = add i128 %mul.i233.i.i208, %mul.i237.i.i209
  %add.i234.i.i212 = add i128 %add.i230.i.i211, %mul.i229.i.i207
  %add.i238.i.i213 = add i128 %add.i234.i.i212, %mul.i241.i.i210
  %add.i242.i.i214 = add i128 %add.i238.i.i213, %shr.i226.i.i203
  %conv.i243.i.i215 = trunc i128 %add.i242.i.i214 to i64
  %shr.i244.i.i216 = lshr i128 %add.i242.i.i214, 52
  %and47.i.i217 = lshr i64 %conv.i243.i.i215, 48
  %58 = and i64 %and47.i.i217, 15
  %and54.i.i218 = and i64 %conv.i243.i.i215, 281474976710655
  %mul.i247.i.i219 = mul nuw i128 %conv.i227.i.i205, %conv.i227.i.i205
  %conv.i248.i.i220 = zext i64 %add7.i to i128
  %mul.i250.i.i221 = mul nuw i128 %conv1.i228.i.i206, %conv.i248.i.i220
  %mul64.i.i222 = shl i64 %add12.i, 1
  %conv.i252.i.i223 = zext i64 %mul64.i.i222 to i128
  %mul.i254.i.i224 = mul nuw i128 %conv1.i.i.i190, %conv.i252.i.i223
  %add.i251.i.i225 = add i128 %mul.i250.i.i221, %mul.i254.i.i224
  %add.i255.i.i226 = add i128 %add.i251.i.i225, %shr.i244.i.i216
  %conv.i256.i.i227 = trunc i128 %add.i255.i.i226 to i64
  %shr.i257.i.i228 = lshr i128 %add.i255.i.i226, 52
  %and69.i.i229 = shl i64 %conv.i256.i.i227, 4
  %shl.i.i230 = and i64 %and69.i.i229, 72057594037927920
  %or.i.i231 = or i64 %shl.i.i230, %58
  %conv.i258.i.i232 = zext i64 %or.i.i231 to i128
  %mul.i259.i.i233 = mul nuw nsw i128 %conv.i258.i.i232, 4294968273
  %add.i260.i.i234 = add i128 %mul.i259.i.i233, %mul.i247.i.i219
  %shr.i262.i.i237 = lshr i128 %add.i260.i.i234, 52
  %mul.i265.i.i238 = mul nuw i128 %conv.i248.i.i220, %conv.i.i.i189
  %mul.i269.i.i239 = mul nuw i128 %conv1.i228.i.i206, %conv1.i216.i.i194
  %mul.i273.i.i240 = mul nuw i128 %conv1.i.i.i190, %conv1.i.i.i190
  %add.i270.i.i241 = add i128 %mul.i269.i.i239, %mul.i273.i.i240
  %add.i274.i.i242 = add i128 %add.i270.i.i241, %shr.i257.i.i228
  %conv.i276.i.i243 = and i128 %add.i274.i.i242, 4503599627370495
  %mul.i277.i.i244 = mul nuw nsw i128 %conv.i276.i.i243, 68719492368
  %add.i266.i.i245 = add i128 %mul.i277.i.i244, %mul.i265.i.i238
  %add.i278.i.i246 = add i128 %add.i266.i.i245, %shr.i262.i.i237
  %shr.i279.i.i247 = lshr i128 %add.i274.i.i242, 52
  %59 = insertelement <2 x i128> poison, i128 %add.i260.i.i234, i64 0
  %60 = insertelement <2 x i128> %59, i128 %add.i278.i.i246, i64 1
  %61 = trunc <2 x i128> %60 to <2 x i64>
  %62 = and <2 x i64> %61, <i64 4503599627370495, i64 4503599627370495>
  %shr.i281.i.i251 = lshr i128 %add.i278.i.i246, 52
  %mul.i284.i.i252 = mul nuw i128 %conv1.i216.i.i194, %conv.i.i.i189
  %mul.i288.i.i253 = mul nuw i128 %conv.i248.i.i220, %conv.i248.i.i220
  %mul.i292.i.i254 = mul nuw i128 %conv1.i228.i.i206, %conv1.i.i.i190
  %add.i293.i.i255 = add i128 %shr.i279.i.i247, %mul.i292.i.i254
  %conv1.i295.i.i256 = and i128 %add.i293.i.i255, 18446744073709551615
  %mul.i296.i.i257 = mul nuw nsw i128 %conv1.i295.i.i256, 68719492368
  %add.i285.i.i258 = add i128 %mul.i284.i.i252, %mul.i288.i.i253
  %add.i289.i.i259 = add i128 %add.i285.i.i258, %mul.i296.i.i257
  %add.i297.i.i260 = add i128 %add.i289.i.i259, %shr.i281.i.i251
  %shr.i298.i.i261 = lshr i128 %add.i293.i.i255, 64
  %arrayidx130.i.i264 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h2, i64 0, i32 0, i64 2
  %shr.i300.i.i265 = lshr i128 %add.i297.i.i260, 52
  %mul.i303.i.i266 = mul nuw nsw i128 %shr.i298.i.i261, 281475040739328
  %conv.i305.i.i267 = and i128 %add.i224.i.i201, 4503599627370494
  %add.i304.i.i268 = add nuw nsw i128 %mul.i303.i.i266, %conv.i305.i.i267
  %add.i306.i.i269 = add nuw nsw i128 %add.i304.i.i268, %shr.i300.i.i265
  %63 = insertelement <2 x i128> poison, i128 %add.i297.i.i260, i64 0
  %64 = insertelement <2 x i128> %63, i128 %add.i306.i.i269, i64 1
  %65 = trunc <2 x i128> %64 to <2 x i64>
  %66 = and <2 x i64> %65, <i64 4503599627370495, i64 4503599627370495>
  %shr.i308.i.i273 = lshr i128 %add.i306.i.i269, 52
  %conv.i309.i.i274 = trunc i128 %shr.i308.i.i273 to i64
  %add.i.i275 = add nuw nsw i64 %and54.i.i218, %conv.i309.i.i274
  %arrayidx151.i.i276 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h2, i64 0, i32 0, i64 4
  %67 = sub nuw nsw <2 x i64> <i64 18014381329608892, i64 18014398509481980>, %62
  %68 = bitcast %struct.secp256k1_fe* %h2 to <2 x i64>*
  store <2 x i64> %67, <2 x i64>* %68, align 16, !tbaa !13
  %69 = sub nuw nsw <2 x i64> <i64 18014398509481980, i64 18014398509481980>, %66
  %70 = bitcast i64* %arrayidx130.i.i264 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 16, !tbaa !13
  %sub32.i290 = sub nsw i64 1125899906842620, %add.i.i275
  store i64 %sub32.i290, i64* %arrayidx151.i.i276, align 16, !tbaa !13
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %h3, %struct.secp256k1_fe* noundef nonnull %h2, %struct.secp256k1_fe* noundef nonnull %h)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %t, %struct.secp256k1_fe* noundef nonnull %u1, %struct.secp256k1_fe* noundef nonnull %h2)
  %x24 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0
  call fastcc void @secp256k1_fe_sqr(%struct.secp256k1_fe* noundef %x24, %struct.secp256k1_fe* noundef nonnull %i)
  %71 = bitcast %struct.secp256k1_fe* %h3 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 16, !tbaa !13
  %73 = bitcast %struct.secp256k1_gej* %r to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !tbaa !13
  %75 = add <2 x i64> %74, %72
  %arrayidx9.i298 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h3, i64 0, i32 0, i64 2
  %arrayidx11.i299 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 2
  %76 = bitcast i64* %arrayidx9.i298 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 16, !tbaa !13
  %78 = bitcast i64* %arrayidx11.i299 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8, !tbaa !13
  %80 = add <2 x i64> %79, %77
  %arrayidx19.i304 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %h3, i64 0, i32 0, i64 4
  %81 = load i64, i64* %arrayidx19.i304, align 16, !tbaa !13
  %arrayidx21.i305 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 0, i32 0, i64 4
  %82 = load i64, i64* %arrayidx21.i305, align 8, !tbaa !13
  %add22.i306 = add i64 %82, %81
  %83 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 16, !tbaa !13
  %arrayidx9.i313 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 2
  %85 = bitcast i64* %arrayidx9.i313 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 16, !tbaa !13
  %arrayidx19.i319 = getelementptr inbounds %struct.secp256k1_fe, %struct.secp256k1_fe* %t, i64 0, i32 0, i64 4
  %87 = load i64, i64* %arrayidx19.i319, align 16, !tbaa !13
  %88 = shl <2 x i64> %84, <i64 1, i64 1>
  %89 = add <2 x i64> %75, %88
  %90 = bitcast %struct.secp256k1_gej* %r to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8, !tbaa !13
  %91 = shl <2 x i64> %86, <i64 1, i64 1>
  %92 = add <2 x i64> %80, %91
  %93 = bitcast i64* %arrayidx11.i299 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %93, align 8, !tbaa !13
  %reass.add374 = shl i64 %87, 1
  %add22.i336 = add i64 %add22.i306, %reass.add374
  store i64 %add22.i336, i64* %arrayidx21.i305, align 8, !tbaa !13
  %94 = add <2 x i64> %89, %84
  %95 = bitcast %struct.secp256k1_fe* %t to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %95, align 16, !tbaa !13
  %96 = add <2 x i64> %92, %86
  %97 = bitcast i64* %arrayidx9.i313 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 16, !tbaa !13
  %add22.i351 = add i64 %add22.i336, %87
  store i64 %add22.i351, i64* %arrayidx19.i319, align 16, !tbaa !13
  %y29 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %y29, %struct.secp256k1_fe* noundef nonnull %t, %struct.secp256k1_fe* noundef nonnull %i)
  call fastcc void @secp256k1_fe_mul(%struct.secp256k1_fe* noundef nonnull %h3, %struct.secp256k1_fe* noundef nonnull %h3, %struct.secp256k1_fe* noundef nonnull %s1)
  %98 = bitcast %struct.secp256k1_fe* %h3 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 16, !tbaa !13
  %100 = bitcast %struct.secp256k1_fe* %y29 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !tbaa !13
  %102 = add <2 x i64> %101, %99
  %103 = bitcast %struct.secp256k1_fe* %y29 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %103, align 8, !tbaa !13
  %arrayidx11.i359 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 2
  %104 = bitcast i64* %arrayidx9.i298 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 16, !tbaa !13
  %106 = bitcast i64* %arrayidx11.i359 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !tbaa !13
  %108 = add <2 x i64> %107, %105
  %109 = bitcast i64* %arrayidx11.i359 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %109, align 8, !tbaa !13
  %110 = load i64, i64* %arrayidx19.i304, align 16, !tbaa !13
  %arrayidx21.i365 = getelementptr inbounds %struct.secp256k1_gej, %struct.secp256k1_gej* %r, i64 0, i32 1, i32 0, i64 4
  %111 = load i64, i64* %arrayidx21.i365, align 8, !tbaa !13
  %add22.i366 = add i64 %111, %110
  store i64 %add22.i366, i64* %arrayidx21.i365, align 8, !tbaa !13
  br label %cleanup

cleanup:                                          ; preds = %if.then18, %if.else, %if.end20, %if.then7, %if.then
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_rfc6979_hmac_sha256_initialize(%struct.secp256k1_rfc6979_hmac_sha256* nocapture noundef %rng, i8* nocapture noundef readonly %key, i64 noundef %keylen) unnamed_addr #9 {
iter.check:
  %rkey.i117 = alloca [64 x i8], align 16
  %rkey.i80 = alloca [64 x i8], align 16
  %rkey.i45 = alloca [64 x i8], align 16
  %rkey.i = alloca [64 x i8], align 16
  %hmac = alloca %struct.secp256k1_hmac_sha256, align 16
  %0 = bitcast %struct.secp256k1_hmac_sha256* %hmac to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %0) #19
  %arraydecay = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %arraydecay, i8 1, i64 32, i1 false)
  %arraydecay1 = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %arraydecay1, i8 0, i64 32, i1 false)
  %1 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #19
  %outer.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 1
  %2 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(64) %2, i8 0, i64 64, i1 false)
  %3 = bitcast %struct.secp256k1_sha256* %outer.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %3, align 8, !tbaa !3
  %arrayidx8.i.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 1, i32 0, i64 4
  %4 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %4, align 8, !tbaa !3
  %bytes.i.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 1, i32 2
  store i64 0, i64* %bytes.i.i, align 8, !tbaa !7
  %5 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  %wide.load = load <16 x i8>, <16 x i8>* %5, align 16, !tbaa !10
  %6 = xor <16 x i8> %wide.load, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %7 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  store <16 x i8> %6, <16 x i8>* %7, align 16, !tbaa !10
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 16
  %9 = bitcast i8* %8 to <16 x i8>*
  %wide.load.1 = load <16 x i8>, <16 x i8>* %9, align 16, !tbaa !10
  %10 = xor <16 x i8> %wide.load.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %11 = bitcast i8* %8 to <16 x i8>*
  store <16 x i8> %10, <16 x i8>* %11, align 16, !tbaa !10
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 32
  %13 = bitcast i8* %12 to <16 x i8>*
  %wide.load.2 = load <16 x i8>, <16 x i8>* %13, align 16, !tbaa !10
  %14 = xor <16 x i8> %wide.load.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %15 = bitcast i8* %12 to <16 x i8>*
  store <16 x i8> %14, <16 x i8>* %15, align 16, !tbaa !10
  %16 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 48
  %17 = bitcast i8* %16 to <16 x i8>*
  %wide.load.3 = load <16 x i8>, <16 x i8>* %17, align 16, !tbaa !10
  %18 = xor <16 x i8> %wide.load.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %19 = bitcast i8* %16 to <16 x i8>*
  store <16 x i8> %18, <16 x i8>* %19, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i, i8* noundef nonnull %1, i64 noundef 64) #19
  %20 = bitcast %struct.secp256k1_hmac_sha256* %hmac to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %20, align 16, !tbaa !3
  %arrayidx8.i5.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 0, i32 0, i64 4
  %21 = bitcast i32* %arrayidx8.i5.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %21, align 16, !tbaa !3
  %bytes.i9.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 0, i32 2
  store i64 0, i64* %bytes.i9.i, align 16, !tbaa !7
  %22 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  %wide.load164 = load <16 x i8>, <16 x i8>* %22, align 16, !tbaa !10
  %23 = xor <16 x i8> %wide.load164, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %24 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  store <16 x i8> %23, <16 x i8>* %24, align 16, !tbaa !10
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 16
  %26 = bitcast i8* %25 to <16 x i8>*
  %wide.load164.1 = load <16 x i8>, <16 x i8>* %26, align 16, !tbaa !10
  %27 = xor <16 x i8> %wide.load164.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %28 = bitcast i8* %25 to <16 x i8>*
  store <16 x i8> %27, <16 x i8>* %28, align 16, !tbaa !10
  %29 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 32
  %30 = bitcast i8* %29 to <16 x i8>*
  %wide.load164.2 = load <16 x i8>, <16 x i8>* %30, align 16, !tbaa !10
  %31 = xor <16 x i8> %wide.load164.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %32 = bitcast i8* %29 to <16 x i8>*
  store <16 x i8> %31, <16 x i8>* %32, align 16, !tbaa !10
  %33 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 48
  %34 = bitcast i8* %33 to <16 x i8>*
  %wide.load164.3 = load <16 x i8>, <16 x i8>* %34, align 16, !tbaa !10
  %35 = xor <16 x i8> %wide.load164.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %36 = bitcast i8* %33 to <16 x i8>*
  store <16 x i8> %35, <16 x i8>* %36, align 16, !tbaa !10
  %inner.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 0
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef nonnull %1, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %arraydecay, i64 noundef 32) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @secp256k1_rfc6979_hmac_sha256_initialize.zero, i64 0, i64 0), i64 noundef 1) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %key, i64 noundef %keylen) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac, i8* noundef nonnull %arraydecay1)
  %37 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %37) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %37, i8* noundef nonnull align 1 dereferenceable(32) %arraydecay1, i64 32, i1 false) #19
  %add.ptr.i46 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i46, i8 0, i64 32, i1 false) #19
  %38 = bitcast %struct.secp256k1_sha256* %outer.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %38, align 8, !tbaa !3
  %39 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %39, align 8, !tbaa !3
  store i64 0, i64* %bytes.i.i, align 8, !tbaa !7
  %40 = bitcast [64 x i8]* %rkey.i45 to <16 x i8>*
  %wide.load185 = load <16 x i8>, <16 x i8>* %40, align 16, !tbaa !10
  %41 = xor <16 x i8> %wide.load185, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %42 = bitcast [64 x i8]* %rkey.i45 to <16 x i8>*
  store <16 x i8> %41, <16 x i8>* %42, align 16, !tbaa !10
  %43 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 16
  %44 = bitcast i8* %43 to <16 x i8>*
  %wide.load185.1 = load <16 x i8>, <16 x i8>* %44, align 16, !tbaa !10
  %45 = xor <16 x i8> %wide.load185.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %46 = bitcast i8* %43 to <16 x i8>*
  store <16 x i8> %45, <16 x i8>* %46, align 16, !tbaa !10
  %47 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 32
  %48 = bitcast i8* %47 to <16 x i8>*
  %wide.load185.2 = load <16 x i8>, <16 x i8>* %48, align 16, !tbaa !10
  %49 = xor <16 x i8> %wide.load185.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %50 = bitcast i8* %47 to <16 x i8>*
  store <16 x i8> %49, <16 x i8>* %50, align 16, !tbaa !10
  %51 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 48
  %52 = bitcast i8* %51 to <16 x i8>*
  %wide.load185.3 = load <16 x i8>, <16 x i8>* %52, align 16, !tbaa !10
  %53 = xor <16 x i8> %wide.load185.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %54 = bitcast i8* %51 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %54, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i, i8* noundef nonnull %37, i64 noundef 64) #19
  %55 = bitcast %struct.secp256k1_hmac_sha256* %hmac to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %55, align 16, !tbaa !3
  %56 = bitcast i32* %arrayidx8.i5.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %56, align 16, !tbaa !3
  store i64 0, i64* %bytes.i9.i, align 16, !tbaa !7
  %57 = bitcast [64 x i8]* %rkey.i45 to <16 x i8>*
  %wide.load206 = load <16 x i8>, <16 x i8>* %57, align 16, !tbaa !10
  %58 = xor <16 x i8> %wide.load206, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %59 = bitcast [64 x i8]* %rkey.i45 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %59, align 16, !tbaa !10
  %60 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %wide.load206.1 = load <16 x i8>, <16 x i8>* %61, align 16, !tbaa !10
  %62 = xor <16 x i8> %wide.load206.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %63 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %63, align 16, !tbaa !10
  %64 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 32
  %65 = bitcast i8* %64 to <16 x i8>*
  %wide.load206.2 = load <16 x i8>, <16 x i8>* %65, align 16, !tbaa !10
  %66 = xor <16 x i8> %wide.load206.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %67 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %67, align 16, !tbaa !10
  %68 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i45, i64 0, i64 48
  %69 = bitcast i8* %68 to <16 x i8>*
  %wide.load206.3 = load <16 x i8>, <16 x i8>* %69, align 16, !tbaa !10
  %70 = xor <16 x i8> %wide.load206.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %71 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %71, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef nonnull %37, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %37) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %arraydecay, i64 noundef 32) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac, i8* noundef %arraydecay)
  %72 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %72) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %72, i8* noundef nonnull align 1 dereferenceable(32) %arraydecay1, i64 32, i1 false) #19
  %add.ptr.i81 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i81, i8 0, i64 32, i1 false) #19
  %73 = bitcast %struct.secp256k1_sha256* %outer.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %73, align 8, !tbaa !3
  %74 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %74, align 8, !tbaa !3
  store i64 0, i64* %bytes.i.i, align 8, !tbaa !7
  %75 = bitcast [64 x i8]* %rkey.i80 to <16 x i8>*
  %wide.load227 = load <16 x i8>, <16 x i8>* %75, align 16, !tbaa !10
  %76 = xor <16 x i8> %wide.load227, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %77 = bitcast [64 x i8]* %rkey.i80 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %77, align 16, !tbaa !10
  %78 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  %wide.load227.1 = load <16 x i8>, <16 x i8>* %79, align 16, !tbaa !10
  %80 = xor <16 x i8> %wide.load227.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %81 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %80, <16 x i8>* %81, align 16, !tbaa !10
  %82 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 32
  %83 = bitcast i8* %82 to <16 x i8>*
  %wide.load227.2 = load <16 x i8>, <16 x i8>* %83, align 16, !tbaa !10
  %84 = xor <16 x i8> %wide.load227.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %85 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %85, align 16, !tbaa !10
  %86 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 48
  %87 = bitcast i8* %86 to <16 x i8>*
  %wide.load227.3 = load <16 x i8>, <16 x i8>* %87, align 16, !tbaa !10
  %88 = xor <16 x i8> %wide.load227.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %89 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %89, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i, i8* noundef nonnull %72, i64 noundef 64) #19
  %90 = bitcast %struct.secp256k1_hmac_sha256* %hmac to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %90, align 16, !tbaa !3
  %91 = bitcast i32* %arrayidx8.i5.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %91, align 16, !tbaa !3
  store i64 0, i64* %bytes.i9.i, align 16, !tbaa !7
  %92 = bitcast [64 x i8]* %rkey.i80 to <16 x i8>*
  %wide.load248 = load <16 x i8>, <16 x i8>* %92, align 16, !tbaa !10
  %93 = xor <16 x i8> %wide.load248, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %94 = bitcast [64 x i8]* %rkey.i80 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %94, align 16, !tbaa !10
  %95 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  %wide.load248.1 = load <16 x i8>, <16 x i8>* %96, align 16, !tbaa !10
  %97 = xor <16 x i8> %wide.load248.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %98 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %98, align 16, !tbaa !10
  %99 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 32
  %100 = bitcast i8* %99 to <16 x i8>*
  %wide.load248.2 = load <16 x i8>, <16 x i8>* %100, align 16, !tbaa !10
  %101 = xor <16 x i8> %wide.load248.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %102 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %102, align 16, !tbaa !10
  %103 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i80, i64 0, i64 48
  %104 = bitcast i8* %103 to <16 x i8>*
  %wide.load248.3 = load <16 x i8>, <16 x i8>* %104, align 16, !tbaa !10
  %105 = xor <16 x i8> %wide.load248.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %106 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %105, <16 x i8>* %106, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef nonnull %72, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %72) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %arraydecay, i64 noundef 32) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @secp256k1_rfc6979_hmac_sha256_initialize.one, i64 0, i64 0), i64 noundef 1) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %key, i64 noundef %keylen) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac, i8* noundef nonnull %arraydecay1)
  %107 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %107) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %107, i8* noundef nonnull align 1 dereferenceable(32) %arraydecay1, i64 32, i1 false) #19
  %add.ptr.i118 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i118, i8 0, i64 32, i1 false) #19
  %108 = bitcast %struct.secp256k1_sha256* %outer.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %108, align 8, !tbaa !3
  %109 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %109, align 8, !tbaa !3
  store i64 0, i64* %bytes.i.i, align 8, !tbaa !7
  %110 = bitcast [64 x i8]* %rkey.i117 to <16 x i8>*
  %wide.load269 = load <16 x i8>, <16 x i8>* %110, align 16, !tbaa !10
  %111 = xor <16 x i8> %wide.load269, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %112 = bitcast [64 x i8]* %rkey.i117 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %112, align 16, !tbaa !10
  %113 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %wide.load269.1 = load <16 x i8>, <16 x i8>* %114, align 16, !tbaa !10
  %115 = xor <16 x i8> %wide.load269.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %116 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %116, align 16, !tbaa !10
  %117 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 32
  %118 = bitcast i8* %117 to <16 x i8>*
  %wide.load269.2 = load <16 x i8>, <16 x i8>* %118, align 16, !tbaa !10
  %119 = xor <16 x i8> %wide.load269.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %120 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %120, align 16, !tbaa !10
  %121 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 48
  %122 = bitcast i8* %121 to <16 x i8>*
  %wide.load269.3 = load <16 x i8>, <16 x i8>* %122, align 16, !tbaa !10
  %123 = xor <16 x i8> %wide.load269.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %124 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %124, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i, i8* noundef nonnull %107, i64 noundef 64) #19
  %125 = bitcast %struct.secp256k1_hmac_sha256* %hmac to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %125, align 16, !tbaa !3
  %126 = bitcast i32* %arrayidx8.i5.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %126, align 16, !tbaa !3
  store i64 0, i64* %bytes.i9.i, align 16, !tbaa !7
  %127 = bitcast [64 x i8]* %rkey.i117 to <16 x i8>*
  %wide.load290 = load <16 x i8>, <16 x i8>* %127, align 16, !tbaa !10
  %128 = xor <16 x i8> %wide.load290, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %129 = bitcast [64 x i8]* %rkey.i117 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %129, align 16, !tbaa !10
  %130 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  %wide.load290.1 = load <16 x i8>, <16 x i8>* %131, align 16, !tbaa !10
  %132 = xor <16 x i8> %wide.load290.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %133 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %133, align 16, !tbaa !10
  %134 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 32
  %135 = bitcast i8* %134 to <16 x i8>*
  %wide.load290.2 = load <16 x i8>, <16 x i8>* %135, align 16, !tbaa !10
  %136 = xor <16 x i8> %wide.load290.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %137 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %137, align 16, !tbaa !10
  %138 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i117, i64 0, i64 48
  %139 = bitcast i8* %138 to <16 x i8>*
  %wide.load290.3 = load <16 x i8>, <16 x i8>* %139, align 16, !tbaa !10
  %140 = xor <16 x i8> %wide.load290.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %141 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %141, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef nonnull %107, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %107) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %arraydecay, i64 noundef 32) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac, i8* noundef %arraydecay)
  %retry = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 2
  store i32 0, i32* %retry, align 4, !tbaa !90
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_rfc6979_hmac_sha256_generate(%struct.secp256k1_rfc6979_hmac_sha256* nocapture noundef %rng, i8* nocapture noundef writeonly %out) unnamed_addr #9 {
entry:
  %rkey.i38 = alloca [64 x i8], align 16
  %rkey.i3 = alloca [64 x i8], align 16
  %rkey.i = alloca [64 x i8], align 16
  %hmac = alloca %struct.secp256k1_hmac_sha256, align 16
  %hmac10 = alloca %struct.secp256k1_hmac_sha256, align 16
  %retry = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 2
  %0 = load i32, i32* %retry, align 4, !tbaa !90
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %iter.check145, label %iter.check

iter.check:                                       ; preds = %entry
  %1 = bitcast %struct.secp256k1_hmac_sha256* %hmac to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %1) #19
  %arraydecay = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 1, i64 0
  %2 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %2, i8* noundef nonnull align 1 dereferenceable(32) %arraydecay, i64 32, i1 false) #19
  %add.ptr.i = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i, i8 0, i64 32, i1 false) #19
  %outer.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 1
  %3 = bitcast %struct.secp256k1_sha256* %outer.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %3, align 8, !tbaa !3
  %arrayidx8.i.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 1, i32 0, i64 4
  %4 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %4, align 8, !tbaa !3
  %bytes.i.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 1, i32 2
  store i64 0, i64* %bytes.i.i, align 8, !tbaa !7
  %5 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  %wide.load = load <16 x i8>, <16 x i8>* %5, align 16, !tbaa !10
  %6 = xor <16 x i8> %wide.load, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %7 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  store <16 x i8> %6, <16 x i8>* %7, align 16, !tbaa !10
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 16
  %9 = bitcast i8* %8 to <16 x i8>*
  %wide.load.1 = load <16 x i8>, <16 x i8>* %9, align 16, !tbaa !10
  %10 = xor <16 x i8> %wide.load.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %11 = bitcast i8* %8 to <16 x i8>*
  store <16 x i8> %10, <16 x i8>* %11, align 16, !tbaa !10
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 32
  %13 = bitcast i8* %12 to <16 x i8>*
  %wide.load.2 = load <16 x i8>, <16 x i8>* %13, align 16, !tbaa !10
  %14 = xor <16 x i8> %wide.load.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %15 = bitcast i8* %12 to <16 x i8>*
  store <16 x i8> %14, <16 x i8>* %15, align 16, !tbaa !10
  %16 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 48
  %17 = bitcast i8* %16 to <16 x i8>*
  %wide.load.3 = load <16 x i8>, <16 x i8>* %17, align 16, !tbaa !10
  %18 = xor <16 x i8> %wide.load.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %19 = bitcast i8* %16 to <16 x i8>*
  store <16 x i8> %18, <16 x i8>* %19, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i, i8* noundef nonnull %2, i64 noundef 64) #19
  %20 = bitcast %struct.secp256k1_hmac_sha256* %hmac to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %20, align 16, !tbaa !3
  %arrayidx8.i5.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 0, i32 0, i64 4
  %21 = bitcast i32* %arrayidx8.i5.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %21, align 16, !tbaa !3
  %bytes.i9.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 0, i32 2
  store i64 0, i64* %bytes.i9.i, align 16, !tbaa !7
  %22 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  %wide.load87 = load <16 x i8>, <16 x i8>* %22, align 16, !tbaa !10
  %23 = xor <16 x i8> %wide.load87, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %24 = bitcast [64 x i8]* %rkey.i to <16 x i8>*
  store <16 x i8> %23, <16 x i8>* %24, align 16, !tbaa !10
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 16
  %26 = bitcast i8* %25 to <16 x i8>*
  %wide.load87.1 = load <16 x i8>, <16 x i8>* %26, align 16, !tbaa !10
  %27 = xor <16 x i8> %wide.load87.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %28 = bitcast i8* %25 to <16 x i8>*
  store <16 x i8> %27, <16 x i8>* %28, align 16, !tbaa !10
  %29 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 32
  %30 = bitcast i8* %29 to <16 x i8>*
  %wide.load87.2 = load <16 x i8>, <16 x i8>* %30, align 16, !tbaa !10
  %31 = xor <16 x i8> %wide.load87.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %32 = bitcast i8* %29 to <16 x i8>*
  store <16 x i8> %31, <16 x i8>* %32, align 16, !tbaa !10
  %33 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i, i64 0, i64 48
  %34 = bitcast i8* %33 to <16 x i8>*
  %wide.load87.3 = load <16 x i8>, <16 x i8>* %34, align 16, !tbaa !10
  %35 = xor <16 x i8> %wide.load87.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %36 = bitcast i8* %33 to <16 x i8>*
  store <16 x i8> %35, <16 x i8>* %36, align 16, !tbaa !10
  %inner.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac, i64 0, i32 0
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef nonnull %2, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #19
  %arraydecay1 = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 0, i64 0
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %arraydecay1, i64 noundef 32) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @secp256k1_rfc6979_hmac_sha256_generate.zero, i64 0, i64 0), i64 noundef 1) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac, i8* noundef nonnull %arraydecay)
  %37 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %37) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %37, i8* noundef nonnull align 1 dereferenceable(32) %arraydecay, i64 32, i1 false) #19
  %add.ptr.i4 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i4, i8 0, i64 32, i1 false) #19
  %38 = bitcast %struct.secp256k1_sha256* %outer.i to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %38, align 8, !tbaa !3
  %39 = bitcast i32* %arrayidx8.i.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %39, align 8, !tbaa !3
  store i64 0, i64* %bytes.i.i, align 8, !tbaa !7
  %40 = bitcast [64 x i8]* %rkey.i3 to <16 x i8>*
  %wide.load108 = load <16 x i8>, <16 x i8>* %40, align 16, !tbaa !10
  %41 = xor <16 x i8> %wide.load108, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %42 = bitcast [64 x i8]* %rkey.i3 to <16 x i8>*
  store <16 x i8> %41, <16 x i8>* %42, align 16, !tbaa !10
  %43 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 16
  %44 = bitcast i8* %43 to <16 x i8>*
  %wide.load108.1 = load <16 x i8>, <16 x i8>* %44, align 16, !tbaa !10
  %45 = xor <16 x i8> %wide.load108.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %46 = bitcast i8* %43 to <16 x i8>*
  store <16 x i8> %45, <16 x i8>* %46, align 16, !tbaa !10
  %47 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 32
  %48 = bitcast i8* %47 to <16 x i8>*
  %wide.load108.2 = load <16 x i8>, <16 x i8>* %48, align 16, !tbaa !10
  %49 = xor <16 x i8> %wide.load108.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %50 = bitcast i8* %47 to <16 x i8>*
  store <16 x i8> %49, <16 x i8>* %50, align 16, !tbaa !10
  %51 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 48
  %52 = bitcast i8* %51 to <16 x i8>*
  %wide.load108.3 = load <16 x i8>, <16 x i8>* %52, align 16, !tbaa !10
  %53 = xor <16 x i8> %wide.load108.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %54 = bitcast i8* %51 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %54, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i, i8* noundef nonnull %37, i64 noundef 64) #19
  %55 = bitcast %struct.secp256k1_hmac_sha256* %hmac to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %55, align 16, !tbaa !3
  %56 = bitcast i32* %arrayidx8.i5.i to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %56, align 16, !tbaa !3
  store i64 0, i64* %bytes.i9.i, align 16, !tbaa !7
  %57 = bitcast [64 x i8]* %rkey.i3 to <16 x i8>*
  %wide.load129 = load <16 x i8>, <16 x i8>* %57, align 16, !tbaa !10
  %58 = xor <16 x i8> %wide.load129, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %59 = bitcast [64 x i8]* %rkey.i3 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %59, align 16, !tbaa !10
  %60 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %wide.load129.1 = load <16 x i8>, <16 x i8>* %61, align 16, !tbaa !10
  %62 = xor <16 x i8> %wide.load129.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %63 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %63, align 16, !tbaa !10
  %64 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 32
  %65 = bitcast i8* %64 to <16 x i8>*
  %wide.load129.2 = load <16 x i8>, <16 x i8>* %65, align 16, !tbaa !10
  %66 = xor <16 x i8> %wide.load129.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %67 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %67, align 16, !tbaa !10
  %68 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i3, i64 0, i64 48
  %69 = bitcast i8* %68 to <16 x i8>*
  %wide.load129.3 = load <16 x i8>, <16 x i8>* %69, align 16, !tbaa !10
  %70 = xor <16 x i8> %wide.load129.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %71 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %71, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef nonnull %37, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %37) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i, i8* noundef %arraydecay1, i64 noundef 32) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac, i8* noundef %arraydecay1)
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %1) #19
  br label %iter.check145

iter.check145:                                    ; preds = %iter.check, %entry
  %72 = bitcast %struct.secp256k1_hmac_sha256* %hmac10 to i8*
  %arraydecay12 = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 1, i64 0
  %73 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 0
  %add.ptr.i39 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 32
  %outer.i40 = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac10, i64 0, i32 1
  %arrayidx8.i.i45 = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac10, i64 0, i32 1, i32 0, i64 4
  %bytes.i.i49 = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac10, i64 0, i32 1, i32 2
  %inner.i70 = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac10, i64 0, i32 0
  %arraydecay14 = getelementptr inbounds %struct.secp256k1_rfc6979_hmac_sha256, %struct.secp256k1_rfc6979_hmac_sha256* %rng, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %72) #19
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %73) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %73, i8* noundef nonnull align 1 dereferenceable(32) %arraydecay12, i64 32, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %add.ptr.i39, i8 0, i64 32, i1 false) #19
  %74 = bitcast %struct.secp256k1_sha256* %outer.i40 to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %74, align 8, !tbaa !3
  %75 = bitcast i32* %arrayidx8.i.i45 to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %75, align 8, !tbaa !3
  store i64 0, i64* %bytes.i.i49, align 8, !tbaa !7
  %bytes.i9.i63 = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac10, i64 0, i32 0, i32 2
  %arrayidx8.i5.i59 = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hmac10, i64 0, i32 0, i32 0, i64 4
  %76 = bitcast [64 x i8]* %rkey.i38 to <16 x i8>*
  %wide.load150 = load <16 x i8>, <16 x i8>* %76, align 16, !tbaa !10
  %77 = xor <16 x i8> %wide.load150, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %78 = bitcast [64 x i8]* %rkey.i38 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %78, align 16, !tbaa !10
  %79 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %wide.load150.1 = load <16 x i8>, <16 x i8>* %80, align 16, !tbaa !10
  %81 = xor <16 x i8> %wide.load150.1, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %82 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %82, align 16, !tbaa !10
  %83 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 32
  %84 = bitcast i8* %83 to <16 x i8>*
  %wide.load150.2 = load <16 x i8>, <16 x i8>* %84, align 16, !tbaa !10
  %85 = xor <16 x i8> %wide.load150.2, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %86 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %86, align 16, !tbaa !10
  %87 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 48
  %88 = bitcast i8* %87 to <16 x i8>*
  %wide.load150.3 = load <16 x i8>, <16 x i8>* %88, align 16, !tbaa !10
  %89 = xor <16 x i8> %wide.load150.3, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %90 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %90, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer.i40, i8* noundef nonnull %73, i64 noundef 64) #19
  %91 = bitcast %struct.secp256k1_hmac_sha256* %hmac10 to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %91, align 16, !tbaa !3
  %92 = bitcast i32* %arrayidx8.i5.i59 to <4 x i32>*
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %92, align 16, !tbaa !3
  store i64 0, i64* %bytes.i9.i63, align 16, !tbaa !7
  %93 = bitcast [64 x i8]* %rkey.i38 to <16 x i8>*
  %wide.load171 = load <16 x i8>, <16 x i8>* %93, align 16, !tbaa !10
  %94 = xor <16 x i8> %wide.load171, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %95 = bitcast [64 x i8]* %rkey.i38 to <16 x i8>*
  store <16 x i8> %94, <16 x i8>* %95, align 16, !tbaa !10
  %96 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  %wide.load171.1 = load <16 x i8>, <16 x i8>* %97, align 16, !tbaa !10
  %98 = xor <16 x i8> %wide.load171.1, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %99 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %99, align 16, !tbaa !10
  %100 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 32
  %101 = bitcast i8* %100 to <16 x i8>*
  %wide.load171.2 = load <16 x i8>, <16 x i8>* %101, align 16, !tbaa !10
  %102 = xor <16 x i8> %wide.load171.2, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %103 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %102, <16 x i8>* %103, align 16, !tbaa !10
  %104 = getelementptr inbounds [64 x i8], [64 x i8]* %rkey.i38, i64 0, i64 48
  %105 = bitcast i8* %104 to <16 x i8>*
  %wide.load171.3 = load <16 x i8>, <16 x i8>* %105, align 16, !tbaa !10
  %106 = xor <16 x i8> %wide.load171.3, <i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106, i8 106>
  %107 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %107, align 16, !tbaa !10
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i70, i8* noundef nonnull %73, i64 noundef 64) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %73) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %inner.i70, i8* noundef %arraydecay14, i64 noundef 32) #19
  call fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef nonnull %hmac10, i8* noundef %arraydecay14)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(32) %out, i8* noundef nonnull align 4 dereferenceable(32) %arraydecay14, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %72) #19
  store i32 1, i32* %retry, align 4, !tbaa !90
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_hmac_sha256_finalize(%struct.secp256k1_hmac_sha256* noundef %hash, i8* nocapture noundef writeonly %out32) unnamed_addr #9 {
entry:
  %sizedesc.i = alloca [8 x i8], align 1
  %temp = alloca [32 x i8], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  %inner = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0
  %1 = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  %bytes.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 2
  %2 = load i64, i64* %bytes.i, align 8, !tbaa !7
  %shr.i = lshr i64 %2, 29
  %conv.i.i = trunc i64 %shr.i to i8
  %arrayidx.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 3
  store i8 %conv.i.i, i8* %arrayidx.i.i, align 1, !tbaa !10
  %shr.i48.i = lshr i64 %2, 37
  %conv1.i.i = trunc i64 %shr.i48.i to i8
  %arrayidx2.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 2
  store i8 %conv1.i.i, i8* %arrayidx2.i.i, align 1, !tbaa !10
  %shr3.i49.i = lshr i64 %2, 45
  %conv4.i.i = trunc i64 %shr3.i49.i to i8
  %arrayidx5.i.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 1
  store i8 %conv4.i.i, i8* %arrayidx5.i.i, align 1, !tbaa !10
  %shr6.i50.i = lshr i64 %2, 53
  %conv7.i.i = trunc i64 %shr6.i50.i to i8
  store i8 %conv7.i.i, i8* %1, align 1, !tbaa !10
  %arrayidx3.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 4
  %.tr.i = trunc i64 %2 to i32
  %conv5.i = shl i32 %.tr.i, 3
  %conv.i28.i = trunc i32 %conv5.i to i8
  %arrayidx.i29.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 7
  store i8 %conv.i28.i, i8* %arrayidx.i29.i, align 1, !tbaa !10
  %shr.i30.i = lshr i32 %conv5.i, 8
  %conv1.i31.i = trunc i32 %shr.i30.i to i8
  %arrayidx2.i32.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 6
  store i8 %conv1.i31.i, i8* %arrayidx2.i32.i, align 1, !tbaa !10
  %shr3.i33.i = lshr i32 %conv5.i, 16
  %conv4.i34.i = trunc i32 %shr3.i33.i to i8
  %arrayidx5.i35.i = getelementptr inbounds [8 x i8], [8 x i8]* %sizedesc.i, i64 0, i64 5
  store i8 %conv4.i34.i, i8* %arrayidx5.i35.i, align 1, !tbaa !10
  %shr6.i36.i = lshr i32 %conv5.i, 24
  %conv7.i37.i = trunc i32 %shr6.i36.i to i8
  store i8 %conv7.i37.i, i8* %arrayidx3.i, align 1, !tbaa !10
  %sub.i = sub i64 55, %2
  %rem7.i = and i64 %sub.i, 63
  %add.i = add nuw nsw i64 %rem7.i, 1
  tail call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef %inner, i8* noundef getelementptr inbounds (<{ i8, [63 x i8] }>, <{ i8, [63 x i8] }>* @secp256k1_sha256_finalize.pad, i64 0, i32 0), i64 noundef %add.i) #19
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef %inner, i8* noundef nonnull %1, i64 noundef 8) #19
  %arrayidx12.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 0
  %3 = load i32, i32* %arrayidx12.i, align 4, !tbaa !3
  %conv.i38.i = trunc i32 %3 to i8
  %arrayidx.i39.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 3
  store i8 %conv.i38.i, i8* %arrayidx.i39.i, align 1, !tbaa !10
  %shr.i40.i = lshr i32 %3, 8
  %conv1.i41.i = trunc i32 %shr.i40.i to i8
  %arrayidx2.i42.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 2
  store i8 %conv1.i41.i, i8* %arrayidx2.i42.i, align 2, !tbaa !10
  %shr3.i43.i = lshr i32 %3, 16
  %conv4.i44.i = trunc i32 %shr3.i43.i to i8
  %arrayidx5.i45.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 1
  store i8 %conv4.i44.i, i8* %arrayidx5.i45.i, align 1, !tbaa !10
  %shr6.i46.i = lshr i32 %3, 24
  %conv7.i47.i = trunc i32 %shr6.i46.i to i8
  store i8 %conv7.i47.i, i8* %0, align 16, !tbaa !10
  %arrayidx10.1.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 4
  %arrayidx12.1.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 1
  %4 = load i32, i32* %arrayidx12.1.i, align 4, !tbaa !3
  %conv.i38.1.i = trunc i32 %4 to i8
  %arrayidx.i39.1.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 7
  store i8 %conv.i38.1.i, i8* %arrayidx.i39.1.i, align 1, !tbaa !10
  %shr.i40.1.i = lshr i32 %4, 8
  %conv1.i41.1.i = trunc i32 %shr.i40.1.i to i8
  %arrayidx2.i42.1.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 6
  store i8 %conv1.i41.1.i, i8* %arrayidx2.i42.1.i, align 2, !tbaa !10
  %shr3.i43.1.i = lshr i32 %4, 16
  %conv4.i44.1.i = trunc i32 %shr3.i43.1.i to i8
  %arrayidx5.i45.1.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 5
  store i8 %conv4.i44.1.i, i8* %arrayidx5.i45.1.i, align 1, !tbaa !10
  %shr6.i46.1.i = lshr i32 %4, 24
  %conv7.i47.1.i = trunc i32 %shr6.i46.1.i to i8
  store i8 %conv7.i47.1.i, i8* %arrayidx10.1.i, align 4, !tbaa !10
  %arrayidx10.2.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 8
  %arrayidx12.2.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 2
  %5 = load i32, i32* %arrayidx12.2.i, align 4, !tbaa !3
  %conv.i38.2.i = trunc i32 %5 to i8
  %arrayidx.i39.2.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 11
  store i8 %conv.i38.2.i, i8* %arrayidx.i39.2.i, align 1, !tbaa !10
  %shr.i40.2.i = lshr i32 %5, 8
  %conv1.i41.2.i = trunc i32 %shr.i40.2.i to i8
  %arrayidx2.i42.2.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 10
  store i8 %conv1.i41.2.i, i8* %arrayidx2.i42.2.i, align 2, !tbaa !10
  %shr3.i43.2.i = lshr i32 %5, 16
  %conv4.i44.2.i = trunc i32 %shr3.i43.2.i to i8
  %arrayidx5.i45.2.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 9
  store i8 %conv4.i44.2.i, i8* %arrayidx5.i45.2.i, align 1, !tbaa !10
  %shr6.i46.2.i = lshr i32 %5, 24
  %conv7.i47.2.i = trunc i32 %shr6.i46.2.i to i8
  store i8 %conv7.i47.2.i, i8* %arrayidx10.2.i, align 8, !tbaa !10
  %arrayidx10.3.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 12
  %arrayidx12.3.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 3
  %6 = load i32, i32* %arrayidx12.3.i, align 4, !tbaa !3
  %conv.i38.3.i = trunc i32 %6 to i8
  %arrayidx.i39.3.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 15
  store i8 %conv.i38.3.i, i8* %arrayidx.i39.3.i, align 1, !tbaa !10
  %shr.i40.3.i = lshr i32 %6, 8
  %conv1.i41.3.i = trunc i32 %shr.i40.3.i to i8
  %arrayidx2.i42.3.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 14
  store i8 %conv1.i41.3.i, i8* %arrayidx2.i42.3.i, align 2, !tbaa !10
  %shr3.i43.3.i = lshr i32 %6, 16
  %conv4.i44.3.i = trunc i32 %shr3.i43.3.i to i8
  %arrayidx5.i45.3.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 13
  store i8 %conv4.i44.3.i, i8* %arrayidx5.i45.3.i, align 1, !tbaa !10
  %shr6.i46.3.i = lshr i32 %6, 24
  %conv7.i47.3.i = trunc i32 %shr6.i46.3.i to i8
  store i8 %conv7.i47.3.i, i8* %arrayidx10.3.i, align 4, !tbaa !10
  %7 = bitcast %struct.secp256k1_hmac_sha256* %hash to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %7, align 4, !tbaa !3
  %arrayidx10.4.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 16
  %arrayidx12.4.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 4
  %8 = load i32, i32* %arrayidx12.4.i, align 4, !tbaa !3
  %conv.i38.4.i = trunc i32 %8 to i8
  %arrayidx.i39.4.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 19
  store i8 %conv.i38.4.i, i8* %arrayidx.i39.4.i, align 1, !tbaa !10
  %shr.i40.4.i = lshr i32 %8, 8
  %conv1.i41.4.i = trunc i32 %shr.i40.4.i to i8
  %arrayidx2.i42.4.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 18
  store i8 %conv1.i41.4.i, i8* %arrayidx2.i42.4.i, align 2, !tbaa !10
  %shr3.i43.4.i = lshr i32 %8, 16
  %conv4.i44.4.i = trunc i32 %shr3.i43.4.i to i8
  %arrayidx5.i45.4.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 17
  store i8 %conv4.i44.4.i, i8* %arrayidx5.i45.4.i, align 1, !tbaa !10
  %shr6.i46.4.i = lshr i32 %8, 24
  %conv7.i47.4.i = trunc i32 %shr6.i46.4.i to i8
  store i8 %conv7.i47.4.i, i8* %arrayidx10.4.i, align 16, !tbaa !10
  %arrayidx10.5.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 20
  %arrayidx12.5.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 5
  %9 = load i32, i32* %arrayidx12.5.i, align 4, !tbaa !3
  %conv.i38.5.i = trunc i32 %9 to i8
  %arrayidx.i39.5.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 23
  store i8 %conv.i38.5.i, i8* %arrayidx.i39.5.i, align 1, !tbaa !10
  %shr.i40.5.i = lshr i32 %9, 8
  %conv1.i41.5.i = trunc i32 %shr.i40.5.i to i8
  %arrayidx2.i42.5.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 22
  store i8 %conv1.i41.5.i, i8* %arrayidx2.i42.5.i, align 2, !tbaa !10
  %shr3.i43.5.i = lshr i32 %9, 16
  %conv4.i44.5.i = trunc i32 %shr3.i43.5.i to i8
  %arrayidx5.i45.5.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 21
  store i8 %conv4.i44.5.i, i8* %arrayidx5.i45.5.i, align 1, !tbaa !10
  %shr6.i46.5.i = lshr i32 %9, 24
  %conv7.i47.5.i = trunc i32 %shr6.i46.5.i to i8
  store i8 %conv7.i47.5.i, i8* %arrayidx10.5.i, align 4, !tbaa !10
  %arrayidx10.6.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 24
  %arrayidx12.6.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 6
  %10 = load i32, i32* %arrayidx12.6.i, align 4, !tbaa !3
  %conv.i38.6.i = trunc i32 %10 to i8
  %arrayidx.i39.6.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 27
  store i8 %conv.i38.6.i, i8* %arrayidx.i39.6.i, align 1, !tbaa !10
  %shr.i40.6.i = lshr i32 %10, 8
  %conv1.i41.6.i = trunc i32 %shr.i40.6.i to i8
  %arrayidx2.i42.6.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 26
  store i8 %conv1.i41.6.i, i8* %arrayidx2.i42.6.i, align 2, !tbaa !10
  %shr3.i43.6.i = lshr i32 %10, 16
  %conv4.i44.6.i = trunc i32 %shr3.i43.6.i to i8
  %arrayidx5.i45.6.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 25
  store i8 %conv4.i44.6.i, i8* %arrayidx5.i45.6.i, align 1, !tbaa !10
  %shr6.i46.6.i = lshr i32 %10, 24
  %conv7.i47.6.i = trunc i32 %shr6.i46.6.i to i8
  store i8 %conv7.i47.6.i, i8* %arrayidx10.6.i, align 8, !tbaa !10
  %arrayidx10.7.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 28
  %arrayidx12.7.i = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 0, i32 0, i64 7
  %11 = load i32, i32* %arrayidx12.7.i, align 4, !tbaa !3
  %conv.i38.7.i = trunc i32 %11 to i8
  %arrayidx.i39.7.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 31
  store i8 %conv.i38.7.i, i8* %arrayidx.i39.7.i, align 1, !tbaa !10
  %shr.i40.7.i = lshr i32 %11, 8
  %conv1.i41.7.i = trunc i32 %shr.i40.7.i to i8
  %arrayidx2.i42.7.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 30
  store i8 %conv1.i41.7.i, i8* %arrayidx2.i42.7.i, align 2, !tbaa !10
  %shr3.i43.7.i = lshr i32 %11, 16
  %conv4.i44.7.i = trunc i32 %shr3.i43.7.i to i8
  %arrayidx5.i45.7.i = getelementptr inbounds [32 x i8], [32 x i8]* %temp, i64 0, i64 29
  store i8 %conv4.i44.7.i, i8* %arrayidx5.i45.7.i, align 1, !tbaa !10
  %shr6.i46.7.i = lshr i32 %11, 24
  %conv7.i47.7.i = trunc i32 %shr6.i46.7.i to i8
  store i8 %conv7.i47.7.i, i8* %arrayidx10.7.i, align 4, !tbaa !10
  %12 = bitcast i32* %arrayidx12.4.i to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %12, align 4, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  %outer = getelementptr inbounds %struct.secp256k1_hmac_sha256, %struct.secp256k1_hmac_sha256* %hash, i64 0, i32 1
  call fastcc void @secp256k1_sha256_write(%struct.secp256k1_sha256* noundef nonnull %outer, i8* noundef nonnull %0, i64 noundef 32)
  tail call fastcc void @secp256k1_sha256_finalize(%struct.secp256k1_sha256* noundef nonnull %outer, i8* noundef %out32)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_ecmult_gen(%struct.secp256k1_ecmult_gen_context* nocapture noundef readonly %ctx, %struct.secp256k1_gej* nocapture noundef %r, %struct.secp256k1_scalar* nocapture noundef readonly %gn) unnamed_addr #9 {
entry:
  %add = alloca %struct.secp256k1_ge, align 8
  %gnb = alloca %struct.secp256k1_scalar, align 8
  %0 = bitcast %struct.secp256k1_ge* %add to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %0) #19
  %1 = bitcast %struct.secp256k1_scalar* %gnb to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #19
  %initial = getelementptr inbounds %struct.secp256k1_ecmult_gen_context, %struct.secp256k1_ecmult_gen_context* %ctx, i64 0, i32 2
  %2 = bitcast %struct.secp256k1_gej* %r to i8*
  %3 = bitcast %struct.secp256k1_gej* %initial to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128) %2, i8* noundef nonnull align 8 dereferenceable(128) %3, i64 128, i1 false), !tbaa.struct !67
  %arrayidx.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gn, i64 0, i32 0, i64 0
  %4 = load i64, i64* %arrayidx.i, align 8, !tbaa !13
  %conv.i.i = zext i64 %4 to i128
  %arrayidx2.i = getelementptr inbounds %struct.secp256k1_ecmult_gen_context, %struct.secp256k1_ecmult_gen_context* %ctx, i64 0, i32 1, i32 0, i64 0
  %5 = load i64, i64* %arrayidx2.i, align 8, !tbaa !13
  %conv.i6.i = zext i64 %5 to i128
  %add.i.i = add nuw nsw i128 %conv.i6.i, %conv.i.i
  %conv.i7.i = trunc i128 %add.i.i to i64
  %arrayidx4.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gnb, i64 0, i32 0, i64 0
  %shr.i.i = lshr i128 %add.i.i, 64
  %arrayidx6.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gn, i64 0, i32 0, i64 1
  %6 = load i64, i64* %arrayidx6.i, align 8, !tbaa !13
  %conv.i8.i = zext i64 %6 to i128
  %add.i9.i = add nuw nsw i128 %shr.i.i, %conv.i8.i
  %arrayidx8.i = getelementptr inbounds %struct.secp256k1_ecmult_gen_context, %struct.secp256k1_ecmult_gen_context* %ctx, i64 0, i32 1, i32 0, i64 1
  %7 = load i64, i64* %arrayidx8.i, align 8, !tbaa !13
  %conv.i10.i = zext i64 %7 to i128
  %add.i11.i = add nuw nsw i128 %add.i9.i, %conv.i10.i
  %conv.i12.i = trunc i128 %add.i11.i to i64
  %arrayidx11.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gnb, i64 0, i32 0, i64 1
  %shr.i13.i = lshr i128 %add.i11.i, 64
  %arrayidx13.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gn, i64 0, i32 0, i64 2
  %8 = load i64, i64* %arrayidx13.i, align 8, !tbaa !13
  %conv.i14.i = zext i64 %8 to i128
  %add.i15.i = add nuw nsw i128 %shr.i13.i, %conv.i14.i
  %arrayidx15.i = getelementptr inbounds %struct.secp256k1_ecmult_gen_context, %struct.secp256k1_ecmult_gen_context* %ctx, i64 0, i32 1, i32 0, i64 2
  %9 = load i64, i64* %arrayidx15.i, align 8, !tbaa !13
  %conv.i16.i = zext i64 %9 to i128
  %add.i17.i = add nuw nsw i128 %add.i15.i, %conv.i16.i
  %conv.i18.i = trunc i128 %add.i17.i to i64
  %arrayidx18.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gnb, i64 0, i32 0, i64 2
  %shr.i19.i = lshr i128 %add.i17.i, 64
  %arrayidx20.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gn, i64 0, i32 0, i64 3
  %10 = load i64, i64* %arrayidx20.i, align 8, !tbaa !13
  %conv.i20.i = zext i64 %10 to i128
  %add.i21.i = add nuw nsw i128 %shr.i19.i, %conv.i20.i
  %arrayidx22.i = getelementptr inbounds %struct.secp256k1_ecmult_gen_context, %struct.secp256k1_ecmult_gen_context* %ctx, i64 0, i32 1, i32 0, i64 3
  %11 = load i64, i64* %arrayidx22.i, align 8, !tbaa !13
  %conv.i22.i = zext i64 %11 to i128
  %add.i23.i = add nuw nsw i128 %add.i21.i, %conv.i22.i
  %conv.i24.i = trunc i128 %add.i23.i to i64
  %arrayidx25.i = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gnb, i64 0, i32 0, i64 3
  %shr.i25.i = lshr i128 %add.i23.i, 64
  %cmp.i.i = icmp ne i64 %conv.i24.i, -1
  %cmp3.i.i = icmp ult i64 %conv.i18.i, -2
  %or545.i.i = or i1 %cmp3.i.i, %cmp.i.i
  %or5.i.i = zext i1 %or545.i.i to i32
  %cmp8.i.i = icmp eq i64 %conv.i18.i, -1
  %conv9.i.i = zext i1 %cmp8.i.i to i32
  %neg.i.i = xor i32 %or5.i.i, -1
  %and.i.i = and i32 %neg.i.i, %conv9.i.i
  %cmp13.i.i = icmp ult i64 %conv.i12.i, -4994812053365940165
  %or1546.i.i = or i1 %cmp13.i.i, %or545.i.i
  %or15.i.i = zext i1 %or1546.i.i to i32
  %cmp18.i.i = icmp ugt i64 %conv.i12.i, -4994812053365940165
  %conv19.i.i = zext i1 %cmp18.i.i to i32
  %neg20.i.i = xor i32 %or15.i.i, -1
  %and21.i.i = and i32 %neg20.i.i, %conv19.i.i
  %or22.i.i = or i32 %and21.i.i, %and.i.i
  %cmp25.i.i = icmp ugt i64 %conv.i7.i, -4624529908474429120
  %conv26.i.i = zext i1 %cmp25.i.i to i32
  %and28.i.i = and i32 %neg20.i.i, %conv26.i.i
  %or29.i.i = or i32 %or22.i.i, %and28.i.i
  %12 = trunc i128 %shr.i25.i to i32
  %conv28.i = add nuw nsw i32 %or29.i.i, %12
  %conv.i.i.i = and i128 %add.i.i, 18446744073709551615
  %conv1.i.i = zext i32 %conv28.i to i64
  %mul.i.i = mul i64 %conv1.i.i, 4624529908474429119
  %conv.i37.i.i = zext i64 %mul.i.i to i128
  %add.i.i.i = add nuw nsw i128 %conv.i.i.i, %conv.i37.i.i
  %conv.i38.i.i = trunc i128 %add.i.i.i to i64
  store i64 %conv.i38.i.i, i64* %arrayidx4.i, align 8, !tbaa !13
  %shr.i.i.i = lshr i128 %add.i.i.i, 64
  %conv.i39.i.i = and i128 %add.i11.i, 18446744073709551615
  %mul7.i.i = mul i64 %conv1.i.i, 4994812053365940164
  %conv.i41.i.i = zext i64 %mul7.i.i to i128
  %add.i40.i.i = add nuw nsw i128 %conv.i39.i.i, %conv.i41.i.i
  %add.i42.i.i = add nuw nsw i128 %add.i40.i.i, %shr.i.i.i
  %conv.i43.i.i = trunc i128 %add.i42.i.i to i64
  store i64 %conv.i43.i.i, i64* %arrayidx11.i, align 8, !tbaa !13
  %shr.i44.i.i = lshr i128 %add.i42.i.i, 64
  %conv.i45.i.i = and i128 %add.i17.i, 18446744073709551615
  %conv.i47.i.i = zext i32 %conv28.i to i128
  %add.i46.i.i = add nuw nsw i128 %conv.i45.i.i, %conv.i47.i.i
  %add.i48.i.i = add nuw nsw i128 %add.i46.i.i, %shr.i44.i.i
  %conv.i49.i.i = trunc i128 %add.i48.i.i to i64
  store i64 %conv.i49.i.i, i64* %arrayidx18.i, align 8, !tbaa !13
  %shr.i50.i.i = lshr i128 %add.i48.i.i, 64
  %13 = trunc i128 %shr.i50.i.i to i64
  %conv.i53.i.i = add i64 %13, %conv.i24.i
  store i64 %conv.i53.i.i, i64* %arrayidx25.i, align 8, !tbaa !13
  %infinity = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 2
  %arrayidx2.i.i35 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 0, i32 0, i64 0
  %arrayidx9.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 0, i32 0, i64 1
  %arrayidx19.i.i38 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 0, i32 0, i64 2
  %arrayidx29.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 0, i32 0, i64 3
  %arrayidx34.i.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 0, i32 0, i64 4
  %arrayidx2.i8.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 1, i32 0, i64 0
  %arrayidx9.i14.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 1, i32 0, i64 1
  %arrayidx19.i20.i40 = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 1, i32 0, i64 2
  %arrayidx29.i26.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 1, i32 0, i64 3
  %arrayidx34.i28.i = getelementptr inbounds %struct.secp256k1_ge, %struct.secp256k1_ge* %add, i64 0, i32 1, i32 0, i64 4
  br label %for.body

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv126 = phi i64 [ 0, %entry ], [ %indvars.iv.next127, %for.end ]
  %adds.sroa.31.0117 = phi i64 [ 0, %entry ], [ %or30.i27.i, %for.end ]
  %adds.sroa.27.0116 = phi i64 [ 0, %entry ], [ %29, %for.end ]
  %adds.sroa.23.0115 = phi i64 [ 0, %entry ], [ %27, %for.end ]
  %adds.sroa.19.0114 = phi i64 [ 0, %entry ], [ %25, %for.end ]
  %adds.sroa.15.0113 = phi i64 [ 0, %entry ], [ %23, %for.end ]
  %adds.sroa.11.0112 = phi i64 [ 0, %entry ], [ %21, %for.end ]
  %adds.sroa.7.0111 = phi i64 [ 0, %entry ], [ %19, %for.end ]
  %adds.sroa.0.0110 = phi i64 [ 0, %entry ], [ %17, %for.end ]
  %shr1.i = lshr i64 %indvars.iv126, 4
  %idxprom.i = and i64 %shr1.i, 268435455
  %arrayidx.i29 = getelementptr inbounds %struct.secp256k1_scalar, %struct.secp256k1_scalar* %gnb, i64 0, i32 0, i64 %idxprom.i
  %14 = load i64, i64* %arrayidx.i29, align 8, !tbaa !13
  %15 = shl i64 %indvars.iv126, 2
  %and.i = and i64 %15, 60
  %shr3.i = lshr i64 %14, %and.i
  %conv7.i = and i64 %shr3.i, 15
  br label %for.body4

for.body4:                                        ; preds = %for.body, %for.body4
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body4 ]
  %adds.sroa.31.1108 = phi i64 [ %adds.sroa.31.0117, %for.body ], [ %or30.i27.i, %for.body4 ]
  %adds.sroa.27.1107 = phi i64 [ %adds.sroa.27.0116, %for.body ], [ %29, %for.body4 ]
  %adds.sroa.23.1106 = phi i64 [ %adds.sroa.23.0115, %for.body ], [ %27, %for.body4 ]
  %adds.sroa.19.1105 = phi i64 [ %adds.sroa.19.0114, %for.body ], [ %25, %for.body4 ]
  %adds.sroa.15.1104 = phi i64 [ %adds.sroa.15.0113, %for.body ], [ %23, %for.body4 ]
  %adds.sroa.11.1103 = phi i64 [ %adds.sroa.11.0112, %for.body ], [ %21, %for.body4 ]
  %adds.sroa.7.1102 = phi i64 [ %adds.sroa.7.0111, %for.body ], [ %19, %for.body4 ]
  %adds.sroa.0.1101 = phi i64 [ %adds.sroa.0.0110, %for.body ], [ %17, %for.body4 ]
  %cmp7 = icmp eq i64 %indvars.iv, %conv7.i
  %arrayidx2.i.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 0, i32 0, i64 0
  %16 = load i64, i64* %arrayidx2.i.i, align 16, !tbaa !13
  %17 = select i1 %cmp7, i64 %16, i64 %adds.sroa.0.1101
  %arrayidx10.i.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 0, i32 0, i64 1
  %18 = load i64, i64* %arrayidx10.i.i, align 8, !tbaa !13
  %19 = select i1 %cmp7, i64 %18, i64 %adds.sroa.7.1102
  %arrayidx19.i.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 0, i32 0, i64 2
  %20 = load i64, i64* %arrayidx19.i.i, align 16, !tbaa !13
  %21 = select i1 %cmp7, i64 %20, i64 %adds.sroa.11.1103
  %arrayidx28.i.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 0, i32 0, i64 3
  %22 = load i64, i64* %arrayidx28.i.i, align 8, !tbaa !13
  %23 = select i1 %cmp7, i64 %22, i64 %adds.sroa.15.1104
  %arrayidx2.i10.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 1, i32 0, i64 0
  %24 = load i64, i64* %arrayidx2.i10.i, align 16, !tbaa !13
  %25 = select i1 %cmp7, i64 %24, i64 %adds.sroa.19.1105
  %arrayidx10.i15.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 1, i32 0, i64 1
  %26 = load i64, i64* %arrayidx10.i15.i, align 8, !tbaa !13
  %27 = select i1 %cmp7, i64 %26, i64 %adds.sroa.23.1106
  %arrayidx19.i20.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 1, i32 0, i64 2
  %28 = load i64, i64* %arrayidx19.i20.i, align 16, !tbaa !13
  %29 = select i1 %cmp7, i64 %28, i64 %adds.sroa.27.1107
  %arrayidx28.i25.i = getelementptr inbounds [64 x [16 x %struct.secp256k1_ge_storage]], [64 x [16 x %struct.secp256k1_ge_storage]]* @secp256k1_ecmult_gen_prec_table, i64 0, i64 %indvars.iv126, i64 %indvars.iv, i32 1, i32 0, i64 3
  %30 = load i64, i64* %arrayidx28.i25.i, align 8, !tbaa !13
  %or30.i27.i = select i1 %cmp7, i64 %30, i64 %adds.sroa.31.1108
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for.end, label %for.body4, !llvm.loop !92

for.end:                                          ; preds = %for.body4
  %and.i.i34 = and i64 %17, 4503599627370495
  store i64 %and.i.i34, i64* %arrayidx2.i.i35, align 8, !tbaa !13
  %shr.i.i36 = lshr i64 %17, 52
  %shl.i.i = shl i64 %19, 12
  %and7.i.i = and i64 %shl.i.i, 4503599627366400
  %or.i.i37 = or i64 %and7.i.i, %shr.i.i36
  store i64 %or.i.i37, i64* %arrayidx9.i.i, align 8, !tbaa !13
  %shr12.i.i = lshr i64 %19, 40
  %shl15.i.i = shl i64 %21, 24
  %and16.i.i = and i64 %shl15.i.i, 4503599610593280
  %or17.i.i = or i64 %and16.i.i, %shr12.i.i
  store i64 %or17.i.i, i64* %arrayidx19.i.i38, align 8, !tbaa !13
  %shr22.i.i = lshr i64 %21, 28
  %shl25.i.i = shl i64 %23, 36
  %and26.i.i39 = and i64 %shl25.i.i, 4503530907893760
  %or27.i.i = or i64 %and26.i.i39, %shr22.i.i
  store i64 %or27.i.i, i64* %arrayidx29.i.i, align 8, !tbaa !13
  %shr32.i.i = lshr i64 %23, 16
  store i64 %shr32.i.i, i64* %arrayidx34.i.i, align 8, !tbaa !13
  %and.i7.i = and i64 %25, 4503599627370495
  store i64 %and.i7.i, i64* %arrayidx2.i8.i, align 8, !tbaa !13
  %shr.i9.i = lshr i64 %25, 52
  %shl.i11.i = shl i64 %27, 12
  %and7.i12.i = and i64 %shl.i11.i, 4503599627366400
  %or.i13.i = or i64 %and7.i12.i, %shr.i9.i
  store i64 %or.i13.i, i64* %arrayidx9.i14.i, align 8, !tbaa !13
  %shr12.i15.i = lshr i64 %27, 40
  %shl15.i17.i = shl i64 %29, 24
  %and16.i18.i = and i64 %shl15.i17.i, 4503599610593280
  %or17.i19.i = or i64 %and16.i18.i, %shr12.i15.i
  store i64 %or17.i19.i, i64* %arrayidx19.i20.i40, align 8, !tbaa !13
  %shr22.i21.i = lshr i64 %29, 28
  %shl25.i23.i = shl i64 %or30.i27.i, 36
  %and26.i24.i41 = and i64 %shl25.i23.i, 4503530907893760
  %or27.i25.i = or i64 %and26.i24.i41, %shr22.i21.i
  store i64 %or27.i25.i, i64* %arrayidx29.i26.i, align 8, !tbaa !13
  %shr32.i27.i = lshr i64 %or30.i27.i, 16
  store i64 %shr32.i27.i, i64* %arrayidx34.i28.i, align 8, !tbaa !13
  store i32 0, i32* %infinity, align 8, !tbaa !37
  call fastcc void @secp256k1_gej_add_ge(%struct.secp256k1_gej* noundef %r, %struct.secp256k1_gej* noundef %r, %struct.secp256k1_ge* noundef nonnull %add)
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1
  %exitcond130.not = icmp eq i64 %indvars.iv.next127, 64
  br i1 %exitcond130.not, label %for.end10, label %for.body, !llvm.loop !93

for.end10:                                        ; preds = %for.end
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @secp256k1_modinv64(%struct.secp256k1_modinv64_signed62* nocapture noundef %x, %struct.secp256k1_modinv64_modinfo* nocapture noundef readonly %modinfo) unnamed_addr #9 {
entry:
  %d = alloca %struct.secp256k1_modinv64_signed62, align 8
  %e = alloca %struct.secp256k1_modinv64_signed62, align 8
  %t = alloca %struct.secp256k1_modinv64_trans2x2, align 8
  %0 = bitcast %struct.secp256k1_modinv64_signed62* %d to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %0, i8 0, i64 40, i1 false)
  %1 = bitcast %struct.secp256k1_modinv64_signed62* %e to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #19
  %2 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 1
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %3, i8 0, i64 32, i1 false)
  %4 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %e, i64 0, i32 0, i64 0
  store i64 1, i64* %4, align 8
  %f.sroa.0.0..sroa_idx = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 0
  %f.sroa.0.0.copyload = load i64, i64* %f.sroa.0.0..sroa_idx, align 8, !tbaa.struct !18
  %f.sroa.6.0..sroa_idx37 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 1
  %f.sroa.6.0.copyload = load i64, i64* %f.sroa.6.0..sroa_idx37, align 8, !tbaa.struct !46
  %f.sroa.8.0..sroa_idx39 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 2
  %f.sroa.8.0.copyload = load i64, i64* %f.sroa.8.0..sroa_idx39, align 8, !tbaa.struct !47
  %f.sroa.10.0..sroa_idx41 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 3
  %f.sroa.10.0.copyload = load i64, i64* %f.sroa.10.0..sroa_idx41, align 8, !tbaa.struct !48
  %f.sroa.12.0..sroa_idx43 = getelementptr inbounds %struct.secp256k1_modinv64_modinfo, %struct.secp256k1_modinv64_modinfo* %modinfo, i64 0, i32 0, i32 0, i64 4
  %f.sroa.12.0.copyload = load i64, i64* %f.sroa.12.0..sroa_idx43, align 8, !tbaa.struct !49
  %g.sroa.0.0..sroa_idx = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %x, i64 0, i32 0, i64 0
  %g.sroa.0.0.copyload = load i64, i64* %g.sroa.0.0..sroa_idx, align 8, !tbaa.struct !18
  %g.sroa.6.0..sroa_idx27 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %x, i64 0, i32 0, i64 1
  %g.sroa.6.0.copyload = load i64, i64* %g.sroa.6.0..sroa_idx27, align 8, !tbaa.struct !46
  %g.sroa.8.0..sroa_idx29 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %x, i64 0, i32 0, i64 2
  %g.sroa.8.0.copyload = load i64, i64* %g.sroa.8.0..sroa_idx29, align 8, !tbaa.struct !47
  %g.sroa.10.0..sroa_idx31 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %x, i64 0, i32 0, i64 3
  %g.sroa.10.0.copyload = load i64, i64* %g.sroa.10.0..sroa_idx31, align 8, !tbaa.struct !48
  %g.sroa.12.0..sroa_idx33 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %x, i64 0, i32 0, i64 4
  %g.sroa.12.0.copyload = load i64, i64* %g.sroa.12.0..sroa_idx33, align 8, !tbaa.struct !49
  %5 = bitcast %struct.secp256k1_modinv64_trans2x2* %t to i8*
  %u49.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 0
  %v50.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 1
  %q51.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 2
  %r52.i = getelementptr inbounds %struct.secp256k1_modinv64_trans2x2, %struct.secp256k1_modinv64_trans2x2* %t, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %entry, %secp256k1_modinv64_divsteps_59.exit
  %zeta.057 = phi i64 [ -1, %entry ], [ %sub32.i, %secp256k1_modinv64_divsteps_59.exit ]
  %i.056 = phi i32 [ 0, %entry ], [ %inc, %secp256k1_modinv64_divsteps_59.exit ]
  %g.sroa.0.055 = phi i64 [ %g.sroa.0.0.copyload, %entry ], [ %and36.i, %secp256k1_modinv64_divsteps_59.exit ]
  %g.sroa.6.054 = phi i64 [ %g.sroa.6.0.copyload, %entry ], [ %and44.i, %secp256k1_modinv64_divsteps_59.exit ]
  %g.sroa.8.053 = phi i64 [ %g.sroa.8.0.copyload, %entry ], [ %and52.i, %secp256k1_modinv64_divsteps_59.exit ]
  %g.sroa.10.052 = phi i64 [ %g.sroa.10.0.copyload, %entry ], [ %and60.i, %secp256k1_modinv64_divsteps_59.exit ]
  %g.sroa.12.051 = phi i64 [ %g.sroa.12.0.copyload, %entry ], [ %conv.i235.i, %secp256k1_modinv64_divsteps_59.exit ]
  %f.sroa.0.050 = phi i64 [ %f.sroa.0.0.copyload, %entry ], [ %and32.i, %secp256k1_modinv64_divsteps_59.exit ]
  %f.sroa.6.049 = phi i64 [ %f.sroa.6.0.copyload, %entry ], [ %and40.i, %secp256k1_modinv64_divsteps_59.exit ]
  %f.sroa.8.048 = phi i64 [ %f.sroa.8.0.copyload, %entry ], [ %and48.i, %secp256k1_modinv64_divsteps_59.exit ]
  %f.sroa.10.047 = phi i64 [ %f.sroa.10.0.copyload, %entry ], [ %and56.i, %secp256k1_modinv64_divsteps_59.exit ]
  %f.sroa.12.046 = phi i64 [ %f.sroa.12.0.copyload, %entry ], [ %conv.i234.i, %secp256k1_modinv64_divsteps_59.exit ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #19
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %for.body
  %i.0120.i = phi i32 [ 3, %for.body ], [ %inc.i, %do.body.i ]
  %zeta.addr.0119.i = phi i64 [ %zeta.057, %for.body ], [ %sub32.i, %do.body.i ]
  %u.0118.i = phi i64 [ 8, %for.body ], [ %shl40.i, %do.body.i ]
  %v.0117.i = phi i64 [ 0, %for.body ], [ %shl41.i, %do.body.i ]
  %g.0116.i = phi i64 [ %g.sroa.0.055, %for.body ], [ %shr39.i, %do.body.i ]
  %f.0115.i = phi i64 [ %f.sroa.0.050, %for.body ], [ %add34.i, %do.body.i ]
  %q.0114.i = phi i64 [ 0, %for.body ], [ %add27.i, %do.body.i ]
  %r.0113.i = phi i64 [ 8, %for.body ], [ %add29.i, %do.body.i ]
  %shr.i = ashr i64 %zeta.addr.0119.i, 63
  %and18.i = and i64 %g.0116.i, 1
  %sub.i = sub nsw i64 0, %and18.i
  %xor.i = xor i64 %f.0115.i, %shr.i
  %sub19.i = sub i64 %xor.i, %shr.i
  %xor20.i = xor i64 %shr.i, %u.0118.i
  %sub21.i = sub i64 %xor20.i, %shr.i
  %xor22.i = xor i64 %v.0117.i, %shr.i
  %sub23.i = sub i64 %xor22.i, %shr.i
  %and24.i = and i64 %sub19.i, %sub.i
  %add25.i = add i64 %and24.i, %g.0116.i
  %and26.i = and i64 %sub21.i, %sub.i
  %add27.i = add i64 %and26.i, %q.0114.i
  %and28.i = and i64 %sub23.i, %sub.i
  %add29.i = add i64 %r.0113.i, %and28.i
  %and30.i = and i64 %shr.i, %sub.i
  %xor31.i = xor i64 %and30.i, %zeta.addr.0119.i
  %sub32.i = add i64 %xor31.i, -1
  %and33.i = and i64 %add25.i, %and30.i
  %add34.i = add i64 %and33.i, %f.0115.i
  %and35.i = and i64 %add27.i, %and30.i
  %add36.i = add i64 %and35.i, %u.0118.i
  %and37.i = and i64 %add29.i, %and30.i
  %add38.i = add i64 %and37.i, %v.0117.i
  %shr39.i = lshr i64 %add25.i, 1
  %shl40.i = shl i64 %add36.i, 1
  %shl41.i = shl i64 %add38.i, 1
  %inc.i = add nuw nsw i32 %i.0120.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 62
  br i1 %exitcond.not.i, label %secp256k1_modinv64_divsteps_59.exit, label %do.body.i, !llvm.loop !94

secp256k1_modinv64_divsteps_59.exit:              ; preds = %do.body.i
  store i64 %shl40.i, i64* %u49.i, align 8, !tbaa !54
  store i64 %shl41.i, i64* %v50.i, align 8, !tbaa !56
  store i64 %add27.i, i64* %q51.i, align 8, !tbaa !57
  store i64 %add29.i, i64* %r52.i, align 8, !tbaa !58
  call fastcc void @secp256k1_modinv64_update_de_62(%struct.secp256k1_modinv64_signed62* noundef nonnull %d, %struct.secp256k1_modinv64_signed62* noundef nonnull %e, %struct.secp256k1_modinv64_trans2x2* noundef nonnull %t, %struct.secp256k1_modinv64_modinfo* noundef %modinfo)
  %conv.i.i = sext i64 %shl40.i to i128
  %conv1.i.i = sext i64 %f.sroa.0.050 to i128
  %mul.i.i = mul nsw i128 %conv.i.i, %conv1.i.i
  %conv.i141.i = sext i64 %shl41.i to i128
  %conv1.i142.i = sext i64 %g.sroa.0.055 to i128
  %mul.i143.i = mul nsw i128 %conv.i141.i, %conv1.i142.i
  %add.i.i = add nsw i128 %mul.i143.i, %mul.i.i
  %conv.i144.i = sext i64 %add27.i to i128
  %mul.i146.i = mul nsw i128 %conv.i144.i, %conv1.i.i
  %conv.i147.i = sext i64 %add29.i to i128
  %mul.i149.i = mul nsw i128 %conv.i147.i, %conv1.i142.i
  %add.i150.i = add nsw i128 %mul.i149.i, %mul.i146.i
  %shr.i.i = ashr i128 %add.i.i, 62
  %shr.i153.i = ashr i128 %add.i150.i, 62
  %conv1.i155.i = sext i64 %f.sroa.6.049 to i128
  %mul.i156.i = mul nsw i128 %conv.i.i, %conv1.i155.i
  %conv1.i159.i = sext i64 %g.sroa.6.054 to i128
  %mul.i160.i = mul nsw i128 %conv.i141.i, %conv1.i159.i
  %add.i157.i = add i128 %mul.i160.i, %mul.i156.i
  %add.i161.i = add i128 %add.i157.i, %shr.i.i
  %mul.i164.i = mul nsw i128 %conv.i144.i, %conv1.i155.i
  %mul.i168.i = mul nsw i128 %conv.i147.i, %conv1.i159.i
  %add.i165.i = add i128 %mul.i168.i, %mul.i164.i
  %add.i169.i = add i128 %add.i165.i, %shr.i153.i
  %conv.i170.i = trunc i128 %add.i161.i to i64
  %and32.i = and i64 %conv.i170.i, 4611686018427387903
  %shr.i171.i = ashr i128 %add.i161.i, 62
  %conv.i172.i = trunc i128 %add.i169.i to i64
  %and36.i = and i64 %conv.i172.i, 4611686018427387903
  %shr.i173.i = ashr i128 %add.i169.i, 62
  %conv1.i175.i = sext i64 %f.sroa.8.048 to i128
  %mul.i176.i = mul nsw i128 %conv.i.i, %conv1.i175.i
  %conv1.i179.i = sext i64 %g.sroa.8.053 to i128
  %mul.i180.i = mul nsw i128 %conv.i141.i, %conv1.i179.i
  %add.i177.i = add i128 %mul.i180.i, %mul.i176.i
  %add.i181.i = add i128 %add.i177.i, %shr.i171.i
  %mul.i184.i = mul nsw i128 %conv.i144.i, %conv1.i175.i
  %mul.i188.i = mul nsw i128 %conv.i147.i, %conv1.i179.i
  %add.i185.i = add i128 %mul.i188.i, %mul.i184.i
  %add.i189.i = add i128 %add.i185.i, %shr.i173.i
  %conv.i190.i = trunc i128 %add.i181.i to i64
  %and40.i = and i64 %conv.i190.i, 4611686018427387903
  %shr.i191.i = ashr i128 %add.i181.i, 62
  %conv.i192.i = trunc i128 %add.i189.i to i64
  %and44.i = and i64 %conv.i192.i, 4611686018427387903
  %shr.i193.i = ashr i128 %add.i189.i, 62
  %conv1.i195.i = sext i64 %f.sroa.10.047 to i128
  %mul.i196.i = mul nsw i128 %conv.i.i, %conv1.i195.i
  %conv1.i199.i = sext i64 %g.sroa.10.052 to i128
  %mul.i200.i = mul nsw i128 %conv.i141.i, %conv1.i199.i
  %add.i197.i = add i128 %mul.i200.i, %mul.i196.i
  %add.i201.i = add i128 %add.i197.i, %shr.i191.i
  %mul.i204.i = mul nsw i128 %conv.i144.i, %conv1.i195.i
  %mul.i208.i = mul nsw i128 %conv.i147.i, %conv1.i199.i
  %add.i205.i = add i128 %mul.i208.i, %mul.i204.i
  %add.i209.i = add i128 %add.i205.i, %shr.i193.i
  %conv.i210.i = trunc i128 %add.i201.i to i64
  %and48.i = and i64 %conv.i210.i, 4611686018427387903
  %shr.i211.i = ashr i128 %add.i201.i, 62
  %conv.i212.i = trunc i128 %add.i209.i to i64
  %and52.i = and i64 %conv.i212.i, 4611686018427387903
  %shr.i213.i = ashr i128 %add.i209.i, 62
  %conv1.i215.i = sext i64 %f.sroa.12.046 to i128
  %mul.i216.i = mul nsw i128 %conv.i.i, %conv1.i215.i
  %conv1.i219.i = sext i64 %g.sroa.12.051 to i128
  %mul.i220.i = mul nsw i128 %conv.i141.i, %conv1.i219.i
  %add.i217.i = add i128 %mul.i220.i, %mul.i216.i
  %add.i221.i = add i128 %add.i217.i, %shr.i211.i
  %mul.i224.i = mul nsw i128 %conv.i144.i, %conv1.i215.i
  %mul.i228.i = mul nsw i128 %conv.i147.i, %conv1.i219.i
  %add.i225.i = add i128 %mul.i228.i, %mul.i224.i
  %add.i229.i = add i128 %add.i225.i, %shr.i213.i
  %conv.i230.i = trunc i128 %add.i221.i to i64
  %and56.i = and i64 %conv.i230.i, 4611686018427387903
  %6 = lshr i128 %add.i221.i, 62
  %conv.i232.i = trunc i128 %add.i229.i to i64
  %and60.i = and i64 %conv.i232.i, 4611686018427387903
  %7 = lshr i128 %add.i229.i, 62
  %conv.i234.i = trunc i128 %6 to i64
  %conv.i235.i = trunc i128 %7 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #19
  %inc = add nuw nsw i32 %i.056, 1
  %exitcond.not = icmp eq i32 %inc, 10
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !95

for.end:                                          ; preds = %secp256k1_modinv64_divsteps_59.exit
  %conv.i234.i.le = trunc i128 %6 to i64
  %8 = bitcast %struct.secp256k1_modinv64_signed62* %x to i8*
  %arrayidx.i11 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 0
  %9 = load i64, i64* %arrayidx.i11, align 8, !tbaa !13
  %arrayidx2.i12 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 1
  %10 = load i64, i64* %arrayidx2.i12, align 8, !tbaa !13
  %arrayidx4.i13 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 2
  %11 = load i64, i64* %arrayidx4.i13, align 8, !tbaa !13
  %arrayidx6.i14 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 3
  %12 = load i64, i64* %arrayidx6.i14, align 8, !tbaa !13
  %arrayidx8.i15 = getelementptr inbounds %struct.secp256k1_modinv64_signed62, %struct.secp256k1_modinv64_signed62* %d, i64 0, i32 0, i64 4
  %13 = load i64, i64* %arrayidx8.i15, align 8, !tbaa !13
  %shr.i16 = ashr i64 %13, 63
  %14 = load i64, i64* %f.sroa.0.0..sroa_idx, align 8, !tbaa !13
  %and.i = and i64 %14, %shr.i16
  %add.i = add nsw i64 %and.i, %9
  %15 = load i64, i64* %f.sroa.6.0..sroa_idx37, align 8, !tbaa !13
  %and14.i = and i64 %15, %shr.i16
  %add15.i = add nsw i64 %and14.i, %10
  %16 = load i64, i64* %f.sroa.8.0..sroa_idx39, align 8, !tbaa !13
  %and19.i = and i64 %16, %shr.i16
  %add20.i = add nsw i64 %and19.i, %11
  %17 = load i64, i64* %f.sroa.10.0..sroa_idx41, align 8, !tbaa !13
  %and24.i19 = and i64 %17, %shr.i16
  %add25.i20 = add nsw i64 %and24.i19, %12
  %18 = load i64, i64* %f.sroa.12.0..sroa_idx43, align 8, !tbaa !13
  %and29.i = and i64 %18, %shr.i16
  %add30.i = add nsw i64 %and29.i, %13
  %shr31.i = ashr i64 %conv.i234.i.le, 63
  %xor.i21 = xor i64 %add.i, %shr31.i
  %sub.i22 = sub nsw i64 %xor.i21, %shr31.i
  %xor32.i = xor i64 %add15.i, %shr31.i
  %sub33.i = sub nsw i64 %xor32.i, %shr31.i
  %xor34.i = xor i64 %add20.i, %shr31.i
  %sub35.i = sub nsw i64 %xor34.i, %shr31.i
  %xor36.i = xor i64 %add25.i20, %shr31.i
  %sub37.i = sub nsw i64 %xor36.i, %shr31.i
  %xor38.i = xor i64 %add30.i, %shr31.i
  %sub39.i = sub nsw i64 %xor38.i, %shr31.i
  %shr40.i = ashr i64 %sub.i22, 62
  %add41.i = add nsw i64 %sub33.i, %shr40.i
  %and42.i = and i64 %sub.i22, 4611686018427387903
  %shr43.i = ashr i64 %add41.i, 62
  %add44.i = add nsw i64 %shr43.i, %sub35.i
  %and45.i = and i64 %add41.i, 4611686018427387903
  %shr46.i = ashr i64 %add44.i, 62
  %add47.i = add nsw i64 %shr46.i, %sub37.i
  %and48.i23 = and i64 %add44.i, 4611686018427387903
  %shr49.i = ashr i64 %add47.i, 62
  %add50.i = add nsw i64 %shr49.i, %sub39.i
  %and51.i = and i64 %add47.i, 4611686018427387903
  %shr52.i = ashr i64 %add50.i, 63
  %and56.i24 = and i64 %shr52.i, %14
  %add57.i = add nsw i64 %and56.i24, %and42.i
  %and61.i = and i64 %shr52.i, %15
  %add62.i = add nsw i64 %and61.i, %and45.i
  %and66.i = and i64 %shr52.i, %16
  %add67.i = add nsw i64 %and66.i, %and48.i23
  %and71.i = and i64 %shr52.i, %17
  %add72.i = add nsw i64 %and71.i, %and51.i
  %and76.i = and i64 %shr52.i, %18
  %add77.i = add nsw i64 %and76.i, %add50.i
  %shr78.i = ashr i64 %add57.i, 62
  %add79.i = add nsw i64 %add62.i, %shr78.i
  %and80.i = and i64 %add57.i, 4611686018427387903
  %shr81.i = ashr i64 %add79.i, 62
  %add82.i = add nsw i64 %add67.i, %shr81.i
  %and83.i = and i64 %add79.i, 4611686018427387903
  %shr84.i = ashr i64 %add82.i, 62
  %add85.i = add nsw i64 %add72.i, %shr84.i
  %and86.i = and i64 %add82.i, 4611686018427387903
  %shr87.i = ashr i64 %add85.i, 62
  %add88.i = add nsw i64 %add77.i, %shr87.i
  %and89.i = and i64 %add85.i, 4611686018427387903
  store i64 %and80.i, i64* %arrayidx.i11, align 8, !tbaa !13
  store i64 %and83.i, i64* %arrayidx2.i12, align 8, !tbaa !13
  store i64 %and86.i, i64* %arrayidx4.i13, align 8, !tbaa !13
  store i64 %and89.i, i64* %arrayidx6.i14, align 8, !tbaa !13
  store i64 %add88.i, i64* %arrayidx8.i15, align 8, !tbaa !13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %8, i8* noundef nonnull align 8 dereferenceable(40) %0, i64 40, i1 false), !tbaa.struct !18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #19
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fshl.i64(i64, i64, i64) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #15

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #16

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #17

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.or.v2i64(<2 x i64>) #18

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.or.v4i64(<4 x i64>) #18

attributes #0 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #3 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #8 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { inaccessiblememonly mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { noreturn nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { inlinehint mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #17 = { argmemonly nofree nounwind willreturn }
attributes #18 = { nofree nosync nounwind readnone willreturn }
attributes #19 = { nounwind }
attributes #20 = { cold nounwind }
attributes #21 = { noreturn nounwind }
attributes #22 = { cold }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 14.0.0"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!8, !9, i64 96}
!8 = !{!"", !5, i64 0, !5, i64 32, !9, i64 96}
!9 = !{!"long", !5, i64 0}
!10 = !{!5, !5, i64 0}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!9, !9, i64 0}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{i64 0, i64 8, !16, i64 8, i64 8, !16}
!16 = !{!17, !17, i64 0}
!17 = !{!"any pointer", !5, i64 0}
!18 = !{i64 0, i64 40, !10}
!19 = !{!20, !4, i64 0}
!20 = !{!"", !4, i64 0, !21, i64 8, !22, i64 40}
!21 = !{!"", !5, i64 0}
!22 = !{!"", !21, i64 0, !21, i64 40, !21, i64 80, !4, i64 120}
!23 = !{!24, !4, i64 200}
!24 = !{!"secp256k1_context_struct", !20, i64 0, !25, i64 168, !25, i64 184, !4, i64 200}
!25 = !{!"", !17, i64 0, !17, i64 8}
!26 = !{!"branch_weights", i32 1, i32 2000}
!27 = !{!25, !17, i64 0}
!28 = !{!25, !17, i64 8}
!29 = !{i64 0, i64 4, !3, i64 8, i64 32, !10, i64 40, i64 40, !10, i64 80, i64 40, !10, i64 120, i64 40, !10, i64 160, i64 4, !3, i64 168, i64 8, !16, i64 176, i64 8, !16, i64 184, i64 8, !16, i64 192, i64 8, !16, i64 200, i64 4, !3}
!30 = !{!24, !17, i64 168}
!31 = !{!24, !17, i64 176}
!32 = !{!24, !17, i64 184}
!33 = !{!24, !17, i64 192}
!34 = !{!35, !17, i64 8}
!35 = !{!"secp256k1_scratch_space_struct", !5, i64 0, !17, i64 8, !9, i64 16, !9, i64 24}
!36 = !{!35, !9, i64 24}
!37 = !{!38, !4, i64 80}
!38 = !{!"", !21, i64 0, !21, i64 40, !4, i64 80}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !12}
!41 = distinct !{!41, !12}
!42 = distinct !{!42, !12}
!43 = distinct !{!43, !12}
!44 = distinct !{!44, !12}
!45 = distinct !{!45, !12}
!46 = !{i64 0, i64 32, !10}
!47 = !{i64 0, i64 24, !10}
!48 = !{i64 0, i64 16, !10}
!49 = !{i64 0, i64 8, !10}
!50 = distinct !{!50, !12}
!51 = distinct !{!51, !52}
!52 = !{!"llvm.loop.unroll.disable"}
!53 = !{i64 0, i64 65}
!54 = !{!55, !9, i64 0}
!55 = !{!"", !9, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!56 = !{!55, !9, i64 8}
!57 = !{!55, !9, i64 16}
!58 = !{!55, !9, i64 24}
!59 = distinct !{!59, !12}
!60 = distinct !{!60, !12, !61}
!61 = !{!"llvm.loop.isvectorized", i32 1}
!62 = distinct !{!62, !52}
!63 = distinct !{!63, !12, !64, !61}
!64 = !{!"llvm.loop.unroll.runtime.disable"}
!65 = !{!22, !4, i64 120}
!66 = distinct !{!66, !12}
!67 = !{i64 0, i64 40, !10, i64 40, i64 40, !10, i64 80, i64 40, !10, i64 120, i64 4, !3}
!68 = distinct !{!68, !12}
!69 = distinct !{!69, !12}
!70 = !{!71}
!71 = distinct !{!71, !72, !"secp256k1_fe_mul_inner: %b"}
!72 = distinct !{!72, !"secp256k1_fe_mul_inner"}
!73 = distinct !{!73, !52}
!74 = !{!75, !4, i64 1032}
!75 = !{!"secp256k1_strauss_point_state", !5, i64 0, !5, i64 516, !4, i64 1032, !4, i64 1036}
!76 = !{!75, !4, i64 1036}
!77 = distinct !{!77, !12, !78}
!78 = !{!"llvm.loop.peeled.count", i32 1}
!79 = !{!80, !82}
!80 = distinct !{!80, !81, !"secp256k1_fe_mul_inner: %b"}
!81 = distinct !{!81, !"secp256k1_fe_mul_inner"}
!82 = distinct !{!82, !83, !"secp256k1_fe_mul: %b"}
!83 = distinct !{!83, !"secp256k1_fe_mul"}
!84 = distinct !{!84, !12}
!85 = !{i64 0, i64 40, !10, i64 40, i64 40, !10, i64 80, i64 4, !3}
!86 = distinct !{!86, !12}
!87 = !{!88, !9, i64 40}
!88 = !{!"", !21, i64 0, !9, i64 40}
!89 = distinct !{!89, !12}
!90 = !{!91, !4, i64 64}
!91 = !{!"", !5, i64 0, !5, i64 32, !4, i64 64}
!92 = distinct !{!92, !12}
!93 = distinct !{!93, !12}
!94 = distinct !{!94, !12}
!95 = distinct !{!95, !12}
